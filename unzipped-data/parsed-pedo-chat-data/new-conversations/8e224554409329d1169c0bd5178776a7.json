{
    "id": "8e224554409329d1169c0bd5178776a7",
    "messages": [
        "d4b206c408eda02de41d1a5a77624aac (05:56): 69b0d3dfe919a6b860a9fac82de52a7e, any comment on my bug in Context2D: http://www.w3.org/Bugs/Public/buglist.cgi?product=HTML%20WG&amp;component=HTML%20Canvas%202D%20Context%20%28editor%3A%20Ian%20Hickson%29&amp;resolution=---",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (05:56): Title: Bug List (at www.w3.org)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:56): which one?",
        "d4b206c408eda02de41d1a5a77624aac (05:56): (There's only 10 bugs. Though I can imagine it takes a while to discuss changes)",
        "d4b206c408eda02de41d1a5a77624aac (05:56): Add drawImage(in ImageData image, ...) functions to context2d",
        "d4b206c408eda02de41d1a5a77624aac (05:57): It would also allow for globalAlpha to act on ImageData",
        "d4b206c408eda02de41d1a5a77624aac (05:58): (putImageData just overwrites everything)",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:12): that url gives me 40 bugs",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:12): you mean http://www.w3.org/Bugs/Public/show_bug.cgi?id=11565 ?",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (06:12): 11565: warcraftthreeft, P2, NEW, Add drawImage(in ImageData image, ...) functions to context2d",
        "d4b206c408eda02de41d1a5a77624aac (06:13): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:13): looks like a dupe of",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:13): http://www.w3.org/Bugs/Public/show_bug.cgi?id=11517",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (06:13): 11517: contributor, P3, NEW, Since context.putImageData() does not handle compositing, another set of methods, maybe context.drawImageData(), should be created to allow ImageData objects to be drawn onto the canvas in the same fashion as Image objects.",
        "d4b206c408eda02de41d1a5a77624aac (06:14): yep",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:14): it's not clear to me what the use case is",
        "d4b206c408eda02de41d1a5a77624aac (06:14): Wait you see 40 bugs? That link when I open says &quot;10 bugs found.&quot;",
        "d4b206c408eda02de41d1a5a77624aac (06:15): 69b0d3dfe919a6b860a9fac82de52a7e, Well imagine you want to render an ImageData that uses the alpha transparency",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:15): oh, i see, it didn't copy the &quot;=---&quot; part of the url",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:15): why would you want to render an ImageData?",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:15): ImageData is only intended for one thing:",
        "d4b206c408eda02de41d1a5a77624aac (06:15): like an image &gt;_&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:15): changing pixels on a canvas",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:15): you getImageData(), mutate the pixels, then putImageDat().",
        "d4b206c408eda02de41d1a5a77624aac (06:16): mutate the pixels costs too much when drawing another imageData",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:16): i don't understand",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:16): &quot;another imageData&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:16): describe your use case without talking about canvas",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:17): what's your high-level description?",
        "d4b206c408eda02de41d1a5a77624aac (06:17): One moment.",
        "4d389837f8ff4967ac73a3d840c55ece (06:33): html-spec: ianh@340c8d12-0b0e-0410-8428-c7bf67bfef74 * 821060a48262 r5762 / (index complete.html source):",
        "4d389837f8ff4967ac73a3d840c55ece (06:33): html-spec: [e] (0) gb/us spelling",
        "4d389837f8ff4967ac73a3d840c55ece (06:33): html-spec: Fixing http://www.w3.org/Bugs/Public/show_bug.cgi?id=11192",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (06:33): 11192: contributor, P3, RESOLVED FIXED, [WebSRT] WebSRT sections spells tokenizer with an &quot;s&quot;.",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (06:46): bugmail: &quot;[Bug 11192] [WebSRT] WebSRT sections spells tokenizer with an &quot;s&quot;.&quot; (2 messages in thread) &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0327.html&gt; ** &quot;[Bug 11727] user agent stylesheet display: block&quot; (2 messages in thread) &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0322.html&gt; ** [Bug 11726] user agent stylesheet display: block &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/20",
        "d4b206c408eda02de41d1a5a77624aac (07:08): Okay pretend you wanted to create a worms like game where an image represents the 2D terrain that can be destroyed. Now you have a sky background behind that. The large 2D image's pixels can be changed. So you need to render it after the sky. However you can't render the ImageData with composition without first writing it to a massive canvas the same size as the 2D image then getting the ImageData perform the manipulation on the large canvas then rend",
        "d4b206c408eda02de41d1a5a77624aac (07:08): er changes back to that canvas. ( http://assaultwars.com/javascript/pixels/ ) Being able to draw the ImageData would remove the need for a canvas.",
        "d4b206c408eda02de41d1a5a77624aac (07:09): 69b0d3dfe919a6b860a9fac82de52a7e, ^",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (07:09): Title: Pixel 800x600 Test (at assaultwars.com)",
        "d4b206c408eda02de41d1a5a77624aac (07:09): I'm sure there's another bigger reason that I've forgotten",
        "d4b206c408eda02de41d1a5a77624aac (07:09): Also this one needs to be looked at also: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11566",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (07:09): 11566: warcraftthreeft, P2, NEW, Image should have getContext(...) just like canvas",
        "d4b206c408eda02de41d1a5a77624aac (07:11): The image with the getContext allows a ton of cool things like easily creating cached textures. (Render a bunch of stuff to an image so you don't have to keep rendering each individual part)",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:13): just have several overlapped canvases",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:16): it'll be much faster to do it with multiple canvases than it would to try to shunt pixel data back and forth",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (07:16): bugmail: &quot;[Bug 11412] &lt;meta content&gt; handling inconsistent with &lt;meta charset&gt; handling in 'in head'&quot; (2 messages in thread) &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0334.html&gt; ** &quot;[Bug 11411] The encoding sniffing algorithm doesn't match the 'in head' insertion mode in some case when &lt;meta&gt; has both charset and content attributes&quot; (2 messages in thread) &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0332",
        "4d389837f8ff4967ac73a3d840c55ece (07:19): html-spec: ianh@340c8d12-0b0e-0410-8428-c7bf67bfef74 * 9401e0431f0c r5763 / (index complete.html source):",
        "4d389837f8ff4967ac73a3d840c55ece (07:19): html-spec: [cgiowt] (1) Make the charset sniffer more accurately match the parser.",
        "4d389837f8ff4967ac73a3d840c55ece (07:19): html-spec: Fixing http://www.w3.org/Bugs/Public/show_bug.cgi?id=11411",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (07:19): 11411: hsivonen, P2, RESOLVED FIXED, The encoding sniffing algorithm doesn't match the 'in head' insertion mode in some case when &lt;meta&gt; has both charset and content attributes",
        "d4b206c408eda02de41d1a5a77624aac (07:21): 69b0d3dfe919a6b860a9fac82de52a7e, allowing a person to hold onto one ImageData and just edit that pixel data and render that would be better than pulling the ImageData from the canvas and putting it back into the canvas then rendering that to the main canvas.",
        "d4b206c408eda02de41d1a5a77624aac (07:26): Also the whole idea would be not to make tons of extra canvas tags. It doesn't seem like it should be necessary?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:44): not tons, it's like one more canvas element.",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:44): and you don't need to use imagedata at all",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:44): just use the regular api to modify the ground",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (07:46): bugmail: [Bug 11500] The actual effect that triggering the command will have. This could be a scripted eve &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0338.html&gt; ** [Bug 11499] make clear whether value attribute on input[type='button'] element can be empty &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0337.html&gt; ** [Bug 11729] New: Hello your text is wrong.Hello your text is wrong.Hello your text is wr",
        "d4b206c408eda02de41d1a5a77624aac (07:53): But if you want to modify the pixel data you have to use getImageData which has an overhead even if you dirty rectangle and only grab the affected region and modify it. Unless you're suggesting using tons of 1 pixel drawRect calls. Basically all this allows is a putImageData that allows composition and not just a direct copy over of the pixel data.",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:06): no i'm saying you can use the path api to blow the holes in the canvas",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:06): but sure, you can use imagedata too",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:06): just putimagedata the pixels to the canvas directly",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:06): and overlay the canvases in the final rendering, so that several of them are showing",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:06): instead of manually compositing it all down to one layer",
        "d4b206c408eda02de41d1a5a77624aac (08:07): eww",
        "d4b206c408eda02de41d1a5a77624aac (08:10): I needed the pixel data to work with still. I'll have to write up a larger explanation later.",
        "d4b206c408eda02de41d1a5a77624aac (08:10): It just seems like a flaw in the API",
        "d4b206c408eda02de41d1a5a77624aac (08:11): That along with this: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11566 solves all the basic problems I've seen with working with a single canvas",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (08:11): 11566: warcraftthreeft, P2, NEW, Image should have getContext(...) just like canvas",
        "d4b206c408eda02de41d1a5a77624aac (08:12): Actually if you could getImageData the actual imageData and not a copy that would be cool too",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:12): i don't see why multiple canvases are a problem",
        "d4b206c408eda02de41d1a5a77624aac (08:12): hmm no wait",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:13): but anyway, we might well add drawImage(ImageData) in a future version, it just doesn't seem like there's a pressing need for it",
        "d4b206c408eda02de41d1a5a77624aac (08:14): 69b0d3dfe919a6b860a9fac82de52a7e, because it's a hastle for game programming to design a rendering engine outside of one render target. Having to take a design then add tons of extra render targets is a roundabout way to solve it. Also for what I was talking about I still need the ImageData anyway so there's a cost in continuously creating new ImageData objects.",
        "d4b206c408eda02de41d1a5a77624aac (08:14): (I mean to get the pixel data to work with it)",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:15): you don't need to continuously create new ImageData objects",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:15): just have one",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:15): and putImageData to the ground canvas",
        "d4b206c408eda02de41d1a5a77624aac (08:15): It's like telling someone programming in flash to make tons of swf projects and overlap them transparently to get a parallax scroll :\\",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:15): i really don't understand why a rendering engine designed for the web would assume that the render target is a &lt;canvas&gt; rather than assuming it's the Web, with as many &lt;canvas&gt;es as necessary",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): no, it's not",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): you're not programming in canvas",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): you're programming with html",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): the whole API",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): canvas is but one tool in a large toolbox",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): it's not the toolbox",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): don't limit yourself artificially :-)",
        "d4b206c408eda02de41d1a5a77624aac (08:16): I'll have to think about this more. Still seems awkward to me.",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (08:16): bugmail: [Bug 11517] Since context.putImageData() does not handle compositing, another set of methods, maybe context.drawImageData(), should be created to allow ImageData objects to be drawn onto the canvas in the same fashion as Image objects. &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0339.html&gt;",
        "4d389837f8ff4967ac73a3d840c55ece (08:33): html-spec: ianh@340c8d12-0b0e-0410-8428-c7bf67bfef74 * 916a7ec0a4b2 r5765 / (index complete.html source):",
        "4d389837f8ff4967ac73a3d840c55ece (08:33): html-spec: [e] (0) xref typo",
        "4d389837f8ff4967ac73a3d840c55ece (08:33): html-spec: Fixing http://www.w3.org/Bugs/Public/show_bug.cgi?id=11501",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (08:33): 11501: contributor, P3, RESOLVED FIXED, xref: s/attr-input-disabled/attr-fe-disabled/",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (08:46): bugmail: [Bug 11386] Defer &lt;video&gt; rendering (letterboxing) to CSS &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0345.html&gt; ** [Bug 11535] tabIndex IDL default is ?\u00a2\u00ac\u00e0\u00ac\u00ed1 for elements that are not focusable, but if the tabindex value is negative integer, the element can still be focused. &lt;http://lists.w3.org/Archives/Public/public-html-bugzilla/2011Jan/0344.html&gt; ** [Bug 11534] clarify if specially focusable elements mean &quot;"
    ],
    "person_ids": [
        "d4b206c408eda02de41d1a5a77624aac",
        "0a39f78bcb297ab0ebe8a29c28bfed89",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "4d389837f8ff4967ac73a3d840c55ece"
    ]
}