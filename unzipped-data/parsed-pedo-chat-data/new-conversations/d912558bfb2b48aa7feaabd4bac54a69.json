{
    "id": "d912558bfb2b48aa7feaabd4bac54a69",
    "messages": [
        "2a655a0e14a4584229ba4aeef43b9039 (12:29): /dev/null&quot;)",
        "3818b509e1d85f7608abd57eb70206bf (12:30): Stuart: when I read it I thought of f-prot. I hadn't heard of f-spot before",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:31): f-spot's one of mono's showcase apps",
        "3818b509e1d85f7608abd57eb70206bf (12:31): I don't care much about mono :)",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:32): I wonder why mono is so polarizing",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:32): there's no strict technical reason, but I just really really dislike it",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:32): probably just because it's more hype than substance atm",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:33): plus the microsoft problem",
        "312c60a696ee6c11196fb7da47743b17 (12:33): mostly its the microsoft stigma",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:34): well ... I don't even want Java on my machine",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:34): given a choice between .NET and Java, I'd rather use .NET",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:34): I'd use Python",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:34): ;-)",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:34): I'd rather not :)",
        "3818b509e1d85f7608abd57eb70206bf (12:34): And I'd use Perl :)",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:34): I stopped using Perl a decade ago now, and haven't missed it :)",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:35): truedfx, oh noes teh perl!!!1!",
        "312c60a696ee6c11196fb7da47743b17 (12:35): hmm.",
        "3818b509e1d85f7608abd57eb70206bf (12:35): What other language lets you calculate prime numbers using regexes?! (Yeah, I know, that's the downside too...)",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:36): I can't remember the last time I ever had the need :)",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:36): sound like C++ templates",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:36): I really love pre-calculating my program to a constant during compilation ...",
        "3818b509e1d85f7608abd57eb70206bf (12:36): I like the power of C++ templates, but I really, really hate the syntax.",
        "4a9142fd83cd6a15ba09b822386a3a71 (12:37): I think having a complete language on top of C++ is bad design",
        "7b8c5339b12fc759409a1457fbd72b17 (12:37): Good morning folks",
        "dc816c00f5c2382c44e627aa7bf2fe42 (12:38): tchiwam: morning",
        "3818b509e1d85f7608abd57eb70206bf (12:38): DrEeevil, in fairness, about the design, templates weren't designed to be this powerful. tchiwam: 'morning.",
        "7b8c5339b12fc759409a1457fbd72b17 (12:38): Darn, emerge -e system barked at this new perl-cleaner",
        "d14a43992332963d26c2439f89e673fc (12:57): good morning",
        "b84f335c88b1d64b47971eb4fd77e8af (12:59): hi",
        "3818b509e1d85f7608abd57eb70206bf (13:00): Hi lu_zero, dams.",
        "b84f335c88b1d64b47971eb4fd77e8af (13:00): hey truedfx, arguing about perl ? :)",
        "3818b509e1d85f7608abd57eb70206bf (13:00): dams, lovely language, no? :)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:01): true",
        "b84f335c88b1d64b47971eb4fd77e8af (13:01): but while waiting for perl6, I'm using ruby",
        "b84f335c88b1d64b47971eb4fd77e8af (13:01): better syntax, better paradigm, but no libraries, no RPAN, dozens of things missing :(",
        "3818b509e1d85f7608abd57eb70206bf (13:02): You can use perl6 already via pugs. Is that not good enough for you? (Wouldn't blame you, it's not good enough for me since ghc is too much to build for me)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:02): well nope, not enough for me :)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:02): actually I'm having some problems with perl6 syntax",
        "b84f335c88b1d64b47971eb4fd77e8af (13:03): like, object .= method",
        "3818b509e1d85f7608abd57eb70206bf (13:03): Problems with Perl syntax? That can't be! :)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:03): insteadh of  object.method!",
        "b84f335c88b1d64b47971eb4fd77e8af (13:03): perl6",
        "3818b509e1d85f7608abd57eb70206bf (13:03): I know, but perl6 is Perl too.",
        "b84f335c88b1d64b47971eb4fd77e8af (13:03): that'll save him :)",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:03): I hope it doesn't break symmetry like pascal",
        "3818b509e1d85f7608abd57eb70206bf (13:04): I don't know enough about the syntax myself to have problems with it yet.",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:04): if ... end is horrible :-)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:04): DrEeevil: symetry ?",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:04): dams, while () {} &lt;-- C has symmetric braces",
        "3818b509e1d85f7608abd57eb70206bf (13:04): I both like and hate how it's supposed to give you the means to create your own grammar though.",
        "b84f335c88b1d64b47971eb4fd77e8af (13:04): oh, that's not going to change in perl for a while",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:04): pascal has this nice if ... end, begin ... end etc. mess",
        "3818b509e1d85f7608abd57eb70206bf (13:04): And bash has if ... fi, also symmetric",
        "b84f335c88b1d64b47971eb4fd77e8af (13:05): and ruby has both :)",
        "3818b509e1d85f7608abd57eb70206bf (13:05): DrEeevil, pascal has if ... &lt;statement&gt;, nothing more. You can have if &lt;...&gt; begin &lt;...&gt; end, but not if &lt;...&gt; end (IIRC)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:05): truedfx: do .. done is not symetricD[D[D[D[D[D[D[D :)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:05): oops, keyboard junky",
        "3818b509e1d85f7608abd57eb70206bf (13:05): dams, true :)",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:06): truedfx, I have avoided pascal since the borland turbopascal compiler made me add a stray end :-)",
        "b84f335c88b1d64b47971eb4fd77e8af (13:06): I have wrote do .. od several times though",
        "b84f335c88b1d64b47971eb4fd77e8af (13:06): hem, written*",
        "b84f335c88b1d64b47971eb4fd77e8af (13:06): never did any pascal, and I'm still alive",
        "dc816c00f5c2382c44e627aa7bf2fe42 (13:07): mmm ... anyone ever do any Modular-2?",
        "3818b509e1d85f7608abd57eb70206bf (13:07): I'm not too fond of plain Pascal, but some of the parts of Borland's Object Pascal I like a lot.",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:07): nooooooo",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:07): *bad flashback*",
        "3818b509e1d85f7608abd57eb70206bf (13:07): In particular, types as variables.",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:09): delphi has some really bad implementation issues",
        "3818b509e1d85f7608abd57eb70206bf (13:09): Such as? Bad code generation, or something else?",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:09): incompatibility between versions",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:10): extremely stupid from my point of view",
        "d14a43992332963d26c2439f89e673fc (13:10): DrEeevil like C++ gcc implementations?",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:10): lu_zero, no, more like &quot;hmmm ... let's rename int to InTeGeR&quot;",
        "d14a43992332963d26c2439f89e673fc (13:10): ah",
        "d14a43992332963d26c2439f89e673fc (13:10): wow",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:11): not quite that bad, but I never managed to find an old version of delphi and never grokked why the code didn't work in the new version",
        "3818b509e1d85f7608abd57eb70206bf (13:11): I can't remember a version of Pascal where Integer was not a valid type name. I think even Turbo Pascal had that...",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:11): and Kylix has the same syntax except for the GUI stuff *stab*",
        "dc816c00f5c2382c44e627aa7bf2fe42 (13:12): borland'll shortly be out of the toolset business",
        "4a9142fd83cd6a15ba09b822386a3a71 (13:12): excellent news ;-)",
        "dc816c00f5c2382c44e627aa7bf2fe42 (13:12): they're supposed to have put their compiler business up for sale",
        "3818b509e1d85f7608abd57eb70206bf (13:12): DrEeevil, I know that plenty of components relied on VCL internals, that's one possible reason",
        "3818b509e1d85f7608abd57eb70206bf (13:12): And I really mean internals as in the kind that you can only get when you read the VCL source code.",
        "dc816c00f5c2382c44e627aa7bf2fe42 (13:14): anyone else got a mini-itx board w/ onboard SATA?"
    ],
    "person_ids": [
        "2a655a0e14a4584229ba4aeef43b9039",
        "3818b509e1d85f7608abd57eb70206bf",
        "dc816c00f5c2382c44e627aa7bf2fe42",
        "4a9142fd83cd6a15ba09b822386a3a71",
        "312c60a696ee6c11196fb7da47743b17",
        "7b8c5339b12fc759409a1457fbd72b17",
        "d14a43992332963d26c2439f89e673fc",
        "b84f335c88b1d64b47971eb4fd77e8af"
    ]
}