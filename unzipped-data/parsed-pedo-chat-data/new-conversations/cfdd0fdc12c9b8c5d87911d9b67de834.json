{
    "id": "cfdd0fdc12c9b8c5d87911d9b67de834",
    "messages": [
        "a3f19f90edf0a0893c7847d08016abe3 (04:31): hi, what in the spec determines how external javascript encoding is determined?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:43): a3f19f90edf0a0893c7847d08016abe3: html5 has some stuff for how to do it for &lt;script&gt;",
        "a924fb58d2c25874322f4e5126f608b9 (04:43): a3f19f90edf0a0893c7847d08016abe3: I believe &quot;Running a script&quot; in 4.3.1 the script element",
        "a3f19f90edf0a0893c7847d08016abe3 (04:45): ok thanks",
        "a3f19f90edf0a0893c7847d08016abe3 (04:46): so i'm wondering if/how the processing of scripts labelled as text/javascript differs from what rfc 4329 says to do with them",
        "a3f19f90edf0a0893c7847d08016abe3 (04:48): this is the question i'm trying to answer: &quot;Why is HTML5 making the default be text/javascript rather than application/ecmascript?&quot;",
        "a924fb58d2c25874322f4e5126f608b9 (04:48): There's a bug for that",
        "a3f19f90edf0a0893c7847d08016abe3 (04:49): yeah, but i don't remember a clear reason being given",
        "a3f19f90edf0a0893c7847d08016abe3 (04:49): i'll look it up again",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): the type doesn't matter to the implementations",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): the implementations completely ignore the type part of the content-type",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): you could have image/png and it'd work as well",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): at least over the wire",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): the type=&quot;&quot; attribute is a different matter",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): but all this is academic",
        "a3f19f90edf0a0893c7847d08016abe3 (04:50): ah, i'm asking about the type=&quot;&quot; attribute",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:50): the only reason that i use text/javascript instead of application/ecmascript is that application/ecmascript is stupid",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:51): everyone calls it text/javascript",
        "a3f19f90edf0a0893c7847d08016abe3 (04:53): i guess what i want to know is: how would things break if you normatively referenced rfc 4329 for the processing of &lt;script type=text/javascript&gt; and &lt;script type=application/ecmascript&gt;, and for if you changed the default type of &lt;script&gt; with no type=&quot;&quot; to be application/ecmascript",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:53): what does rfc4329 say that can be referenced?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:53): i didn't realise it defined anything useful other than the type names",
        "a3f19f90edf0a0893c7847d08016abe3 (04:54): it gives some requirements on encoding detection / error reporting, i think",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:54): s/useful/usable/, i guess, given my stance on the names :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:54): oh?",
        "a3f19f90edf0a0893c7847d08016abe3 (04:54): i thought so",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:54): looks",
        "a3f19f90edf0a0893c7847d08016abe3 (04:54): but i could be wrong, i just skimmed",
        "a3f19f90edf0a0893c7847d08016abe3 (04:54): i remember implementing distinct codepaths for text/javascript and application/ecmascript in batik, a while ago, based on what rfc 4329 said",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:55): rfc4329 is misleading then",
        "a3f19f90edf0a0893c7847d08016abe3 (04:56): i.e., doesn't describe reality?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:56): uh yeah, having now looked at this seems highly in variance with implemented practice",
        "a3f19f90edf0a0893c7847d08016abe3 (04:56): ok",
        "a924fb58d2c25874322f4e5126f608b9 (04:56): &quot;Use of the &quot;text&quot; top-level type for this kind of content is known to be problematic.&quot;",
        "a924fb58d2c25874322f4e5126f608b9 (04:57): What is the reason here? I'm not in the know.",
        "a3f19f90edf0a0893c7847d08016abe3 (04:57): default us-ascii encoding?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:57): or iso-8859-1 depending on which spec you read",
        "a924fb58d2c25874322f4e5126f608b9 (04:57): Is that it?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:57): (it's nonsense)",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:57): i believe so",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:57): there is no real problem",
        "a3f19f90edf0a0893c7847d08016abe3 (04:58): well i see that html5 maps us-ascii to windows-1252",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:58): the problem is a persistent myth promulgated by a variety of spec writers",
        "a924fb58d2c25874322f4e5126f608b9 (04:59): Hmm, the RFC claims charset defaults to UTF-8",
        "a924fb58d2c25874322f4e5126f608b9 (04:59): That's not really true, is it?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:59): no",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:59): i would basically ignore 4329 altogether",
        "a3f19f90edf0a0893c7847d08016abe3 (05:00): i'd like concrete things that rfc 4329 conflicts with to answer the question about why it uses text/javascript and doesn't reference that rfc, if you could",
        "a3f19f90edf0a0893c7847d08016abe3 (05:00): s/why it/why html5/",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:00): search for 4329 in html5",
        "a3f19f90edf0a0893c7847d08016abe3 (05:01): yep i did that",
        "a3f19f90edf0a0893c7847d08016abe3 (05:01): there's just that one note",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:01): right",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:01): that's the reason for why it uses text/javascript",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:01): the reason it doesn't refer to the charset algorithm is the charset algorithm is wrong",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:01): e.g. it ignore charset=&quot;&quot; on &lt;script&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:02): doesn't take into account the refering document's charset",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:02): does support UTF-32",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:02): and suggests that the type is relevant",
        "a924fb58d2c25874322f4e5126f608b9 (05:02): Hmm, it defers to XML Media Types on the processing. That's why text/ and application/ are different",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:03): 3023",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:03): that's where a lot of this nonsense started",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:03): regarding text/ vs application/",
        "a3f19f90edf0a0893c7847d08016abe3 (05:03): that text/javascript is more commonly used might be a reason to refer to the language as &quot;text/javascript&quot;, but that doesn't have anything to do with requirements on how to process script, right?",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:03): right",
        "a3f19f90edf0a0893c7847d08016abe3 (05:03): the encoding/charset stuff sounds like the kind of answer i want",
        "a9b326df4e6da61c5b6f5e1058be83a2 (05:03): wakaba: you around?",
        "a3f19f90edf0a0893c7847d08016abe3 (05:04): &quot;RFC 4329 requires &lt;script type=text/javascript&gt; to be processed like A, but in reality browsers need to be processed like B.&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:04): should point out that he's not a big fan of tiny specs that over-solve non-problems, like 4329",
        "a3f19f90edf0a0893c7847d08016abe3 (05:04): s/browsers need to be/browsers need to process it/",
        "a9b326df4e6da61c5b6f5e1058be83a2 (05:04): wakaba: if/when you have time, please try a traceroute to svn8.cvsdude.com and let me know what you get",
        "a9b326df4e6da61c5b6f5e1058be83a2 (05:05): wakaba: I'm on my emobile connection and can't get any route to it",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:05): a3f19f90edf0a0893c7847d08016abe3: did this come up in the svgwg?",
        "a3f19f90edf0a0893c7847d08016abe3 (05:05): the quoted question at the top did, yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:06): the only reason i'm making the default text/ instead of application/ is that there's no reason to introduce application/ and everyone calls it text/",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:06): i'm not doing it because of charsets",
        "a3f19f90edf0a0893c7847d08016abe3 (05:06): hmm ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:06): (and that is already mentioned in the spec)",
        "a3f19f90edf0a0893c7847d08016abe3 (05:06): i guess the more pertinent question then is why you don't normatively reference rfc 4329",
        "a3f19f90edf0a0893c7847d08016abe3 (05:07): to which the answer is the charset/encoding stuff?",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:07): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:07): though nobody other than you has asked that :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:07): asked me that, anyway",
        "a3f19f90edf0a0893c7847d08016abe3 (05:07): didn't jreschke?",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:07): did he?",
        "a3f19f90edf0a0893c7847d08016abe3 (05:07): i thought that's what that bugzilla bug was",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:07): i thought he spoke of the type name only",
        "a3f19f90edf0a0893c7847d08016abe3 (05:07): but i couldn't find it",
        "a3f19f90edf0a0893c7847d08016abe3 (05:07): ah ok",
        "a3f19f90edf0a0893c7847d08016abe3 (05:08): processing for all the many different media types to identify javascript are handled the same in html5, yes?",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:08): for type=&quot;&quot;, language=&quot;&quot;, or Content-Type: ?",
        "a3f19f90edf0a0893c7847d08016abe3 (05:09): type=&quot;&quot;",
        "a3f19f90edf0a0893c7847d08016abe3 (05:09): (you've said Content-Type is ignored, right (except for its charset parameter)?)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:10): let's see... (for type...)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:12): a3f19f90edf0a0893c7847d08016abe3: the only difference appears to be the one listed here: http://www.whatwg.org/specs/web-apps/current-work/#support-the-scripting-language",
        "a3f19f90edf0a0893c7847d08016abe3 (05:13): the e4x bit?",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:18): yeah",
        "a3f19f90edf0a0893c7847d08016abe3 (05:18): is this right?:  &lt;script src=&quot;&quot;&gt; without a type=&quot;&quot; attribute that references a resource served as whatever media type, without a charset parameter, will be decoded using the referencing html document's encoding",
        "a3f19f90edf0a0893c7847d08016abe3 (05:19): (also if the resource doesn't have a BOM)",
        "a924fb58d2c25874322f4e5126f608b9 (05:19): Yes",
        "a924fb58d2c25874322f4e5126f608b9 (05:19): Although you probably meant without a charset attribute?",
        "a3f19f90edf0a0893c7847d08016abe3 (05:20): oh i meant charset parameter on the Content-Type",
        "a3f19f90edf0a0893c7847d08016abe3 (05:20): (but also without a charset=&quot;&quot; on the &lt;script&gt;)",
        "a3f19f90edf0a0893c7847d08016abe3 (05:20): or does that charset parameter on the Content-Type not do anything either?",
        "a924fb58d2c25874322f4e5126f608b9 (05:20): Yeah, because type doesn't really enter into it",
        "a924fb58d2c25874322f4e5126f608b9 (05:20): It does",
        "a3f19f90edf0a0893c7847d08016abe3 (05:21): ah i see what you mean",
        "a3f19f90edf0a0893c7847d08016abe3 (05:21): the charset parameter in the type=&quot;&quot; is ignored, it's the charset=&quot;&quot; attribute that makes a difference",
        "a3f19f90edf0a0893c7847d08016abe3 (05:22): ok so that's a good concrete answer to the question of why rfc 4329 isn't normatively referenced",
        "a3f19f90edf0a0893c7847d08016abe3 (05:22): thanks",
        "a3f19f90edf0a0893c7847d08016abe3 (05:23): this is the kind of thing that it's hard to get a sense of quickly looking at the algorithms",
        "a3f19f90edf0a0893c7847d08016abe3 (05:24): informative, declarative text that summarises how encoding of an external script is determined would have been handy to answer my question, i think",
        "a924fb58d2c25874322f4e5126f608b9 (05:25): It would be nice",
        "a131216c7af242e66537a58b4ca7c9f9 (05:25): does &quot;unknown parameters&quot; in http://www.whatwg.org/specs/web-apps/current-work/#support-the-scripting-language refer to things like ;e4x=1 and ;version= ?",
        "a924fb58d2c25874322f4e5126f608b9 (05:25): But when 69b0d3dfe919a6b860a9fac82de52a7e writes an algorithm it usually means he wasn't able to define things neatly declaratively",
        "a3f19f90edf0a0893c7847d08016abe3 (05:26): try harder, 69b0d3dfe919a6b860a9fac82de52a7e, gosh!",
        "a3f19f90edf0a0893c7847d08016abe3 (05:26): i don't mind even if the declarative informative parts aren't completely accurate",
        "eca88ce0deea1275223afe139b2595e2 (05:26): finally got around to running kcachegrind on profiler output of html5lib php",
        "a3f19f90edf0a0893c7847d08016abe3 (05:26): and defer to the algorithm for details",
        "a3f19f90edf0a0893c7847d08016abe3 (05:27): but i guess that could be misleading for people, and might encourage them not to look into the details in the algorithm",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:30): a3f19f90edf0a0893c7847d08016abe3: it's not clear such text is a good idea, since because it would be simpler than the real text, people would use it instead of the real text",
        "a3f19f90edf0a0893c7847d08016abe3 (05:31): yes i could understand that",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:31): a131216c7af242e66537a58b4ca7c9f9: it means parameters that the browser doesn't know",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:31): a3f19f90edf0a0893c7847d08016abe3: oh, you just said that. nevermind :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:31): a3f19f90edf0a0893c7847d08016abe3: the other problem is that i don't know which parts of the spec people will want these summaries for",
        "a3f19f90edf0a0893c7847d08016abe3 (05:32): right",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:32): a3f19f90edf0a0893c7847d08016abe3: and doing it for every little thing would double the size of the spec",
        "a131216c7af242e66537a58b4ca7c9f9 (05:32): 69b0d3dfe919a6b860a9fac82de52a7e: i wasn't sure what &quot;parameters&quot; meant in that context",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:32): a131216c7af242e66537a58b4ca7c9f9: MIME parameters",
        "a131216c7af242e66537a58b4ca7c9f9 (05:32): i was afraid that would be the answer ;)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:32): a131216c7af242e66537a58b4ca7c9f9: see the MIME spec for details :-)",
        "eca88ce0deea1275223afe139b2595e2 (05:46): Bottom line is, 4 seconds to parse a 2MB document is not bad.",
        "eca88ce0deea1275223afe139b2595e2 (05:47): I don't think I'm going to waste too much time optimizing the hell out of it.",
        "eca88ce0deea1275223afe139b2595e2 (05:47): A C implementation is generally useful, but lots of work.",
        "eca88ce0deea1275223afe139b2595e2 (05:47): (this is to gsnedders)",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:52): &quot;I think, in fact, that if I may pose myself as not belonging to the hegemony, then I am one of the least conspirational persons of that lot - too little, perhaps.&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:52): i am going to have to frame that and print it",
        "69b0d3dfe919a6b860a9fac82de52a7e (05:52): er, print it then frame it",
        "150ca666565bfcb850b2e2ee3c0f0c64 (05:58): paranoid about not being paranoid enough?",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:04): and using the word &quot;hegemony&quot; in the same sentence as claiming to not be conspirational",
        "a9b326df4e6da61c5b6f5e1058be83a2 (06:16): I wonder if some people read their mailing-list postings aloud to themselves before sending them",
        "a9b326df4e6da61c5b6f5e1058be83a2 (06:16): while looking in the mirror",
        "a9b326df4e6da61c5b6f5e1058be83a2 (06:17): I mean people other than me",
        "a9b326df4e6da61c5b6f5e1058be83a2 (06:17): or if they wink at themselves while doing so",
        "eca88ce0deea1275223afe139b2595e2 (06:18): wink wink",
        "eca88ce0deea1275223afe139b2595e2 (06:18): wink wink wink if you know what I mean",
        "eca88ce0deea1275223afe139b2595e2 (06:18): wink wink"
    ],
    "person_ids": [
        "a3f19f90edf0a0893c7847d08016abe3",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "a131216c7af242e66537a58b4ca7c9f9",
        "eca88ce0deea1275223afe139b2595e2",
        "150ca666565bfcb850b2e2ee3c0f0c64"
    ]
}