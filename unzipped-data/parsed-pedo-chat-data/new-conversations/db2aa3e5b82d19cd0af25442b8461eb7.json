{
    "id": "db2aa3e5b82d19cd0af25442b8461eb7",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (10:09): the htmlparser is already at r514",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:10): b8810fee2f4a71f849f3f7409546d1d9: you're using separate repositories?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:10): a9b326df4e6da61c5b6f5e1058be83a2: yes. probably a bad idea but that's the setup",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:10): a9b326df4e6da61c5b6f5e1058be83a2: deployment script running for r400 now",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:11): cool",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:12): anyway, doesn't seem like a bad idea unless your're making changes across the repositories at the same time",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:13): so that you could have atomic checkin and could revert back to whatever state/rev of the whole thing",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:13): to try to isolate a bug or whatever",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:22): I occasionally do non-atomic multi-repository check-ins and hope that no one happens to check out at that time",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): b8810fee2f4a71f849f3f7409546d1d9: http://bugzilla.validator.nu/attachment.cgi?id=74",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): consolidated some rules by using &lt;name&gt; to report name of context node",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): maybe it's overkill",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:30): a9b326df4e6da61c5b6f5e1058be83a2: makes sense. My XPath skills just sucked.",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): mine still suck. just suck a bit less than my java skills",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): also http://bugzilla.validator.nu/show_bug.cgi?id=468",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (10:32): Title: Bug 468 - investigate using XSLT key() mechanism for improving assertions.sch (at bugzilla.validator.nu)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:32): using keys in the schematron checking might make a very significant performance difference",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:33): ten or maybe even tens of times faster, possibly",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:35): anyway, I'll mess with that and see what I get",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:37): b8810fee2f4a71f849f3f7409546d1d9: or maybe not",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:38): just looking through assertions.sch again now, I don't see much that would benefit from use of keys",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:38): not a lot of costly XPath lookups in there, actually",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:38): as far as I can see",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:39): I guess the schematron slowness you had was mostly just due to general slowness of XSLT",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): b8810fee2f4a71f849f3f7409546d1d9: one last thing for now: http://bugzilla.validator.nu/show_bug.cgi?id=470",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (10:41): Title: Bug 470 - remove constraint that blockquote can't have header or address ancestors (at bugzilla.validator.nu)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): I can't find where in the spec those constraints on blockquote came from",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:42): that blockquote can't have header or address ancestors",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:44): a9b326df4e6da61c5b6f5e1058be83a2: I'm pretty sure it used to be there, but if isn't now, the constraint is a bug",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:45): b8810fee2f4a71f849f3f7409546d1d9: dunno, I cuold be missing something",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:45): b8810fee2f4a71f849f3f7409546d1d9: maybe was because of the outline algorithm?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:45): possible",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:46): I haven't yet gotten to reviewing the new one properly",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:46): I really should implement it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:46): b8810fee2f4a71f849f3f7409546d1d9: was blockquote ever &quot;sectioning content&quot;? maybe it was before. but just &quot;sectioning root&quot; now",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:47): that might be it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:47): b8810fee2f4a71f849f3f7409546d1d9: current outline algorithm seems to have a bug with respect to &lt;header&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:47): I think it was a sectioning element for the purpose of content models but masked its internal outline",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:47): zcorpan bug from yesterday",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:49): b8810fee2f4a71f849f3f7409546d1d9: so OK if  I go ahead and remove the blockquote check from both the java and schematron checking?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:49): ok",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:49): ok, will do"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "0a39f78bcb297ab0ebe8a29c28bfed89"
    ]
}