{
    "id": "041fe483bffb29df8bb5beaaeab4c6b1",
    "messages": [
        "88d4d34a8064a4ff39fd5e144eea7762 (00:38): Is any version of .innerText specced anywhere?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:40): No",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:41): Yay.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:41): I assume it's unreasonably complicated.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:42): It's more complex than it seems at face-value, IIRC",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:42): Note WebKit has a high-cost for changing their innerText behaviour as a lot of their tests depend upon the exact serialization.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:43): Nice.",
        "65325d50b2e25aca54bc871b89758c9c (00:43): we could easily make the tests use something than innerText",
        "65325d50b2e25aca54bc871b89758c9c (00:43): it's not encoded in every text or anything",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:44): So what's an example of a difference between innerText and textContent?",
        "65325d50b2e25aca54bc871b89758c9c (00:44): but it would suck to carry around multiple conversion to plaintext algorithms",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:44): 65325d50b2e25aca54bc871b89758c9c: Converting existing tests' expectations would be expensive, though, at least provided you actually check the change",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:45): 88d4d34a8064a4ff39fd5e144eea7762: head element, scripts",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:45): Ah.",
        "65325d50b2e25aca54bc871b89758c9c (00:45): yeah, but there's no need to convert expectations",
        "65325d50b2e25aca54bc871b89758c9c (00:45): we would convert the test harness",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:45): 65325d50b2e25aca54bc871b89758c9c: Ah, to match the current innerText behaviour?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:47): innerText also seems to do newline collapsing of some kind.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:48): Actually, whitespace collapsing generally.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:48): gets to work writing a spec",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:59): 88d4d34a8064a4ff39fd5e144eea7762: Also note it should be affected by the computed style",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:59): http://software.hixie.ch/utilities/js/live-dom-viewer/saved/809 for example",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:59): Yeah, I've figured that part out.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:00): display: none is suppressed, display: block adds newlines, etc.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:00): 88d4d34a8064a4ff39fd5e144eea7762: the float and position properties change semantics too",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:00): Oh, dear.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:01): Wait, how so in this case?  I get &quot;foo magic bar&quot; as I'd expect.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:02): Try removing the float.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:02): It becomes &quot;foo\\nmagic\\nbar&quot; v. &quot;foo magic bar&quot; with the float",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:02): Ah, so it makes it behave like an inline.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:02): Or something.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:02): Does Firefox not implement this?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:03): innerText isn't supported by Gecko",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:03): Doesn't that imply it's not needed for compat, so we can retire it in favor of textContent?  Why do we want to spec it?",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:06): Also, on a somewhat related note, does anyone know if Ranges' stringifier does anything weird?  It looks like it behaves more or less like textContent, just copying the DOM.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:06): Which would be nice if true.",
        "ab7faae5d7b250ea8606486575f8f79c (01:06): if(vjo.dsf.client.Browser.bFirefox){oL.textContent=_d;}else{oL.innerText=_d;}",
        "ab7faae5d7b250ea8606486575f8f79c (01:07): (on search.blogs.ebay.com)",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:08): And there are lots of such sites, I guess?",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:08): And they use it in more complicated ways, so that you can't just alias it to textContent?",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:08): Or at least spec it to not be so complicated?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:08): Certainly Opera's impl isn't much different to textContent",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:08): Though we do have open site compat bugs because of this",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:08): Interesting.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:08): What do those sites do in Gecko?",
        "ab7faae5d7b250ea8606486575f8f79c (01:09): 88d4d34a8064a4ff39fd5e144eea7762: I don't know if there are lots",
        "ab7faae5d7b250ea8606486575f8f79c (01:09): There's ones with other kinds of fallback like",
        "ab7faae5d7b250ea8606486575f8f79c (01:09): if (wnd.document.body.innerText != undefined) sel_text=wnd.document.body.innerText; else sel_text=wnd.document.body.innerHTML;",
        "ab7faae5d7b250ea8606486575f8f79c (01:10): if(a[0].innerText!=undefined)a[0].innerText=d;else a[0].textContent=d;",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:11): Both of those seem like they should work if you just don't have innerText, or substitute textContent.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:12): 88d4d34a8064a4ff39fd5e144eea7762: MooTools uses: script[(Browser.Engine.webkit &amp;&amp; Browser.Engine.version &lt; 420) ? 'innerText' : 'text'] = text;",
        "ab7faae5d7b250ea8606486575f8f79c (01:14): return(elem.textContent||elem.innerText||Sizzle.getText([elem])||&quot;&quot;).indexOf(match[3])&gt;=0",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:15): All these except the first (explicit browser-sniffing) seem like you could just drop innerText.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:16): Yeah, there's a fair amount of stuff that just uses it with alternations",
        "ab7faae5d7b250ea8606486575f8f79c (01:16): These are just the ones that have some fallback, though - I see quite a few that don't appear to",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:16): A lot of the site-compat bugs we have the site doesn't seem to use innerText any more",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:16): Then they break in Firefox?",
        "ab7faae5d7b250ea8606486575f8f79c (01:16): In one case it's in a &lt;script language=&quot;jscript&quot;&gt; so the script doesn't even run in Firefox",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:17): 65325d50b2e25aca54bc871b89758c9c, do you know why WebKit implements innerText, and if it could just drop support?",
        "65325d50b2e25aca54bc871b89758c9c (01:18): What reason would we have to drop support?",
        "65325d50b2e25aca54bc871b89758c9c (01:19): I believe the reason we have it is that we inherited it from KHTML over 10 years ago - since then we made it match what other browsers do much better.",
        "65325d50b2e25aca54bc871b89758c9c (01:19): At this point, it's likely that WebKit-specific content depends on it",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:19): Hmm, okay.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:19): For WebKit-specific content, it doesn't really need a spec, though.",
        "65325d50b2e25aca54bc871b89758c9c (01:20): also, more generally, it is a more useful &quot;convert to plaintext&quot; operation than textContent",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:20): Yeah, that's true.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:20): Might be worth speccing just because of that.",
        "ab7faae5d7b250ea8606486575f8f79c (01:20): http://realestateview.com.au/cgi-bin/inspecttimes.pl?GID=2&amp;GID=5&amp;tp=2lease&amp;Con=L says &quot; properties open for inspection this week.&quot; with no number in Firefox",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:20): I had an author remark to me that it was annoying that Selection's stringifier didn't insert newlines into things like &lt;p&gt;a&lt;p&gt;b, for instance.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:21): Do we know if Gecko wants to implement it?",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:21): https://bugzilla.mozilla.org/show_bug.cgi?id=innertext",
        "ab7faae5d7b250ea8606486575f8f79c (01:22): Seems like zillions of pages use innerText, though mostly in trivial ways where it doesn't really matter if it's not supported, or they use textContent as an equivalent",
        "ab7faae5d7b250ea8606486575f8f79c (01:22): but that probably means there's a large absolute number that depend on it with no fallback",
        "65325d50b2e25aca54bc871b89758c9c (01:24): I think Mozilla folks have explicitly said they don't want to implement innerText",
        "65325d50b2e25aca54bc871b89758c9c (01:24): I did not find their reasoning very persuasive",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:25): Hixie, does Gecko want to implement innerText?  If not, is it still worth writing a spec?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:25): We implemented it, FWIW, at IE's peak, where web-compat was very much a game of match-IE-as-much-as-possible",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:27): We have no strong opinion about whether it stays or not \u201a\u00c4\u00ee if it isn't going to get specced, we will drop it.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:27): https://bugzilla.mozilla.org/show_bug.cgi?id=264412#c10",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:28): Basically we either want interop, be it through a spec or not supporting it.",
        "7f9405da4034bf43083e64b57302a8e6 (01:31): hey, i used to use innerText.",
        "d6e292711389fc8c3d399cd640fc8a40 (01:39): ab7faae5d7b250ea8606486575f8f79c: you nailed it on the omit tags option.",
        "d6e292711389fc8c3d399cd640fc8a40 (01:40): Hixie: When you're around\u201a\u00c4\u00b6 https://github.com d6e292711389fc8c3d399cd640fc8a40/developers.whatwg.org/issues/#issue/22",
        "65325d50b2e25aca54bc871b89758c9c (01:55): a11aabeeceeae6b8cb5d12ea06b56554: KHTML developers were much more prone to blindly copy IEisms than WebKit devs are, but I do think the usefulness of innerText exceeds its semi-redundancy",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:59): Yeah, it does seem more useful than textContent, although harder to spec."
    ],
    "person_ids": [
        "88d4d34a8064a4ff39fd5e144eea7762",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "65325d50b2e25aca54bc871b89758c9c",
        "ab7faae5d7b250ea8606486575f8f79c",
        "7f9405da4034bf43083e64b57302a8e6",
        "d6e292711389fc8c3d399cd640fc8a40"
    ]
}