{
    "id": "54f65dd8b22b95b92bbecb4211bf52fb",
    "messages": [
        "88d4d34a8064a4ff39fd5e144eea7762 (17:01): 2c5a41a96b0f3693ee5a14e7fbd5fd9a, for checking disk space I usually use du -m / | sort -nr | head -n 50.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:01): Prints out the top 50 directories by disk space usage.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:02): Although it takes a long time if you have a lot of directories.",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:04): 88d4d34a8064a4ff39fd5e144eea7762: cool, thanks",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:05): Although one disadvantage is it doesn't print out anything at all until it's done.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:05): Since sort has to wait for all the input before it can output the first line.",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:06): only takes 13 seconds on my local machine",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:07): du -mx is probably better than du -m, actually, so it doesn't cross filesystem boundaries.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:07): (since you only care about one filesystem if you want to know what's using space)",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:07): looks hopefully toward a btrfs future where ridiculous issues like that will go away, along with war and world hunger",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:07): taking a bit longer on my server...",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:08): googles btrfs",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:08): I've seen it take hours on occasion.  But it's just du that's taking that long, it would take that long regardless.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:08): Because it has to look at every directory in the filesystem.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:11): btrfs is the cool next-gen filesystem for Linux that's basically a total ripoff of all the good ideas of ZFS, but on an OS that more than three people actually care about.",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:11): took 3 minutes 45 seconds on my server filesystem of ~16GB",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:11): heh",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:11): me dunno much about ZFS either?",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:11): Sun?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:12): In particular, it encourages you to put everything on one big filesystem, and divide things up into &quot;subvolumes&quot; that you don't have reserve space for in advance.  So you can divide the space up into subvolumes for different parts of the filesystem and therefore easily track what's using how much space, quickly remove entire subvolumes, etc., but not have to waste space by deciding how much to reserve for each subvolume in advance.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:13): But you can put limits on how big each subvolume is allowed to get, and track how big each one is, and otherwise mostly handle them as independent filesystems, so you get almost all the benefits of separate filesystems.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:13): But there are zillions of other cool features, like online resize (shrink as well as grow), online fsck, extremely low-cost snapshotting of subvolumes, improved performance on many workloads, etc. etc. etc.",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:22): sounds too good to be true",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:22): there must be a catch",
        "8269fc4aca67c69ef320ddd69881d4cc (17:23): 88d4d34a8064a4ff39fd5e144eea7762: By the way, what is &quot;online resize and fsck&quot;? That is one thing I never understood about Btrfs.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:25): 2c5a41a96b0f3693ee5a14e7fbd5fd9a, the catch is it's not stable and who knows when it will be stable and until it's stable it will probably lock up and/or eat your data.",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:26): ah",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a (17:26): that's definitely a bit of a downside",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:26): Yeah, that's the sort of thing that tends to put a damper on filesystem innovation.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:26): If your scheduler or something messes up you can always just switch back to an old kernel and big deal, but filesystems messing up is a bit more of a practical problem.",
        "8269fc4aca67c69ef320ddd69881d4cc (17:27): Well, ZFS has been stable for some time...",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:27): 8269fc4aca67c69ef320ddd69881d4cc, &quot;online resize&quot; means you can increase or decrease the size of the filesystem online, like if you add or remove a disk.  ext4 (and ext3 and ext2) can increase filesystem size but not decrease.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:27): Online, I mean.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:27): They can decrease offline, i.e., with the filesystem unmounted.",
        "8269fc4aca67c69ef320ddd69881d4cc (17:27): oh! good!",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:28): Online fsck is what it sounds like, btrfs is supposed to be able to check for and repair errors online instead of requiring you to mount your root filesystem read-only and therefore take the the whole system offline if you want to check for or fix errors.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:28): ZFS has been stable for some time but still reportedly has reliability issues.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:29): I know of more than one site that used ZFS but then switched away because they had problems with it failing randomly.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:29): (&quot;more than one site&quot; being toolserver.org, and Wikimedia)",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:29): Failing randomly or otherwise not living up to expectations.",
        "b25b6b77a0087ff8385941e5545d32ea (17:29): &quot;Online fsck is what it sounds like&quot; - an excuse for yet more tired /. jokes?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:29): b25b6b77a0087ff8385941e5545d32ea, ?",
        "8269fc4aca67c69ef320ddd69881d4cc (17:29): That could be the fate of Btrfs when released, unfortunately.",
        "b25b6b77a0087ff8385941e5545d32ea (17:31): 88d4d34a8064a4ff39fd5e144eea7762: Isn't there a whole genre of jokes based around the small Levenshtein distance between the word &quot;fsck&quot; and the word &quot;fuck&quot;?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:31): Probably.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:32): 8269fc4aca67c69ef320ddd69881d4cc, yeah, but Linux is much more widely used, so with any luck it will get much better testing.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:32): I'm not expecting to use it in production anytime within the next few years, though.",
        "ab7faae5d7b250ea8606486575f8f79c (17:33): If quality depends on testing which depends on number of users, that seems to indicate the quality-improvement process is (at least in part) to wait for users to encounter bugs and lose data and then fix those bugs",
        "ab7faae5d7b250ea8606486575f8f79c (17:33): Can't they, like, write it correctly in the first place?",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): wishes programming was easier",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:34): If programming was easy, most of the people in this chat room would make a lot less money.  :)",
        "b25b6b77a0087ff8385941e5545d32ea (17:35): If programming was easier we would use it to solve harder problems",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:35): That too.",
        "ab7faae5d7b250ea8606486575f8f79c (17:38): It's only a filesystem, and the API is already designed and implemented many times so they don't have to deal with drastically changing requirements - it doesn't seem like a problem that will always grow until it's slightly too hard to implement",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:40): So you'd think.  But in practice, people want filesystems to do all kinds of things, and people think of ever cleverer ways to do them.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:40): ZFS and btrfs are a totally different filesystem model from other commonly-used filesystems, they do everything copy-on-write.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:40): So there are a ton of practical issues to work out.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:41): Like &quot;what happens when you get low on disk space?&quot;  Both of them have issues then.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:41): btrfs uses some fancy B-tree-based data structure that some guy made up in like 2005.",
        "ab7faae5d7b250ea8606486575f8f79c (17:43): thinks it might be interesting if someone did a book collecting articles from developers of lots of projects, explaining what they see as the fundamentally hard problems they have to face, to show why things are never as easy as they superficially appear",
        "ab7faae5d7b250ea8606486575f8f79c (17:43): (Most things I've seen before are focusing on solutions, which is generally less interesting than problems)",
        "b25b6b77a0087ff8385941e5545d32ea (17:44): Probably no one wants to write a book suggesting that they're not clever enough to trivially solve all problems",
        "ab7faae5d7b250ea8606486575f8f79c (17:45): The developers working on a project have already clearly indicated they can't trivially solve all problems, because if they could then they wouldn't still be working on that project",
        "ab7faae5d7b250ea8606486575f8f79c (17:45): so the book would be a good way for them to offer excuses for not having finished the project yet",
        "06cb330920ae58e1614c9145d983b3d6 (17:45): i sure don't want to touch a filesystem that hasn't been stable for many years",
        "06cb330920ae58e1614c9145d983b3d6 (17:46): given that it's probably the single most critical piece of code on the entire system",
        "06cb330920ae58e1614c9145d983b3d6 (17:46): i expect i'll be sticking with XFS for a long time to come",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:49): I'm okay with using a filesystem once it's been the default in major distros for a version or two and there are no widespread reports of breakage.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:49): Provided I keep backups of anything important.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:50): If a million Ubuntu users haven't hit anything really nasty in a year, my desktop isn't important enough that I'm going to worry about being the first.",
        "06cb330920ae58e1614c9145d983b3d6 (17:51): well, the default in debian/ubuntu still tends to be ext3/ext4, but i don't trust that",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:51): ext3 has been the default filesystem in Linux for like ten years.",
        "ab7faae5d7b250ea8606486575f8f79c (17:51): Just make sure your backup disks aren't using the new filesystem too",
        "06cb330920ae58e1614c9145d983b3d6 (17:52): if a filesystem defaults to doing a lengthy full fsck every N boots by default, that tells me the developers have very little confidence in it",
        "8269fc4aca67c69ef320ddd69881d4cc (17:52): 06cb330920ae58e1614c9145d983b3d6: I read somewhere that ext developers had decided never to create ext5",
        "8269fc4aca67c69ef320ddd69881d4cc (17:52): they are confident Btrfs will be the future",
        "ab7faae5d7b250ea8606486575f8f79c (17:52): Maybe they'll go straight from ext4 to ext6",
        "06cb330920ae58e1614c9145d983b3d6 (17:52): it's very strange that distros still use ext*, since xfs is pretty much better in every way",
        "06cb330920ae58e1614c9145d983b3d6 (17:53): for very low-memory systems maybe",
        "8b3687499080633e1898fa1dd209ef81 (17:53): Obviously ext5 would involve writing a spec for each line of code",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:54): 8269fc4aca67c69ef320ddd69881d4cc, that was decided a few years ago, yes.  There was a major Linux filesystem summit, and the plan everyone agreed on was to make short-term easy improvements to ext3 in the form of ext4, and consign the long-term future of Linux filesystems to btrfs.",
        "8269fc4aca67c69ef320ddd69881d4cc (17:56): 88d4d34a8064a4ff39fd5e144eea7762: this is going to be a difficult transition... something like Python3",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:56): 06cb330920ae58e1614c9145d983b3d6, what advantage does XFS have over ext4?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:56): Defragmentation?",
        "8269fc4aca67c69ef320ddd69881d4cc (17:56): 06cb330920ae58e1614c9145d983b3d6: XFS looks good, I wonder why I haven't heard of it before",
        "8269fc4aca67c69ef320ddd69881d4cc (17:56): 88d4d34a8064a4ff39fd5e144eea7762: it cannot be shrunk",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:56): 8269fc4aca67c69ef320ddd69881d4cc, not at all.  You can do an extremely fast in-place upgrade of ext4 to btrfs, with rollback.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:57): And the difference is mostly transparent, btrfs does everything important ext4 does as far as applications are concerned.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:57): So it's just a matter of people waiting till it's stable and reliable.",
        "06cb330920ae58e1614c9145d983b3d6 (17:57): my experience with xfs is that it just works: reliable, very consistently fast, and i havn't had to do an fsck of any kind since it was pre-release",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:57): 06cb330920ae58e1614c9145d983b3d6, my experience with ext4 is the same.",
        "8269fc4aca67c69ef320ddd69881d4cc (17:57): 88d4d34a8064a4ff39fd5e144eea7762: I meant, people won't want to touch it unless other people use it",
        "8269fc4aca67c69ef320ddd69881d4cc (17:57): which is the issue in Python3",
        "06cb330920ae58e1614c9145d983b3d6 (17:58): ext* fscks by default every N boots (which you can turn off, but if a filesystem does something that hugely expensive by default, I assume it's for a reason)",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:58): 8269fc4aca67c69ef320ddd69881d4cc, to use Python 3 you have to port your code, which is nontrivial for large codebases, and impossible if you rely on unported libraries.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:58): Any random person can switch their machine from ext4 to btrfs for the heck of it today if they want.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:58): And they do.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:59): 06cb330920ae58e1614c9145d983b3d6, that could speak to a difference in configuration philosophy more than anything.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:59): The only time I've had nontrivial filesystem corruption on ext4 was when the underlying disk was bad.",
        "ab7faae5d7b250ea8606486575f8f79c (17:59): 8269fc4aca67c69ef320ddd69881d4cc: I think the problem with Python 3 is more that it's worse than Python 2 until everybody else in the world has upgraded (so you can be compatible with their applications/libraries), so nobody wants to bother upgrading",
        "06cb330920ae58e1614c9145d983b3d6 (17:59): the philosophy i read into it is &quot;we don't trust our code enough&quot;; others may read what they like, of course",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:59): (there were other times that fsck caught something, but it was some trivial thing that it easily fixed)",
        "ab7faae5d7b250ea8606486575f8f79c (17:59): whereas an individual can change their filesystem regardless of what anyone else does",
        "06cb330920ae58e1614c9145d983b3d6 (18:00): the problem with python 3 is it doesn't have a sane upgrade path, so it essentially fragments the language",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:00): 06cb330920ae58e1614c9145d983b3d6, or it could be &quot;we know hardware sometimes goes bad or lies regardless of how good our code is, and we aren't overconfident in our code either&quot;.",
        "06cb330920ae58e1614c9145d983b3d6 (18:01): 88d4d34a8064a4ff39fd5e144eea7762: has never happened to me, but i sure have had servers offline for long periods of time due to an un-asked-for fsck on reboot",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:01): Yes, that's just stupid configuration.",
        "06cb330920ae58e1614c9145d983b3d6 (18:01): ymmv etc etc",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:01): Although ext4 fsck is much, much faster than ext3 fsck.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:02): Hmm, XFS can't be shrunk?",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:02): Even offline?",
        "06cb330920ae58e1614c9145d983b3d6 (18:02): dunno, never tried",
        "ab7faae5d7b250ea8606486575f8f79c (18:02): has never encountered the problem of having too much disk space",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:02): I've had to shrink ext* on occasion.  It's really slow and only works offline, but it works.",
        "06cb330920ae58e1614c9145d983b3d6 (18:03): really the only particularly interesting feature of newer filesystems is being able to snapshot (without layering another special block layer underneith), to be able to backup databases directly",
        "ab7faae5d7b250ea8606486575f8f79c (18:03): If you don't mind really slow, copy the data to an external disk then repartition and reformat then copy back",
        "06cb330920ae58e1614c9145d983b3d6 (18:03): ab7faae5d7b250ea8606486575f8f79c: well, if you're working with an array, you don't always have that option",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:03): ab7faae5d7b250ea8606486575f8f79c, only works if you have enough empty storage.",
        "06cb330920ae58e1614c9145d983b3d6 (18:04): (+ interesting feature to me, of course)",
        "ab7faae5d7b250ea8606486575f8f79c (18:04): wouldn't really want to resize partitions unless he already had a backup copy anyway",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:04): btrfs has lots of interesting features beyond snapshotting.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:04): In-FS RAID looks like it will be really cool.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:04): You'll be able to choose different RAID levels for different files.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:05): And it doesn't have the same resyncing problems as normal software RAID.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:06): So RAID5 for backups (= almost all reads/writes are serial, take up lots of space) but RAID10 for database files (= lots of random read/write), say.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:06): Of course, a lot of this stuff is still on the drawing board.",
        "06cb330920ae58e1614c9145d983b3d6 (18:07): more interesting would be intelligent RAID for databases across spinnydisks and SSDs",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:08): Oh, and you can copy files instantly, like hard-linking except the file is actually logically totally separate.  That's very cool.",
        "06cb330920ae58e1614c9145d983b3d6 (18:08): eg. to be able to get safe writes to disk (which many, especially cheaper, SSDs are very bad at), while being able to use the SSD for reads (where it's an order of magnitude improvement for databases in many cases)",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:09): That's probably best handled at a different layer.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:09): Somewhere below the filesystem layer.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:09): There's work in that department in Linux, IIRC including something funded by Facebook.",
        "06cb330920ae58e1614c9145d983b3d6 (18:10): it can be done at the FS layer logically: report writes as synced to disk as soon as they've hit at least one disk, without waiting for it to be confirmed to all",
        "06cb330920ae58e1614c9145d983b3d6 (18:10): (whether you actually want that or not is a matter of policy)",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:11): md already can do that, with the --write-behind= option.  Although of course that's inflexible.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:11): In particular, the SSD has to be the same size as the other device, which mostly defeats the point.",
        "06cb330920ae58e1614c9145d983b3d6 (18:11): of course, different disk sizes and other things mean it's far from trivial",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:12): The better use for SSDs is probably to use them as a read cache only, not a write buffer.  Cheaper SSDs are very slow to write to randomly anyway.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:12): Plus, writes can be buffered a lot already in memory or in battery-backed RAID controllers or such.",
        "88d4d34a8064a4ff39fd5e144eea7762 (18:13): Whereas you can't buffer reads, so those are the things you really want to get rid of as much as possible (admittedly depending on workload).",
        "e29be37c2febc43a0d21a1f8efa351af (18:17): did eighty4 mean mochascript, or was he poking fun?",
        "e29be37c2febc43a0d21a1f8efa351af (18:17): 06cb330920ae58e1614c9145d983b3d6: dialog wouldn't be tab modal, it would only be [[document]] modal.",
        "06cb330920ae58e1614c9145d983b3d6 (18:17): i'm not sure what the distinction is",
        "e29be37c2febc43a0d21a1f8efa351af (18:18): it's from friday i think :)",
        "06cb330920ae58e1614c9145d983b3d6 (18:18): but iirc the point was &quot;not window-modal&quot;",
        "e29be37c2febc43a0d21a1f8efa351af (18:18): i think you were worried about dialogs gaining focus when they shouldn't",
        "06cb330920ae58e1614c9145d983b3d6 (18:18): i wasn't, i think i was responding to someone else who was"
    ],
    "person_ids": [
        "88d4d34a8064a4ff39fd5e144eea7762",
        "2c5a41a96b0f3693ee5a14e7fbd5fd9a",
        "8269fc4aca67c69ef320ddd69881d4cc",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "06cb330920ae58e1614c9145d983b3d6",
        "8b3687499080633e1898fa1dd209ef81",
        "e29be37c2febc43a0d21a1f8efa351af"
    ]
}