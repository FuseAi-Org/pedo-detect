{
    "id": "258ca43dc4152c446a9dea2cd2ba6726",
    "messages": [
        "ca32bc5e9f8e7e49bde83294ba540ca7 (02:00): mantang0: php5-pear",
        "8f4a1157b1dc53a294179809118c66b6 (02:00): Does anyone know why I get a &quot;call to a member function on a non-object&quot; error after moving some previously working code into its own function, even though I'm passing the handle to the function as an argument?",
        "939bc0f02e38b6c29f5b0f01907ff478 (02:01): Bazzi: is that in another repository?",
        "939bc0f02e38b6c29f5b0f01907ff478 (02:01): Package php5-pear is not available, but is referred to by another package.",
        "313957445801508c4a36bdcaa9b39c61 (02:01): fireflys: you are calling a function on a non-object",
        "cac412c2d087c9ac97b9fe3399655e4e (02:01): fireflys: I'm guessing the variable you use in that line is not an object...",
        "313957445801508c4a36bdcaa9b39c61 (02:01): richardlynch: :P",
        "cac412c2d087c9ac97b9fe3399655e4e (02:01): fireflys: So what is it?  var_dump it.",
        "b9d0a7f10fec43d8a349564af88b1efe (02:02): what would be the best function to resize an image? imagecopyresized?",
        "ca32bc5e9f8e7e49bde83294ba540ca7 (02:02): mantang0: maybe your debian is outdated or so.",
        "939bc0f02e38b6c29f5b0f01907ff478 (02:02): just did an apt-get update",
        "939bc0f02e38b6c29f5b0f01907ff478 (02:02): weird",
        "cac412c2d087c9ac97b9fe3399655e4e (02:02): faithre: Depending on your version of GD, and the actual images themselves, imagecopyresampled may be better.  Only testing on your images will you know for sure.",
        "1b13d69f240991f46cf5498d366f0a43 (02:03): mantang0: isn't their a libpear or sometihng?",
        "0e05d6f785e2e03e612223e7875d38b9 (02:03): faither: What do you mean? with GD or ImageMagick?",
        "8f4a1157b1dc53a294179809118c66b6 (02:03): Ohh...I think there was another object that I forgot to pass",
        "8f4a1157b1dc53a294179809118c66b6 (02:03): back in a moment",
        "b9d0a7f10fec43d8a349564af88b1efe (02:03): not sure wolf",
        "ca32bc5e9f8e7e49bde83294ba540ca7 (02:03): mantang0: debian stable is a bit well... not current",
        "ca32bc5e9f8e7e49bde83294ba540ca7 (02:03): if you use that",
        "24055ea02cb2a4025221a9d3406087d0 (02:03): what would be the optimal way to replace a section of text in a txt file? atm, i'm thinking of reading teh file in (maybe 30k tops), finding the chunk, and i'm not sure how to replace just the chunk",
        "b9d0a7f10fec43d8a349564af88b1efe (02:03): just want to resize",
        "0e05d6f785e2e03e612223e7875d38b9 (02:03): str_replace or preg_replace",
        "939bc0f02e38b6c29f5b0f01907ff478 (02:04): I'm using testing.... i thought... hmm.  Perhaps my apt prefs are a little out of whack.  I'll go check",
        "0e05d6f785e2e03e612223e7875d38b9 (02:04): faither: With GD, imagecopyresample... For GD, trad the manuals",
        "b9d0a7f10fec43d8a349564af88b1efe (02:04): ok",
        "b9d0a7f10fec43d8a349564af88b1efe (02:04): thans wolf",
        "b9d0a7f10fec43d8a349564af88b1efe (02:04): thanks*",
        "cac412c2d087c9ac97b9fe3399655e4e (02:04): faither: Do you need to resize them in &quot;real time&quot; as user uploads them, or just whenever.  Do you have shell access and cron job access?  How many images? How big are they?  The &quot;best&quot; answer among GD, ImageMagick and the functions within them depend on all this and more...",
        "24055ea02cb2a4025221a9d3406087d0 (02:04): Wolfpaws, but the chunk i want to replace may be 5k worth of text",
        "313957445801508c4a36bdcaa9b39c61 (02:04): lra_: if you don't want to load the whole file, you'll need to scan it in",
        "d422d4e253d55c5eaf3b64366716c589 (02:04): How would i cycle through an array changing the keys?",
        "0e05d6f785e2e03e612223e7875d38b9 (02:05): lra_: So?/",
        "803c174aed9d91bb69298176d3990e5b (02:05): Chops`: Change them how?",
        "313957445801508c4a36bdcaa9b39c61 (02:05): lra_: does it have an identifying mark at front and back?",
        "d422d4e253d55c5eaf3b64366716c589 (02:05): make them a differnt value",
        "24055ea02cb2a4025221a9d3406087d0 (02:05): benlake, yeah it will",
        "cac412c2d087c9ac97b9fe3399655e4e (02:05): Chops`: Give us a tiny example...",
        "4ea6dc249f989927602ed4bae2cf81aa (02:05): For those of you who celebrate midsommer, have a nice one.",
        "beb3a35c125d5367fae987ba11f288a5 (02:05): do u guys have any tip on how to find all dependencies between php files... For example I wanna find out if I have previously created a php file which is not referenced from anywhere else?",
        "d422d4e253d55c5eaf3b64366716c589 (02:05): I want to cycle through an array with numbers as keys changing the numbers to an md5 sum of the two of the elements inside the array.",
        "24055ea02cb2a4025221a9d3406087d0 (02:06): is it efficient to pass a huge string to be replaced in to str_replace",
        "74304ed6626c620282c7acb0ae21c8f2 (02:06): lra_, I would not say that is efficient.",
        "74304ed6626c620282c7acb0ae21c8f2 (02:06): But if it needs to be done, what else can you do?",
        "cac412c2d087c9ac97b9fe3399655e4e (02:06): Chops`: foreach, but make a whole new array for the new keys, as altering an array in the midst of iterating it is dicey.",
        "beb3a35c125d5367fae987ba11f288a5 (02:06): I think the php manual says that str_replace is more efficient than preg_replace though",
        "24055ea02cb2a4025221a9d3406087d0 (02:06): well, how else can i replace a chunk in a txt file Julian|Work?",
        "313957445801508c4a36bdcaa9b39c61 (02:07): lra_: I'd scan through the file [fopen while(feof) and such] find the starting point",
        "d422d4e253d55c5eaf3b64366716c589 (02:07): ok richardlynch",
        "d422d4e253d55c5eaf3b64366716c589 (02:07): thanks :)",
        "74304ed6626c620282c7acb0ae21c8f2 (02:07): lra_, I'm trying to have you answer that question.",
        "74304ed6626c620282c7acb0ae21c8f2 (02:07): Have you looked at any alternatives?",
        "74304ed6626c620282c7acb0ae21c8f2 (02:07): benlake, the built-in functions will perform faster than rewriting it yourself.",
        "313957445801508c4a36bdcaa9b39c61 (02:08): lra_: not the file position and start deleteing, scan to that point and plop in the new chunk",
        "74304ed6626c620282c7acb0ae21c8f2 (02:08): Unless they're doing some extra work that you don't require-- in the case of str_replace(), I doubt that.",
        "313957445801508c4a36bdcaa9b39c61 (02:08): Julian|Work: I'm aware of this, unless your stretching their usage",
        "24055ea02cb2a4025221a9d3406087d0 (02:08): well, i was thinking of finding the start and end marker, then replace the chunk inbetween. i was thinking of copying the text before the start into one var, and hte txt afterwards the end marker into one, then sticking all 3 together",
        "313957445801508c4a36bdcaa9b39c61 (02:09): Julian|Work: depending on the file sizes you work with, reading the entire thing in, isn't that great",
        "74304ed6626c620282c7acb0ae21c8f2 (02:09): I didn",
        "beb3a35c125d5367fae987ba11f288a5 (02:09): lra_: Have u looked into REPLACE function in MySQL if you wanna replace mysql queried strings?",
        "74304ed6626c620282c7acb0ae21c8f2 (02:09): 't hear anything about a file, just a string.",
        "313957445801508c4a36bdcaa9b39c61 (02:09): lra_: well then you're still palying with everything in memory",
        "24055ea02cb2a4025221a9d3406087d0 (02:09): yeah, it's a txt file",
        "8f4a1157b1dc53a294179809118c66b6 (02:09): solved, thanks anyway richardlynch",
        "ea83eaba0531e73b751e055cf37d82d7 (02:09): !+u",
        "313957445801508c4a36bdcaa9b39c61 (02:09): Julian|Work: point taken :)",
        "c9df95ef78ef123a2f5ed348d255e28e (02:09): Surely you mean 'you', not 'u'?  The letter 'u' is not a personal pronoun. Talking like this in ##php may get you silenced. For details, /msg php-bot aolbonics",
        "74304ed6626c620282c7acb0ae21c8f2 (02:10): benlake: but sure, you're correct.  If you can limit the size of the string without much overhead, a good choice.",
        "74304ed6626c620282c7acb0ae21c8f2 (02:10): lra_, bottom line, try out a couple ways.  See for yourself.",
        "74304ed6626c620282c7acb0ae21c8f2 (02:10): And maybe come back and tell us what worked best.",
        "d422d4e253d55c5eaf3b64366716c589 (02:10): richardlynch : is this ok?",
        "d422d4e253d55c5eaf3b64366716c589 (02:10): foreach ( $clans['p'] as $key =&gt; $value ) {\tif ( $key &lt; 10 ) { $clans['p'][md5($value['c'][0].''.$value['c'][1])] = $value;\tunset($clans['p'][$key]); }",
        "313957445801508c4a36bdcaa9b39c61 (02:10): Julian|Work: somehow I'm not expecing a big O answer from lra_'s tests",
        "24055ea02cb2a4025221a9d3406087d0 (02:11): ?",
        "cac412c2d087c9ac97b9fe3399655e4e (02:11): Chops`: Altering the contents of an array while iterating through it is &quot;undefined output&quot;",
        "313957445801508c4a36bdcaa9b39c61 (02:11): Julian|Work: sometimes its better to walk through it mentally to find inefficiencies",
        "d422d4e253d55c5eaf3b64366716c589 (02:11): ok :(",
        "313957445801508c4a36bdcaa9b39c61 (02:11): lra_: did we help at all?",
        "24055ea02cb2a4025221a9d3406087d0 (02:12): benlake, gave me some stuff to think about :)",
        "313957445801508c4a36bdcaa9b39c61 (02:13): lra_: alright then :) my only tip is to ask yourself how much data is in memory",
        "24055ea02cb2a4025221a9d3406087d0 (02:13): surely it'd be more efficient to read it all in, instead of reading it in bit by bit, looking for the start marker?",
        "a54b4b5c890ba85aaa6ad20f156e3c59 (02:14): hello, what is the right preg macth for &quot;src='\\&quot;<a href=\"http://www.debench.com/files/fstage225.jpg\">http://www.debench.com/files/fstage225.jpg</a>\\&quot;'&quot; if i'm searching '\\&quot;'?",
        "313957445801508c4a36bdcaa9b39c61 (02:14): lra_: what do you think reading it all in does?",
        "e75132e7a95f427b94cd2536737c9e28 (02:14): lra_, sure- if you have enough memory/fast enough processor..",
        "cac412c2d087c9ac97b9fe3399655e4e (02:14): lra_: Not if it's so humungous it forces your machine to start swapping it back out to disk because RAM if full up.",
        "313957445801508c4a36bdcaa9b39c61 (02:15): lra_: you want to read it in the largest chunks possible to identify what you want",
        "6d2f4ead2e7faa128e2131c0f29ff05e (02:15): how can i do something like:  $first_time = 1; function() { if ($first_time) { ...; $first_time = 0; } }",
        "313957445801508c4a36bdcaa9b39c61 (02:15): richardlynch:  :)",
        "c447a96c723bd3bfdd8f16c5f642846a (02:15): hi..consider a class X..in its definition there is an array of another class Y which has a properety p..how to access properety p of nth. element of Y within X...$X-&gt;Y[n]-&gt;p doesnt work",
        "24055ea02cb2a4025221a9d3406087d0 (02:15): so it's faster to read it in bit by bit?",
        "313957445801508c4a36bdcaa9b39c61 (02:15): lra_: basically, we're all just having you think about memory usage",
        "cac412c2d087c9ac97b9fe3399655e4e (02:15): yarden: '/\\\\\\\\&quot;/",
        "a54b4b5c890ba85aaa6ad20f156e3c59 (02:15): thanks :)",
        "7873613432d7b14498f0c4486151820f (02:15): sweet",
        "cac412c2d087c9ac97b9fe3399655e4e (02:15): yarden: Tack on a ' at the end.  Sorry.",
        "7873613432d7b14498f0c4486151820f (02:15): i had to use mod_rewrite, but it works..",
        "313957445801508c4a36bdcaa9b39c61 (02:16): lra_: it does this anyway :) you only need to look at it line by line or 4096bytes at a times.. but it still has to get the data, bit by bit",
        "24055ea02cb2a4025221a9d3406087d0 (02:16): yeah, i'm trying to go from doing it, to doing it efficiently",
        "6d2f4ead2e7faa128e2131c0f29ff05e (02:16): richard: too many backslashes",
        "6d2f4ead2e7faa128e2131c0f29ff05e (02:16): '/\\\\\\&quot;/'"
    ],
    "person_ids": [
        "ca32bc5e9f8e7e49bde83294ba540ca7",
        "8f4a1157b1dc53a294179809118c66b6",
        "939bc0f02e38b6c29f5b0f01907ff478",
        "313957445801508c4a36bdcaa9b39c61",
        "cac412c2d087c9ac97b9fe3399655e4e",
        "b9d0a7f10fec43d8a349564af88b1efe",
        "1b13d69f240991f46cf5498d366f0a43",
        "0e05d6f785e2e03e612223e7875d38b9",
        "24055ea02cb2a4025221a9d3406087d0",
        "d422d4e253d55c5eaf3b64366716c589",
        "803c174aed9d91bb69298176d3990e5b",
        "4ea6dc249f989927602ed4bae2cf81aa",
        "beb3a35c125d5367fae987ba11f288a5",
        "74304ed6626c620282c7acb0ae21c8f2",
        "ea83eaba0531e73b751e055cf37d82d7",
        "c9df95ef78ef123a2f5ed348d255e28e",
        "a54b4b5c890ba85aaa6ad20f156e3c59",
        "e75132e7a95f427b94cd2536737c9e28",
        "6d2f4ead2e7faa128e2131c0f29ff05e",
        "c447a96c723bd3bfdd8f16c5f642846a",
        "7873613432d7b14498f0c4486151820f"
    ]
}