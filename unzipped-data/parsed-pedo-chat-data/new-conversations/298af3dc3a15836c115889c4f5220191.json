{
    "id": "298af3dc3a15836c115889c4f5220191",
    "messages": [
        "547a7eaa29c1c29c3ef2fec258ae62be (16:41): which file do i edit to make my default vim use e.g :set tabspace=4",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:41): ~/.vimrc",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:41): so if i dont have the file, i can just make it?",
        "4969e383a78d3407b54160eb0de4b90b (16:41): But don't do that. Change sw instead",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:41): sw?",
        "4969e383a78d3407b54160eb0de4b90b (16:42): shiftwidth",
        "4969e383a78d3407b54160eb0de4b90b (16:42): That number of spaces added/removed per level of indent",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:42): i have set tabstop=4,set shiftwidth=4,set smarttab,set expandtab,softtabstop=4",
        "4969e383a78d3407b54160eb0de4b90b (16:42): Yes.. don't do that. Leave ts=8",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:42): ok",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:42): *copying line above*",
        "4969e383a78d3407b54160eb0de4b90b (16:42): And you can do lots of sets in one go, if you want",
        "4969e383a78d3407b54160eb0de4b90b (16:43): set sw=4 et st",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:43): my vim settings mostly come from <a href=\"http://www.vex.net/~x/python_and_vim.html\">http://www.vex.net/~x/python_and_vim.html</a> regarding tabs/etc :&gt;",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:43): do i use &quot;:&quot; inside the vimrc?",
        "4969e383a78d3407b54160eb0de4b90b (16:44): It's optional. You dno't need to, most people don't.",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:44): ok",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:45): thanks for the url and tips. this is actually exactly what i need :)",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:46): 4xspace indention!",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:47): can i use comments in the vimrc with &quot;#&quot; (So i remember what the diffrent commands does)",
        "4969e383a78d3407b54160eb0de4b90b (16:47): &quot;",
        "4969e383a78d3407b54160eb0de4b90b (16:47): Oddly enough",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:47): ok",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:49): annyone mind posting their vimrc to <a href=\"http://deadbeefbabe.org/paste\">http://deadbeefbabe.org/paste</a> so i can get some quick tips",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:50): LazyAngel: i was thinking that would be better.",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:50): LazyAngel: maybe ask in #python for someones .vimrc :&gt;",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:50): good idea :)",
        "ade2ba280c823b6462a992b994ecd802 (16:50): my .vimrc is scary",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:50): hehe",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:51): LazyAngel: mines setup for python...but i'm not sure how dodgy it is, i'd rather get one off someone experienced in python tbh",
        "4969e383a78d3407b54160eb0de4b90b (16:51): Heh.. why set up .vimrc for any one language?",
        "4969e383a78d3407b54160eb0de4b90b (16:51): Any language-specific things ought to be in :autocmd's anyway",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:52): 'autocmd BufRead,BufNewFile  *.py set'... :&gt;",
        "4969e383a78d3407b54160eb0de4b90b (16:52): No",
        "4969e383a78d3407b54160eb0de4b90b (16:52): autocmd FileType python set ....",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:52): no?",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (16:52): imho they should be in ~/.vim/ftplugin/python.vim",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:52): ahh.",
        "4969e383a78d3407b54160eb0de4b90b (16:52): That way it applies any time you type :set ft=python",
        "4969e383a78d3407b54160eb0de4b90b (16:52): Rather than just for files that happen to be called *.py",
        "4969e383a78d3407b54160eb0de4b90b (16:53): name =&gt; filetype =&gt; options",
        "fe23f5fc3f1162f1b17ab695c9c450eb (16:55): see i'd rather just take someone elses .vimrc :\\",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:55): i see that i have a package in ubuntu that is called: vim-python - Vi IMproved - enhanced vi editor - with Python support",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:55): maybe i should just install that one....",
        "4969e383a78d3407b54160eb0de4b90b (16:56): Er",
        "4969e383a78d3407b54160eb0de4b90b (16:56): No.. that will be vim compiled with the :python command. I.e. the ability to embed the python interpreter within vim",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (16:56): LazyAngel: that allows you to script vim with python",
        "4969e383a78d3407b54160eb0de4b90b (16:56): If you're just wanting a few options, just stick them in your .vimrc and all will be happy",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:56): ok. thats not what i want :P",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (16:57): I bet google has really good .vimrc files with python stuff  *hint*",
        "547a7eaa29c1c29c3ef2fec258ae62be (16:57): hehe",
        "4969e383a78d3407b54160eb0de4b90b (16:58): To be honest, your distro's ftplugin/python.vim  should probably set things up nicely anyway",
        "4969e383a78d3407b54160eb0de4b90b (16:58): Mine does anyway",
        "fe23f5fc3f1162f1b17ab695c9c450eb (17:01): LazyAngel: i suppose we should learn about folds too",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:02): folds?",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:03): I think that if you use vim to program, you should first learn about exuberant ctags and taglist plugin",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:04): ?? taglist",
        "4386b8343ff5d028244db6c3d578d100 (17:04): what's the simplest way to make a single search case insensitive?",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:04): vimgor: taglist",
        "a004ca5550d10c05716d250c1e1389a8 (17:04): the best vim plugin. get it at: <a href=\"http://vim.sourceforge.net/scripts/script.php?script_id=273\">http://vim.sourceforge.net/scripts/script.php?script_id=273</a>",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:04): Adam: /\\cmystring",
        "4386b8343ff5d028244db6c3d578d100 (17:04): shl: thanks",
        "4386b8343ff5d028244db6c3d578d100 (17:05): shlomif: do you use Vim to write Haskell code?",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:06): one more question. on my school, when im in insert mode, backspace doesn't work. only delete. Is there a way to change that? or is that cause of old version of vim?",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:06): Adam: no",
        "4969e383a78d3407b54160eb0de4b90b (17:06): :he 'bsp",
        "98b34620f3506c24830afcaa1279a990 (17:07): Adam: yes, I do.",
        "4386b8343ff5d028244db6c3d578d100 (17:08): shlomif: how do you like the experience, in general and if you can, compared to Emacs?",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:08): E149: Sorry, no help for 'bsp",
        "98b34620f3506c24830afcaa1279a990 (17:08): Adam: editing Haskell in Vim is fine.",
        "98b34620f3506c24830afcaa1279a990 (17:08): Adam: as for editing Haskell in Emacs - I don't know because I never tried and I cannot stand Emacs.",
        "98b34620f3506c24830afcaa1279a990 (17:09): s/tried/tried it/",
        "bbd4aef7b4796cda5643e59a3dfe2ef3 (17:09): LazyAngel: :help fixdel has some info on backspace. not sure it has what you want",
        "2259f65ded2b02851864d15ede8b4eff (17:09): Hi LeoNerd",
        "4386b8343ff5d028244db6c3d578d100 (17:10): rindolf: ah, I see. btw, I asked because Haskell is rumoured to be one of those languages for which Emacs has incomparably great support.",
        "2259f65ded2b02851864d15ede8b4eff (17:10): Adam: really?",
        "2259f65ded2b02851864d15ede8b4eff (17:10): Adam: I know it's a generally accepted truism that you can only edit Lisp and Scheme in Emacs, but I don't think that's the case for Haskell.",
        "4386b8343ff5d028244db6c3d578d100 (17:12): rindolf: theoretically, you can write the ultimate editing mode for Emacs for any programming language, if you take the time and effort to take advantage of its super-customizability",
        "4386b8343ff5d028244db6c3d578d100 (17:12): rindolf: in practice, as elisp (and Emacs itself) is such a pain, *very* few languages get that kind of support.",
        "4386b8343ff5d028244db6c3d578d100 (17:13): Lisp, obviously, and Scheme, and some rumours led me to believe perhaps Haskell as well.",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:14): it wasn't like i thought. My backspace works. but only for the things i write on the same line. eg. write stuff then delete it with backspace. But if i press enter and then go back to the line. i cant use backspace anymore. i guess its kind of a feature",
        "edccab1e1fd32032cbfdcaca4016d051 (17:22): LazyAngel, :he 'backspace",
        "4969e383a78d3407b54160eb0de4b90b (17:23): As I said earlier",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:24): LeoNerd: yupp. but 'bsp didn't work. 'backspace did :P",
        "edccab1e1fd32032cbfdcaca4016d051 (17:24): LeoNerd, it's 'bs, not 'bsp",
        "4969e383a78d3407b54160eb0de4b90b (17:24): Ah :)",
        "4969e383a78d3407b54160eb0de4b90b (17:25): That often gets me, whether the short forms are two or three...",
        "4969e383a78d3407b54160eb0de4b90b (17:25): I keep trying to set 'fc for 'foldcolumn",
        "edccab1e1fd32032cbfdcaca4016d051 (17:25): I like the long options better anyway. They are way more self-explaining.",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:26): this fixed a problem i have had for a year! thanks alot to both of you :)",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:27): time to stop playing with vim and star programming :)",
        "edccab1e1fd32032cbfdcaca4016d051 (17:29): Now that you just became three times more efficient, why not spend some more time on playing? ;-)",
        "547a7eaa29c1c29c3ef2fec258ae62be (17:29): hehe"
    ],
    "person_ids": [
        "547a7eaa29c1c29c3ef2fec258ae62be",
        "fe23f5fc3f1162f1b17ab695c9c450eb",
        "4969e383a78d3407b54160eb0de4b90b",
        "ade2ba280c823b6462a992b994ecd802",
        "bbd4aef7b4796cda5643e59a3dfe2ef3",
        "4386b8343ff5d028244db6c3d578d100",
        "a004ca5550d10c05716d250c1e1389a8",
        "98b34620f3506c24830afcaa1279a990",
        "2259f65ded2b02851864d15ede8b4eff",
        "edccab1e1fd32032cbfdcaca4016d051"
    ]
}