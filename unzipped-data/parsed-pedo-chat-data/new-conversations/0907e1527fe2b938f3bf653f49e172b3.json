{
    "id": "0907e1527fe2b938f3bf653f49e172b3",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (21:12): so... video and Content-Type headers",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:12): are we calling a time of death and requiring well-defined interoperable sniffing?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): i don't even know where to begin to test what browsers do with this",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:17): i searched for a random webm file",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:17): first one i found was text/plain",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:17): that bodes well",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:22): Why does anyone care if browsers sniff here, again?  Other than theoretical purity?  As long as they're not interpreting non-scripted content as scripted . . .",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:24): i'm not aware of any reason other than theoretical purity",
        "ab7faae5d7b250ea8606486575f8f79c (21:25): 88d4d34a8064a4ff39fd5e144eea7762: It helps users who see a &lt;video&gt; that plays, and right-click and say &quot;open in new tab&quot;, and get a load of text/plain garbage displayed instead",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:25): ab7faae5d7b250ea8606486575f8f79c, they can sniff on direct viewing too.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:25): It's a pain, but servers just don't set MIME types right, so . . .",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:25): ab7faae5d7b250ea8606486575f8f79c: they wouldn't get text/plain garbage",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:25): ab7faae5d7b250ea8606486575f8f79c: since we're already sniffing in that case",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:38): I do not think it is &quot;servers that just don't set MIME types right&quot; but more &quot;servers administrators/configuration UIs make it hard for users to add MIME types&quot; (when new stuff is coming).",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:38): Are you saying that users should be required to manually add new MIME types to their server for stuff to work properly?",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:38): That seems undesirable.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:39): People should be able to just dump stuff from FTP and have it work, if possible.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:39): To some extent that's not possible, of course.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:39): i don't really see the point of MIME types for binary data types",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:40): :) FTP is not part of the Web, the failure of mime type on the Web is partly because of that :) but that is a long story.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:40): Maybe we should just officially switch from MIME types to file extensions.  The latter are probably much more reliable for random files . . .",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:40): But for binary types, sniffing is usually fairly easy, if the formats are designed to support it.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:40): I would expect that yes for some hosting platform giving the possibilities for users to set up some mime types might be useful and will distribute the management of issues.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:41): Or you could just not require MIME types to be set up at all.  Practically speaking, why is that not the better solution?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:41): 88d4d34a8064a4ff39fd5e144eea7762: file extensions are as bad as mime types as far as i can tell",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:41): You shouldn't have to know what a MIME type is to put up some video on your website.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:41): possibly worse since the receiver specifies it",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:41): 88d4d34a8064a4ff39fd5e144eea7762, you might want to put things online without file extension.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:41): 69b0d3dfe919a6b860a9fac82de52a7e, they can't be as bad as MIME types, because servers usually base the MIME type on the extension.  At least extensions work without server configuration.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:42): (I'm not talking about stuff that passes through scripts, though.)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:42): cdbe0e8aea85495cfcf22db2db988e7d, well, so then use MIME.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:42): 88d4d34a8064a4ff39fd5e144eea7762, exactly :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:42): But most people use file extensions.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:42): Even for well-known types, it will usually be served with a MIME type that's just inferred from the extension.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:42): whatever solution we use, we definitely want something that the is picked by the sender, not the receiver",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:43): but if you use the bloggers, the tumblr, etc. of this world. You enter in issues on configuration for new mime types such as WebM",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:43): Who are the sender and receiver here?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:43): ideally something that can't be wrong, e.g., defined sniffing for binary data",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:43): Sniffing for binary data can be wrong, see GIFAR.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:44): Maybe it could be mime types config file distribution ala SpamAssassin (sa-update), We could have a mime type update mt-update",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:44): Which people on shared hosting will deploy how?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:44): GIFARs rely on undefined sniffing",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:44): Well, if every binary format chose a unique binary string to prefix the file, then sniffing would always work.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:45): It's too bad that's not a universally-accepted standard.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:45): we don't have a universally-accepted standard :-)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:45): But the cat is out of the bag with JAR anyway, so a WebMAR vulnerability makes no difference at this point.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:45): There is a lot of social engineering which could be put in place to improve the situation (not fixing everything but improving)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:46): Or you could skip the social aspect, acknowledge it's a technical problem, and go with an easy-to-deploy technical solution without demanding special effort from anyone.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:46): Which seems like the best option here.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:47): Although sniffing on a large scale is massively headache-inducing.  I reported a bug to freedesktop.org because it would sniff any file beginning with &quot;--&quot; as a VHDL document.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:47): http://www.w3.org/TR/chips/#gl7",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:47): But in the limited context of a web browser having to figure out how to handle a small number of types, I guess it's feasible.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:47): Yes, great, let's try to resurrect content negotiation.  Have fun with that.",
        "57551cb51d38c51417f5abfeacfb9b13 (21:48): 69b0d3dfe919a6b860a9fac82de52a7e: http://www.w3.org/TR/html401/struct/global.html#h-7.5.3 This distinction doesn't exist in HTML5 right?",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:48): :) we do not have to resurrect it. We already use it :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:48): 57551cb51d38c51417f5abfeacfb9b13, it does, it's just not called that.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:49): Probably because it's confusing, since the same terms are used by CSS.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:49): HTML5 calls them &quot;flow content&quot; and &quot;phrasing content&quot; or something.",
        "57551cb51d38c51417f5abfeacfb9b13 (21:49): 88d4d34a8064a4ff39fd5e144eea7762: specifically, i'm wondering whether it's valid to put block-level elements inside inlines",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:49): 57551cb51d38c51417f5abfeacfb9b13: we have a slightly different distinction",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:49): 57551cb51d38c51417f5abfeacfb9b13, check each element for what its content model is.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:49): It says in the spec what any given element can contain.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:50): cdbe0e8aea85495cfcf22db2db988e7d, for compression options, maybe.  It's not generally used for serving entirely different data formats from the same URL.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:50): 57551cb51d38c51417f5abfeacfb9b13: some elements that used to be &quot;inline&quot; (e.g. &lt;a&gt;) are allowed to contain elements that used to be &quot;block&quot; (e.g. &lt;p&gt;), but as 88d4d34a8064a4ff39fd5e144eea7762 says, best to just look at the spec's content models to get a precise answer.",
        "57551cb51d38c51417f5abfeacfb9b13 (21:51): 69b0d3dfe919a6b860a9fac82de52a7e, 88d4d34a8064a4ff39fd5e144eea7762: thx. we're trying to figure out what sort of rules webkit's editing code should use",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:51): &quot;not generally used&quot; :) generally is important here. Some people are using it ;) Some people do not use it :) that's fine by me.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:51): Content negotiation is used by a few standards diehards as a proof-of-concept, but not actually used by any nontrivial number of production sites.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:51): I will grant that its adoption probably exceeds that of XHTML2, for example.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:52): But by any reasonable metric of success, content negotiation was and is a failure, and it should be treated as such.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:52): wonders why do you hate so much freedom :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:53): Yes, of course, I hate freedom.  Also puppies, and charity.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:53): hands cdbe0e8aea85495cfcf22db2db988e7d some more straw to help him make his strawmen :-)",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:53): puppies!",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:54): what I meant is that it is possible to use it. :) It doesn't hurt anyone. The only thing I wish is that some server config UIs give more freedom to people than just the sys admin.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:55): I have no issues with it, because I roll my own",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:55): but I have control on my server.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:55): It doesn't hurt anyone, but it's a failure, as a standard.  Our goal here is to come up with specs that are not failures.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:55): not everyone has this freedom :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:55): content negotiation does &quot;hurt&quot; people; it costs bytes on every single HTTP transaction",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:55): Therefore we should be citing content negotiation solely as something to avoid.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:55): (that too)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): in general though it's water under the bridge, it's only relevant as a technology from which to learn what mistakes to avoid when making new ones",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): anyway, time to go",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): bbiab",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:56): 88d4d34a8064a4ff39fd5e144eea7762, I guess I'm less\u201a\u00c4\u00b6 hmmm\u201a\u00c4\u00b6 absolutist? (not sure it is the right word)",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:56): &quot;Less interested in making specs that are actually adopted and not just a waste of implementer resources&quot;?",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:58): 88d4d34a8064a4ff39fd5e144eea7762, more on the line of &quot;it is not possible a specification which is 100% perfect&quot; (utopia) and there are some features which are used by minorities which do not necessary create issues for the larger crowd.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:58): It looks like the enum reflection logic in HTML5 is lifted from IE, and not implemented by any other browser at all.",
        "cdbe0e8aea85495cfcf22db2db988e7d (21:59): (*) possible to create",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:00): cdbe0e8aea85495cfcf22db2db988e7d, in this case, the minority is like &lt;0.001% of users/authors, and the effect of content negotiation could be replicated even if it didn't exist.  Implementers do not want to spend their time on such features.  They have limited time, and have more important things to do.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:00): Things that, say, 80% of people will find useful instead of &lt;0.001%.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:01): If an implementer spends time creating your niche feature instead of one that's useful to the majority, then yes, that feature does hurt the majority.",
        "b25b6b77a0087ff8385941e5545d32ea (22:03): Accept-Language has the same problems (hardly used, adds bytes to every request) and also makes user fingerprinting easier",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:03): Accept-Encoding is used in practice, though.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:03): (very widely)",
        "cdbe0e8aea85495cfcf22db2db988e7d (22:03): This will be very hard for discussing because we will turn in a series of useless arguments about new features of the specification which are not implemented at all, or not used at all (in a meaningful way) but still in the spec. :) If we stay on the initial question, we were talking about content negociation which is already implemented.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:04): And it was a waste of time.  We'd all be better off if it had not been implemented (except for encodings, maybe).",
        "cdbe0e8aea85495cfcf22db2db988e7d (22:04): \u201a\u00c4\u00b6",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:05): :)",
        "cdbe0e8aea85495cfcf22db2db988e7d (22:05): repeat repeat the cycle: wash,  rinse and dry. Not sure there is a solution in the discussion. running into circles.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:06): Yep!",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:06): Thankfully, the question is pretty much settled in the WHATWG, and people who disagree can just go off and write their own specs and be ignored.",
        "cdbe0e8aea85495cfcf22db2db988e7d (22:06): is happily using content negociation ;) as long as it is here.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:06): But if you're participating in the WHATWG, then citing content negotiation as anything but a failure is unlikely to convince anyone.",
        "cdbe0e8aea85495cfcf22db2db988e7d (22:08): \u201a\u00c4\u00b6 hmmm. interesting. The only thought I have right now is &quot;Peace&quot;."
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "ab7faae5d7b250ea8606486575f8f79c",
        "cdbe0e8aea85495cfcf22db2db988e7d",
        "57551cb51d38c51417f5abfeacfb9b13",
        "b25b6b77a0087ff8385941e5545d32ea"
    ]
}