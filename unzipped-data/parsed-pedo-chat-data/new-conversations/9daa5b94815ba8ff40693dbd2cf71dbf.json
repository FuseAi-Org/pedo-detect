{
    "id": "9daa5b94815ba8ff40693dbd2cf71dbf",
    "messages": [
        "ea3f8a0223777fdf8d12983027629f14 (14:54): 'seezer' pasted &quot;Segfault&quot;: <a href=\"http://qtnode.net/pastebin/533\">http://qtnode.net/pastebin/533</a>",
        "e5c246c422bf5aeed2dab4c68c680e2b (14:56): heh, nice with a single paste, no comments, nothing",
        "e5c246c422bf5aeed2dab4c68c680e2b (14:56): not even a &quot;please look at this and help me&quot;",
        "e5c246c422bf5aeed2dab4c68c680e2b (14:57): is it just me, or have people asking for help in #qt become more lazy?",
        "e5c246c422bf5aeed2dab4c68c680e2b (14:57): &quot;timer&quot; is never allocated",
        "e5c246c422bf5aeed2dab4c68c680e2b (14:58): SGTimerWidget *timer[]  =&gt;  SGTimerWidget *timer[3];",
        "660939dbcafa75fd43838626a9ec9897 (14:58): chakie_work: nah, sorry",
        "660939dbcafa75fd43838626a9ec9897 (14:58): was talking to a friend on another channel",
        "660939dbcafa75fd43838626a9ec9897 (14:59): and pasted him this.. didn't think about niceguy qtdancer :)",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:00): heh :)",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:00): anyway, my fix should work",
        "660939dbcafa75fd43838626a9ec9897 (15:00): kindof",
        "660939dbcafa75fd43838626a9ec9897 (15:01): tried to make this dynamic",
        "660939dbcafa75fd43838626a9ec9897 (15:01): how would i do that?",
        "660939dbcafa75fd43838626a9ec9897 (15:01): but - let me try. i'm not that lazy ;)",
        "660939dbcafa75fd43838626a9ec9897 (15:01): thanks agani",
        "660939dbcafa75fd43838626a9ec9897 (15:01): *again",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:01): well, allocate the array",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:02): SGTimerWidget *timer[];",
        "660939dbcafa75fd43838626a9ec9897 (15:02): did that (line 0024)",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:03): yes",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:03): but my original fix changed it",
        "660939dbcafa75fd43838626a9ec9897 (15:03): hrm. have to leave for about an hour. cu then",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:05): timer = new SGTimerWidget* [n];",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:06): personally i'd use a QList there",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:06): QList&lt;SGTimerWidget *&gt; timers;",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:06): timers.append ( new SGTimerWidget (blabla) );",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:22): I want to make arrow keys move things around smoothly, not by key events.  Should I make a signal that constantly fires if a key is down, or force the screen to always redraw and poll keyboard input as I do that?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:23): maybe start a QTimer when a key is down and stop when it is released",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:23): the QTimer slot can then do an update() to repaint",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:24): is that reliable?  I don't expect my users to own gaming keyboards, and I know that many keyboards and/or APIs will neglect to send a key-up if you hold down four keys and release them",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:25): considering this should play like a game, I probably want to draw every frame anyway though",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:25): well, that problem will bite you whatever you do",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:25): keyboards are crap",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:25): really?",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:25): yeah",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:25): if the keyboard can't send events for all actions, well, no software can really cope too well",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:26): I know they are, but they're the only thing you can expect all users to own.  If it was my world, everyone would have a playstation controller with a usb adaptor",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:26): when I used SDL, there was a function that just pointed me to an array of boolean key states for all of the keyboard keys",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:26): indexed by their constants",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:26): i think qt handles key up/down events very well",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:27): hm",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:27): guess I'll have to try it and see if I can trick it",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:27): but i haven't really tested in an wasd-game",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:33): hm, okay just attaching a keyPressEvent method to my object doesn't seem to have done anything",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:35): do I have to do more than that?  It worked for mousePressEvent",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:37): qt4?",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:37): yes",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:37): do I have to set up a listener or something?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:38): check <a href=\"http://doc.trolltech.com/4.1/qwidget.html#focusPolicy-prop\">http://doc.trolltech.com/4.1/qwidget.html#focusPolicy-prop</a>",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:38): maybe the widget doesn't get keyboard focus by default",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:38): but shouldn't it get focus after I click on it?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:38): &quot;You must enable keyboard focus for a widget if it processes keyboard events. This is normally done from the widget's constructor. For instance, the QLineEdit constructor calls setFocusPolicy(Qt::StrongFocus).&quot;",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:38): maybe",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:39): try the above",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:39): okay",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:40): whoa that's weird--   with key-repeat enabled it doesn't just repeat downs, it repeats ups right before the downs too",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:41): how do I turn key repeat off?",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:44): do I just throw away stuff for which isAutoRepeat is true, or is there a way I can disable that entirely?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:46): i don't know",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:46): wow, okay, the key events in Qt really are pretty good",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:46): i haven't done custom keyboard handling for ages",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:46): do they seem to work for you?",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:47): when I hold down too many keys and start releasing them, the proper ones release at the proper times, and as soon as I release enough keys, the extra ones I'm holding down that it can't see yet start getting their down events",
        "aab267d05db3d6ad5843d69de13bc4c9 (15:47): the only weird thing I see here is when I release alt I get a -1 keycode..",
        "2a655a0e14a4584229ba4aeef43b9039 (15:49): /dev/null&quot;)",
        "f1efcbbb6833feeade73eb3dd816cede (15:50): exit&quot;)"
    ],
    "person_ids": [
        "ea3f8a0223777fdf8d12983027629f14",
        "e5c246c422bf5aeed2dab4c68c680e2b",
        "660939dbcafa75fd43838626a9ec9897",
        "aab267d05db3d6ad5843d69de13bc4c9",
        "2a655a0e14a4584229ba4aeef43b9039",
        "f1efcbbb6833feeade73eb3dd816cede"
    ]
}