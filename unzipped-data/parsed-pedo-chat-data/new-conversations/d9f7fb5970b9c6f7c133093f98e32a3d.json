{
    "id": "d9f7fb5970b9c6f7c133093f98e32a3d",
    "messages": [
        "18d23e7e3397f5ffebebd0fd268b2446 (01:36): f5af272b5b04154c260eec46f4deb905: have you seen this? http://dvice.com/archives/2011/10/creator-of-css.php",
        "18d23e7e3397f5ffebebd0fd268b2446 (01:36): I think so. :)",
        "f5af272b5b04154c260eec46f4deb905 (01:37): heh",
        "f5af272b5b04154c260eec46f4deb905 (01:38): nice to see blog posts happening in real time regarding CSS working group discussions",
        "f5af272b5b04154c260eec46f4deb905 (01:38): if you want to watch the play-by-play, feel free to join irc://irc.w3.org:6665/css",
        "18d23e7e3397f5ffebebd0fd268b2446 (01:43): f5af272b5b04154c260eec46f4deb905: I totally will! :) thanks",
        "db2cc1c368ad9561e1bbcda07105e8fd (01:46): I'm trying to understand the security concerns surroundng web sockets. mainly I am trying to understand how the current masking solution solves the problem... because as I understand it only the data frames are masked, not the headers, and from the examples I've seen, it seems like the data in the header (i.e. Host and GET) would be enough to launch an attack",
        "6d2cddd61c68e5e8d13a65f218e358f5 (01:58): Hi guys. Quick question... can I do this in Chrome yet...? http://jsfiddle.net/pcUPa/ &lt;- To create an unsigned 32-bit view of the 2D canvas image data Uint8ClampedArray data attribute?",
        "71bd9426656c7068876f52fb7934af7f (02:00): db2cc1c368ad9561e1bbcda07105e8fd: the handshake is a normal http request. the unmasked 'headers' in the protocol frames are a few bytes of binary flags (not http headers). the 'attack' is very ususual, and very unlikely to still be possible with masking",
        "71bd9426656c7068876f52fb7934af7f (02:01): db2cc1c368ad9561e1bbcda07105e8fd: i don't know if that made anything clearer. i can try to answer any questions you have, though",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:04): Any takers for my 2D canvas question? :-s",
        "60bf93d39adcda41e408a3a99b2ecc60 (02:04): so a friend said that people are not using flash fallback for html5 videos anymore. what are people using instead ?",
        "db2cc1c368ad9561e1bbcda07105e8fd (02:06): 71bd9426656c7068876f52fb7934af7f: ah, I think that makes sense... (admittedly, I haven't had a chance to inspect the data with wireshark yet). and the handshake response is not seen by the client, so I guess that prevents any misuse of the handshake response (assuming the proxy were to misinterpret the handshake)",
        "db2cc1c368ad9561e1bbcda07105e8fd (02:06): seen by the attacker, rather",
        "71bd9426656c7068876f52fb7934af7f (02:07): db2cc1c368ad9561e1bbcda07105e8fd: right",
        "db2cc1c368ad9561e1bbcda07105e8fd (02:07): 71bd9426656c7068876f52fb7934af7f: thanks",
        "71bd9426656c7068876f52fb7934af7f (02:08): db2cc1c368ad9561e1bbcda07105e8fd: np",
        "71bd9426656c7068876f52fb7934af7f (02:08): 6d2cddd61c68e5e8d13a65f218e358f5: i see the Uint32Array in chrome dev. i don't think the putImageData call is working",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:10): 71bd9426656c7068876f52fb7934af7f, hmm... maybe it's not creating an ArrayBuffer view that references the original data. Altho' reading the spec, it should.",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:11): http://www.khronos.org/registry/typedarray/specs/latest/",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:11): See the section titled: Overview.",
        "71bd9426656c7068876f52fb7934af7f (02:11): that is my understanding, as well",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:12): Has CanvasPixelArray been replaced w/ Uint8ClampedArray, do you know 71bd9426656c7068876f52fb7934af7f? As the type of the data attribute of the ImageData object.",
        "71bd9426656c7068876f52fb7934af7f (02:13): it is logging as a CanvasPixelArray",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): :-(",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): That'll be why then.",
        "71bd9426656c7068876f52fb7934af7f (02:13): yeah",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): Damn.",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): This has the potential to speed my pixel plotting routine by a factor of four.",
        "71bd9426656c7068876f52fb7934af7f (02:13): is there a version of the canvas 2d context spec that uses Uint8ClampedArray?",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): *speed up",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:13): Yeah, one sec...",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:15): http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#imagedata",
        "71bd9426656c7068876f52fb7934af7f (02:15): thanks",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:19): 71bd9426656c7068876f52fb7934af7f, Would you agree that my logic and understanding, based on the HTML5 spec and the TypedArray spec I just linked, is correct and that, should browser implementers switch from CanvasPixelArray to Uint8ClampedArray, my code should work?",
        "71bd9426656c7068876f52fb7934af7f (02:20): 6d2cddd61c68e5e8d13a65f218e358f5: i think so",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:20): OK dude, ta.",
        "4c681049601b3c374f1d2c0077c99049 (02:44): http://distillery.s3.amazonaws.com/media/2011/10/20/0b8f0560f4454acda5aa79380e80941a_7.jpg",
        "0fe8692be7a494c6561f745b9f3b0d17 (02:45): how do you add to a variable string?",
        "0fe8692be7a494c6561f745b9f3b0d17 (02:45): .= ?",
        "0fe8692be7a494c6561f745b9f3b0d17 (02:45): or is it += ?",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:47): hm, guys",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:47): anyone here knows how opera handles the wildcard * on .appcache files?",
        "6d2cddd61c68e5e8d13a65f218e358f5 (02:47): 0fe8692be7a494c6561f745b9f3b0d17, += will append to a string.",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:47): like chrome and safari, or like firefox?",
        "0fe8692be7a494c6561f745b9f3b0d17 (02:47): gotcha",
        "0fe8692be7a494c6561f745b9f3b0d17 (02:47): thanks 6d2cddd61c68e5e8d13a65f218e358f5",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:47): I know in firefox you cant use */api/file.js",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:47): you can use * as suffix only. not as prefix.",
        "18d23e7e3397f5ffebebd0fd268b2446 (02:48): I'm searching for it on opera's dev docs"
    ],
    "person_ids": [
        "18d23e7e3397f5ffebebd0fd268b2446",
        "f5af272b5b04154c260eec46f4deb905",
        "db2cc1c368ad9561e1bbcda07105e8fd",
        "6d2cddd61c68e5e8d13a65f218e358f5",
        "71bd9426656c7068876f52fb7934af7f",
        "60bf93d39adcda41e408a3a99b2ecc60",
        "4c681049601b3c374f1d2c0077c99049",
        "0fe8692be7a494c6561f745b9f3b0d17"
    ]
}