{
    "id": "185f2f17e753342eba2dca72f8eb43e8",
    "messages": [
        "cc097e0d7183ae8436e7df709553c8c0 (20:31): http://tinyurl.com/2fa6ko - html5 content model sketch",
        "cc097e0d7183ae8436e7df709553c8c0 (20:31): Hixie: ^",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:46): cc097e0d7183ae8436e7df709553c8c0: could you possibly use data URIs for anything more crazy? :)",
        "cc097e0d7183ae8436e7df709553c8c0 (20:46): a11aabeeceeae6b8cb5d12ea06b56554: hmm, how about video? :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:47): cc097e0d7183ae8436e7df709553c8c0: I'll take that as a yes :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:48): hmm. DOM replaceChild has weird argument order",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:49): empty header values are oddly popular.",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:49): (and it's in general weird compared to child.replace(replacement))",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:50): the tiny url doesn't work in Firefox 2",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:50): security?",
        "cc097e0d7183ae8436e7df709553c8c0 (20:50): b8810fee2f4a71f849f3f7409546d1d9: yeah, i never remember what the right order is of the arguments (re replaceChild)",
        "cc097e0d7183ae8436e7df709553c8c0 (20:50): b8810fee2f4a71f849f3f7409546d1d9: wfm in firefox 3",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:51): Saf3/Mac too",
        "6905646aa63b96d6bdfbd256603fa58e (20:52): doesn't work in camino",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:52): doh. I'm missing collapsing-relevant styles on validator.n",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:52): u",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:53): ab7faae5d7b250ea8606486575f8f79c: &lt;http://www.nightwing.com.au/&gt; \u201a\u00c4\u00ee that has a header to outdo all other headers.",
        "6905646aa63b96d6bdfbd256603fa58e (20:54): a11aabeeceeae6b8cb5d12ea06b56554: the empty one?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:54): yeah",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:54): 6905646aa63b96d6bdfbd256603fa58e: we were talking about headers without values earlier",
        "cc097e0d7183ae8436e7df709553c8c0 (20:54): b8810fee2f4a71f849f3f7409546d1d9: now renumbering works correctly",
        "cc097e0d7183ae8436e7df709553c8c0 (20:55): b8810fee2f4a71f849f3f7409546d1d9: aha, was that why renumbering didn't work before?",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:56): cc097e0d7183ae8436e7df709553c8c0: I don't know",
        "cc097e0d7183ae8436e7df709553c8c0 (20:56): b8810fee2f4a71f849f3f7409546d1d9: that would make sense",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:56): cc097e0d7183ae8436e7df709553c8c0: I didn't fix anything else yet in deployment",
        "ab7faae5d7b250ea8606486575f8f79c (20:56): a11aabeeceeae6b8cb5d12ea06b56554: http://krijnhoetmer.nl/irc-logs/whatwg/20071213#l-764 - old news :-p",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:56): ab7faae5d7b250ea8606486575f8f79c: you found that one too. damn.",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:57): my sandbox copy has not O(n) rewritten message grouping but no collapsing",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:57): s/not/now/",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:57): there should probably be collapsing of the locations, too",
        "cc097e0d7183ae8436e7df709553c8c0 (20:58): b8810fee2f4a71f849f3f7409546d1d9: it would be cool (and easy to impl :) ) if the sub lists had the same numbers as they would have when not collapsed, if you're going to do sub lists",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:59): cc097e0d7183ae8436e7df709553c8c0: hmm. I hadn't thought of that but OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:59): If I collapse automatically after grouping, I need to provide an &quot;expand&quot; all feature as well as &quot;ungroup&quot;...",
        "cc097e0d7183ae8436e7df709553c8c0 (21:00): b8810fee2f4a71f849f3f7409546d1d9: it would be a side effect of just moving the &lt;li&gt;s into the sub list. the number also gives a hint about where the problem is in the source",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:00): cc097e0d7183ae8436e7df709553c8c0: ok. I let the outer list be renumbered",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:00): cc097e0d7183ae8436e7df709553c8c0: so the outer list counts the number of different messages",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:00): cc097e0d7183ae8436e7df709553c8c0: and I'll make the inner list items have the ungrouped numbers",
        "cc097e0d7183ae8436e7df709553c8c0 (21:01): b8810fee2f4a71f849f3f7409546d1d9: ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:01): cc097e0d7183ae8436e7df709553c8c0: btw, I use innerHTML as the comparison key to avoid innerText/textContent differences",
        "cc097e0d7183ae8436e7df709553c8c0 (21:02): b8810fee2f4a71f849f3f7409546d1d9: i don't know, perhaps having 1,2,3 on the inner lists are better anyway",
        "cc097e0d7183ae8436e7df709553c8c0 (21:02): b8810fee2f4a71f849f3f7409546d1d9: ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:03): hmm. is the innerHTML getter interoperable in application/xhtml+xml?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:03): wrong question",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:04): does innerHTML in application/xhtml+xml return something stable in each of Firefox/Safari/Opera?",
        "cc097e0d7183ae8436e7df709553c8c0 (21:04): stable as in won't change in the future?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:06): stable as in in the same browser instance return the same string for the same-shaped tree fragment and different strings for different fragments",
        "cc097e0d7183ae8436e7df709553c8c0 (21:06): yes",
        "cc097e0d7183ae8436e7df709553c8c0 (21:07): (unless there's a bug i don't know about)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:07): cc097e0d7183ae8436e7df709553c8c0: I implemented list number keeping. it looks a bit weird. I'm not sure if it is useful or just weird",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:07): cc097e0d7183ae8436e7df709553c8c0: ok. thanks",
        "cc097e0d7183ae8436e7df709553c8c0 (21:07): looks",
        "cc097e0d7183ae8436e7df709553c8c0 (21:07): deployed?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:08): cc097e0d7183ae8436e7df709553c8c0: not yet",
        "cc097e0d7183ae8436e7df709553c8c0 (21:08): ok",
        "cc097e0d7183ae8436e7df709553c8c0 (21:08): i can imagine that it would be weird. feel free to remove it :)",
        "cc097e0d7183ae8436e7df709553c8c0 (21:09): i had in mind that a given error would have the same number regardless of view, but perhaps it's not that useful",
        "cc097e0d7183ae8436e7df709553c8c0 (21:09): so that authors could refer to them. &quot;I don't understand error 16! help!&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:10): cc097e0d7183ae8436e7df709553c8c0: I think I'm leaving it in for a while and see what comments I get on IRC",
        "cc097e0d7183ae8436e7df709553c8c0 (21:11): b8810fee2f4a71f849f3f7409546d1d9: having the outer list not keeping the numbers probably makes the idea collapse, because then you couldn't refer to a specific error that was in the outer list",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:16): cc097e0d7183ae8436e7df709553c8c0: no problem :-) the location of the first error instance is moved to the inner list as well",
        "cc097e0d7183ae8436e7df709553c8c0 (21:17): b8810fee2f4a71f849f3f7409546d1d9: ok. but what about errors that are &quot;alone&quot; and then renumbered (in the outer list)?",
        "cc097e0d7183ae8436e7df709553c8c0 (21:18): or do they also get an inner list?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:21): cc097e0d7183ae8436e7df709553c8c0: they get a single-item inner list",
        "cc097e0d7183ae8436e7df709553c8c0 (21:21): b8810fee2f4a71f849f3f7409546d1d9: aha. then it's all good :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:22): were the WebKit animatable css properties documented somewhere? in particular, will trasitions to and from display: none; be animatable",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:22): ?",
        "82cb86dde89c05087ad792459135907f (21:23): there's a thread in www-style with the proposal",
        "cc097e0d7183ae8436e7df709553c8c0 (21:24): display:none animation would be cool",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:24): 82cb86dde89c05087ad792459135907f: Hyatt's first email doesn't seem to have a list of animatable properties",
        "82cb86dde89c05087ad792459135907f (21:24): oh",
        "82cb86dde89c05087ad792459135907f (21:25): I hope 'display' is not animatable",
        "82cb86dde89c05087ad792459135907f (21:25): that sounds both useless and hard to implement",
        "cc097e0d7183ae8436e7df709553c8c0 (21:25): some js libraries support display:none animation, sort of",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:25): oh, there's a value-based definition of what's animatable",
        "cc097e0d7183ae8436e7df709553c8c0 (21:25): 82cb86dde89c05087ad792459135907f: collapsing things is often animated",
        "82cb86dde89c05087ad792459135907f (21:26): yeah but you can't exactly have a smooth transition from display:block to display:inline",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:26): 82cb86dde89c05087ad792459135907f: when something changes from display: none; to display: block;, it would be cool to have the newly displayed block slide from under the block above",
        "cc097e0d7183ae8436e7df709553c8c0 (21:26): perhaps collapsing annimation can be faked with 'height' animation (with overflow:hidden)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:27): but it kinda sucks to have to use overflow: hidden; height: 0; as a surrogate for display:none",
        "cc097e0d7183ae8436e7df709553c8c0 (21:27): i guess",
        "82cb86dde89c05087ad792459135907f (21:27): not really",
        "cc097e0d7183ae8436e7df709553c8c0 (21:27): a lot of things in css suck :)",
        "82cb86dde89c05087ad792459135907f (21:27): animating to display:none is under-constrained",
        "82cb86dde89c05087ad792459135907f (21:27): which way should the element slide?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:28): I guess whether animating height sucks depends on how well legacy browsers handle overflow: hidden;",
        "82cb86dde89c05087ad792459135907f (21:28): or should it perhaps zoom out from zero size?",
        "82cb86dde89c05087ad792459135907f (21:28): etc",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:28): 82cb86dde89c05087ad792459135907f: I see the problem. but wanting to animate collapsing will be a common case",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:29): 82cb86dde89c05087ad792459135907f: and currently, display:none is the way things are collapsed",
        "ab7faae5d7b250ea8606486575f8f79c (21:31): If I remember correctly, Apple's proposal was for 'animation of CSS properties', which is distinct from 'animation of HTML documents using CSS'",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:32): oh great. more ogg email",
        "ab7faae5d7b250ea8606486575f8f79c (21:33): and so it can't animate nicely between display:block and display:none because there's no intermediate state to animate the property through",
        "ab7faae5d7b250ea8606486575f8f79c (21:33): as a fundamental part of the feature's design",
        "ab7faae5d7b250ea8606486575f8f79c (21:34): (and so you'd need something totally different to get the desired effect)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:44): interesting. in Firefox HTML DOM mode, elements created with createElementNS don't get the DOM uppercasing tagName treatment"
    ],
    "person_ids": [
        "cc097e0d7183ae8436e7df709553c8c0",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "6905646aa63b96d6bdfbd256603fa58e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "82cb86dde89c05087ad792459135907f"
    ]
}