{
    "id": "06576d7e0a13cf713e678db7ca8d7c49",
    "messages": [
        "88d4d34a8064a4ff39fd5e144eea7762 (13:17): 2c39bccd623947fa6224ea57d2a727de, I'm testing some invalid values, but it's hardly comprehensive.  For enums that are limited only to known values, I test the two values &quot;&quot; and &quot;Something that's hopefully not defined here&quot;.",
        "2c39bccd623947fa6224ea57d2a727de (13:23): 88d4d34a8064a4ff39fd5e144eea7762, if it's easy to add I suggest testing &quot;xtext/plain&quot; and &quot;xtext&quot; and &quot;xmultipart&quot; or some such",
        "2c39bccd623947fa6224ea57d2a727de (13:24): 88d4d34a8064a4ff39fd5e144eea7762, if you are building a test suite that is",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:24): 2c39bccd623947fa6224ea57d2a727de, I don't see any extra failures when I do that, on Chrome dev.",
        "2c39bccd623947fa6224ea57d2a727de (13:25): http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cform%20enctype%3D%22xtext%22%3E%3C/form%3E%0A%0A%3Cscript%3E%0A%20w(document.forms[0].enctype)%0A%3C/script%3E",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:25): Hmm.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:25): Yeah, I see it when I test manually.",
        "2c39bccd623947fa6224ea57d2a727de (13:25): gives text/plain rather than application/x-... for me",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:25): double-checks his text code",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:27): s/text/test/",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:27): Oh, whoops.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:27): How silly of me.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:27): I was using .concat() instead of .push().",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:32): There we go.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:32): http://aryeh.name/tests/reflection.html",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:34): thinks his tests might be wrong, though",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:34): will look later",
        "2c39bccd623947fa6224ea57d2a727de (13:34): sweet test suite",
        "ad7340c0d2664b131f969961d78c86b2 (13:35): 2c39bccd623947fa6224ea57d2a727de: did my _idea_ email actually reach the hybi mailing list?",
        "ab7faae5d7b250ea8606486575f8f79c (13:35): ad7340c0d2664b131f969961d78c86b2: http://www.ietf.org/mail-archive/web/hybi/current/msg03269.html ?",
        "2c39bccd623947fa6224ea57d2a727de (13:36): ad7340c0d2664b131f969961d78c86b2, yes",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:36): Yeah, something more is wrong with my enum tests.  I'll look later.",
        "ab7faae5d7b250ea8606486575f8f79c (13:43): http://www.ietf.org/mail-archive/web/hybi/current/msg03233.html - it's good to know that security can be proven from fundamental theorems of computer science and the laws of thermodynamics",
        "2c39bccd623947fa6224ea57d2a727de (13:48): in Opera &lt;button&gt;.type is limited to known values per your test",
        "2c39bccd623947fa6224ea57d2a727de (13:48): in Firefox too",
        "2c39bccd623947fa6224ea57d2a727de (13:48): checks HTML5",
        "2c39bccd623947fa6224ea57d2a727de (13:49): seems your test is wrong",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:51): Anything under the &quot;enum&quot; column is limited to only known values.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:51): Other enumerated attributes reflect as strings, so they're classified as strings.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:51): Yeah, there's something buggy there.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:51): I'll look at it later.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:51): I don't see offhand from the code how it could possibly be expecting anything not on the list of known values.",
        "2c39bccd623947fa6224ea57d2a727de (13:53): it seems to be expecting the input value for some",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:53): Yeah, I dunno why.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:53): Oh, wait.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:53): Dur.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:53): No.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:53): Hmm.",
        "2c39bccd623947fa6224ea57d2a727de (13:55): unsigned long for &lt;canvas&gt; also seems wrong",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:55): In what way?",
        "2c39bccd623947fa6224ea57d2a727de (13:55): or maybe not",
        "2c39bccd623947fa6224ea57d2a727de (13:55): nm",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:56): Browsers are inconsistent on that one.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:56): But unsigned long seems to make the most sense.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:56): var tests = values; &lt;-- Does this mean changes to tests will affect values too, in JavaScript?",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:56): If so, that's my problem.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:57): (then how do I get around it?)",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:57): doesn't know much JS",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:57): Oh, that would explain the infinite loop too.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:57): var tests = values.slice(0)?",
        "2c39bccd623947fa6224ea57d2a727de (13:58): what do you want?",
        "ab7faae5d7b250ea8606486575f8f79c (13:58): 88d4d34a8064a4ff39fd5e144eea7762: &quot;=&quot; just copies the reference, it doesn't deep-copy the data structure",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:59): I want an independent copy.",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:59): .slice(0) seems to work.",
        "ab7faae5d7b250ea8606486575f8f79c (13:59): Like values[:] in Python?",
        "2c39bccd623947fa6224ea57d2a727de (13:59): http://my.opera.com/GreyWyvern/blog/show.dml/1725165 is the first hit on Google that explains this :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (13:59): found that, yeah",
        "88d4d34a8064a4ff39fd5e144eea7762 (14:00): Okay, but now this uncovers the fact that my enum tests are wrong in all sorts of other ways.",
        "88d4d34a8064a4ff39fd5e144eea7762 (14:00): I'll handle that later.",
        "2c39bccd623947fa6224ea57d2a727de (14:01): heh",
        "88d4d34a8064a4ff39fd5e144eea7762 (14:02): I guess I need to handle invalid value defaults and missing value defaults.",
        "88d4d34a8064a4ff39fd5e144eea7762 (14:05): (as well as floats, token lists, and a whole bunch of other TODOs)",
        "2c39bccd623947fa6224ea57d2a727de (14:06): needs to fill his fridge"
    ],
    "person_ids": [
        "88d4d34a8064a4ff39fd5e144eea7762",
        "2c39bccd623947fa6224ea57d2a727de",
        "ad7340c0d2664b131f969961d78c86b2",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}