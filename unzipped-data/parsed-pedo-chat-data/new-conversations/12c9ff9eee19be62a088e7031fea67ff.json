{
    "id": "12c9ff9eee19be62a088e7031fea67ff",
    "messages": [
        "1f8387eb43f131d7c309a90a4e36b5cb (18:34): cc7bcfbc58c467939c5987584fc882cb: No, though you can approximate it using font-size-adjust to force all fonts to size themselves to a particular x-height.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:34): That's often more-or-less what you want.",
        "cc7bcfbc58c467939c5987584fc882cb (18:34): sounds interesting",
        "cc7bcfbc58c467939c5987584fc882cb (18:34): well, in this case i want that the text doesnt exceed some specific maximum width",
        "cc7bcfbc58c467939c5987584fc882cb (18:35): but font-size-adjust sounds better than nothing",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:45): Hm, width?  font-size won't help you much at all there, since character are variable-width.",
        "8b3687499080633e1898fa1dd209ef81 (18:46): 1f8387eb43f131d7c309a90a4e36b5cb, not in Lynx!",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:47): Not in UA-styled &lt;pre&gt; either, but I didn't think I had to mention &quot;unless you're using a fixed-width font&quot;. ^_^",
        "8b3687499080633e1898fa1dd209ef81 (18:47): That'd be logic",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:47): quick question guys, I have an error msg I want displayed on a page that says 'Please select another video' just plain text with a red background",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:47): what tag should I wrap around with?",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:48): p, span, div.. i'm not sure",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:48): I can do all the same with those tags, I just want to know the proper one",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:48): It's a paragraph of text, right?  So...",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:48): it's just text that says 'Please select another video' an error message",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:49): So use &lt;p&gt;.  Or &lt;div&gt;.  Either is fine.",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:49): it's one sentence",
        "8b3687499080633e1898fa1dd209ef81 (18:49): Sounds like a p",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:49): ok thanks",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:50): The rule is: don't overthink your semantics.  Everything's really quite easy.",
        "8b3687499080633e1898fa1dd209ef81 (18:50): ... to #whatwg regulars",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:51): yea, I mean all will do the job I just want to use 'proper' semantics :)",
        "05500b78fe7440a578ac1d6c7d45c3e0 (18:51): but cool I'll try not to overthink",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:51): Nah, it's easy to everyone.  Most people just overthink it.  ^_^",
        "cc7bcfbc58c467939c5987584fc882cb (18:51): 1f8387eb43f131d7c309a90a4e36b5cb, it's the name of the site... it won't change",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:51): When you're splitting hairs between &lt;p&gt; and &lt;div&gt;, you're trying too hard.",
        "cc7bcfbc58c467939c5987584fc882cb (18:52): with font A i'd like to use 97px and with font B i'd rather use 84px (otherwise it wraps)",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:53): Oh, so you specifically want to prevent wrapping.  Ok.",
        "cc7bcfbc58c467939c5987584fc882cb (18:53): at a line height of 100px i'd like to prevent wrapping indeed :&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:54): wants a text-justify-last mode that'll adjust font-size.",
        "8925426ae91d6282f262eb2ee108bdc0 (18:55): does too",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:55): Excellent, I got my SXSW badge.  Now I just have to hope that Housing can find me a room.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:58): I forget.  Do background images print by default?",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:58): I suppose I can test this...",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:00): Answer: Apparently not.  Darn, there went my idea.",
        "8c8837db54a2907cacd8633547977e33 (19:00): a11aabeeceeae6b8cb5d12ea06b56554: assuming webidl or whatever specifies that indexing [0], [1], etc. on NodeList works, the forEach thing should indeed be required by the relevant specs: forEach and all those algorithms are generic, and work on any object with a length property",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:01): 8c8837db54a2907cacd8633547977e33: ES5 explicitly states that forEach has no guaranteed behaviour for host objects",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:01): host objects are the devil.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:02): 8c8837db54a2907cacd8633547977e33: &quot;Whether the forEach function can be applied successfully to a host object is implementation-dependent.",
        "8c8837db54a2907cacd8633547977e33 (19:02): a11aabeeceeae6b8cb5d12ea06b56554: well, sure, but that's not realistic that DOM objects are going to be fully-funky host objects",
        "8c8837db54a2907cacd8633547977e33 (19:02): they are going to behave roughly like normal objects",
        "8c8837db54a2907cacd8633547977e33 (19:02): and webidl will/does say that",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:03): 8c8837db54a2907cacd8633547977e33: Does it? Where?",
        "8c8837db54a2907cacd8633547977e33 (19:03): a11aabeeceeae6b8cb5d12ea06b56554: if it doesn't, it should/will -- you can't possibly believe webidl would leave unspecified the behavior of elt.childNodes[i]",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:04): 8c8837db54a2907cacd8633547977e33: It defines that, but by my reading of ES5 that's not enough to require it be possible to use with forEach",
        "8c8837db54a2907cacd8633547977e33 (19:04): spec wonk cagefight!",
        "8c8837db54a2907cacd8633547977e33 (19:05): eh, maybe",
        "8c8837db54a2907cacd8633547977e33 (19:05): real world will dictate otherwise",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:05): 8c8837db54a2907cacd8633547977e33: Like, as far as I can tell, there's no guarantee any host object will work, even if [[Get]] and [[HasProperty]] are defined for it",
        "8c8837db54a2907cacd8633547977e33 (19:06): a11aabeeceeae6b8cb5d12ea06b56554: well, by this measure the entire DOM is unsound",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:06): 8c8837db54a2907cacd8633547977e33: meh, I'd just rather specs required what works in the real world, as soon enough the real world will require stuff that isn't required in specs",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:06): 8c8837db54a2907cacd8633547977e33: indeed",
        "8c8837db54a2907cacd8633547977e33 (19:06): why exactly ES5 specifically calls this out I don't know, rather than just letting the algorithm stand",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:07): (and then you're back to reverse-engineering what works in the competition\u201a\u00c4\u00b6)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:07): 8c8837db54a2907cacd8633547977e33: Because ES5 calls out that host objects can do anything, so informatively notes everywhere that x isn't guaranteed to work with host objects",
        "8c8837db54a2907cacd8633547977e33 (19:08): well, yes",
        "8c8837db54a2907cacd8633547977e33 (19:08): but you could imply that by all the [[Get]]s and [[Call]]s already",
        "8c8837db54a2907cacd8633547977e33 (19:08): so it's redundant",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:09): But then there's an ambiguity as to whether the behaviour of forEach with a host object first argument must follow that algorithm, because the host object doesn't have to follow the normal rules for objects, no?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:10): isn't a particular fan of the host object exemption from almost everything",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:10): Like I'd much rather there were a few specific places where host objects were allowed to do anything.",
        "8c8837db54a2907cacd8633547977e33 (19:11): how is there ambiguity about whether it should follow the algorithm, absent that implementation-defined statement?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:12): 8c8837db54a2907cacd8633547977e33: Hmm, yeah, I guess there isn't (I misremembered what one of the general host object exemptions said)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:13): I guess MS may have previously (to IE9) wanted host objects to be free to act differently in a lot of places due to their DOM impl in IE&lt;9",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:13): Apart from that I can't think of any pressure from browser vendors to keep it undefined",
        "cc7bcfbc58c467939c5987584fc882cb (19:24): 1f8387eb43f131d7c309a90a4e36b5cb, now that i think about it... a viewbox'd svg would work fine for this",
        "cc7bcfbc58c467939c5987584fc882cb (19:32): on a third thought... bad idea since text isn't an element which establishes a viewport :l",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:51): ok I got another question, what tag should i use for a refresh button &quot;it'll become an icon using CSS&quot;? A span, a tag, or button tag or something else?",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:51): If it's a refresh button, use a &lt;button&gt;.  Easy.  ^_^",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:52): You can style &lt;button&gt;s to remove all the default appearance.",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:52): why not a &lt;a&gt; tag?",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:52): example: &lt;a class=&quot;refresh_btn&quot;&gt;&lt;/a&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:53): That's acceptable too, sure, as long as it doesn't have any side-effects (you shouldn't ever submit a form using &lt;a&gt; and js, for example).",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:54): I'll point back to my previous advice: don't overthink it.",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:54): I'm not submitting though, I'm refreshing",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:54): I know, I just curios as to why not use something versus using it",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:54): If it would be acceptable for a spider to follow the link, then &lt;a&gt; is fine.  So is &lt;button&gt;.",
        "05500b78fe7440a578ac1d6c7d45c3e0 (19:55): alright that's helpful",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:56): Jeezus, I *really* hate whoever release a new botting tool for Twitter over the weekend."
    ],
    "person_ids": [
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "cc7bcfbc58c467939c5987584fc882cb",
        "8b3687499080633e1898fa1dd209ef81",
        "05500b78fe7440a578ac1d6c7d45c3e0",
        "8925426ae91d6282f262eb2ee108bdc0",
        "8c8837db54a2907cacd8633547977e33",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}