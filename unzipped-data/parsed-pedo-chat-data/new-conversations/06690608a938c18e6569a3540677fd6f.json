{
    "id": "06690608a938c18e6569a3540677fd6f",
    "messages": [
        "cc097e0d7183ae8436e7df709553c8c0 (14:57): b8810fee2f4a71f849f3f7409546d1d9: itemprop=&quot;http://example.org/foo/#&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:57): cc097e0d7183ae8436e7df709553c8c0: don't do that :-)",
        "2c39bccd623947fa6224ea57d2a727de (15:12): cc097e0d7183ae8436e7df709553c8c0, how does &lt;frameset onload&gt; work when there's multiple framesets?",
        "2c39bccd623947fa6224ea57d2a727de (15:12): come to think of it, that question applies to &lt;body onload&gt; too",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:14): what boxes did I miss? http:/ b8810fee2f4a71f849f3f7409546d1d9.iki.fi/web-stack/",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:15): I notice I don't have Atom or RSS there, but they aren't involved when content is loaded into a browsing context",
        "2c39bccd623947fa6224ea57d2a727de (15:18): browsers do implement the sniffing rules so they sort of are",
        "a11aabeeceeae6b8cb5d12ea06b56554 (15:19): Yeah, but nothing else really does",
        "a11aabeeceeae6b8cb5d12ea06b56554 (15:19): Most feed readers ignore content-type",
        "cc097e0d7183ae8436e7df709553c8c0 (15:21): 2c39bccd623947fa6224ea57d2a727de: the body or frameset element (or window object) that gets the attribute set last overrides",
        "2c39bccd623947fa6224ea57d2a727de (15:23): also when the element is not inserted yet?",
        "2c39bccd623947fa6224ea57d2a727de (15:23): wonders if this is defined",
        "cc097e0d7183ae8436e7df709553c8c0 (15:24): 2c39bccd623947fa6224ea57d2a727de: yep. the spec just says &quot;... and with corresponding content attributes and DOM attributes exposed on the body element&quot;",
        "cc097e0d7183ae8436e7df709553c8c0 (15:24): (which should say &quot;body and frameset elements&quot;)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:26): when the attribute is set, it overrides the element's ownerDocument's window.onload",
        "2c39bccd623947fa6224ea57d2a727de (15:26): seems weird for non inserted elements to have an effect",
        "cc097e0d7183ae8436e7df709553c8c0 (15:27): points at topic",
        "2c39bccd623947fa6224ea57d2a727de (15:27): meh",
        "b25b6b77a0087ff8385941e5545d32ea (15:33): b8810fee2f4a71f849f3f7409546d1d9: It is not quite obvious why HTML, SVG, etc. are one side or the other of DOM",
        "b25b6b77a0087ff8385941e5545d32ea (15:34): (they should sit inside DOM in some sense)",
        "ab7faae5d7b250ea8606486575f8f79c (15:35): Does anyone have cross-document cross-references that aren't referring to HTML5?",
        "b25b6b77a0087ff8385941e5545d32ea (15:36): ab7faae5d7b250ea8606486575f8f79c: You, surely?",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): b25b6b77a0087ff8385941e5545d32ea: I don't have any cross-references like that",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): I just have links",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): which, uh, I suppose are kind of cross-references",
        "ab7faae5d7b250ea8606486575f8f79c (15:38): presumes there's some good reason to have special syntax rather than just using &lt;a href&gt; everywhere",
        "2c39bccd623947fa6224ea57d2a727de (15:39): yeah, from XHR2 to CORS",
        "2c39bccd623947fa6224ea57d2a727de (15:39): HTML5 will have those too",
        "2c39bccd623947fa6224ea57d2a727de (15:39): well, might",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:58): b25b6b77a0087ff8385941e5545d32ea: they sit on top of the DOM",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:00): considers putting Unicode under everything but bitmaps and video",
        "b25b6b77a0087ff8385941e5545d32ea (16:03): b8810fee2f4a71f849f3f7409546d1d9: In what sense?",
        "b25b6b77a0087ff8385941e5545d32ea (16:03): (It depends what you mean by HTML, SVG, etc.)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:04): b25b6b77a0087ff8385941e5545d32ea: in the sense HTML5 is a DOM language",
        "467f6d43402c6573237052cefcc252db (16:04): ab7faae5d7b250ea8606486575f8f79c, the reason is not having to type &lt;a href&gt; everywhere",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:04): b25b6b77a0087ff8385941e5545d32ea: and MathML, SVG and ARIA are in implementation practice, too",
        "ab7faae5d7b250ea8606486575f8f79c (16:05): 467f6d43402c6573237052cefcc252db: Typing &lt;a href&gt; doesn't seem like a great burden",
        "b25b6b77a0087ff8385941e5545d32ea (16:05): b8810fee2f4a71f849f3f7409546d1d9: Sure. I think it is a bit confusing though, especially if you don't already have that wordview. In particular if you view HTML as a stream of bytes",
        "ab7faae5d7b250ea8606486575f8f79c (16:05): 467f6d43402c6573237052cefcc252db: but I guess typing the content of the href does",
        "ab7faae5d7b250ea8606486575f8f79c (16:06): b25b6b77a0087ff8385941e5545d32ea: I thought the diagram was meant to represent how things are, rather than how some people misunderstand them to be",
        "b25b6b77a0087ff8385941e5545d32ea (16:08): ab7faae5d7b250ea8606486575f8f79c: If the goal is to educate those people then doing so in a way that causes confusion is not the best approach",
        "b25b6b77a0087ff8385941e5545d32ea (16:09): b8810fee2f4a71f849f3f7409546d1d9: Also, events are generally not exposed directly to the user",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:10): b25b6b77a0087ff8385941e5545d32ea: what should I have between Events and the User?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:10): considers being politically incorrect and using labels Ogg and Theora",
        "b25b6b77a0087ff8385941e5545d32ea (16:10): b8810fee2f4a71f849f3f7409546d1d9: Javascript :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:10): perhaps adding WAV and PCM",
        "b25b6b77a0087ff8385941e5545d32ea (16:11): (Events seems to live within js/dom)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:11): b25b6b77a0087ff8385941e5545d32ea: having JS between user and events doesn't seem right",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:11): should I put mouse/keyboard there?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:11): USB?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:11): gotta go",
        "b25b6b77a0087ff8385941e5545d32ea (16:12): Oh, I see. I wasn't thinking of the flow of information going that way",
        "b25b6b77a0087ff8385941e5545d32ea (16:12): Since it goes the opposite way everywhere else",
        "b25b6b77a0087ff8385941e5545d32ea (16:12): (this is the problem with the &quot;stack&quot; concept)",
        "ab7faae5d7b250ea8606486575f8f79c (16:13): Human Interface Devices?",
        "467f6d43402c6573237052cefcc252db (16:13): it's much more a graph than stack",
        "ab7faae5d7b250ea8606486575f8f79c (16:13): realises that he doesn't know how to parse XML in Perl",
        "ab7faae5d7b250ea8606486575f8f79c (16:14): (except using XML::Simple, which is no good for parsing XHTML)",
        "ab7faae5d7b250ea8606486575f8f79c (16:15): Hmm, I wonder if XML::LibXML is sane",
        "ab7faae5d7b250ea8606486575f8f79c (16:18): Hmm, it seems to hang when parsing",
        "ab7faae5d7b250ea8606486575f8f79c (16:19): Oh, great, it's trying to download a zillion XHTML module DTDs",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:19): EPIC FAIL.",
        "b25b6b77a0087ff8385941e5545d32ea (16:20): ab7faae5d7b250ea8606486575f8f79c: Surely you can turn that off?",
        "ab7faae5d7b250ea8606486575f8f79c (16:20): b25b6b77a0087ff8385941e5545d32ea: I can once I know it's going to be doing that",
        "ab7faae5d7b250ea8606486575f8f79c (16:20): apologies to the w3.org server hosting people for accidentally contributing to the DDOS against them",
        "ab7faae5d7b250ea8606486575f8f79c (16:21): *apologises"
    ],
    "person_ids": [
        "cc097e0d7183ae8436e7df709553c8c0",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "2c39bccd623947fa6224ea57d2a727de",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "467f6d43402c6573237052cefcc252db"
    ]
}