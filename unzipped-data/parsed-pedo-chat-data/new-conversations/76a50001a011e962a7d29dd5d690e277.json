{
    "id": "76a50001a011e962a7d29dd5d690e277",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (00:03): JohnResig, yt?",
        "f139aba52f9fa1394b4034a7954b2220 (00:07): I'll respond to your mail in more detail later, but I think you've failed to see just how flexible my proposal for selectors api actually is. In fact, it seems to address most, if not all, of your needs for the API, including scoped selectors and collective queries on node lists",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:20): Jeezus, it seems 1 in 5 sites on the web use jQuery.  Of the ones that actually use js, 1 in 3 are using jquery.  (I guess that means 60% of all sites on the web are using js in some way?)",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:44): 1f8387eb43f131d7c309a90a4e36b5cb, I'd believe that 1 in 5 web page *views* use jQuery, but there's a *really* long tail if you count by sites.",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:45): I'm just going by the stats cited by Resig &amp; co during some recent talks.",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:45): So that may be views, dunno.",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:46): And yeah, given the number of pages 69b0d3dfe919a6b860a9fac82de52a7e bandies about (1 trillion), that's a *very* long tail.",
        "f5af272b5b04154c260eec46f4deb905 (00:46): pages != views",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:47): But then again, sites != pages either.",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:48): http://ejohn.org/blog/talks-at-the-2009-jquery-conference/  &quot;State of jQuery '09&quot;, slide 16",
        "4d05dc3c4352ebe7593b536f2078cfe9 (01:01): i kind of doubt a source like http://trends.builtwith.com/",
        "4d05dc3c4352ebe7593b536f2078cfe9 (01:01): I can't find a description of the process to gather such data",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:03): Well, it looks like they're only covering 3M sites, so I suppose we're mainly talking stuff you can access relatively easily with a spider.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:05): They do make very pretty pie charts, though, so obviously you can trust them.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:11): ok next participant",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:11): this one apparently uses vim(1)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:11): which is promising",
        "ab7faae5d7b250ea8606486575f8f79c (01:11): Burn him/her!",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:12): better than frontpage!",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:12): 69b0d3dfe919a6b860a9fac82de52a7e: do they bring their own laptop or .vimrc (or whatever the pref file is called)?",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:13): just uses a normal text editor.",
        "ab7faae5d7b250ea8606486575f8f79c (01:13): 1f8387eb43f131d7c309a90a4e36b5cb: 5% of pages in the dotnetdotcom sample have &lt;script src=&quot;*jquery*&quot;&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (01:13): which is a long way from 20%",
        "ab7faae5d7b250ea8606486575f8f79c (01:13): (though still quite a lot)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:13): b8810fee2f4a71f849f3f7409546d1d9: nah, we make them use some random text editor",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:13): ab7faae5d7b250ea8606486575f8f79c, shrug.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:13): i forget what it's called",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:13): TextEdit2 or something",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:13): I see",
        "ab7faae5d7b250ea8606486575f8f79c (01:14): 1f8387eb43f131d7c309a90a4e36b5cb: (and about 70% use &lt;script src&gt;)",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:14): I just wish emacs didn't use elisp.  I can't program in elisp.",
        "ab7faae5d7b250ea8606486575f8f79c (01:14): (regardless of value)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:14): apparently this participant has read some press articles about html5 and likes &lt;header&gt; because it means she doesn't have to use &lt;div&gt;s with class=&quot;&quot;es anymore",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:14): Yay for intended consequences!",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:20): she describes microdata as a simpler solution than xslt, which she called &quot;annoying&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:20): Smart participant.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:21): i'm not sure whether to be offended that she likened something i worked on to XSLT, or whether to be happy she called XSLT annoying unprompted, or...",
        "ab7faae5d7b250ea8606486575f8f79c (01:27): I think microdata is a simpler solution than an internal combustion engine, which is big and noisy",
        "ab7faae5d7b250ea8606486575f8f79c (01:28): Not sure they're solutions to the same problem, though",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): well her point was that you would use microdata instead of writing the data in xml and translating it to HTML",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): which isn't exactly right",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): but could be right depending on exactly what she's doing",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:29): The use of XSLT to transform a page into the embedded data, or vice versa, is the equivalent use.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): like if she's exposing XML and using XSLT to get data out",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): she's actually reading the documentation, i'm shocked",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:30): clearly she's not representative of normal authors :-P",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:30): With Microdata you'd just encode things then throw a generic parser, rather than building an XSLT script to pull the info out.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): wooo, she actually got as far as reading about itemfor=&quot;&quot; and actually understood it!",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:31): Heh.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): she's doing vocabulary 001, and so far she's confused about the way item=&quot;&quot; takes a type",
        "62e4527eccd82b7072b1558747adee7d (01:32): Yeah, that is kind of confusing.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:32): I think that confused me a bit, too.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:32): Heh.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:32): That's 3 votes against, 69b0d3dfe919a6b860a9fac82de52a7e.  ^_^",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): yeah i think we're going to go with renaming item=&quot;&quot; to itemtype=&quot;&quot;, make it optional, and use itemscope=&quot;&quot; from proposal 003",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): also maybe we'll change itemfor=&quot;&quot; to just referring in the other direction",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): like sicking suggested",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): using &lt;ref&gt; or something",
        "62e4527eccd82b7072b1558747adee7d (01:33): Other direction? I missed this suggestion.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:34): sicking thinks' it's confusing that the stranded data uses @itemfor to point to its parent, rather than the parent pointing to the stranded data.",
        "62e4527eccd82b7072b1558747adee7d (01:34): Hmm. Interesting.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:34): s/its parent/its Microdata parent, as opposed to its DOM parent/",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:34): instead of &lt;div itemscope id=a&gt;&lt;/div&gt; &lt;span itemfor=a itemprop=name&gt;value&lt;/span&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:34): we would have",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:34): &lt;div itemscope&gt;&lt;itemref ref=b/&gt;&lt;/div&gt; &lt;span id=b itemprop=name&gt;value&lt;/span&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:35): That would allow a single piece of data to be a part of multiple items.  Is that intended?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:35): it would",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:35): And would, in fact, bring back the full power of an DAG.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:35): i think that would be fine",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:36): ROFL she complained about &lt;i&gt; being in the example",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:36): &quot;isn't that deprecated!&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:36): Totally not a typical author.  ^_^",
        "62e4527eccd82b7072b1558747adee7d (01:36): She sounds like she's pretty up on her standards...",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:36): well except for &lt;i&gt; not being deprecated ever :-P",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:37): If you can make a DAG, isn't the only thing left preventing Microdata from collapsing into RDF just the ability to make blank nodes or whatever?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:37): 1f8387eb43f131d7c309a90a4e36b5cb: you can make blank nodes today",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:37): Really?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:37): 1f8387eb43f131d7c309a90a4e36b5cb: just don't include an &quot;about&quot; itemprop",
        "ab7faae5d7b250ea8606486575f8f79c (01:37): 1f8387eb43f131d7c309a90a4e36b5cb: There's also the lack of types",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:37): Oh.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:38): yeah no per-value data types is another difference",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:38): k.",
        "62e4527eccd82b7072b1558747adee7d (01:38): I don't think that it's bad to increase the flexibility of what you can construct, as long as that complexity is not necessary for your average usecase.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:38): 62e4527eccd82b7072b1558747adee7d: Yeah, I'm not saying anything against it.  I just think it's funny that this syntax is *just* below being equivalent to RDFa, and yet way easier to understand.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:39): thinks that &lt;itemref&gt; may in fact be easier to understand after all.",
        "ab7faae5d7b250ea8606486575f8f79c (01:39): But maybe much more verbose for expressing certain graphs",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:39): ab7faae5d7b250ea8606486575f8f79c, maybe.  I'd need to see examples.",
        "62e4527eccd82b7072b1558747adee7d (01:40): A whole new element &lt;itemref&gt; just for linking items to their properties? What about &lt;link href=&quot;#b&quot;&gt; instead?",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:40): Well, there's a certain benefit in maintaining the &quot;item&quot; prefix.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:42): 69b0d3dfe919a6b860a9fac82de52a7e: If you're going to make @itemtype to hold the type, then I prefer just plain @item as the scope signal.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): 1f8387eb43f131d7c309a90a4e36b5cb: people seem to be confused with the item=&quot;&quot; attribute",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:44): How much confusion is from @item itself, and how much from @item also acting as the type specifier?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): 1f8387eb43f131d7c309a90a4e36b5cb: and we have one data point (not enough) suggesting itemscope=&quot;&quot; is clearer",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): 1f8387eb43f131d7c309a90a4e36b5cb: well they got confused with it in both examples that had an item=&quot;&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): 1f8387eb43f131d7c309a90a4e36b5cb: so item=&quot;...id...&quot; and item=&quot;...type...&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): both confused them",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:45): has to go look up what item=&quot;id&quot; means again.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): that's variant 002",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): equivalent of itemprop=&quot;about&quot; in the spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:46): equivalent of itemprop=&quot;itemid&quot; in proposals 001 and 003",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:46): (we found &quot;about&quot; confused the heck out of people)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:46): (&quot;itemid&quot; so far is faring better, though we don't have much data on that)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:46): hm, this participant is being confused by having itemprop=&quot;&quot; values that are URLs",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:47): she thinks they're links to the values, rather than unique property names",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:48): Yah, I think that's going to be inevitable some of the time.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:50): Hmm, I can't find itemprop=about in the spec.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:52): http://www.whatwg.org/specs/web-apps/current-work/#md-about",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:53): Gotcha.  That's hidden.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:53): And yeah, I can see how it would be confusing.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:53): everyone is making up their own property names",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:54): despite us pointing them to a list of predefined vocabulary terms",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:54): i guess that won't be such a problem if they just copy-paste from tutorials",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:06): derives deep joy from crafting a tool that is really easy to use and useful.",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:06): ooh, interesting. she prefers itemscope=&quot;&quot; too.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:07): Hmm."
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "f5af272b5b04154c260eec46f4deb905",
        "4d05dc3c4352ebe7593b536f2078cfe9",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "62e4527eccd82b7072b1558747adee7d"
    ]
}