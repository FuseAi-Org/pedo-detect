{
    "id": "9bae636ffb3307b155503bf9feefb046",
    "messages": [
        "50d5d5366b999474e3ccdd043c64e7ab (03:34): hi das_netz",
        "400c558f848b122b0980f509f9c9ca69 (03:34): cplusplus, hi",
        "50d5d5366b999474e3ccdd043c64e7ab (03:34): wie gehts?",
        "400c558f848b122b0980f509f9c9ca69 (03:35): cplusplus, im mexican",
        "400c558f848b122b0980f509f9c9ca69 (03:35): cplusplus, but my nick its german",
        "50d5d5366b999474e3ccdd043c64e7ab (03:35): ah;)",
        "50d5d5366b999474e3ccdd043c64e7ab (03:35): why?",
        "400c558f848b122b0980f509f9c9ca69 (03:35): cplusplus, why im not found my nick in spanish... for my email",
        "50d5d5366b999474e3ccdd043c64e7ab (03:36): hm",
        "7780ad7003f15ffc3b31177513eac4f9 (03:38): das_netz: are you near Morelia?",
        "400c558f848b122b0980f509f9c9ca69 (03:39): nuge, no... im live in Chiapas",
        "7780ad7003f15ffc3b31177513eac4f9 (03:39): ok",
        "400c558f848b122b0980f509f9c9ca69 (03:39): near... but the commander marcos",
        "cdf4ad80dc66a41f951abab3fde0d774 (03:42): I have to find that pleasantly amusing. :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (03:42): A German speaker and a Mexican conversing in English. Hooray for the common language.",
        "50d5d5366b999474e3ccdd043c64e7ab (03:56): ahigerd do you know Qhttp?",
        "cdf4ad80dc66a41f951abab3fde0d774 (03:57): I've worked with it",
        "50d5d5366b999474e3ccdd043c64e7ab (04:01): <a href=\"http://www.rafb.net/paste/results/ubJL5K93.html\">http://www.rafb.net/paste/results/ubJL5K93.html</a>",
        "50d5d5366b999474e3ccdd043c64e7ab (04:01): hmm..QObject::connect: Cannot queue arguments of type 'qint64'",
        "50d5d5366b999474e3ccdd043c64e7ab (04:15): hmmmmmmmmmm",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:18): Register it with QMetaObject?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:18): ?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:19): That's how you make connect able to queue new data types.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:19): Something like qRegisterMetaType",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:19): There's info on the wiki",
        "50d5d5366b999474e3ccdd043c64e7ab (04:21): i dont use queue",
        "50d5d5366b999474e3ccdd043c64e7ab (04:22): hm",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:23): Are you emitting signals across threads?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:23): yes",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:23): Then they're queued.",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:24): I still don't get it, ahigerd.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:24): Zola: ?",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:24): &lt;ahigerd&gt; Zola: The debug{ and release{ blocks in qmake are for, for example, changing which libraries you want to include for each build.",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:24): like I said earlier, everything I put in debug{ is being used when I build release",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:24): Oh. I missed that. Strange.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:24): Don't know, then. I haven't had need for it.",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:24): it was like that the last time I used Qt too",
        "50d5d5366b999474e3ccdd043c64e7ab (04:25): <a href=\"http://www.rafb.net/paste/results/JanF5B47.html\">http://www.rafb.net/paste/results/JanF5B47.html</a>",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:25): ahigerd: so you can't just put separate options into debug{ and release{ ?",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:25): I don't understand the purpose of them",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (04:25): blockd: could you possibly mind RAFB'ing a minimal example of what you said?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:26): Zola: I'm sure there's some logical use for them. I just haven't had need for them, so I don't know how.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:26): ahigerd...hm dont know whats wrong;/",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:26): cplusplus: This 4.x?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:27): 4.1.3",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:27): k",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:29): cplusplus: I don't think I understand what you're trying to accomplish.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:30): just sending get and post request from a thread",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:30): Two questions...",
        "50d5d5366b999474e3ccdd043c64e7ab (04:30): yeah?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:31): Actually, one question.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:31): Why?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:31): QHttp is asynchronous.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:31): You don't need threads.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:31): And in fact it works better if you DON'T use a thread.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:32): some more code: <a href=\"http://www.rafb.net/paste/results/ODgL3c38.html\">http://www.rafb.net/paste/results/ODgL3c38.html</a>",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:32): Sure, so why are you using a thread? QHttp doesn't block on requests.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:33): i cant give all the code into the on_Start_pressed function?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:33): Not very easily.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:33): that was the reason",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:33): You should have it start the request and use the finished signal to trigger the next step.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:34): thats what i did;)",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:34): You can SIMULATE blocking behavior by using my QSignalWaiter class but it's far cleaner to use the signals and slots the way they're intended.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:36): what should i try to do now?hm",
        "ea3f8a0223777fdf8d12983027629f14 (04:36): 'blockd' pasted &quot;Zola: an example&quot;: <a href=\"http://qtnode.net/pastebin/957\">http://qtnode.net/pastebin/957</a>",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:36): cplusplus: Use a QBuffer as the QIODevice for the response data, then when the finished signal is emitted, handle it and start your next request.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:37): QBuffer..hm",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:37): It's a QIODevice for a QByteArray",
        "50d5d5366b999474e3ccdd043c64e7ab (04:39): little sample?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:41): Well, you see QHttp::request() has a QIODevice*to parameter?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:42): yeah",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:42): Use a QBuffer in it and the response from the request will be stored in it.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:42): And that makes the requestFinished() signal work",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:43): post() works for that too, I think",
        "50d5d5366b999474e3ccdd043c64e7ab (04:43): QString str(&quot;qID=14&amp;answer=2&quot;); QByteArray postdata_answere(str.utf8()); httpGetId = http_answere.request(header_answere, postdata_answere); ?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:45): Looks good to me, add the QBuffer",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:45): If you need the return value",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:45): Er, that is, the data from the server",
        "50d5d5366b999474e3ccdd043c64e7ab (04:45): QBuffer for what?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:47): cplusplus: It'll contain the web page you requested",
        "50d5d5366b999474e3ccdd043c64e7ab (04:47): hm",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:47): You can use a QFile to store it directly to disk",
        "50d5d5366b999474e3ccdd043c64e7ab (04:47): no",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:47): Or for what it's worth you could relay it with QTcpSocket.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:47): Just listing possibilities.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:47): could i store it in QBuffer?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:48): The web page? Yeah, that's what I'm saying.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:48): following line fails: QByteArray postdata_answere(str1.utf16());",
        "50d5d5366b999474e3ccdd043c64e7ab (04:48): utf16 return ushort",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:50): Um... Is that a Boost string class or something?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:50): sry: toUtf8 is right",
        "50d5d5366b999474e3ccdd043c64e7ab (04:51): no i just use boost::thread",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:51): Okay.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:51): So why DOESN'T it work...?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:51): no",
        "50d5d5366b999474e3ccdd043c64e7ab (04:52): i just get the first response of the server",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:52): Okay, so what's wrong?",
        "50d5d5366b999474e3ccdd043c64e7ab (04:52): hm",
        "44f76762d837de6adc8900ece7ab6b7b (04:55): How does a QWidget's geometry() get determined if it has no layout within it and no sizeHint?",
        "44f76762d837de6adc8900ece7ab6b7b (04:55): like say I add a bunch of children to it... how does its geometry get determined?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:56): Um... I think it just sits there at whatever size it was when it was created.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:56): Some small rectangular size.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:56): I wouldn't assume anything.",
        "44f76762d837de6adc8900ece7ab6b7b (04:56): ahigerd: arbitrary or is the size driven by perhaps the smallest rectangle that bounds its children?",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:56): Arbitrary, I think.",
        "cdf4ad80dc66a41f951abab3fde0d774 (04:56): But you may be right about the rectangle. Worth testing.",
        "44f76762d837de6adc8900ece7ab6b7b (04:57): yeah... I might do that.",
        "50d5d5366b999474e3ccdd043c64e7ab (04:59): ahigerd i doesnt work without any threads...hm",
        "50d5d5366b999474e3ccdd043c64e7ab (04:59): crazy",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:00): How do you mean?",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:00): What doesn't work?",
        "50d5d5366b999474e3ccdd043c64e7ab (05:01): fuck;//////////",
        "50d5d5366b999474e3ccdd043c64e7ab (05:02): <a href=\"http://www.rafb.net/paste/results/vxE9HI40.html\">http://www.rafb.net/paste/results/vxE9HI40.html</a>",
        "761915dbec11116b1f621aa274bfa404 (05:06): hrm. I want something like QTextEdit.insertAt(), but without modifying the selection :\\",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:07): Can you just store the selection and restore it after the insert?",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:08): does Qt have unbuffered key input?",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:08): Zola: keyPressEvent?",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:08): isn't that one buffered?",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:08): Zola: Oh, right. keyDown and keyUp, then.",
        "761915dbec11116b1f621aa274bfa404 (05:08): ahigerd: that is what i was thinking, except i am using these bindings and the getSelection method doesn't seem to be working as documented",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:08): chip42: Which bindings?",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:08): is keyDown and keyUp lossy?",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:08): cplusplus: What's wrong?",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:08): Zola: I don't think so",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:09): like, it polls at a certain rate",
        "761915dbec11116b1f621aa274bfa404 (05:09): ahigerd: koala. they are packaged with kdebindings",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:09): well then it's not unbuffered",
        "50d5d5366b999474e3ccdd043c64e7ab (05:09): ahigerd all maybe;)",
        "761915dbec11116b1f621aa274bfa404 (05:09): ahigerd: java bindings *grin*",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:09): chip42: Ah.",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:09): you need unbuffered for game style input",
        "f2340604ffbe412e1bb1e6d95fe87ec1 (05:09): otherwise you get a much higher latency on the key input",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:11): Zola: I think you'll have to use platform-dependent code for that, since event-driven keyboard handlers are almost guaranteed to be buffered.",
        "761915dbec11116b1f621aa274bfa404 (05:14): i'm actually using inserAt to put the text at the end. i would use append, but it is tacking on a new line which screws up the formatting",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:15): Dunno. If it's a bug in the Java bindings there may be no way around it. But what's the point of using Qt with Java?",
        "761915dbec11116b1f621aa274bfa404 (05:15): are you kidding? qt is awesome. the question is what am i doing using java with qt.",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:15): That's what I MEANT to say. :P",
        "761915dbec11116b1f621aa274bfa404 (05:16): its a completely arbitrary choice. i am forced to write a lot in java. i thought i'd do it for the hell of it",
        "761915dbec11116b1f621aa274bfa404 (05:19): gcj treats java like any other language. i'm able to compile and link my project like any other c++ app. i think it is cool, to say the least :)",
        "761915dbec11116b1f621aa274bfa404 (05:22): anyways, i read the newline with append() is qt3 related. insertAt was the recommended solution.. works well except it selects the text it is appending, producing a few sideffects",
        "761915dbec11116b1f621aa274bfa404 (05:28): when qt jambi released, i'll have qt as a real choice to do crossplatform java stuff. for now i am satisfied playing around with code confined to KDE",
        "50d5d5366b999474e3ccdd043c64e7ab (05:48): hmmm",
        "cdf4ad80dc66a41f951abab3fde0d774 (05:48): Hmm?",
        "50d5d5366b999474e3ccdd043c64e7ab (05:50): n8"
    ],
    "person_ids": [
        "50d5d5366b999474e3ccdd043c64e7ab",
        "400c558f848b122b0980f509f9c9ca69",
        "7780ad7003f15ffc3b31177513eac4f9",
        "cdf4ad80dc66a41f951abab3fde0d774",
        "f2340604ffbe412e1bb1e6d95fe87ec1",
        "ea3f8a0223777fdf8d12983027629f14",
        "44f76762d837de6adc8900ece7ab6b7b",
        "761915dbec11116b1f621aa274bfa404"
    ]
}