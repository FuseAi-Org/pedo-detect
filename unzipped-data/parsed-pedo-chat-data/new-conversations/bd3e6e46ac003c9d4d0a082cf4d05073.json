{
    "id": "bd3e6e46ac003c9d4d0a082cf4d05073",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (13:45): http://www.tbray.org/ongoing/When/200x/2009/04/29/Model-and-Syntax - &quot;I have long believed and repeatedly written that bits on the wire are the only serious reliable basis for interoperability, and worried in public about the feasibility of shared models&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (13:46): That seems kind of completely opposite to the HTML 5 philosophy, which is that the document model is the important thing, and the bits on the wire are just one of many ways of serialising the model",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:47): ab7faae5d7b250ea8606486575f8f79c: interesting",
        "ab7faae5d7b250ea8606486575f8f79c (13:48): wonders how the connect the different viewpoints",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:48): I wonder if that's a key difference between some of the people who come from same background and Tim, and, say, browser implementors or client-side web-apps developers",
        "b25b6b77a0087ff8385941e5545d32ea (13:49): ab7faae5d7b250ea8606486575f8f79c: Since HTML5 defines exactly how you get from bits on the wire to the internal model and back again, I'm not so sure that's true",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:49): hmm, &quot;I believe the existence and success of the Internet and the Web are strong evidence in my favor. They have no object models or APIs; nor could they: they are just a collection of agreements what bits we send each other, with accompanying narrative about what those bits are supposed to mean.&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:50): is that statement accurate?",
        "ab7faae5d7b250ea8606486575f8f79c (13:51): b25b6b77a0087ff8385941e5545d32ea: But the main basis for interoperability is the rules for how UAs process the document model, and isn't just about the syntax",
        "ab7faae5d7b250ea8606486575f8f79c (13:51): unlike XML, which is defined as purely syntax",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:52): ab7faae5d7b250ea8606486575f8f79c: yeah, that seems to me too like an accurate way to describe it",
        "cc097e0d7183ae8436e7df709553c8c0 (13:52): a9b326df4e6da61c5b6f5e1058be83a2: the Web uses script, and the scripts assume the DOM as the model",
        "b25b6b77a0087ff8385941e5545d32ea (13:52): What cc097e0d7183ae8436e7df709553c8c0 said",
        "ab7faae5d7b250ea8606486575f8f79c (13:52): (and that purely syntactic definition causes problems with e.g. when do you execute &lt;script&gt;s while parsing XHTML, so the model is valuable too)",
        "b25b6b77a0087ff8385941e5545d32ea (13:53): I don't see how the idea of client side scripting fits with the &quot;it's all just bits&quot; viewpoint",
        "b25b6b77a0087ff8385941e5545d32ea (13:53): (that applies to XML too of course)",
        "b25b6b77a0087ff8385941e5545d32ea (13:55): &quot;&quot;&quot;I\u201a\u00c4\u00f4ll tell you this: As a TDD disciple, if I read the initial spec language, I\u201a\u00c4\u00f4d have cooked up a bunch of test cases that would have explored the value space pretty thoroughly before I shipped any code. Tighten the spec and I might have gotten lazy.&quot;&quot;&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (13:55): That is the single worst defence of bad specs I have ever read",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:56): this makes me think of the discussion about the whether it's a mistake to attempt to separately spec a particular language without in the same document also specifying how it is meant to be processed",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:57): b25b6b77a0087ff8385941e5545d32ea: yeah, on the face of it, that seems not particularly compelling argument",
        "ab7faae5d7b250ea8606486575f8f79c (13:57): It still seems true that bits-on-the-wire are important by themselves - people think of HTML and XML as character strings, and that's a useful and successful view, and we'd lose that if we just had the DOM API and some unreadable custom binary protocol for transferring DOMs",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:57): btw, what's TDD?",
        "ab7faae5d7b250ea8606486575f8f79c (13:57): Test-driven development",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:57): ah",
        "ab7faae5d7b250ea8606486575f8f79c (13:59): I suppose the focus on bits-on-the-wire vs document models could also be blamed for e.g. RSS readers that just use regexps to interpret those bits",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:01): ab7faae5d7b250ea8606486575f8f79c: yeah, good example i guess",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:01): that's a genuine problem",
        "ab7faae5d7b250ea8606486575f8f79c (14:02): Maybe the bits-on-the-wire view is more useful during the early stages of a protocol, when we want to encourage competition between widely varying ways of implementing and using the protocol; but as the technology matures, the dominant document model should be specified and standardised, to improve interoperability",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:02): mooncalves writing parsers in regex",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:02): ab7faae5d7b250ea8606486575f8f79c: seems like that's the way it evolved with HTML anyway",
        "ab7faae5d7b250ea8606486575f8f79c (14:03): Maybe RSS-&gt;Atom could be seen the same way?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:03): yeah",
        "ab7faae5d7b250ea8606486575f8f79c (14:04): can't think of any other examples...",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:04): well, maybe XML processing in general could not evolve that way because of you-know-what",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:05): spec'ing catch-fire-and-fail error handling seems like a pretty good way to stop natural evolution",
        "ab7faae5d7b250ea8606486575f8f79c (14:05): I don't quite see why that's relevant",
        "ab7faae5d7b250ea8606486575f8f79c (14:06): Someone could define a processing model for XML that turns a stream of bytes into a DOM or Infoset or SAX stream or whatever, and that'd solve the questions about when scripts execute and how document.write could be fitted in etc, but they don't seem to have done that yet",
        "ab7faae5d7b250ea8606486575f8f79c (14:06): (and draconity doesn't have anything to do with that, as far as I can tell)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:06): ab7faae5d7b250ea8606486575f8f79c: if you want processing applications to be able do deal with content that people actually produce, rather than the content you assume ahead of time they will produce",
        "ab7faae5d7b250ea8606486575f8f79c (14:07): (There's also things like Jabber which rely somewhat on the processing model of XML parsers, e.g. elements should be reported as soon as their close tag's '&gt;' is seen)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:09): as far as the mention that Tim makes of agreements: the agreements in the case of browsers have been a moving target",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:10): &quot;unstable equilibrium&quot; I think is how hsivonen or someone referred to i",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:10): it",
        "ab7faae5d7b250ea8606486575f8f79c (14:11): goes away for a bit"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "b25b6b77a0087ff8385941e5545d32ea",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}