{
    "id": "4445079fbf253d92bae0b7e61a578d01",
    "messages": [
        "1e10d84b3917ae58049be95b0071cf7f (07:41): hey 66b0d785bfa15d051888c24dabba7342, popping in \u201a\u00c4\u00f4cos I have a question :)",
        "66b0d785bfa15d051888c24dabba7342 (07:42): 1e10d84b3917ae58049be95b0071cf7f: shoot",
        "1e10d84b3917ae58049be95b0071cf7f (07:42): first thanks for Live Microdata\u201a\u00c4\u00eegreat stuff",
        "1e10d84b3917ae58049be95b0071cf7f (07:43): main q is do you have any plans to make an auto-conversion service for downloading vcards a la X2V? or do you know of such a thing?",
        "66b0d785bfa15d051888c24dabba7342 (07:44): 1e10d84b3917ae58049be95b0071cf7f: sorry, what's X2V?",
        "66b0d785bfa15d051888c24dabba7342 (07:44): do you mean pasting a URL and getting a vcard for download?",
        "1e10d84b3917ae58049be95b0071cf7f (07:45): yep. sorry it\u201a\u00c4\u00f4s prolly http://h2vx.com/ now",
        "66b0d785bfa15d051888c24dabba7342 (07:46): that would require some server-side stuff",
        "66b0d785bfa15d051888c24dabba7342 (07:46): I'd really like to have a python implementation to do that kind of thing",
        "66b0d785bfa15d051888c24dabba7342 (07:47): but I don't have a concrete plan to do it in the immediate future",
        "1e10d84b3917ae58049be95b0071cf7f (07:47): ok, that\u201a\u00c4\u00f4s good to know",
        "1e10d84b3917ae58049be95b0071cf7f (07:48): there might be enough microdata support in html5lib btw",
        "66b0d785bfa15d051888c24dabba7342 (07:48): it would also be useful to e.g. let people see the microdata output (other than vcard) from their live sites",
        "66b0d785bfa15d051888c24dabba7342 (07:48): has someone been working on that?",
        "1e10d84b3917ae58049be95b0071cf7f (07:48): I\u201a\u00c4\u00f4m the wrong person to ask sorry",
        "1e10d84b3917ae58049be95b0071cf7f (07:48): :)",
        "66b0d785bfa15d051888c24dabba7342 (07:48): jgraham, gsnedders?",
        "1e10d84b3917ae58049be95b0071cf7f (07:49): I agree re: showing microdata output",
        "66b0d785bfa15d051888c24dabba7342 (07:49): in any case it should be layered on top of html5lib, that's for sure",
        "1e10d84b3917ae58049be95b0071cf7f (07:49): I asked earlier when Tab &amp; Philip were around, and they hadn\u201a\u00c4\u00f4t heard of anything",
        "66b0d785bfa15d051888c24dabba7342 (07:49): 1e10d84b3917ae58049be95b0071cf7f: if you have any bugs or patches for live microdata, feel free to send them (per mail or otherwise)",
        "66b0d785bfa15d051888c24dabba7342 (07:50): I'd like it to be able to validate known itemtypes, but haven't done so yet",
        "1e10d84b3917ae58049be95b0071cf7f (07:50): 66b0d785bfa15d051888c24dabba7342: well actually, itemprop=&quot;description&quot; didn\u201a\u00c4\u00f4t seem to work for me: http://oli-studio.com/temp/uf/microdata.html",
        "1e10d84b3917ae58049be95b0071cf7f (07:51): no vevent output, but remove desc and it works",
        "66b0d785bfa15d051888c24dabba7342 (07:51): 1e10d84b3917ae58049be95b0071cf7f: having a look",
        "1e10d84b3917ae58049be95b0071cf7f (07:52): thanks",
        "66b0d785bfa15d051888c24dabba7342 (07:53): yep, there's a bug",
        "66b0d785bfa15d051888c24dabba7342 (07:53): one sec",
        "1e10d84b3917ae58049be95b0071cf7f (07:57): yay! I helped",
        "66b0d785bfa15d051888c24dabba7342 (07:59): 1e10d84b3917ae58049be95b0071cf7f: fixed a typo, try again now (make sure you reload properly)",
        "66b0d785bfa15d051888c24dabba7342 (07:59): s/subStr/substr/ was the trick :)",
        "66b0d785bfa15d051888c24dabba7342 (08:00): I also pushed some changes for RDF extraction that are in violation of the spec (but better :)",
        "1e10d84b3917ae58049be95b0071cf7f (08:00): heh, oh that all bugs were that easy",
        "1e10d84b3917ae58049be95b0071cf7f (08:00): thanks\u201a\u00c4\u00eeit works great here",
        "66b0d785bfa15d051888c24dabba7342 (08:01): it only happened with description because only then was the line long enough to trigger the line wrapping code",
        "1e10d84b3917ae58049be95b0071cf7f (08:04): one more q but need to check specs first\u201a\u00c4\u00b6",
        "66b0d785bfa15d051888c24dabba7342 (08:04): will be loitering",
        "1e10d84b3917ae58049be95b0071cf7f (08:08): 66b0d785bfa15d051888c24dabba7342: nope, just mistaken expectations.",
        "1e10d84b3917ae58049be95b0071cf7f (08:09): although I\u201a\u00c4\u00f4ll definitely ping you if I come across anything else. Thanks again for your help!",
        "66b0d785bfa15d051888c24dabba7342 (08:13): good luck!",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:17): 69b0d3dfe919a6b860a9fac82de52a7e: it's clear from the spec that &lt;p spellcheck=&quot;&quot;&gt; and &lt;p contenteditable=&quot;&quot;&gt; are conforming, but the spec seems to be ambiguous about whether &lt;p spellcheck&gt; and &lt;p contenteditable&gt; are conforming.",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:19): where is a difference between the two expressed?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:19): 69b0d3dfe919a6b860a9fac82de52a7e: the difference is that in the first case the empty string is explicitly specified",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:20): it's explicitly specified in the second case also",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:20): unless we're talkign about different parts of the spec",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:21): is there a place in the spec that says using empty-attribute syntax is equivalent to explictly including '=&quot;&quot;' ?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:22): 69b0d3dfe919a6b860a9fac82de52a7e: the spec defines empty-attribute syntax but does not say it's equivalent to including =&quot;&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:22): I realize that parsing algorithm makes it clear that empty attributes get assigned the empty string as values",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:26): a9b326df4e6da61c5b6f5e1058be83a2: hm, yeah, the syntax could be clearer about that. i'll file a bug, thanks.",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:28): 69b0d3dfe919a6b860a9fac82de52a7e: I'm happy to file the bug if you want",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:29): anyway, I think it's clear enough for those who read the parsing algorithm, just not for those who don't",
        "b8810fee2f4a71f849f3f7409546d1d9 (08:39): what's the statistical charset detection situation in WebKit like these days?",
        "b8810fee2f4a71f849f3f7409546d1d9 (08:39): does it have a statistical detector? how much data is fed to it?"
    ],
    "person_ids": [
        "1e10d84b3917ae58049be95b0071cf7f",
        "66b0d785bfa15d051888c24dabba7342",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "b8810fee2f4a71f849f3f7409546d1d9"
    ]
}