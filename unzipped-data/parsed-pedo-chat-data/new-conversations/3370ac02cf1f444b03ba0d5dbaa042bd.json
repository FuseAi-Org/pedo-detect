{
    "id": "3370ac02cf1f444b03ba0d5dbaa042bd",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (06:36): should i be firing load, abort, and error events at the &lt;track&gt; element?",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:42): what if the .src is dynamically changed to something that can't be parsed as a url?",
        "65325d50b2e25aca54bc871b89758c9c (06:44): should work the same as any other element referencing an external resource IMO",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:51): they aren't all consistent",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:51): for example, &lt;track&gt; can be disabled, but other elements generally can't",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:52): some do cross-origin stuff, others don't",
        "040342c014ffc1c11592948bd92e3721 (06:59): apart from the disabling, it should be consistent with other resource loading though, no?",
        "040342c014ffc1c11592948bd92e3721 (07:00): when the track is disabled, we'd presumably want to stop downloading",
        "040342c014ffc1c11592948bd92e3721 (07:00): and continue downloading if it is enabled again",
        "040342c014ffc1c11592948bd92e3721 (07:01): if .src is changed and track is still active, we should abort the downloading then download the new resource",
        "040342c014ffc1c11592948bd92e3721 (07:01): it's always about what should be available to the browser for display",
        "040342c014ffc1c11592948bd92e3721 (07:02): load, abort and error events would be good to have on &lt;track&gt; if that is consistent with other external resource referencing elements",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:03): stopping the download when the track is disabled would lead to bad ui, i think",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:04): it would mean that if a user kept turning a track on to see if it was available, then turning it off if it wasn't, it would never get downloaded",
        "040342c014ffc1c11592948bd92e3721 (07:04): how?",
        "040342c014ffc1c11592948bd92e3721 (07:04): I wouldn't use &quot;turning on&quot; as a means to find out if it is available",
        "040342c014ffc1c11592948bd92e3721 (07:05): don't we encourage the creation of a menu for that?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:05): the menu turns on and off the tracks",
        "040342c014ffc1c11592948bd92e3721 (07:06): yeah, but just being listed in the menu means that something is available, so that's sufficient for that",
        "040342c014ffc1c11592948bd92e3721 (07:06): if I turn a track on, I actually want to see it",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:06): so e.g. if there were two tracks, one simple english and one with massive annotations, then they'd both be in the menu, but the user might keep switching from one to the other waiting for the second to be available",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:06): which it would never be if we stopped the dowwnload each time he went back to the first one",
        "040342c014ffc1c11592948bd92e3721 (07:06): are we making tracks alternatives of each other?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:07): that's entirely up to the user interface",
        "040342c014ffc1c11592948bd92e3721 (07:07): in that situation, if I was the user, I would just turn on the second and wait until it starts displaying",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:07): you might :-)",
        "040342c014ffc1c11592948bd92e3721 (07:07): if I turn it off, I expect it to stop downloading",
        "040342c014ffc1c11592948bd92e3721 (07:08): I look at the live situation - if I turn a track off, I'd want it to stop downloading and not continue getting a file that continues to grow",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:09): for streaming titles that would indeed be a different issue, but i thought we'd decided not to support those out-of-band?",
        "040342c014ffc1c11592948bd92e3721 (07:09): why? what would stop it from working?",
        "040342c014ffc1c11592948bd92e3721 (07:10): maybe I wasn't present for that decision ;) or I have a bad memory ;)",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:10): well if the track was enabled when the video was started, the video would never begin playing, for instance",
        "040342c014ffc1c11592948bd92e3721 (07:10): ah, because we wait until its fully downloaded\u201a\u00c4\u00b6 hmmm",
        "040342c014ffc1c11592948bd92e3721 (07:11): maybe it requires something similar to the video tag where there is &quot;sufficient data&quot; downloaded",
        "040342c014ffc1c11592948bd92e3721 (07:11): i.e. there is enough to sync with the buffered video/audio",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:11): or we can just not support infinite timed tracks :-)",
        "040342c014ffc1c11592948bd92e3721 (07:11): we support live video, right?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:11): given that we expose the timed tracks in the API, infinite timed tracks would require infinite memory",
        "040342c014ffc1c11592948bd92e3721 (07:11): so timed tracks wouldn't be that different",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:11): yeah but we don't expose the video to the API",
        "040342c014ffc1c11592948bd92e3721 (07:12): what do you mean?",
        "040342c014ffc1c11592948bd92e3721 (07:12): we can get currentTime and stuff like that",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:13): yeah but there's no way to get the video data",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:13): you can get the cue data",
        "040342c014ffc1c11592948bd92e3721 (07:13): you can through canvas, right?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:13): you can only get the currently playing frame",
        "040342c014ffc1c11592948bd92e3721 (07:13): right ...",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:13): you can get _all_ the cues",
        "040342c014ffc1c11592948bd92e3721 (07:14): yeah, I see....",
        "040342c014ffc1c11592948bd92e3721 (07:14): hmm, I'm just hesitant to make too many differences between handling data that comes our of a track in a video or from external",
        "040342c014ffc1c11592948bd92e3721 (07:14): ideally we'd have the same API for both",
        "040342c014ffc1c11592948bd92e3721 (07:15): but I see the difficulty...",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:15): they're completely different things, i don't see how they could even have a similar API, let alone the same one",
        "040342c014ffc1c11592948bd92e3721 (07:16): they're not actually that different",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:16): in what way are they similar?",
        "040342c014ffc1c11592948bd92e3721 (07:16): you can even have a video container that consists of links to other files that are the tracks and pulls them in - that's exactly the same as pulling them in through the markup",
        "040342c014ffc1c11592948bd92e3721 (07:16): I think quicktime allows for that",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:16): i'm not sure i understand what we're talking about any more",
        "040342c014ffc1c11592948bd92e3721 (07:17): a video that has hyperlinks to media files instead of audio and video data inside it",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:17): start over. what are you suggesting in terms of what the design of the api should be?",
        "040342c014ffc1c11592948bd92e3721 (07:18): the api to the tracks in the video file should be the same as the api to the externally linked files",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:18): sure",
        "040342c014ffc1c11592948bd92e3721 (07:19): what did you mean then by &quot;they are completely different things&quot; ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:19): i meant video data vs text tracks",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:19): oh, i see, you're saying that we have the same infinite text data problem with embedded tracks",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:19): hmm",
        "040342c014ffc1c11592948bd92e3721 (07:19): ah, I meant text tracks from inside the video as opposed to external text tracks",
        "040342c014ffc1c11592948bd92e3721 (07:19): yup :)",
        "040342c014ffc1c11592948bd92e3721 (07:20): we could always collect cues and make those available that we have and not make predictions over future ones",
        "040342c014ffc1c11592948bd92e3721 (07:21): a bit like videos don't have a duration when they are streaming",
        "040342c014ffc1c11592948bd92e3721 (07:22): and like it's not possible to seek in live streams",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:22): it's more the ones that correspond to points of the video before video.startTime that i'm worried about",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:23): i wonder how to discard them",
        "040342c014ffc1c11592948bd92e3721 (07:23): do we need to?",
        "040342c014ffc1c11592948bd92e3721 (07:23): hmm\u201a\u00c4\u00b6 I guess we do",
        "040342c014ffc1c11592948bd92e3721 (07:23): since they legally don't really exist, I guess",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:23): well from a practical perspective, we can't have infinite cues",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:24): just like we can't have infinite video data",
        "040342c014ffc1c11592948bd92e3721 (07:24): from before startTime won't be infinite - unless I'm missing something",
        "040342c014ffc1c11592948bd92e3721 (07:25): a file has to start at some point",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:26): startTime is the time up to which the UA has discarded data",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:26): it's not the start of the file",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:26): the start of the file is time 0",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:26): 69b0d3dfe919a6b860a9fac82de52a7e: I was looking for your e-mail yesterday",
        "040342c014ffc1c11592948bd92e3721 (07:26): not necessarily - some files can start at an offset, in particular if they are streaming",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:26): 3f6e238c2950f45ef335bd19fa2a0592: <email/>",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:27): 3f6e238c2950f45ef335bd19fa2a0592: it's at the top of the spec :-)",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:27): 69b0d3dfe919a6b860a9fac82de52a7e: I just wanted to let you know I nabbed a quote of yours for a recent presentation",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:27): 040342c014ffc1c11592948bd92e3721: for purposes of the aPI, that's still exposed as time=0",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:27): 69b0d3dfe919a6b860a9fac82de52a7e: http://www.slideshare.net/benschwarz/take-back-the-web",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:27): 3f6e238c2950f45ef335bd19fa2a0592: cool",
        "040342c014ffc1c11592948bd92e3721 (07:27): ah, we're talking playback offset time then, I guess",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:28): 69b0d3dfe919a6b860a9fac82de52a7e: did you also see my post to public-html?",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:28): http://lists.w3.org/Archives/Public/public-html/2010May/0285.html",
        "040342c014ffc1c11592948bd92e3721 (07:28): so, what is startTime then? is that the state of the buffering?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:28): 3f6e238c2950f45ef335bd19fa2a0592: btw my name is Ian Hickson or 69b0d3dfe919a6b860a9fac82de52a7e, not Ian 69b0d3dfe919a6b860a9fac82de52a7e :-)",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:28): I'm going to write a more considered post to the whatwg list",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:28): 69b0d3dfe919a6b860a9fac82de52a7e: oh! sorry :)",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:28): I checked your web site and not a spec page",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:29): but that might've been the rush of prepping for a presentation 2 hours before it started",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:29): my apologies",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:29): 040342c014ffc1c11592948bd92e3721: it's the earliest time available  - search for &quot;earliest possible position&quot; in the spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:31): 3f6e238c2950f45ef335bd19fa2a0592: saw your e-mail, but there was no technical feedback, so i didn't do anything with it :-)",
        "040342c014ffc1c11592948bd92e3721 (07:31): ah, I thought you defined a new startTime for tracks",
        "040342c014ffc1c11592948bd92e3721 (07:32): 3f6e238c2950f45ef335bd19fa2a0592 you should have sent the link to your reformatted spec - I couldn't find it",
        "040342c014ffc1c11592948bd92e3721 (07:32): wasn't looking hard though",
        "040342c014ffc1c11592948bd92e3721 (07:33): I'm quite happy with the readability of the specs - no worse than any other technical documentation I've read",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:33): 3f6e238c2950f45ef335bd19fa2a0592: um btw, the &quot;15&quot; in &quot;W3C Proposed Recommendation 15 December 1999&quot; is the date :-)",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:33): 040342c014ffc1c11592948bd92e3721: It simply isn't good enough for the weight of the world.",
        "040342c014ffc1c11592948bd92e3721 (07:34): 69b0d3dfe919a6b860a9fac82de52a7e: I'd still say that &quot;before startTime&quot; is no infinite because the stream has started reaching the browser at some point; in theory that timeline is infinite, yes, but it's not what the browser has to deal with",
        "3f6e238c2950f45ef335bd19fa2a0592 (07:34): 69b0d3dfe919a6b860a9fac82de52a7e: mm. oh well :) same difference",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:41): 040342c014ffc1c11592948bd92e3721: before startTime isn't infinite; the point is that the user agent can discard data when it needs to to keep the resource requirements under control, and it makes sense to discard cue data from before that point as well especially if it came from the same file",
        "040342c014ffc1c11592948bd92e3721 (07:42): yes, agreed",
        "040342c014ffc1c11592948bd92e3721 (07:43): though it probably makes less sense to discard cue data than video data for sheer lack of volume (in general)",
        "d8cc952a670b1063df4c205ef5e920ca (08:00): wonders how far would google go with NaCl",
        "d8cc952a670b1063df4c205ef5e920ca (08:01): (on the range from silently it announcing on slashdot to printing full page ads with hearts in new york times)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:02): 69b0d3dfe919a6b860a9fac82de52a7e: have you had time to look at the Khronos Typed Arrays spec yet?",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:20): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:20): i commented on it earlier",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:20): (in #whatwg)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:24): ok",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:29): if this goes forward and gets support from other browser vendors, I'm wondering what that'll mean for the various other binary-data proposals that have been under discussion",
        "a9b326df4e6da61c5b6f5e1058be83a2 (08:29): at ECMA",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:31): dunno"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "65325d50b2e25aca54bc871b89758c9c",
        "040342c014ffc1c11592948bd92e3721",
        "3f6e238c2950f45ef335bd19fa2a0592",
        "d8cc952a670b1063df4c205ef5e920ca",
        "a9b326df4e6da61c5b6f5e1058be83a2"
    ]
}