{
    "id": "1d12734b74d8bebd1e9b479d0f251e3e",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (15:47): is anyone here aware of a simple to use templating system that I can use with my varius python scripts to generate things like those tables in the HTML 5 Reference?",
        "f139aba52f9fa1394b4034a7954b2220 (15:49): I want something that allows me to extract the data from various sources, such as the spec or other config files, and input that into a templating engine, which then populates the given template file with the data",
        "f139aba52f9fa1394b4034a7954b2220 (15:51): I found cheetah, which looks like it may work. Anyone had any experience with that? http://www.cheetahtemplate.org",
        "d114be1698421a7cec050e2207d29631 (15:51): isn't there a python port of Template Toolkit?",
        "d114be1698421a7cec050e2207d29631 (15:51): goes to look",
        "b25b6b77a0087ff8385941e5545d32ea (15:52): f139aba52f9fa1394b4034a7954b2220: I use Genshi a lot",
        "b25b6b77a0087ff8385941e5545d32ea (15:52): f139aba52f9fa1394b4034a7954b2220: Mako is also supposed to be good",
        "d114be1698421a7cec050e2207d29631 (15:53): http://template-toolkit.org/python/index.html",
        "b25b6b77a0087ff8385941e5545d32ea (15:53): f139aba52f9fa1394b4034a7954b2220: I think cheetah is a bit old",
        "d114be1698421a7cec050e2207d29631 (15:53): TT is the best templating system I have used",
        "b25b6b77a0087ff8385941e5545d32ea (15:55): The big advantage of genshi is that it is (X|HT)ML centric so it gets things like escaping right be default",
        "f139aba52f9fa1394b4034a7954b2220 (15:55): ok, I'll investigate both of those.",
        "ab7faae5d7b250ea8606486575f8f79c (15:55): has used TT in Perl, but doesn't really like it, mostly because it has weird syntax rules (like you can't use expressions in function arguments)",
        "ab7faae5d7b250ea8606486575f8f79c (15:56): f139aba52f9fa1394b4034a7954b2220: Can't you just use Python print statements?",
        "f139aba52f9fa1394b4034a7954b2220 (16:00): ab7faae5d7b250ea8606486575f8f79c, that's what I did with the character entity reference generator, but found that to be less flexible, and it required doing things like print header-file, loop to print each line with the data, print footer-file, instead of just having one template file and declaring which section needs to be repeated.",
        "f139aba52f9fa1394b4034a7954b2220 (16:03): it also requires me to reinvent the wheel each time I want to do it with a new template and new set of data, as do my more recent approaches, and I want to avoid that",
        "b25b6b77a0087ff8385941e5545d32ea (16:15): f139aba52f9fa1394b4034a7954b2220: BTW, if it makes a difference, I can offer help with Genshi, less so with anything else :)",
        "f139aba52f9fa1394b4034a7954b2220 (16:23): b25b6b77a0087ff8385941e5545d32ea, ok, thanks",
        "ed6fe17274e9ca85808b462a0f31ba1c (16:23): d8bdaf4cce4eed42abe28293a26743b7_: do you know any place where I can get the current coverage of html5 by firefox?",
        "00308a1b057232864069aef4977a8372 (16:26): ed6fe17274e9ca85808b462a0f31ba1c: hi sorry 1 sec",
        "d8bdaf4cce4eed42abe28293a26743b7 (16:35): ed6fe17274e9ca85808b462a0f31ba1c: i don't know, sorry. we don't seem to have a tracker bug for html5 coverage",
        "ed6fe17274e9ca85808b462a0f31ba1c (16:35): okay, I actually looked for it and didn't find anything :/",
        "ed6fe17274e9ca85808b462a0f31ba1c (16:35): any timeline plan or something for the support? would you be aware for that?",
        "57d876083caf517f49e8cf5e03307450 (16:36): well, I suppose HTML5 needs to be complete before it can be fully implemented",
        "ed6fe17274e9ca85808b462a0f31ba1c (16:36): true, but well, they actaully started to support audio/video",
        "57d876083caf517f49e8cf5e03307450 (16:37): someone's working on an HTML5 parser",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:38): there is http://wiki.whatwg.org/wiki/Implementations_in_Web_browsers",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:39): ed6fe17274e9ca85808b462a0f31ba1c: it's hard to track coverage without a test suite",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:39): ed6fe17274e9ca85808b462a0f31ba1c: but the theory is that the annotation boxes in the whatwg copy of the spec track coverage in Firefox and other browsers",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:40): ed6fe17274e9ca85808b462a0f31ba1c: the practice may be different, of course...",
        "ed6fe17274e9ca85808b462a0f31ba1c (16:40): okay, thanks :)",
        "cc097e0d7183ae8436e7df709553c8c0 (16:42): i think the annotation boxes should be reasonably accurate currently",
        "f139aba52f9fa1394b4034a7954b2220 (16:42): b25b6b77a0087ff8385941e5545d32ea, if I'm understanding the documentation correctly, is the easiest way for me to proceed to create a template that contains stuff like &lt;tr py:for=&quot;category in categories&quot;&gt;&lt;td&gt;${category.tagname}&lt;/td&gt;&lt;td&gt;...&lt;/td&gt;&lt;/tr&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (16:43): ... then then create an array of dictionaries like this: categories = [{tagname: &quot;html&quot;, flow: &quot;yes&quot;, phrasing: &quot;no&quot;, ...}, {...}]",
        "f139aba52f9fa1394b4034a7954b2220 (16:43): and then feed it all through Genshi?",
        "b25b6b77a0087ff8385941e5545d32ea (16:44): f139aba52f9fa1394b4034a7954b2220: That would work for sure",
        "f139aba52f9fa1394b4034a7954b2220 (16:44): cool, then this is perfect for my needs",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:45): should http://www.whatwg.org/specs/web-apps/current-work/#apis-in-html-documents say Safari implements it?",
        "f139aba52f9fa1394b4034a7954b2220 (16:48): template is done http://dev.w3.org/html5/html-author/utils/categories-template.html",
        "f139aba52f9fa1394b4034a7954b2220 (16:48): now I just need to finish writing the script to create the dictionary",
        "f139aba52f9fa1394b4034a7954b2220 (16:49): decides to ignore the fact that that file is XML containing namespaces served as text/html :-)",
        "f139aba52f9fa1394b4034a7954b2220 (16:52): hmm, it would probably be useful if I wrote a single script that deals with all my templates so I can somehow pipe the output of other scripts that collect the data, into that one script that populates the template",
        "f139aba52f9fa1394b4034a7954b2220 (16:53): something like this: python categories.py | python template.py templatefile.html &gt; output.html",
        "f139aba52f9fa1394b4034a7954b2220 (16:54): I wonder what the most appropriate format would be to serialise from categories.py (in this case) which can then be easily parsed by template.py",
        "b25b6b77a0087ff8385941e5545d32ea (16:59): f139aba52f9fa1394b4034a7954b2220: You could just use pickle or something",
        "b25b6b77a0087ff8385941e5545d32ea (16:59): If you don't care about human readable intermediate formats",
        "f139aba52f9fa1394b4034a7954b2220 (17:02): what's pickle?",
        "f139aba52f9fa1394b4034a7954b2220 (17:03): it definitely doesn't need to be a human readable intermediate format. It just needs to be something I can easily use for each of my scripts I have for extracting things from the spec and other sources",
        "b25b6b77a0087ff8385941e5545d32ea (17:03): f139aba52f9fa1394b4034a7954b2220: In this case it's a way of serializing python objects as strings",
        "b25b6b77a0087ff8385941e5545d32ea (17:04): Like JSON but different",
        "f139aba52f9fa1394b4034a7954b2220 (17:04): ok, that sounds like the most appropriate thing to use",
        "b25b6b77a0087ff8385941e5545d32ea (17:04): In that you can serialise more objects but it doesn't pretend to be readable",
        "b25b6b77a0087ff8385941e5545d32ea (17:05): just import pickle; it's in the stdlib",
        "f139aba52f9fa1394b4034a7954b2220 (17:06): ok, I found http://docs.python.org/library/pickle.html",
        "f139aba52f9fa1394b4034a7954b2220 (17:10): wow, that format really is unreadable by humans. I just did a simple test serialising an array of dictionaries",
        "cc097e0d7183ae8436e7df709553c8c0 (17:18): Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/?slow-browser#video redirects to http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#video instead of http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html?slow-browser#video",
        "ab7faae5d7b250ea8606486575f8f79c (17:21): It is possible that one could claim that's a problem with the redirection script I wrote and therefore should be considered my problem, but Hixie added the ?slow-browser feature so I will claim that it is his problem instead"
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "d114be1698421a7cec050e2207d29631",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "ed6fe17274e9ca85808b462a0f31ba1c",
        "00308a1b057232864069aef4977a8372",
        "d8bdaf4cce4eed42abe28293a26743b7",
        "57d876083caf517f49e8cf5e03307450",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}