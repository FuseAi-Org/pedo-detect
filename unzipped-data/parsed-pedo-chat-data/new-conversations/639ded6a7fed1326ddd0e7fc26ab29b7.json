{
    "id": "639ded6a7fed1326ddd0e7fc26ab29b7",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (09:31): Hixie: should inline data templates be outright non-conforming in text/html inputs, then?",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:32): Hixie: Re: one possible context: do you mean the rule content model should be bimorphic, embedded, metadata or any table slice?",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:33): Hixie: I don't think I can agree at present (without examples to the contrary) that datatemplates were simpler than repetition templates for either authors or UA implementors",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:34): Hixie: were there cases where repetition templates sucked badly and that data templates address?",
        "65325d50b2e25aca54bc871b89758c9c (09:36): I still don't really understand the use cases for repetition templates",
        "65325d50b2e25aca54bc871b89758c9c (09:37): people usually mention online store shopping carts but they are clearly not useful for that",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:37): off-hand, I remember implementing repeating forms twice:",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:38): 1) a simple task tracking app",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:38): 2) an app for authoring online questionnaires",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:39): though the latter was too ajaxy to be really done without JS",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:39): but I guess it could have been done without JS with repetition templates",
        "65325d50b2e25aca54bc871b89758c9c (09:40): I guess I really wonder how often a button that just does add or remove of a repetition item is useful; it would have to be a case where you don't want to do anything else with script when adding or removing a repeat item",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:40): 65325d50b2e25aca54bc871b89758c9c: yes, I guess most often you want to do something else as well",
        "65325d50b2e25aca54bc871b89758c9c (09:40): it seems weird to me to have specialized kinds of button controls just for these two actions",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:41): with data templates, I get an even stronger feeling that it is something complex that only deals with simple cases and real apps will have to work around the limitations anyway",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:42): which is why I asked on the list why querySelector() and E4X tree literals aren't the answer",
        "65325d50b2e25aca54bc871b89758c9c (09:42): well, having a clear model for escaping to script helps",
        "65325d50b2e25aca54bc871b89758c9c (09:42): I don't think any current E4X implementation has good integration with the DOM",
        "65325d50b2e25aca54bc871b89758c9c (09:42): maybe I am wrong on this",
        "65325d50b2e25aca54bc871b89758c9c (09:42): in any case E4X is hardly less complex than datatemplate",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:43): Hixie: anyway, my intuitive reaction to repetition templates was positive and my intuitive reaction to data templates was very negative (regardless of RELAX NG considerations). I'd like to see more examples.",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:43): 65325d50b2e25aca54bc871b89758c9c: E4X isn't less complex, but it solves the problem of DOM fragment literals in the right place",
        "65325d50b2e25aca54bc871b89758c9c (09:44): b8810fee2f4a71f849f3f7409546d1d9: you think the JavaScript level is the right place for DOM fragment literals?",
        "65325d50b2e25aca54bc871b89758c9c (09:45): (and really E4X only gives you XML fragment literals, converting them to DOM form is an excercise left to the reader)",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:45): 65325d50b2e25aca54bc871b89758c9c: yes, because for JS, DOM fragments are very common (like strings and hashtables)",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:45): 65325d50b2e25aca54bc871b89758c9c: yeah, that's a problem",
        "65325d50b2e25aca54bc871b89758c9c (09:46): b8810fee2f4a71f849f3f7409546d1d9: I guess the current state of the art is for JS to store DOM fragments as strings",
        "65325d50b2e25aca54bc871b89758c9c (09:46): and use stuff like innerHTML to get them into the tree",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:46): yes",
        "65325d50b2e25aca54bc871b89758c9c (09:46): sadly that is both much easier and much more performant than using DOM APIs",
        "65325d50b2e25aca54bc871b89758c9c (09:46): referring to fragments declared elsewhere does seem like a pain",
        "65325d50b2e25aca54bc871b89758c9c (09:46): hyatt tells me XUL's similar template feature was used to good effect",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:47): also vulnerable against unescaped data under concatenation",
        "65325d50b2e25aca54bc871b89758c9c (09:47): I guess it is mainly useful for data binding type use cases, but where your data model may change over time so XSLT is not suitable",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:47): 65325d50b2e25aca54bc871b89758c9c: did you see anne's link to the anti-XUL template article?",
        "65325d50b2e25aca54bc871b89758c9c (09:49): b8810fee2f4a71f849f3f7409546d1d9: well, hyatt clearly has reason to be biased about things XULish",
        "65325d50b2e25aca54bc871b89758c9c (09:50): one thing that datatemplates seemed like they might be nice for is &lt;datalist&gt; used with an &lt;input&gt;; if the data source is external, you can convert it to the needed format client side",
        "65325d50b2e25aca54bc871b89758c9c (09:51): it would also be nice to have some way to get datagrid to bind to data",
        "65325d50b2e25aca54bc871b89758c9c (09:51): I did not see the link",
        "65325d50b2e25aca54bc871b89758c9c (09:51): is it in the logs?",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:51): I'm still entirely unconvinced that just writing JS binding glue isn't a better solution considering that it is backwards compatible and can do anything that is computable without having to escape to another solution",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:52): 65325d50b2e25aca54bc871b89758c9c: yes, it the logs. but here it is: http://www.jerf.org/resources/xblinjs/whyNotMozilla/notXulTemplates.html",
        "65325d50b2e25aca54bc871b89758c9c (09:54): the idea of general-purpose templating does sound kind of cool, but to be fair it also seems like the area is littered with half-assed failures",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:55): (even though querySelector() and E4X tree literals aren't backwards compatible, Prototype and jQuery plus innerHTML are Good Enough substitutes)",
        "65325d50b2e25aca54bc871b89758c9c (09:55): maybe better to stick to adopting solutions where there is no script-based alternative and/or where an appropriate solution is clear",
        "65325d50b2e25aca54bc871b89758c9c (10:03): reading that reminds me of using XSLT vs. a perl script and regexps for document transforms for some reason",
        "65325d50b2e25aca54bc871b89758c9c (10:03): &quot;clever&quot; declarative solution that makes simple things into a mind puzzle",
        "65325d50b2e25aca54bc871b89758c9c (10:03): some people find that sort of thing fun",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:11): Hixie: your blog front page seems to have so have Pingback-related UTF-8 badness (lone byte 0xC2 for example)",
        "65325d50b2e25aca54bc871b89758c9c (10:13): b8810fee2f4a71f849f3f7409546d1d9: I'm asking hyatt to tell me about templates on #webkit"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}