{
    "id": "0388e6a6d91e22758f109f34c8db17a2",
    "messages": [
        "1f58faf0d058f303f30239a369808167 (16:18): http://www.impressivewebs.com/cross-browser-css-properties/",
        "1f58faf0d058f303f30239a369808167 (16:18): &quot;I decided to put together a comprehensive list of CSS properties that are supported in all browsers.&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): hmm",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): font-family is buggy in Opera",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): and list-style-position has a sheer of problems when combined with floats",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): iirc",
        "b25b6b77a0087ff8385941e5545d32ea (16:37): &quot;No Bugs&quot; as a claim says &quot;I'm not a QA&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (16:37): At least for somthing as complex as this",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:39): b25b6b77a0087ff8385941e5545d32ea: also &quot;I'm not a browser developer&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (16:39): b8810fee2f4a71f849f3f7409546d1d9: Yeah I think most browser developers aren't naive enough to claim that their code is bug free :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:40): b25b6b77a0087ff8385941e5545d32ea: recently, when I've been fixing regressions I introduced when I made Gecko's script execution (mostly) HTML5-compliant, I've found even more legacy brokenness when I've looked at code relevent to my regressions",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:41): I *think* if you use XSLTProcessor to parse a fragment in the content of a document that's itself being parsed, the readyState of the document changes prematurely",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:41): that sort of thing",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:41): (by code inspection, I didn't test this particular thing)",
        "cc097e0d7183ae8436e7df709553c8c0 (16:41): in the Land of Lisp there are no bugs",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:42): s/content/context/",
        "b25b6b77a0087ff8385941e5545d32ea (16:43): Yeah, obviously web browsers should have been written in Lisp so The Power Of Macros (TM) could save us all from wrong logic",
        "f139aba52f9fa1394b4034a7954b2220 (16:45): read that as &quot;The Power of *Marcos*&quot; and laughed. Then realised it said Macros.",
        "ab7faae5d7b250ea8606486575f8f79c (16:46): b25b6b77a0087ff8385941e5545d32ea: That's why browser engines written in languages other than C/C++ have all been so successful",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:46): aside: the level of XSLT integration to the rest of the Open Web Platform is rather sad",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:47): non-Gecko browsers do it the ugly way",
        "b25b6b77a0087ff8385941e5545d32ea (16:47): b8810fee2f4a71f849f3f7409546d1d9: In what way?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:47): and Gecko does the nice thing in an approximate way",
        "b25b6b77a0087ff8385941e5545d32ea (16:48): Maybe no one was really feeling XSLT?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:48): b25b6b77a0087ff8385941e5545d32ea: in non-Gecko browsers &lt;?xml-stylesheet?&gt; produces a stream that gets reparsed",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:48): that's sad considering that it's a tree-to-tree tranformation system",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:49): b25b6b77a0087ff8385941e5545d32ea: then Gecko does the tree-to-tree thing but has all sorts of approximate hacks for being compatible *enough* with the stream-based way",
        "b25b6b77a0087ff8385941e5545d32ea (16:49): I wonder if the stream-based way is much faster",
        "b25b6b77a0087ff8385941e5545d32ea (16:49): Anyway, the solution is probably not to use XSLT",
        "b25b6b77a0087ff8385941e5545d32ea (16:50): It would be nice if we cou nudge it off the edge of the open-web-platform",
        "b25b6b77a0087ff8385941e5545d32ea (16:50): *could",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:51): for example, compat requires scripts to execute in order, but Gecko can't suspend the XSLT engine in mid-transform, so you can't just use the parser-blocking script mechanism as is",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:51): instead, there's something else",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:51): and a hope that the script authors don't really rely on being able to see more future DOM than they should",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:52): part of the problem is that Hixie doesn't seem to be considering XSLT actively when writing the spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:52): so if I read the spec and write code, some time later someone tells me I broke XSLT again",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:53): which also means we don't have enough automated test coverage for XSLT integration with the rest of the platform",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:53): b25b6b77a0087ff8385941e5545d32ea: shouldn't one expect the stream-based way to be *slower*?",
        "b25b6b77a0087ff8385941e5545d32ea (16:54): b8810fee2f4a71f849f3f7409546d1d9: Well it isn't really clear. I suppose it depends what you can optimise in the two cases",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:55): by stream-based, I mean the XSLT engine serializes its output tree and the HTML parser parses the stream into a DOM",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:55): instead of the XSLT engine building an output DOM directly",
        "b25b6b77a0087ff8385941e5545d32ea (16:57): Right, but doing dom manipulations could be expensive compared to just parsing, whereas you could use something more lightweight than DOM within the XSLT engine itself. I'm not sure.",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:02): b25b6b77a0087ff8385941e5545d32ea: well, the parser has to be able to build a DOM, too",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:03): though in Gecko, the parsers use notify layout in batches but the XSLT engine notifies on a per-node basis",
        "ab7faae5d7b250ea8606486575f8f79c (17:03): Perhap serialising+parsing is likely to be much more heavily optimised than XSLT-specific DOM construction code, since it's reusing code that the rest of the browser already wants to be fast, whereas nobody's going to spend much time optimising XSLT since it's so rarely used",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:13): leaves his shoes and sense of logic at the door, and calmly walks in",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:13): abeb4c0ac6ffb27ee5fbbc20aca0b2f4: Just read your book this morning. Nice writing style, but I only have more questions :P",
        "b25b6b77a0087ff8385941e5545d32ea (17:13): I would put your shoes back on if I were you",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:14): b25b6b77a0087ff8385941e5545d32ea: It's that dirty in here?",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:14): oh my",
        "b25b6b77a0087ff8385941e5545d32ea (17:14): Some of the things on the carpet you don't want to step in",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (17:14): d70f6b0c6a71dba2bc2727b43e977d5a: Well, it's good that you have questions. The people here will be able to help you, shoes or no shoes.",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:14): hehe",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:15): I was wondering why there is still such a distinct separation in functionality between textareas and text inputs.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:15): No shoes, no shirt, no service!",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:15): 88d4d34a8064a4ff39fd5e144eea7762: Got a shirt and a tie! :D",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:15): majority of failed requests on my site are apparently /apple-touch-icon.png and /apple-touch-icon-precomposed.png -- way to go Apple",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:15): d70f6b0c6a71dba2bc2727b43e977d5a, because that's how it was designed by whoever made up text inputs and textareas, and we can't change it now?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:16): Note: the above is the correct answer to most &quot;why&quot; questions about the web.",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:16): hehe, I figured",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:16): Well, textareas could've been removed, but recalling the dozens of &quot;paving the cowpaths&quot; quotes from a certain book about HTML5 doesn't make that option very appealing",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:17): What *does* strike me as odd is that there (afaics) has been no effort to make the two elements behave more similarly, which could've been done without losing backwards compatibility",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:17): align them more in what way?",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:17): API-wise they are pretty similar actually",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:18): &lt;textarea&gt; even has .type",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:18): As as I have been able to find there is no datalist for textareas, no maxlength and size for text inputs and cols for textareas behave similarly, yet are two different attributes",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (17:19): Actually, on the subject of textareas, I came across an interesting browser support issue today: it seems that Mobile Safari doesn't currently support the placeholder attribute on textarea (although the desktop version does).",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:21): Wait, there is size for text inputs",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:21): d70f6b0c6a71dba2bc2727b43e977d5a, maxlength works on text inputs and textareas.",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:21): Why did I write that?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:21): And size also.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:21): Actually, maxlength on textareas is an HTML5 innovation, brings it closer to input.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:21): (I implemented it for Firefox, yay)",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:21): (It was like five lines)",
        "d70f6b0c6a71dba2bc2727b43e977d5a (17:21): There is? Nice!",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:21): abeb4c0ac6ffb27ee5fbbc20aca0b2f4, &lt;textarea placeholder&gt; is a pretty recent addition"
    ],
    "person_ids": [
        "1f58faf0d058f303f30239a369808167",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b25b6b77a0087ff8385941e5545d32ea",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "cc097e0d7183ae8436e7df709553c8c0",
        "f139aba52f9fa1394b4034a7954b2220",
        "ab7faae5d7b250ea8606486575f8f79c",
        "d70f6b0c6a71dba2bc2727b43e977d5a",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}