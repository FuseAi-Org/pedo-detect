{
    "id": "2a9e835991acbd7f5df6054f1e634711",
    "messages": [
        "3b14b636129945831fcfcc7294686653 (19:33): 69b0d3dfe919a6b860a9fac82de52a7e: I remember you data-mined a big corpus of pages to figure out common class/id names.  Has anyone done similar for frequency of font names used in css?",
        "3b14b636129945831fcfcc7294686653 (19:34): or are there big page sets already gathered (and freely available somewhere?) to do such an analysis on?",
        "ab7faae5d7b250ea8606486575f8f79c (19:36): 3b14b636129945831fcfcc7294686653: There's http://dev.opera.com/articles/view/mama/ but I'm not sure that's got font names",
        "ab7faae5d7b250ea8606486575f8f79c (19:37): That uses pages downloaded from the freely available list from dmoz.org",
        "ab7faae5d7b250ea8606486575f8f79c (19:37): http://www.dotnetdotcom.org/ has a big pile of HTML pages (no CSS) freely available",
        "3b14b636129945831fcfcc7294686653 (19:37): ab7faae5d7b250ea8606486575f8f79c: thanks, that's a cool resource.  no listed fonts though",
        "3b14b636129945831fcfcc7294686653 (19:38): (the opera one)",
        "f5af272b5b04154c260eec46f4deb905 (19:38): are there actually authors that try to validate (unprocessed source) PHP files as HTML?",
        "ab7faae5d7b250ea8606486575f8f79c (19:39): 3b14b636129945831fcfcc7294686653: I can easily run regexps over dotnetdotcom's ~425K HTML pages, so if there's a regexp that would (approximately) extract font names (from inline CSS) then I could do that",
        "3b14b636129945831fcfcc7294686653 (19:40): ab7faae5d7b250ea8606486575f8f79c: okay, just a minute",
        "b07211a0c7cb119232799d2119cea90f (19:41): &quot;font\\s*:&quot; and &quot;font-family\\s?:&quot; would probably catch a lot them",
        "ab7faae5d7b250ea8606486575f8f79c (19:42): (?i)font(?:-family)?\\s*:([^;&quot;}]+) gives some stuff you could extract individual names from",
        "3b14b636129945831fcfcc7294686653 (19:46): ab7faae5d7b250ea8606486575f8f79c: will your regexps just return all captures?",
        "ab7faae5d7b250ea8606486575f8f79c (19:47): 3b14b636129945831fcfcc7294686653: For each line that matches the regexp, it can either print the line or print the first matching substring or print any captured group",
        "3b14b636129945831fcfcc7294686653 (19:48): just one of the captured groups?",
        "3b14b636129945831fcfcc7294686653 (19:48): oh, I guess if it can print the lines out, it would be possible to grab that and run further regexps on it",
        "ab7faae5d7b250ea8606486575f8f79c (19:48): Yes",
        "ab7faae5d7b250ea8606486575f8f79c (19:49): Most of the lines have lots of HTML junk in them",
        "3b14b636129945831fcfcc7294686653 (19:54): yeah",
        "ab7faae5d7b250ea8606486575f8f79c (19:54): 3b14b636129945831fcfcc7294686653: http://philip.html5.org/data/fonts-in-inline-css-raw.txt.gz (~7MB) has the strings that match the regexp I gave earlier",
        "3b14b636129945831fcfcc7294686653 (19:55): font(?:\\-family)?\\s*\\:.*\\s*((?:(?:'[a-zA-Z ]*')|(?:&quot;[a-zA-Z ]*&quot;)|[a-zA-Z]*)(?=\\s*[,}])[^}]*)}",
        "ab7faae5d7b250ea8606486575f8f79c (19:55): (I can do it differently if you're willing to wait ten minutes for it to regenerate)",
        "3b14b636129945831fcfcc7294686653 (19:55): I think that should be right",
        "3b14b636129945831fcfcc7294686653 (19:55): I should do some testing",
        "ab7faae5d7b250ea8606486575f8f79c (19:55): (Use a command like 'gzip -cd fonts-in-inline-css-raw.txt.gz|sort -u|cut -f2|sort|uniq -c|sort -n' to count number of pages each string occurs on, etc)",
        "3b14b636129945831fcfcc7294686653 (19:57): actually",
        "3b14b636129945831fcfcc7294686653 (19:57): font(?:\\-family)?\\s*\\:.*\\s*((?:(?:'[a-zA-Z ]*')|(?:&quot;[a-zA-Z ]*&quot;)|[a-zA-Z]*)(?=\\s*[,;}])[^;}]*)[};]",
        "ab7faae5d7b250ea8606486575f8f79c (19:57): 3b14b636129945831fcfcc7294686653: That seems like it's probably close to a subset of what my regexp was matching, so hopefully you could just run that on my existing output :-)",
        "3b14b636129945831fcfcc7294686653 (19:58): ab7faae5d7b250ea8606486575f8f79c: probably a subset, yes :)",
        "3b14b636129945831fcfcc7294686653 (19:58): this just grabs all the fonts in a &quot;stack&quot;",
        "3b14b636129945831fcfcc7294686653 (19:58): as one capture",
        "ab7faae5d7b250ea8606486575f8f79c (19:58): 3b14b636129945831fcfcc7294686653: That one wouldn't match style=&quot;font-family: wingdings&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (19:58): I think",
        "3b14b636129945831fcfcc7294686653 (19:58): oh, true",
        "3b14b636129945831fcfcc7294686653 (19:58): because it doesn't end in ,, ;, or }",
        "3b14b636129945831fcfcc7294686653 (19:59): :/",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:01): I suppose I should complain about the inability to set an li style to &quot;+&quot; or &quot;-&quot; to the css folks, not the html folks?",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:03): Sorry, nevermind:  12:56PM &lt; mamont&gt; 3dc0456e027e36cfd9e180b0fb4e5f32: li:before { content: &quot;+&quot;; }",
        "3b14b636129945831fcfcc7294686653 (20:03): 3dc0456e027e36cfd9e180b0fb4e5f32: you can just use a custom image or so, no?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:04): 3dc0456e027e36cfd9e180b0fb4e5f32: &quot;To obtain other glyphs, authors should use the 'content' property of the ::marker pseudo-element.&quot; \u201a\u00c4\u00ee CSS3 Lists",
        "3b14b636129945831fcfcc7294686653 (20:04): if you do li:before won't that change the alignment",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:04): 3b14b636129945831fcfcc7294686653: I can, but I don't consider the inability... to do the above acceptable.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:04): 3b14b636129945831fcfcc7294686653: Haven't tried it yet.  My guess is the &quot;before&quot; part isn't necessary.",
        "3b14b636129945831fcfcc7294686653 (20:04): a11aabeeceeae6b8cb5d12ea06b56554: do browsers implement that?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:04): 3b14b636129945831fcfcc7294686653: No.",
        "3b14b636129945831fcfcc7294686653 (20:04): :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:05): 3b14b636129945831fcfcc7294686653: But the fact that CSS3 says something about it means there's little point in writing to www-style :)",
        "3b14b636129945831fcfcc7294686653 (20:05): heh",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:05): It's actually in CSS3.",
        "3b14b636129945831fcfcc7294686653 (20:05): IOW go complain in #webkit, on irc.mozilla.org, etc...",
        "3b14b636129945831fcfcc7294686653 (20:06): not that they'll have any sympathy",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:09): comes across a924fb58d2c25874322f4e5126f608b9 in BTS",
        "ab7faae5d7b250ea8606486575f8f79c (20:12): 3b14b636129945831fcfcc7294686653: You can get a seemingly reasonably not-too-inaccurate list by doing something like",
        "ab7faae5d7b250ea8606486575f8f79c (20:12): gzip -cd fonts-in-inline-css-raw.txt.gz|sort -u|cut -f2|sort|perl -lne's/.*?://;print $1 while /('\\''[^'\\'']+'\\''|&quot;[^&quot;]+&quot;|[^\\s,]+)/g'|sort|uniq -c|sort -n",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:13): So that content trick seems to be not what I want.  It's not changing the bullet, and so it's not doing the alignment I care about.",
        "ab7faae5d7b250ea8606486575f8f79c (20:13): and then ignoring the ones like &quot;11px&quot; which obviously aren't fonts",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:13): Can't imagine how CSS has gone so long without allowing you to specify an arbitrary character as the bullet style.",
        "ab7faae5d7b250ea8606486575f8f79c (20:13): Might need to tweak the results so they're more meaningful e.g. counting number of pages each value appears on",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:13): 3dc0456e027e36cfd9e180b0fb4e5f32: Images.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:13): a11aabeeceeae6b8cb5d12ea06b56554: Not acceptable.",
        "3b14b636129945831fcfcc7294686653 (20:14): ab7faae5d7b250ea8606486575f8f79c: I was writing a python script to spit out all the font stacks :)",
        "ab7faae5d7b250ea8606486575f8f79c (20:14): 3dc0456e027e36cfd9e180b0fb4e5f32: &quot;&lt;p&gt;+ Line one.&lt;br&gt;+ Line two.&lt;/p&gt;&quot;",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:14): I'll do a table.  I think it actually sort of qualifies as tabular data.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:14): 3dc0456e027e36cfd9e180b0fb4e5f32: Well, obviously, seeming is has gone for so long it is acceptable",
        "ab7faae5d7b250ea8606486575f8f79c (20:14): 3b14b636129945831fcfcc7294686653: I prefer bash+perl :-)",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:14): ab7faae5d7b250ea8606486575f8f79c: I want to alternate between + and -, the characters are different widths, so what I'm looking for is proper alignment.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:15): (Positive and negative attributes of the thing in the list heading.)",
        "3b14b636129945831fcfcc7294686653 (20:15): ab7faae5d7b250ea8606486575f8f79c: I dunno whether you've done much python ever, but this is fun stuff: http://www.dabeaz.com/generators",
        "ab7faae5d7b250ea8606486575f8f79c (20:15): 3dc0456e027e36cfd9e180b0fb4e5f32: &quot;&lt;p&gt;&lt;span style=position:absolute&gt;+&lt;/span&gt;&amp;nbsp; Line one.&lt;br&gt;&lt;span style=position:absolute&gt;-&lt;/span&gt;&amp;nbsp; Line two.&lt;/p&gt;&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:15): 3b14b636129945831fcfcc7294686653: But Python is slow!",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (20:16): Nice, it looks like since yesterday whatwg overthrew w3 as the first google hit for html5.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:16): We're back at number one!",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:28): Are scripts running upon being added to the DOM?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:46): http://software.hixie.ch/utilities/js/live-dom-viewer/saved/188 should run per HTML 5, but doesn't in IE, Fx, Chromium, and only does in Opera",
        "a924fb58d2c25874322f4e5126f608b9 (20:54): a11aabeeceeae6b8cb5d12ea06b56554: Snooping in canvas bugs, are you?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:54): a924fb58d2c25874322f4e5126f608b9: no",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:54): needs a break having been working for almost eight hours",
        "a11aabeeceeae6b8cb5d12ea06b56554 (20:54): Time to go home, I think",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:10): http://www.smashingmagazine.com/2009/07/29/misunderstanding-markup-xhtml-2-comic-strip/ is nice",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:11): except of course that XHTML as text/html is fiction :p",
        "f5af272b5b04154c260eec46f4deb905 (21:27): edb259c0e0038f38bb200bc20c8cbf7e - XHTML as text/html is not fiction - validates just fine with the W3C validator :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:28): that validator is also a piece of fiction :p",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:29): having said that, I don't really care that much what people do with their markup",
        "f5af272b5b04154c260eec46f4deb905 (21:30): annekv - you have a curious usage of the word &quot;fiction&quot; ;) http://validator.w3.org",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:33): XHTML as text/html isn't fiction, it happens all the time",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:33): the rules for how to process XHTML go out of the window when you use text/html though",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:33): and with XHTML5, you can't have XHTML5 as text/html",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:39): this Installed Apps thread had better be good",
        "03341ab0742a44ea0478cab05ca96cac (21:40): 69b0d3dfe919a6b860a9fac82de52a7e: :\\",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:49): f5af272b5b04154c260eec46f4deb905, I'll give you that :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:05): a11aabeeceeae6b8cb5d12ea06b56554_: why is it desireable for the parser to go out of its way to avoid multiple &lt;body&gt;s?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:06): a11aabeeceeae6b8cb5d12ea06b56554_: i'm not going to change the spec on that, at least not unless a good reason to do so is presented.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:07): What is the correct way to display a triple line break between paragraphs, to show greater separation?",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:07): Er, correct markup.",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:08): &lt;style&gt; p { margin:2em 0 } &lt;/style&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:08): 3dc0456e027e36cfd9e180b0fb4e5f32: &lt;p&gt;...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;...&lt;/p&gt;",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:08): 69b0d3dfe919a6b860a9fac82de52a7e: I like that one better, thanks.",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:08): HTML5 then styles &lt;hr&gt; as  hr { border: none; margin: 2em; } or something",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:10): It took me a long time to give in to p's with end tags (used br's instead), but now I'm fond of them.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:12): You guys may enjoy reading up on Lojban, a synthetic human language designed to reduce language related limits on thought.  No ambiguity.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:13): (And it's entirely HTML5's fault I ended up finding it - wondering how best to apply the HTML refinement process to human language.)",
        "a924fb58d2c25874322f4e5126f608b9 (22:20): 3dc0456e027e36cfd9e180b0fb4e5f32: There's always ambiguity, you just move it one step up in the hierarchy",
        "1c46c9d4fca45f547cefb94099815341 (22:25): ds++",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:41): a924fb58d2c25874322f4e5126f608b9: Where is there ambiguity in Lojban?",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:53): CSS3 for lists is awfully extensive for not being able to specify a freaking character to use as the bullet:  http://www.w3.org/TR/css3-lists/",
        "f5af272b5b04154c260eec46f4deb905 (22:54): 3dc0456e027e36cfd9e180b0fb4e5f32, you may be looking for generated content.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:54): f5af272b5b04154c260eec46f4deb905: Somebody pointed me at that earlier, the problem is that it doesn't handle the alignment as a bullet.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:55): Oh, hah, I didn't realize that CSS3 (at least for lists) is also 69b0d3dfe919a6b860a9fac82de52a7es fault.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:55): 69b0d3dfe919a6b860a9fac82de52a7e: Fix it.",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:55): i took a break from css to work on html5",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:55): Ah.",
        "f5af272b5b04154c260eec46f4deb905 (22:55): I think I took the same break to work on microformats.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:55): 69b0d3dfe919a6b860a9fac82de52a7e: I would like to be able to specify any character to use as a bullet in a list.",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:56): ::marker { content: '' }",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:56): iirc",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:56): Particulary + / -, to list positive and negative aspects of something.",
        "f5af272b5b04154c260eec46f4deb905 (22:56): 3dc0456e027e36cfd9e180b0fb4e5f32, I believe you may need to use generated content, and float:left, and text-align:right",
        "f5af272b5b04154c260eec46f4deb905 (22:56): oh and perhaps some negative margin-left",
        "f5af272b5b04154c260eec46f4deb905 (22:56): but you may find better luck to such questions in #css",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:56): f5af272b5b04154c260eec46f4deb905: Tables work easy :P",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (22:57): f5af272b5b04154c260eec46f4deb905: Talked to #css about it first.",
        "f5af272b5b04154c260eec46f4deb905 (22:58): 3dc0456e027e36cfd9e180b0fb4e5f32, 69b0d3dfe919a6b860a9fac82de52a7e is right - see ::marker http://www.w3.org/TR/css3-lists/#markers",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (23:03): f5af272b5b04154c260eec46f4deb905: Working on it, thanks.  Any idea if any browsers have implimented it?",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (23:09): Yeah I copied the example in the spec and it doesn't work in chrome or firefox 3.",
        "3dc0456e027e36cfd9e180b0fb4e5f32 (23:09): 69b0d3dfe919a6b860a9fac82de52a7e: But thanks for including it.",
        "f5af272b5b04154c260eec46f4deb905 (23:09): you may want to check their open source repositories for evidence of ::marker support",
        "f5af272b5b04154c260eec46f4deb905 (23:10): perhaps ask in the #webkit channel",
        "f5af272b5b04154c260eec46f4deb905 (23:11): and in #firefox",
        "6d05f0c2942adc25946a4b02b37ffa00 (23:28): finds http://www.pemberton.nl/vandf/2009/07/xhtml2-not-dead.html",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:32): i wouldn't expect anyone to support the lists stuff yet",
        "6d05f0c2942adc25946a4b02b37ffa00 (23:35): iirc nobody went further than a bunch of the new keywords"
    ],
    "person_ids": [
        "3b14b636129945831fcfcc7294686653",
        "ab7faae5d7b250ea8606486575f8f79c",
        "f5af272b5b04154c260eec46f4deb905",
        "b07211a0c7cb119232799d2119cea90f",
        "3dc0456e027e36cfd9e180b0fb4e5f32",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a924fb58d2c25874322f4e5126f608b9",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "03341ab0742a44ea0478cab05ca96cac",
        "1c46c9d4fca45f547cefb94099815341",
        "6d05f0c2942adc25946a4b02b37ffa00"
    ]
}