{
    "id": "6d3fa708e01fdc1171b8457c69f70ccf",
    "messages": [
        "29d07dd9849d021ad7b0d6988c8917f2 (03:25): exg: ok now I see what you mean",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:25): exg: any objections to me just removing the -r1s ?",
        "3c72e0357d62f6c5e893107802cd71fc (03:29): Merlin: yes, don't downgrade",
        "3c72e0357d62f6c5e893107802cd71fc (03:29): Merlin: revbump to -r2, then remove -r1",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:29): ok",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:29): will do",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:30): should i repair the originals?",
        "3c72e0357d62f6c5e893107802cd71fc (03:30): wait. -r0 has proper libdir, -r1 hasn't, right?",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:30): correct",
        "3c72e0357d62f6c5e893107802cd71fc (03:30): fix -r1, leave it in tree",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:30): k",
        "3c72e0357d62f6c5e893107802cd71fc (03:30): don't remove it at all, don't revbump",
        "29d07dd9849d021ad7b0d6988c8917f2 (03:31): i like that better",
        "3c72e0357d62f6c5e893107802cd71fc (03:32): yeah, it will work, so no need for revbump",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:41): srcerer: pong",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:43): spb: I saw some of the thread about paludis,  just wanted to throw my 2 cents in",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:44): spb:  This message in particular  <a href=\"http://thread.gmane.org/gmane.linux.gentoo.devel/38231/focus=38304\">http://thread.gmane.org/gmane.linux.gentoo.devel/38231/focus=38304</a>",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:45): mmhmm",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:46): spb:  Even though it would be harder in the short term to &quot;fix&quot; profiles to use the virtual, you said yourself this would be better,  why not embark on that now, as the more right thing to do",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:47): it's a more intrusive change",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:48): spb:  It's more elegant though?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:48): it is",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:49): spb:  Less artifacts to maintain going foward?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:49): unfortunately, we have to deal with people as well as code",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:49): spb: what's the downside,  I mean what's intrusive about it? adding python,etc DEPs to ebuilds?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:50): editing profiles/base/",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:51): what breaks when editing profiles/base ?",
        "8ca5f57f9239eb0480ae69739a49c953 (03:51): srcerer, basically",
        "8ca5f57f9239eb0480ae69739a49c953 (03:51): srcerer, if you remove python from profiles/base/",
        "8ca5f57f9239eb0480ae69739a49c953 (03:51): srcerer, every profile (directly or indirectly) inherits base profile",
        "8ca5f57f9239eb0480ae69739a49c953 (03:51): srcerer, so they'd all have to indicate a python dep at some level",
        "8ca5f57f9239eb0480ae69739a49c953 (03:52): srcerer, because right now none of them do because python is already in base",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:52): right, so wouldn't that move out to the individual ebuilds?",
        "8ca5f57f9239eb0480ae69739a49c953 (03:52): no, it would be a profile change",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:53): why wouldn't the python DEP be in individual ebuilds?",
        "8ca5f57f9239eb0480ae69739a49c953 (03:53): because if every profile claims python as a system dep",
        "8ca5f57f9239eb0480ae69739a49c953 (03:53): then it's guaranteed to be avaliable",
        "74c761012c0f07003f60498f0c4eaf8c (03:53): implicit system deps.",
        "74c761012c0f07003f60498f0c4eaf8c (03:54): how many ebuilds state they need gcc to compile?",
        "8ca5f57f9239eb0480ae69739a49c953 (03:54): and if it's not avaliable",
        "8ca5f57f9239eb0480ae69739a49c953 (03:54): then you've fscked with system and shame on you",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:56): hmm, that gcc point is interesting, I suppose if the line I was arguing was taken to it's logical conclusion, then gcc would also be removed,   but I don't think it's practical, since no possible distribution of gentoo currently exists that doesn't use a kernel written in C",
        "8ca5f57f9239eb0480ae69739a49c953 (03:56): gcc's not the only c compiler out there",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:57): but how many individual ebuilds would acutally need to DEP python if it wasn't in the base?",
        "74c761012c0f07003f60498f0c4eaf8c (03:57): dunno.  scan the tree :P",
        "74c761012c0f07003f60498f0c4eaf8c (03:58): rather see the virtual shoved in though.  folks who will hit the bugs are the paludis folk trying to ixnay python from their systems",
        "74c761012c0f07003f60498f0c4eaf8c (03:58): bootstrap might require a bit o' love, but that's nothing new",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (03:58): ChrisWhite:  I agree, and the C compiler should be configurable (and therefore not hardcoded in the base profile, but I'm trying to stay within the topic of plugable package managers that all use a common portage tree)",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (03:59): as things stand at the moment removing python from profiles will do very little since it's pulled in by portage",
        "74c761012c0f07003f60498f0c4eaf8c (03:59): hence just shoving the virtual in, and letting y'all sort through it works for me.",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:03): spb:  wouldn't you be changing that by not including portage either?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:03): the default profiles will still include portage, just via the virtual",
        "74c761012c0f07003f60498f0c4eaf8c (04:04): spb: default will specify portage as the default virtual, not necessarily pull it in if the virtual is filled.",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:04): spb: but the virtual can be redefined right?  I mean that was the whole point of your suggestion to move to a virtual right?",
        "74c761012c0f07003f60498f0c4eaf8c (04:04): iow, adjustment to your bootstrapping.",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:05): ferringb: well yes",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:05): but for people using portage",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:05): everything will be as it is at the moment",
        "74c761012c0f07003f60498f0c4eaf8c (04:05): yep.",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:05): spb:  and that's a further point, a feature",
        "74c761012c0f07003f60498f0c4eaf8c (04:05): why the 'but' ?  that's groked... :)",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:06): it makes experimenting with alternate/replacment package managers easier though, and that was the original goal right?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:07): yup",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:07): which is why, if people are amenable to the idea, i'd like to do it",
        "74c761012c0f07003f60498f0c4eaf8c (04:08): moreso used",
        "74c761012c0f07003f60498f0c4eaf8c (04:08): offered the thing more times then I care to count :P",
        "74c761012c0f07003f60498f0c4eaf8c (04:08): stepping away from the profile format (N parent inheritance), without a way to force portage to explode on it, different stance there ;)",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:11): My main reason for piping up was that I saw you, spb, had suggested a solution to your own problem.  One that is elegant and benefits more than just Paludis. But the suggestion seemed to be getting lost in the volume of posts on the thread.",
        "d14a43992332963d26c2439f89e673fc (04:13): spb let me set a procmail rule to handle it",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:13): haha",
        "d14a43992332963d26c2439f89e673fc (04:13): or prepare the grill and order the meat",
        "74c761012c0f07003f60498f0c4eaf8c (04:14): spb: kindly don't send it from the future again ;)",
        "80e8e52c4fc166e1c41b1aefbe0543ba (04:14): heh",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:14): ferringb: you can thank my parents' pc for that",
        "74c761012c0f07003f60498f0c4eaf8c (04:15): spb: going to push for python to be added to other profiles btw, or just going to be cleaning up the implicit python deps as y'all go?",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:16): I don't have any particular bias towards paludis,  frankly hadn't heard of it before it came on the GWN radar,  but I do like the idea that alternate package managers can be experimented with.",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:16): my default intention is to just remove it from base/, default-linux/ and friends and rely on portage pulling it in",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:16): i'm quite willing to be persuaded otherwise",
        "74c761012c0f07003f60498f0c4eaf8c (04:16): works for me.",
        "74c761012c0f07003f60498f0c4eaf8c (04:16): spb: mainly don't want to see the python dep propogate, rather see the implicit deps killed off",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:17): Anything that makes the existing structure more elegant while promoting that kind of experimentation is a good refactoring in my book",
        "74c761012c0f07003f60498f0c4eaf8c (04:17): (that's a war of it's own, also)",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:19): ferringb:  not sure what you refering to when you said &quot;force portage to explode on it&quot;",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64 (04:19): ferringb: is gcc not included in base via a virtual now?",
        "29d07dd9849d021ad7b0d6988c8917f2 (04:21): is there a tool to help me see the latest stable versions of an ebuild for all archs?",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:22): earch or eshowkw",
        "3c72e0357d62f6c5e893107802cd71fc (04:22): ferringb: ping?",
        "29d07dd9849d021ad7b0d6988c8917f2 (04:22): spb: what are they part of?",
        "3c72e0357d62f6c5e893107802cd71fc (04:23): ferringb: i got 4 differences to your tree vulnerabilities report",
        "bf12a9bfd88a5726e8665daecd1a5eb3 (04:23): Merlin: no idea",
        "3c72e0357d62f6c5e893107802cd71fc (04:23): ferringb: app-emulation/wine-0.9 is not vulnerable according to GLSA. wine-0.9 is &gt;= wine-0.9.0",
        "3c72e0357d62f6c5e893107802cd71fc (04:24): ferringb: you're missing dev-perl/Convert-UUlib-1.06. which is &lt; -1.051 and thus vulnerable",
        "3c72e0357d62f6c5e893107802cd71fc (04:24): ferringb: also, glibc-2.3.2-r12 is not vulnerable",
        "3c72e0357d62f6c5e893107802cd71fc (04:25): ferringb: lastly, glibc-2.3.3.20040420-r2 is not vulnerable, either.",
        "3c72e0357d62f6c5e893107802cd71fc (04:26): ferringb: i guess your resolver has problems with version specs",
        "74c761012c0f07003f60498f0c4eaf8c (04:26): glsa numbers...",
        "3c72e0357d62f6c5e893107802cd71fc (04:27): ferringb: wine: 200601-09",
        "74c761012c0f07003f60498f0c4eaf8c (04:27): win-0.9 is less then win-0.9.0 btw.",
        "3c72e0357d62f6c5e893107802cd71fc (04:27): ferringb: no"
    ],
    "person_ids": [
        "29d07dd9849d021ad7b0d6988c8917f2",
        "3c72e0357d62f6c5e893107802cd71fc",
        "bf12a9bfd88a5726e8665daecd1a5eb3",
        "9a3d3c1f5fb9972b6b1f8757bc1fdf64",
        "8ca5f57f9239eb0480ae69739a49c953",
        "74c761012c0f07003f60498f0c4eaf8c",
        "d14a43992332963d26c2439f89e673fc",
        "80e8e52c4fc166e1c41b1aefbe0543ba"
    ]
}