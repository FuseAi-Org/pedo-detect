{
    "id": "f04f4c42babda72c3333ba3bb38fccc7",
    "messages": [
        "542ebcbcf6ee466a1780913e2c800716 (05:44): <a href=\"http://www.microsoft.com/windowsserver2003/\">http://www.microsoft.com/windowsserver2003/</a> &lt;- 3,400,000,000+ users can't be wrong&quot;)",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (05:50): How does one append a variable's contents to a file in bash?",
        "c14665635a9d588bcc1259eceeb233f5 (05:50): so those indentation rule lines",
        "c14665635a9d588bcc1259eceeb233f5 (05:51): like /* vim: ts=8 sts=4 noexpandtab */",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (05:51): ah! no modelines!",
        "c14665635a9d588bcc1259eceeb233f5 (05:51): modelines",
        "c14665635a9d588bcc1259eceeb233f5 (05:51): that's that they're called",
        "c14665635a9d588bcc1259eceeb233f5 (05:51): thanks",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (05:51): always :set nomodeline",
        "c14665635a9d588bcc1259eceeb233f5 (05:52): no",
        "c14665635a9d588bcc1259eceeb233f5 (05:52): I like modelines",
        "c14665635a9d588bcc1259eceeb233f5 (05:57): how are they exploitable again?",
        "0792377b948579515cfdf726e83cbc23 (05:57): the threat is pretty remote",
        "c14665635a9d588bcc1259eceeb233f5 (05:57): well no shit :-)",
        "0792377b948579515cfdf726e83cbc23 (05:58): you can't set the dangerous ones line makeprg",
        "c14665635a9d588bcc1259eceeb233f5 (05:59): and even if it did",
        "c14665635a9d588bcc1259eceeb233f5 (05:59): I'd have to not notice before I ran make",
        "0792377b948579515cfdf726e83cbc23 (05:59): what about grepprg",
        "c14665635a9d588bcc1259eceeb233f5 (06:00): same",
        "c14665635a9d588bcc1259eceeb233f5 (06:00): :grep",
        "c14665635a9d588bcc1259eceeb233f5 (06:00): I don't even use that ever",
        "c14665635a9d588bcc1259eceeb233f5 (06:01): main thing is we have these damn coding guidelines that are only moderately strict about tabulation",
        "c14665635a9d588bcc1259eceeb233f5 (06:02): so some files are indented entirely with spaces, and some with tabs and spaces...but they all line up the same right.  So I'm going to start stuffing modelines like sts=4 ts=8 noexpandtab in the ones I discover use tab, and ts=4 expandtab in the ones that use space.",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:04): hey unlink, tpope, if you guys are still willing to help with my Bash scripting newbness, how would I make this script: <a href=\"http://rafb.net/paste/results/d69UhB41.html\">http://rafb.net/paste/results/d69UhB41.html</a> support multiple filenames from STDIN?",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:04): (like if I wanted to do mpc ls | my-add-script )",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:05): I don't know how I'd iterate through each line of input",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:05): read",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:07): do you know about mpc add?",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:07): ah, that's not what you want",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:17): Tonren:  mpc ls | awk 'BEGIN { MDIR = &quot;/music&quot; } { print MDIR PDIR &quot;/&quot; $1; }' &gt;my_playlist.m3u",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:19): unlink: On one hand, I'm chagrined that at first glance, the meaning of what you just typed is completely obfuscated to me",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:19): better yet, mpc ls | sed &quot;s@^@$MDIR/@&quot;",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:19): unlink: On the other hand, I'm fairly certain you just solved my entire problem in a single line",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:20): oops",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:20): get rid of the PDIR in that awk script",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:21): how do I test if $2 is set?  do I just say if $2?",
        "4c2ade5d507d3a90dabe950fa9067943 (06:21): Tonren: have you seen <a href=\"http://www.tldp.org/LDP/abs/html/\">http://www.tldp.org/LDP/abs/html/</a>",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:21): digitect: I'm looking right at it",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:22): digitect: It's tough to navigate for a newbie, though",
        "4c2ade5d507d3a90dabe950fa9067943 (06:22): it is, it is a huge manual",
        "4c2ade5d507d3a90dabe950fa9067943 (06:22): function arguments are 23.1",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:23): digitect: The only thing is that it's tough to know where the information I'm looking for is, you know?  It could be in functions, but it could also be in another sub-section",
        "4c2ade5d507d3a90dabe950fa9067943 (06:24): actually, function points to &quot;positional parameters&quot; in 9.1",
        "4c2ade5d507d3a90dabe950fa9067943 (06:24): I think that might be what you need",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:24): if [ -z $2 ]; then  might work",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:25): unlink: Is -z an argument for the test function?",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:26): nah, it's a bash builtin",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:27): by the way, is there anything more graceful than echo &quot;$SOMESTRING&quot; &gt;&gt; &quot;$TARGETFILE&quot; to append a variable to a file?",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:28): not really",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:29): that's really odd, heh",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:29): why?",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:30): I guess it makes sense when I think about how interconnected GNU commands are, but I'm so used to thinking about &quot;echo&quot; as a command that sends things solely to the screen, that it seems like I'm &quot;overriding&quot; it to use it this way.",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:30): uh",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:30): what.",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:30): what, what?",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:31): you make about as much sense as an elastic cattleprod",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:31): I own one of those.",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:33): redirection is the responsibility of the shell",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:34): someone mentioned the ABS already -- well worth a read :)",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:34): although i dunno why it has the A",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:34): it's more advanced than anyone sane would want",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:35): nonsense",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:35): it's pretty basic stuff",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:35): if you're scripting anything non-trivial in bash you're courting trouble",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:35): not really.",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:36): arrays of strings containing spaces",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:36): that's all I have to say",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:36): astecp: *shudders*",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:36): easily handled via correct coding standards",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:36): bullshit",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:36): ciaranm: Which are designed for COMPUTERS to understand, not humans, dude.",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:36): uh, no",
        "2587e10a3d1beb13ed1ec8c1938b30a7 (06:36): that's like saying fucking correctly will result in 0 condom brakeage",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:37): hahaha",
        "ded01cf47cdca62f9adcfd25cb1b3127 (06:37): er, no.",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:37): bash sucks because it's slow and its syntax is ugly",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:37): `nuff said",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:38): Tonren: privmsg",
        "1e853d4d8549e845e5a0edb60d1af63d (06:39): Hey... how can I recover a file.swp file, without the oprigional file, and without a crash?",
        "a68dc5ae3ddabf401dc64c2b47e775b2 (06:39): vim -r perhaps",
        "1e853d4d8549e845e5a0edb60d1af63d (06:40): ^_^ thank you!",
        "66f7a0d605bf769a2146edfc96e6b622 (06:46): hey",
        "66f7a0d605bf769a2146edfc96e6b622 (06:46): what's the shortcut to go to a line?",
        "828997d3329f6368569d69d0d2baa3e6 (06:46): [line]G",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b (06:49): hey guys, what regex would match this: #121) and this: #5) .  ?  maybe vim's weird syntax has ruined me, because I feel like @^#[0-9]*) @replacement@ should work, but it doesn't"
    ],
    "person_ids": [
        "542ebcbcf6ee466a1780913e2c800716",
        "4539a9ac5a5c9d9cdf2ba2aa5562011b",
        "c14665635a9d588bcc1259eceeb233f5",
        "a68dc5ae3ddabf401dc64c2b47e775b2",
        "0792377b948579515cfdf726e83cbc23",
        "4c2ade5d507d3a90dabe950fa9067943",
        "ded01cf47cdca62f9adcfd25cb1b3127",
        "2587e10a3d1beb13ed1ec8c1938b30a7",
        "1e853d4d8549e845e5a0edb60d1af63d",
        "66f7a0d605bf769a2146edfc96e6b622",
        "828997d3329f6368569d69d0d2baa3e6"
    ]
}