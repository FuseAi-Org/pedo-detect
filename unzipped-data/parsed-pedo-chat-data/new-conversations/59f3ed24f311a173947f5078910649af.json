{
    "id": "59f3ed24f311a173947f5078910649af",
    "messages": [
        "43d2e4c8ebdceba76435c1f675f8d628 (21:18): BillieGDJoe: please turn that off.",
        "3121156175f01176f6cd06cd578e86cc (21:31): hi",
        "3121156175f01176f6cd06cd578e86cc (21:34): i'm trying to learn iptables",
        "3121156175f01176f6cd06cd578e86cc (21:35): and i've been looking for an option like &quot;quick&quot; in netbsd's ipf",
        "3121156175f01176f6cd06cd578e86cc (21:35): hm",
        "3121156175f01176f6cd06cd578e86cc (21:36): i want it to stop processing the rules after jumping to a target",
        "3121156175f01176f6cd06cd578e86cc (21:37): but i dont want to write two rules for each match...",
        "03697b3b534d19c3dd1c41c4d558cd0a (21:37): HEXaBYTE: what does quick do?",
        "03697b3b534d19c3dd1c41c4d558cd0a (21:38): HEXaBYTE: can you give an instance?",
        "3121156175f01176f6cd06cd578e86cc (21:38): an example:",
        "3121156175f01176f6cd06cd578e86cc (21:39): iptables -t mangle -A FORWARDING -p tcp -d XXX.XXX.XXX.XXX -j MARK --set-mark Y",
        "3121156175f01176f6cd06cd578e86cc (21:39): if it matches, it will mark the packet",
        "3121156175f01176f6cd06cd578e86cc (21:40): and then it will continue with the other rules in the chain",
        "3121156175f01176f6cd06cd578e86cc (21:40): what i want is a short way to do:",
        "673d7d497cb7c30e46ce951bc321aafd (21:40): iptables -t mangle -A FORWARDING -p tcp -d XXX.XXX.XXX.XXX -j MARK --set-mark Y",
        "673d7d497cb7c30e46ce951bc321aafd (21:40): iptables -t mangle -A FORWARDING -p tcp -d XXX.XXX.XXX.XXX -j RETURN",
        "673d7d497cb7c30e46ce951bc321aafd (21:40): if it was in a custom chain",
        "673d7d497cb7c30e46ce951bc321aafd (21:40): or how do you mean?",
        "3121156175f01176f6cd06cd578e86cc (21:41): yes, i was going to write that =)",
        "3121156175f01176f6cd06cd578e86cc (21:41): but, is there a short way to do it?",
        "673d7d497cb7c30e46ce951bc321aafd (21:41): im not sure if it will stop processing when hitting MARK",
        "3121156175f01176f6cd06cd578e86cc (21:41): with only one rule",
        "3121156175f01176f6cd06cd578e86cc (21:41): no, it doesn't stop",
        "673d7d497cb7c30e46ce951bc321aafd (21:41): well one way would be to create a custom chain",
        "3121156175f01176f6cd06cd578e86cc (21:41): i've tried it",
        "03697b3b534d19c3dd1c41c4d558cd0a (21:42): HEXaBYTE: You dont need to type return",
        "673d7d497cb7c30e46ce951bc321aafd (21:42): -A RETURNMARK -j MARK --set-mark Y",
        "673d7d497cb7c30e46ce951bc321aafd (21:42): -A RETURNMARK -j RETURN",
        "673d7d497cb7c30e46ce951bc321aafd (21:42): and then just",
        "673d7d497cb7c30e46ce951bc321aafd (21:42): -t mangle -A FORWARDING -p tcp -d x.x.x.x -k RETURNMARK",
        "673d7d497cb7c30e46ce951bc321aafd (21:43): -k = -j",
        "3121156175f01176f6cd06cd578e86cc (21:43): hm",
        "3121156175f01176f6cd06cd578e86cc (21:43): but if it reaches &quot;RETURNMARK -j RETURN&quot;",
        "03697b3b534d19c3dd1c41c4d558cd0a (21:43): Apachez: HEXaBYTE why doen any one have to return it unless there is not a DROP... Any way the packet will return after traversing the user defined chain",
        "673d7d497cb7c30e46ce951bc321aafd (21:44): linux_manju: yeah but i like it to write that return out since it wont hurt and would make the reading easier",
        "03697b3b534d19c3dd1c41c4d558cd0a (21:44): Apachez: I agree.. but then...",
        "3121156175f01176f6cd06cd578e86cc (21:44): linux_manju: and the packet could match more mark rules later",
        "673d7d497cb7c30e46ce951bc321aafd (21:44): HEXaBYTE: when it reaches reaturnmark -j return it will jump back to where it was and continue examination",
        "3121156175f01176f6cd06cd578e86cc (21:44): and i want it to match only the first",
        "673d7d497cb7c30e46ce951bc321aafd (21:45): only the first packet ?",
        "673d7d497cb7c30e46ce951bc321aafd (21:45): -m state --state NEW ?",
        "3121156175f01176f6cd06cd578e86cc (21:45): only the first rule :-/",
        "673d7d497cb7c30e46ce951bc321aafd (21:45): HEXaBYTE: do this.. find yourself a pastebin and write it down an example on what you want it to happend",
        "3121156175f01176f6cd06cd578e86cc (21:46): ok =)",
        "673d7d497cb7c30e46ce951bc321aafd (21:46): because right now you are a bit confusing",
        "673d7d497cb7c30e46ce951bc321aafd (21:47): the idea with pastebin is that you can spam much more text there and not get kicked due to spam :P",
        "673d7d497cb7c30e46ce951bc321aafd (21:47): once you have written your examples in a pastebin then paste the link in here :)",
        "3121156175f01176f6cd06cd578e86cc (21:51): well, i believe i don't need pastebin",
        "3121156175f01176f6cd06cd578e86cc (21:51): only with these two rules:",
        "3121156175f01176f6cd06cd578e86cc (21:51): iptables -t mangle -A FORWARDING -p udp --port 5060 -j MARK --set-mark 4",
        "3121156175f01176f6cd06cd578e86cc (21:51): iptables -t mangle -A FORWARDING -m connrate --connrate 0:10000 -j MARK --set-mark 2",
        "3121156175f01176f6cd06cd578e86cc (21:52): if a packet matches both rules",
        "3121156175f01176f6cd06cd578e86cc (21:52): i wan't it to jump only to the first target",
        "3121156175f01176f6cd06cd578e86cc (21:52): -j MARK --set-mark 4",
        "3121156175f01176f6cd06cd578e86cc (21:53): hm, i believe i could write them reversely",
        "3121156175f01176f6cd06cd578e86cc (21:53): but if there are a lot of rules",
        "3121156175f01176f6cd06cd578e86cc (21:54): it will be doing unnecessary work",
        "673d7d497cb7c30e46ce951bc321aafd (21:55): then why not put it in its own table ?",
        "673d7d497cb7c30e46ce951bc321aafd (21:55): like",
        "673d7d497cb7c30e46ce951bc321aafd (21:55): -N MARKJUMP",
        "673d7d497cb7c30e46ce951bc321aafd (21:56): -A MARKJUMP -p udp --port 5060 -j MARK --set-mark 4",
        "673d7d497cb7c30e46ce951bc321aafd (21:56): -A MARKJUMP -p udp --port 5060 -j RETURN",
        "673d7d497cb7c30e46ce951bc321aafd (21:56): -A MARKJUMP -m connrate --connrate 0:10000 -j MARK --set-mark 2",
        "673d7d497cb7c30e46ce951bc321aafd (21:56): -A MARKJUMP -m connrate --connrate 0:10000 -j RETURN",
        "673d7d497cb7c30e46ce951bc321aafd (21:57): -A MARKJUMP -j RETURN",
        "673d7d497cb7c30e46ce951bc321aafd (21:57): and then in -t mangle",
        "673d7d497cb7c30e46ce951bc321aafd (21:57): -t mangle -A FORWARDING -j MARKJUMP",
        "3121156175f01176f6cd06cd578e86cc (21:57): but then, i will have to write a lot :S",
        "3121156175f01176f6cd06cd578e86cc (21:57): two rules for each match",
        "673d7d497cb7c30e46ce951bc321aafd (21:57): of course depending on how many things you process in -t mangle you might normlize it better",
        "673d7d497cb7c30e46ce951bc321aafd (21:57): yes ?",
        "673d7d497cb7c30e46ce951bc321aafd (21:58): but you will have the feature of not having to process unnecessary rules",
        "3121156175f01176f6cd06cd578e86cc (21:58): hmm",
        "3121156175f01176f6cd06cd578e86cc (21:58): i could write a patch for iptables",
        "673d7d497cb7c30e46ce951bc321aafd (21:58): look at my BADTCP chain for example at <a href=\"http://www.tbg.nu/iptables.txt\">http://www.tbg.nu/iptables.txt</a>",
        "3121156175f01176f6cd06cd578e86cc (21:59): it is a lot shorter with ipf =)",
        "673d7d497cb7c30e46ce951bc321aafd (22:00): no its not",
        "673d7d497cb7c30e46ce951bc321aafd (22:01): if you mean &quot;scrub all in&quot; that is implemented by default in 2.6",
        "673d7d497cb7c30e46ce951bc321aafd (22:01): so you wont need to write any scrub line at all in iptables :)",
        "03697b3b534d19c3dd1c41c4d558cd0a (22:02): HEXaBYTE: I respect BSD as a good OS.. But when it comes to netfilter There rnt many things that beat it",
        "3121156175f01176f6cd06cd578e86cc (22:02): hmm",
        "673d7d497cb7c30e46ce951bc321aafd (22:03): my badtcp chain is basically a backport from 2.6 into iptables used in 2.4 to perform tcp flag filtering written in iptables",
        "3121156175f01176f6cd06cd578e86cc (22:03): yes",
        "3121156175f01176f6cd06cd578e86cc (22:05): what does &quot;scrub all in&quot; exactly do?",
        "673d7d497cb7c30e46ce951bc321aafd (22:07): sanity check of the packets",
        "673d7d497cb7c30e46ce951bc321aafd (22:07): like if the tcp flag combinations are valid",
        "673d7d497cb7c30e46ce951bc321aafd (22:07): if the length reported is correct etc",
        "673d7d497cb7c30e46ce951bc321aafd (22:08): in iptables there were a module named &quot;UNCLEAN&quot; which performed the same thing",
        "673d7d497cb7c30e46ce951bc321aafd (22:08): that was removed in mid 2.6 and being incorporated by default by the conntrack module",
        "673d7d497cb7c30e46ce951bc321aafd (22:08): this way a packet which is malformed in some way will be marked INVALID by the conntrack module",
        "3121156175f01176f6cd06cd578e86cc (22:08): hm",
        "673d7d497cb7c30e46ce951bc321aafd (22:09): for example the tcp flags",
        "673d7d497cb7c30e46ce951bc321aafd (22:10): like RST + SYN is not a valid combination",
        "3121156175f01176f6cd06cd578e86cc (22:10): yes",
        "673d7d497cb7c30e46ce951bc321aafd (22:12): and like if a tcp packet is smaller than minimal tcp header",
        "673d7d497cb7c30e46ce951bc321aafd (22:12): parts are missing of the header",
        "673d7d497cb7c30e46ce951bc321aafd (22:13): invalid checksum",
        "673d7d497cb7c30e46ce951bc321aafd (22:13): and so on...",
        "7e54395f8722e8891423286e00d838ba (22:13): Hi, I had my box been attack by a force attack, checking lots of password for root, mysql ...",
        "7e54395f8722e8891423286e00d838ba (22:13): on my sshd port",
        "7e54395f8722e8891423286e00d838ba (22:13): here was my answer:",
        "673d7d497cb7c30e46ce951bc321aafd (22:14): roxy_: create rules which will drop packets if they are from wrong ip/iprange",
        "7e54395f8722e8891423286e00d838ba (22:14): iptables -I INPUT -i eth0 -m state --state NEW -m recent --set",
        "7e54395f8722e8891423286e00d838ba (22:14): iptables -I INPUT -i eth0 -m state --state NEW -m recent --update --seconds 120 --hitcount 2 -j DROP",
        "673d7d497cb7c30e46ce951bc321aafd (22:14): also configure your ssh deamon to only allow ssh2 protocol and disable ability to login as root",
        "7e54395f8722e8891423286e00d838ba (22:14): but I can't ssh anymore , why ?",
        "7e54395f8722e8891423286e00d838ba (22:15): Apachez: done that already, there are no wrong ip/range",
        "7e54395f8722e8891423286e00d838ba (22:15): is my table wrong or does ssh log twice as new ?",
        "673d7d497cb7c30e46ce951bc321aafd (22:16): so you mean everyone should be able to ssh to your box ?",
        "7e54395f8722e8891423286e00d838ba (22:16): Apachez: no, I mean I don't know where I'll ssh from next time",
        "673d7d497cb7c30e46ce951bc321aafd (22:16): sounds bad",
        "673d7d497cb7c30e46ce951bc321aafd (22:16): i would recommend you to:",
        "673d7d497cb7c30e46ce951bc321aafd (22:17): 1) allow only ssh2 (disable ssh1) protocol",
        "673d7d497cb7c30e46ce951bc321aafd (22:17): 2) disallow root from directly login through ssh (login as regular user and then run &quot;su -&quot; if you need to become root)",
        "673d7d497cb7c30e46ce951bc321aafd (22:17): 3) move ssh to another port of your choice",
        "673d7d497cb7c30e46ce951bc321aafd (22:17): 4) put a limit in iptables which will limit NEW packets per sourceip",
        "7e54395f8722e8891423286e00d838ba (22:18): Apachez: do you know the recent module ?",
        "673d7d497cb7c30e46ce951bc321aafd (22:19): nop",
        "7e54395f8722e8891423286e00d838ba (22:21): Apachez: thanks for trying to help me, but I am trying to use this module as you can see from my iptable rules.",
        "673d7d497cb7c30e46ce951bc321aafd (22:29): perhaps you can fix point 1-3 at least ?",
        "7e54395f8722e8891423286e00d838ba (22:31): Apachez: as I told you I have done that already for 1 and 2. 3 is not a good solution for my use case",
        "93dede99112199d049a1bc421e564cd4 (22:33): what's the goal here, limit ssh login attempts?",
        "7e54395f8722e8891423286e00d838ba (22:36): vice-versa: yes, I wanted no more than 2 attempts per 2 minutes",
        "7e54395f8722e8891423286e00d838ba (22:36): vice-versa: but any attempt is dropped",
        "7e54395f8722e8891423286e00d838ba (22:37): vice-versa: trying to ssh myself, this is the log from syslog: <a href=\"http://rafb.net/paste/results/ghSIyI39.html\">http://rafb.net/paste/results/ghSIyI39.html</a>",
        "7e54395f8722e8891423286e00d838ba (22:40): vice-versa: sorry, I made a mistake. I can ssh to myself &quot;ssh 192.168.1.105&quot; but not using my dyndns address: &quot;ssh roxy.dyndns.org&quot;",
        "93dede99112199d049a1bc421e564cd4 (22:41): roxy_: I'll pastebin the relevant bits from my script on how I accomplish this if you're interested",
        "7e54395f8722e8891423286e00d838ba (22:42): vice-versa: thanks I got a script: <a href=\"http://www.debian-administration.org/articles/187\">http://www.debian-administration.org/articles/187</a> . I am more trying to understand why it is not working.",
        "93dede99112199d049a1bc421e564cd4 (22:44): roxy_: did you try it with those exact rules before changing the --update and --hitcount values?",
        "7e54395f8722e8891423286e00d838ba (22:45): vice-versa: no, but that sounds like a good idea :-)",
        "7e54395f8722e8891423286e00d838ba (22:46): vice-versa: I think a icmp packet could come from my router before the ssh packet comes in",
        "93dede99112199d049a1bc421e564cd4 (22:47): roxy_: yeah, try it mine are very similar  -A ssh_inbound -m state --state NEW -m recent --update --seconds 60 --hitcount 3 -j DROP",
        "93dede99112199d049a1bc421e564cd4 (22:50): I use a ssh_inbound custom chain that has rules to trust, (ACCEPT), LAN connections as well as some trusted statics, the rest of the connection attempts are then matched against the resent rules",
        "93dede99112199d049a1bc421e564cd4 (22:53): I also drop attempts from well known abusers, 61.0.0.0/8, 211.0.0.0/8, 210.0.0.0/8  etc",
        "0dc8fc8ea1207f8b7d9f44bcf8e99e79 (23:05): that leads to an interesting question, is it possible to redirect offenders to another port? to install a ssh honeypot there",
        "93dede99112199d049a1bc421e564cd4 (23:05): why bother",
        "0dc8fc8ea1207f8b7d9f44bcf8e99e79 (23:06): might be fun watching the kiddys how they try to hack a server with a fake shell",
        "93dede99112199d049a1bc421e564cd4 (23:07): myself I think that would just invite potential problems",
        "93dede99112199d049a1bc421e564cd4 (23:08): geeks are a strange lot, retaliation come to mind ;)",
        "673d7d497cb7c30e46ce951bc321aafd (23:08): honeypots are fun :)",
        "7e54395f8722e8891423286e00d838ba (23:10): vice-versa: finaly got it to work, thanks for your help"
    ],
    "person_ids": [
        "43d2e4c8ebdceba76435c1f675f8d628",
        "3121156175f01176f6cd06cd578e86cc",
        "03697b3b534d19c3dd1c41c4d558cd0a",
        "673d7d497cb7c30e46ce951bc321aafd",
        "7e54395f8722e8891423286e00d838ba",
        "93dede99112199d049a1bc421e564cd4",
        "0dc8fc8ea1207f8b7d9f44bcf8e99e79"
    ]
}