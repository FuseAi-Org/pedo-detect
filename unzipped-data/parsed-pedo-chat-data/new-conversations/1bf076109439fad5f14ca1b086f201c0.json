{
    "id": "1bf076109439fad5f14ca1b086f201c0",
    "messages": [
        "b844a0a98f81c321afe1d38ae37f3c28 (17:15): channel #html-wg",
        "25812bf456959aa5f28dc570f341a3ba (17:15): is 'HTML WG telcon 15 Jan 17:00Z http://lists.w3.org/Archives/Public/public-html-wg-announce/2009JanMar/0001.html ; This channel is logged: http://krijnhoetmer.nl/irc-logs/'",
        "5d5b78699e57104f2fa03bbdf7b9197b (17:15): by DanC on Thu Jan 15 17:41:05",
        "b07211a0c7cb119232799d2119cea90f (17:30): I think perhaps I don't like RDF because it's ugly",
        "60659cfda992013e610f285c46692d28 (17:36): b07211a0c7cb119232799d2119cea90f: RDF the data model, RDF/XML or RDFa?",
        "b07211a0c7cb119232799d2119cea90f (17:39): any of the syntaxes I've seen thus far",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:41): the idea is very appealing, but in practice it's just too damn complex",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:41): b07211a0c7cb119232799d2119cea90f: even N-Triples?",
        "b07211a0c7cb119232799d2119cea90f (17:42): n3 looks alright, actually",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:44): b07211a0c7cb119232799d2119cea90f: N-Triples is even simpler",
        "b07211a0c7cb119232799d2119cea90f (17:44): oh, I thought they were the same thing",
        "b07211a0c7cb119232799d2119cea90f (17:45): ah right",
        "b07211a0c7cb119232799d2119cea90f (17:45): yeah, that looks plain enough",
        "b07211a0c7cb119232799d2119cea90f (17:45): using URLs as identifiers is still ugly, though",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:47): yeah, that's a pretty serious misfeature",
        "60659cfda992013e610f285c46692d28 (17:48): b8810fee2f4a71f849f3f7409546d1d9: I consider it a feature",
        "b07211a0c7cb119232799d2119cea90f (17:49): I guess I haven't really seen any situations in which using them as identifiers is helpful over doing it some other way",
        "b07211a0c7cb119232799d2119cea90f (17:49): from my pov, anyway",
        "60659cfda992013e610f285c46692d28 (17:50): You'd need a new system that allows naming in a decentrailzed way",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:51): geolocation+timestamp",
        "b07211a0c7cb119232799d2119cea90f (17:51): given the way that prefixes tend to get used universally anyway, I'm not sure you do",
        "b07211a0c7cb119232799d2119cea90f (17:51): e.g. everyone uses dc: for dublin core",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:53): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: geolocation+timestamp doesn't work for astronautics",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:55): b8810fee2f4a71f849f3f7409546d1d9, I wasn't serious, but good point :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:55): b8810fee2f4a71f849f3f7409546d1d9, it might also fail because geolocation is not precise",
        "b07211a0c7cb119232799d2119cea90f (17:56): and it hardly addresses the issue of clunky identifiers :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:09): 60659cfda992013e610f285c46692d28, I don't see how the &quot;does not work in FF&quot; is relevant; it does not have to work in FF because it just creates a new tree using the same mode as the document it was created from",
        "60659cfda992013e610f285c46692d28 (18:17): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: I already pointed this out multiple times.",
        "60659cfda992013e610f285c46692d28 (18:18): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: the pure XSLT 1.0 workaround is d-o-e, and that produces a text node in the generated DOM that you don't want.",
        "60659cfda992013e610f285c46692d28 (18:18): 60659cfda992013e610f285c46692d28: at least, I don't want it :-)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:21): yes, I'm saying you don't need a DOCTYPE at all in FF",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:21): because you're not creating a serialization, but a document",
        "60659cfda992013e610f285c46692d28 (18:22): Anne: but in that case I need different versions of my XSLT code, depending on where they are executed.",
        "60659cfda992013e610f285c46692d28 (18:23): Anne: and also different versions for different UAs (I think); those that serialize and reparse will want the doctype, right?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:23): are there any UAs that serialize and reparse? sounds buggy",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:24): Opera might do that though, don't remember",
        "60659cfda992013e610f285c46692d28 (18:24): I through all except FF do.",
        "60659cfda992013e610f285c46692d28 (18:24): s/through/thought/",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:24): interesting",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:26): what else is being helped by &lt;!DOCTYPE html PUBLIC &quot;&quot;&gt; ?",
        "60659cfda992013e610f285c46692d28 (18:31): I just tested a minimal XSLT that uses xsl:text/@d-o-e, and the text node only appears in FF, not in Opera, IE or Safari. Which suggests that these three re-parse...",
        "60659cfda992013e610f285c46692d28 (18:32): &lt;!DOCTYPE html PUBLIC &quot;&quot;&gt; helps XSLT 1.0 and JAXP. I currently live in Java land, so this would make *me* happy.",
        "60659cfda992013e610f285c46692d28 (18:32): If there are other serialization methods that are both widely used, can't be simply updated, and can't produce *that*, then we should of course help them as well.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:34): I would assume most serializers to be able to produce the SYSTEM variant, as that is actually correct per XML",
        "60659cfda992013e610f285c46692d28 (18:38): Anne, but just PUBLIC &quot;&quot; is correct per XML as well, isn't it (wo what's correct doesn't really help determining what's best(",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:41): i don't think it is",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:41): and it gives a well-formedness error in at least two browsers I use",
        "3f2e2531201cfbf853f16f668132eaf2 (18:41): doctypedecl ::= '&lt;!DOCTYPE' S Name (S ExternalID)? S? ('[' intSubset ']' S?)? '&gt;'",
        "3f2e2531201cfbf853f16f668132eaf2 (18:41): ExternalID ::= 'SYSTEM' S SystemLiteral | 'PUBLIC' S PubidLiteral S SystemLiteral",
        "3f2e2531201cfbf853f16f668132eaf2 (18:41): Seems like it doesn't allow just PUBLIC",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:41): thanks 3f2e2531201cfbf853f16f668132eaf2",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:41): saves me from looking again",
        "60659cfda992013e610f285c46692d28 (18:43): indeed.",
        "60659cfda992013e610f285c46692d28 (18:44): I'm not sure that XML compliance is essential, as this was for producing text/html. But if producing content that is both text/html and application/xhtml+xml *is* a use case, XML compliance will be needed.",
        "3f2e2531201cfbf853f16f668132eaf2 (18:46): XML compliance is useful for compatibility with text/html serialisers that have inherited XML's constraints",
        "3f2e2531201cfbf853f16f668132eaf2 (18:46): (which appears to be a non-zero number)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): (annoyingly)",
        "3f2e2531201cfbf853f16f668132eaf2 (18:47): (but I don't know how many have users who would care, and who can't print strings to the output stream themselves, and can't upgrade the library or switch to a different library)"
    ],
    "person_ids": [
        "b844a0a98f81c321afe1d38ae37f3c28",
        "25812bf456959aa5f28dc570f341a3ba",
        "5d5b78699e57104f2fa03bbdf7b9197b",
        "b07211a0c7cb119232799d2119cea90f",
        "60659cfda992013e610f285c46692d28",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "3f2e2531201cfbf853f16f668132eaf2",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}