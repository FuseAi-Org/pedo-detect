{
    "id": "cabc145f39de79d92e35d71597521eb9",
    "messages": [
        "42e76c77af424a4350ab0e3e3f6f2ce9 (19:48): 69b0d3dfe919a6b860a9fac82de52a7e, I just noticed HTML4 uses bee-keeping in an example here (never noticed that before): http://www.w3.org/TR/html4/struct/global.html#edef-TITLE",
        "b8810fee2f4a71f849f3f7409546d1d9 (19:51): 73eaf221abca1b8244e34b0b9e76ac46: ASCII whining fixed. thanks.",
        "b8810fee2f4a71f849f3f7409546d1d9 (19:51): 69b0d3dfe919a6b860a9fac82de52a7e: &lt;/p&gt; whining on &lt;/dd&gt; fixed. thanks",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:54): b8810fee2f4a71f849f3f7409546d1d9, is there some Web SVN view on Validator.nu progress?",
        "b8810fee2f4a71f849f3f7409546d1d9 (19:55): edb259c0e0038f38bb200bc20c8cbf7e: there isn't",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:09): cuts source location comparisons when validating cnn.com by 87% by replacing TreeSet with appropriately head and tail biased linked list-backed SortedSet implmentations",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:09): it was rather surpising that location comparisons for Show Source were a hot spot",
        "c480405f460f7a61964569640a6cd059 (20:19): edb259c0e0038f38bb200bc20c8cbf7e, 69b0d3dfe919a6b860a9fac82de52a7e: ping",
        "ab7faae5d7b250ea8606486575f8f79c (20:36): can now write data to files with an entirely lovely combination of RandomAccessFile and ByteArrayOutputStream and DeflaterOutputStream and cPickle",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): (It makes me feel a bit dirty :-( )",
        "73eaf221abca1b8244e34b0b9e76ac46 (20:55): b8810fee2f4a71f849f3f7409546d1d9: do you have a regression testing system for v.nu?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:09): 42e76c77af424a4350ab0e3e3f6f2ce9: yeah that's where it comes from",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:10): c480405f460f7a61964569640a6cd059: pong, but about to go offline for a bit",
        "c480405f460f7a61964569640a6cd059 (21:10): 69b0d3dfe919a6b860a9fac82de52a7e, word on the street is that HTML5 says that myHTMLNode.localName should return lower case?",
        "c480405f460f7a61964569640a6cd059 (21:11): 69b0d3dfe919a6b860a9fac82de52a7e, you sure that's not going to break stuff given that gecko has returned upper case for ages?",
        "c480405f460f7a61964569640a6cd059 (21:11): 69b0d3dfe919a6b860a9fac82de52a7e, or rather, what do you have to indicate that that won't break stuff :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:12): webkit returns lowercase",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:12): and i got several requests to keep at least one thing consistent between XHTML and HTML",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:12): so it seemed like the least dangerous choice",
        "c480405f460f7a61964569640a6cd059 (21:13): least dangerous why?",
        "c480405f460f7a61964569640a6cd059 (21:13): it does seem like the most desireable for sure, not sure about least dangerous",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): well tagName seemed like a big danger in comparison, e.g.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): and localName is relatively new compared to the others",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): i'm not saying _not_ dangerous",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): just _least_ dangerous",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): i really have to go now",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:14): send mail if you want to follow up",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:14): or wait a few hours :-)",
        "c480405f460f7a61964569640a6cd059 (21:14): ok",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:23): c480405f460f7a61964569640a6cd059: hey",
        "c480405f460f7a61964569640a6cd059 (21:24): 73eaf221abca1b8244e34b0b9e76ac46, yo",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:24): c480405f460f7a61964569640a6cd059: i'm working on fixing dom core - http://simon.html5.org/specs/web-dom-core",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:25): c480405f460f7a61964569640a6cd059: i'm considering dropping error checking altogether, do you think that would be feasible?",
        "c480405f460f7a61964569640a6cd059 (21:29): 73eaf221abca1b8244e34b0b9e76ac46, what is that spec, i've never seen it before",
        "c480405f460f7a61964569640a6cd059 (21:29): 73eaf221abca1b8244e34b0b9e76ac46, it seems to have a lot of missing parts",
        "c480405f460f7a61964569640a6cd059 (21:31): 73eaf221abca1b8244e34b0b9e76ac46, and specifically which error checking do you want to drop? the nodename ones?",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:34): c480405f460f7a61964569640a6cd059: i started to work on it last week",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:34): c480405f460f7a61964569640a6cd059: the checking against XML and XMLNS productions",
        "c480405f460f7a61964569640a6cd059 (21:36): 73eaf221abca1b8244e34b0b9e76ac46, how do you mean?",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:36): e.g. createElementNS throws if you pass in something that's not a QName",
        "c480405f460f7a61964569640a6cd059 (21:36): 73eaf221abca1b8244e34b0b9e76ac46, ok",
        "c480405f460f7a61964569640a6cd059 (21:36): 73eaf221abca1b8244e34b0b9e76ac46, is that something that we really don't want to enforce?",
        "c480405f460f7a61964569640a6cd059 (21:37): 73eaf221abca1b8244e34b0b9e76ac46, we've enforced that in gecko for a while and I don't think i've seen any bugs about it",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:37): c480405f460f7a61964569640a6cd059: thing is that it's not enforced, you can still get elements that aren't QName by adopting elements from other documents",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:38): c480405f460f7a61964569640a6cd059: and the checking is arbitrary, everything isn't checked and some things are checked but not against what xml says but something different",
        "c480405f460f7a61964569640a6cd059 (21:38): 73eaf221abca1b8244e34b0b9e76ac46, hmm..",
        "c480405f460f7a61964569640a6cd059 (21:38): 73eaf221abca1b8244e34b0b9e76ac46, i guess the html parser can produce a somewhat larger set of node names",
        "c480405f460f7a61964569640a6cd059 (21:38): 73eaf221abca1b8244e34b0b9e76ac46, still has some restrictions though",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:39): c480405f460f7a61964569640a6cd059: indeed",
        "c480405f460f7a61964569640a6cd059 (21:39): 73eaf221abca1b8244e34b0b9e76ac46, the two things that i remember specifically not wanting to allow was null characters and spaces in node names",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:39): c480405f460f7a61964569640a6cd059: i'd be fine with checking for things that the html parser can't produce",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:40): c480405f460f7a61964569640a6cd059: but right now it's just arbitrary and useless imho",
        "c480405f460f7a61964569640a6cd059 (21:40): 73eaf221abca1b8244e34b0b9e76ac46, i'd be fine with loosening things a little, but i don't think i want to get too crazy",
        "c480405f460f7a61964569640a6cd059 (21:40): 73eaf221abca1b8244e34b0b9e76ac46, i don't see much value in allowing too crazy node names",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:41): c480405f460f7a61964569640a6cd059: ok",
        "c480405f460f7a61964569640a6cd059 (21:42): 73eaf221abca1b8244e34b0b9e76ac46, but in general allowing the DOM and the parser to create the same set of names makes sense to me",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:43): c480405f460f7a61964569640a6cd059: ok. thanks",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:44): c480405f460f7a61964569640a6cd059: another thing, gecko in quirks mode allows createElement('&lt;div&gt;'), but opera and webkit don't",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:44): c480405f460f7a61964569640a6cd059: is that something that could be changed in gecko?",
        "c480405f460f7a61964569640a6cd059 (21:44): 73eaf221abca1b8244e34b0b9e76ac46, yeah, that originally came from some internal sites at IBM",
        "c480405f460f7a61964569640a6cd059 (21:45): 73eaf221abca1b8244e34b0b9e76ac46, hard to say, i'm sure sites will break if we remove it",
        "c480405f460f7a61964569640a6cd059 (21:45): 73eaf221abca1b8244e34b0b9e76ac46, the syntax originally comes from IE which allows you to do stuff like   createElement('&lt;div foo=bar&gt;')",
        "c480405f460f7a61964569640a6cd059 (21:46): 73eaf221abca1b8244e34b0b9e76ac46, but we didn't want to go that far",
        "c480405f460f7a61964569640a6cd059 (21:46): 73eaf221abca1b8244e34b0b9e76ac46, i think we added support for this pretty recently, around 4 years ago or so",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:48): c480405f460f7a61964569640a6cd059: hmm. i see we have at least one bug on createElement('&lt;p&gt;')",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:48): http://www.voetaf.com.br/",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:49): or it does document.createElement(&quot;&lt;OPTION&gt;&quot;);",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:50): i don't want to have createElement be different in quirks mode though",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:56): c480405f460f7a61964569640a6cd059: do you consider '1' to be a crazy element name?",
        "c480405f460f7a61964569640a6cd059 (21:57): 73eaf221abca1b8244e34b0b9e76ac46, well, i think the discussion should be had in a broader audience. But from a security point of view that is fine with me",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:57): c480405f460f7a61964569640a6cd059: ok",
        "c480405f460f7a61964569640a6cd059 (21:57): 73eaf221abca1b8244e34b0b9e76ac46, possibly we could allow crazier names for HTML nodes than for non-HTML nodes",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:02): clearly some characters shouldn't be allowed in tag names",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:02): e.g. ' ' or '&gt;'",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:02): so if we're going to have to do checks anyway",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:03): it seems like we might as well do more",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:04): IE allows ' ' and '&gt;' as tag name",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:05): is generally reluctant to change the spec given how much effort has gone into following the spec and testing it in the first place",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:08): i wonder where dom core discussion should take place",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:14): 73eaf221abca1b8244e34b0b9e76ac46: I have a system waiting without the tests, because I haven't yet seen 69b0d3dfe919a6b860a9fac82de52a7e say that the spec is stable enough for a lot of test to be written",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:14): 73eaf221abca1b8244e34b0b9e76ac46: I suppose i should start writing tests regardless",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:31): b8810fee2f4a71f849f3f7409546d1d9: you could write tests as you fix bugs",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:32): b8810fee2f4a71f849f3f7409546d1d9: how does the system work? if i want to contribute with tests",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:34): The system requires each test to live on an HTTP server somewhere",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:35): then the tester front end is asked to dump JSON for that URL",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:35): this JSON can the be edited to make the permitted error locations more wide",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:36): then the JSON reference dump is committed to a big JSON file using the front end tool",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:36): the front end can then run all the tests in the big file or be asked to run individual tests",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:37): also, there's a testing system for the tokenizer (html5lib) and thee builder (html5lib)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:37): but the bugs you found recently where ouside the tokenizer in the IO layer",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:38): I'm not at my develoment machine ATM",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:38): I can write docs for this tomorrow",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:39): b8810fee2f4a71f849f3f7409546d1d9: so how would a test for the ascii bug look like?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:40): 73eaf221abca1b8244e34b0b9e76ac46: &lt;!DOCTYPE html&gt;&lt;title&gt;?\u00a7&lt;/title&gt; served without charset on the HTTP layer",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:41): b8810fee2f4a71f849f3f7409546d1d9: doesn't it need to say somehow what is expeced?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:42): 73eaf221abca1b8244e34b0b9e76ac46: yeah, but I can't autogenerate the reference JSOn from this computer",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:42): b8810fee2f4a71f849f3f7409546d1d9: ah ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:42): but it's basically the out=json format",
        "a924fb58d2c25874322f4e5126f608b9 (23:02): I see JF still thinks that any decision made at any point equals attaching semantic meaning",
        "f139aba52f9fa1394b4034a7954b2220 (23:06): a924fb58d2c25874322f4e5126f608b9, that line of reasoning is just stretching the truth in order to fit his preconceived notions",
        "a924fb58d2c25874322f4e5126f608b9 (23:06): How would he handle an image that was selected at random, like 69b0d3dfe919a6b860a9fac82de52a7e's front page image?",
        "f139aba52f9fa1394b4034a7954b2220 (23:07): now he's going for the whole &quot;choice&quot; argument, saying we should include it simply because it provides another choice",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:07): why do you people even listen to the guy",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:07): c480405f460f7a61964569640a6cd059, pong",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:07): he's obviously either a crackpot or a troll",
        "f139aba52f9fa1394b4034a7954b2220 (23:08): 69b0d3dfe919a6b860a9fac82de52a7e, we don't, he's just funny",
        "f139aba52f9fa1394b4034a7954b2220 (23:08): well, his arguments are",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:08): starts his stopwatch to see how long it takes for someone to complain to public-html about his inappropriate behaviour",
        "a924fb58d2c25874322f4e5126f608b9 (23:08): 69b0d3dfe919a6b860a9fac82de52a7e: I do it to atone for my otherwise merciless commentary",
        "b25b6b77a0087ff8385941e5545d32ea (23:08): I wonder if he has ever heard of the paradox of choice? Or used a Mac",
        "a924fb58d2c25874322f4e5126f608b9 (23:09): I bet he's a big fan of linux on the desktop ;)",
        "b25b6b77a0087ff8385941e5545d32ea (23:09): is a big fan of gnome-on-linux-on-the-desktop :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:10): c480405f460f7a61964569640a6cd059, I guess you settled it with 69b0d3dfe919a6b860a9fac82de52a7e",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:31): wonders who those anonymous people are who are spamming Chrome accessibility links on his blog"
    ],
    "person_ids": [
        "42e76c77af424a4350ab0e3e3f6f2ce9",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "c480405f460f7a61964569640a6cd059",
        "ab7faae5d7b250ea8606486575f8f79c",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "f139aba52f9fa1394b4034a7954b2220",
        "b25b6b77a0087ff8385941e5545d32ea"
    ]
}