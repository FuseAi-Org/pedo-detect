{
    "id": "d54bddb22b25fad41a3f15aac9084aa9",
    "messages": [
        "d3ca5dde60f88db606021eeba2499c02 (13:08): b8810fee2f4a71f849f3f7409546d1d9, e3fb62ebfa4f36acf5cbff6a6ed0f2e0, I restarted the damn server",
        "d3ca5dde60f88db606021eeba2499c02 (13:08): it's been a daily pain in our... server farm",
        "d3ca5dde60f88db606021eeba2499c02 (13:08): sorry about it",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:10): d3ca5dde60f88db606021eeba2499c02: thanks",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:11): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: did I understand correctly that if I want to allow cross-domain XHR POST I must first respond to a GET to the POST URI with a 2xx response?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:11): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: and specify both",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:11): Access-Control: allow &lt;*&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:11): and",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:11): Allow: POST",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:13): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: would 204 No Content work?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:15): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: should I respond with 204 No Content, Allow: POST *only* if there's the If-Method-Allowed request header?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:16): b8810fee2f4a71f849f3f7409546d1d9, the Method-Check header is just there so you can make informed decisions about what to allow",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:17): b8810fee2f4a71f849f3f7409546d1d9, it's not a requirement that you do something with it, just like it's not a requirement that you don't do anything with Referer or Referer-Root",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:17): (the header has been renamed from If-Method-Allowed, see dev.w3.org version)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:17): b8810fee2f4a71f849f3f7409546d1d9, response code doesn't have any significance now, I'm not sure it should",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:18): (so either 200 or 204 would be fine, iow)",
        "139513027e8e90b5582cbc68fc733884 (13:18): why is Method-Check a header and not a method?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:18): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: would you recommend always responding with Allow: POST if I allow POST at the URI?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:18): and completely disregarding Method-Check",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:19): I'm not completely clear on what the expected choreography is",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:19): 139513027e8e90b5582cbc68fc733884, I think OPTIONS was not picked because it would be harder to author against",
        "139513027e8e90b5582cbc68fc733884 (13:19): (it's hard to think of any other header where on a GET the result is never meant to be to actually retrieve the entity)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:19): custom methods are not very well supported in general",
        "139513027e8e90b5582cbc68fc733884 (13:19): are authors expected to do a method check by hand?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:20): as I said, it's an informational header, there are no author requirements involved",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:20): the response header, however, is mandatory (Allow)",
        "139513027e8e90b5582cbc68fc733884 (13:21): what I'm asking is, would this header (or whatever) be something that authors should manually do in their content, or something that user agents do for them?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:22): Method-Check is a request header, Allow is a response header; the user agent verifies that Allow specifies something that they send out in Method-Check",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:22): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: so if I responded with 204 plus Allow to Method-Check and with 400 to requests without Method-Check, I'd break clients?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:22): I would recommend reading http://dev.w3.org/2006/waf/access-control/#access1",
        "139513027e8e90b5582cbc68fc733884 (13:22): that still doesn't answer my question",
        "139513027e8e90b5582cbc68fc733884 (13:22): is the user agent expected to add it or the author?",
        "139513027e8e90b5582cbc68fc733884 (13:22): if the user agent adds it, then &quot;easier to author against&quot; is not a relevant consideration",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:23): you don't understand",
        "139513027e8e90b5582cbc68fc733884 (13:23): clearly",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:23): the author needs to deal with the request",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:23): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: I take MUST as meaning that without it I go 400",
        "139513027e8e90b5582cbc68fc733884 (13:23): this is why I am asking questions",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:23): if the request uses a weird HTTP method that makes things harder",
        "139513027e8e90b5582cbc68fc733884 (13:23): how does the author need to deal with the request?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:23): if the request is a simple GET request with an informational header that makes things easier",
        "139513027e8e90b5582cbc68fc733884 (13:23): do you mean on the server side?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:23): 139513027e8e90b5582cbc68fc733884, the author replies with an Allow header that specifies the allowed methods",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:24): Allow: POST, PUT, DELETE",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:24): 139513027e8e90b5582cbc68fc733884, yes",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:24): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: will XHR2 UAs do the Method-Check check silently without the script author having to do it?",
        "139513027e8e90b5582cbc68fc733884 (13:24): ok, I was unclear on who &quot;the author&quot; referred to here",
        "139513027e8e90b5582cbc68fc733884 (13:24): is support for custom methods truly so bad on the server side that it's better to smuggle a method in a request header?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:24): b8810fee2f4a71f849f3f7409546d1d9, yes",
        "139513027e8e90b5582cbc68fc733884 (13:24): b8810fee2f4a71f849f3f7409546d1d9: from the spec it sounds like yes",
        "139513027e8e90b5582cbc68fc733884 (13:25): so the only relevant authoring considerations are server side",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:25): 139513027e8e90b5582cbc68fc733884, it's not smoggling a method in a request header",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:25): 139513027e8e90b5582cbc68fc733884, it's asking whether a certain method can be used",
        "139513027e8e90b5582cbc68fc733884 (13:25): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: is a GET with Method-Check on it expected to return the resource?",
        "139513027e8e90b5582cbc68fc733884 (13:25): like a GET normally would when it succeeds?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:25): no, it's a security check",
        "139513027e8e90b5582cbc68fc733884 (13:25): so it's not really a GET",
        "139513027e8e90b5582cbc68fc733884 (13:25): it's a TELLMEWHATMETHODSAREALLOWED",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:26): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: shouldn't it use a SECURITYCHECK method then?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:26): it's really OPTIONS, indeed",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:26): but see above about author complexity",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:26): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: so are you expecting server-side devs to be too incompetent to respond to OPTIONS?",
        "139513027e8e90b5582cbc68fc733884 (13:26): is OPTIONS defined enough to be useful?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:27): b8810fee2f4a71f849f3f7409546d1d9, that was the feedback Hixie's original proposal got, iirc",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:27): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: mmkay",
        "139513027e8e90b5582cbc68fc733884 (13:28): seems to me like one big problem with OPTIONS is that the server may already be doing something for it, and that something is likely wrong",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:28): still hasn't figured out how to use custom methods in Apache",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:28): needs something like that to work to properly test XMLHttpRequest",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:29): see. enterprisey non-LAMP stuff is needed after all. :-)",
        "139513027e8e90b5582cbc68fc733884 (13:29): can a cgi script or similar see what method was used in the request?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:30): 139513027e8e90b5582cbc68fc733884: yes. REQUEST_METHOD",
        "139513027e8e90b5582cbc68fc733884 (13:30): so that's how you do it",
        "139513027e8e90b5582cbc68fc733884 (13:30): seems simple enough",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:30): the problem is that Apache bounces a xxx method not supported thingie before it even reaches the script",
        "139513027e8e90b5582cbc68fc733884 (13:30): (unless the server blocks unknown methods or something)",
        "139513027e8e90b5582cbc68fc733884 (13:30): I suddenly wonder about all the people who insisted that XHR has to support sending custom methods if they are unusable from the server side",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:31): those are the people who write custom server software and all that",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:31): it's quite easy to set up a simple server yourself",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:31): collegue did it in a few lines of python",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:33): hmm. http://validator.nu/ already says Allow: GET, HEAD, POST, TRACE, OPTIONS when probed with OPTIONS",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:33): which looks about right",
        "139513027e8e90b5582cbc68fc733884 (13:33): interesting",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:34): (not if you don't want to allow POST)",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:34): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: I override doPost in the servlet, which means I handle POST",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:35): sorry, not if you don't want to allow cross-site POST",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:35): is what I meant",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:35): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: well, that might be a reason to do something other than vanilla OPTIONS",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:35): (although I suppose that's already problematic with &lt;form&gt;)",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:35): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: like OPTIONS plus header",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:36): let's see if mod_jk allows me to handle OPTIONS",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:40): yeah, I get to override OPTIONS handling with whatever I want",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: if you are concerned that OPTIONS might inadvertently Allow stuff, you could specify a new response header. that way, clients would know that the server recognized Method-Check",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:47): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: for example, Allow: GET, HEAD, POST, TRACE, OPTIONS&lt;CRLF&gt;Access-Control-Allow: POST",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:48): (aside: it sucks that servlets dispatch on method first. it seems to me HTTP dispatch should be done on URI first and method second)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:51): b8810fee2f4a71f849f3f7409546d1d9, you think it's worth changing?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:51): b8810fee2f4a71f849f3f7409546d1d9, if so, you need to raise it on public-appformats and convince Firefox to change their implementation",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:52): I'm afraid :(",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:53): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: hmm. OPTIONS certainly seems Right from an ivory-tower perspective. but perhaps the real Web is a two-verb Web. whether this needs stirring is a hard call",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:55): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: do Firefox nightlies already support Method-Check with the new name?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:57): Firefox nightlies only implement the response part of the security GET request",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:57): Firefox 3 will also inform the server by sending out Method-Check",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (13:58): (and Referer-Root)",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:59): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: do you mean the Method-Check stuff isn't implemented yet, if it isn't in the nightlies but will be in Firefox 3?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:00): well, Allow is checked and the security GET request is made, it's just that nightlies don't send out the Method-Check header that indicates the desired method header",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:00): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: does the server need to read the value of Method-Check at all? Isn't it enough to just check presence of the header and respond with Allow for whatever it is you allow?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:00): so depending on what you mean with &quot;Method-Stuff&quot;...",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:01): now I'm confused",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:01): am I supposed to know that a particular GET is a security GET even though it has no special labeling header?",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:02): how do I tell apart security GETs and usual GETs then?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:03): in Firefox 3, not sure",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:03): euh, Firefox nightlies",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:03): https://bugzilla.mozilla.org/show_bug.cgi?id=397879",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:06): b8810fee2f4a71f849f3f7409546d1d9, oh, the bug you're seeing on my weblog (was it you?) in Firefox is https://bugzilla.mozilla.org/show_bug.cgi?id=327765",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:06): (with commenting)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:06): (at least, I think that's the bug)",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:07): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: thanks"
    ],
    "person_ids": [
        "d3ca5dde60f88db606021eeba2499c02",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "139513027e8e90b5582cbc68fc733884"
    ]
}