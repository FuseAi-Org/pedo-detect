{
    "id": "49c9c54c1070f00eb14626056ab18498",
    "messages": [
        "27b936e497e4ec25729d07992c81cc40 (00:42): are the reds at https://tbpl.mozilla.org/?tree=Try&amp;rev=549d18084513 at the linux64 talos infra errors? Or is the log just strange?",
        "1adba86c435b5fe0f7ea043370b1636b (00:42): cpearce: what's the fs URL you were using to reproduce bug 719259?",
        "27b936e497e4ec25729d07992c81cc40 (00:42): and how can it run talos if the build is not yet finished?",
        "1adba86c435b5fe0f7ea043370b1636b (00:43): the talos tests start before the build &quot;finishes&quot;",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:43): 'make check' runs after the bits are uploaded and tests triggered",
        "1adba86c435b5fe0f7ea043370b1636b (00:43): because the build step includes tests",
        "1adba86c435b5fe0f7ea043370b1636b (00:43): what 7aa8445cf2afdabddaad1e8a9da0b4b6 said",
        "27b936e497e4ec25729d07992c81cc40 (00:44): ah ok",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:45): I think you're running into a problem retrieving http://hg.mozilla.org/try/raw-file/549d18084513/testing/talos/talos.json",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:45): I get a 404 with error: testing/talos/talos.json@549d18084513: not found in manifest",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:46): is that a really old parent ?",
        "27b936e497e4ec25729d07992c81cc40 (00:46): 7aa8445cf2afdabddaad1e8a9da0b4b6, is this new? The tree I pushed is based on mozilla-beta, so that might be the reason for it not being there?",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:46): ah yes, that'll be it",
        "7aa8445cf2afdabddaad1e8a9da0b4b6 (00:46): jmaher|afk: ^^",
        "6ddd17cf35914b23199f7316be5ba65b (00:46): bz: ping",
        "6ddd17cf35914b23199f7316be5ba65b (00:48): dbaron: ping",
        "8676f40c7c07987dc4274b0a98f6e07e (00:48): 6ddd17cf35914b23199f7316be5ba65b, pong",
        "6ddd17cf35914b23199f7316be5ba65b (00:48): dbaron: hi",
        "6ddd17cf35914b23199f7316be5ba65b (00:49): dbaron: I'm thinking about making about:memory more dynamic, so you can clikc on sub-trees to make them expand/collapse",
        "6ddd17cf35914b23199f7316be5ba65b (00:49): dbaron: we already do this for entire trees via |display: none|",
        "6ddd17cf35914b23199f7316be5ba65b (00:49): dbaron: I'm wondering if that seems like a good idea for sub-trees, or if another approach would be better",
        "04beac4484f6576b0da1037194f76695 (00:49): 6ddd17cf35914b23199f7316be5ba65b:sounds good to me",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:49): 6ddd17cf35914b23199f7316be5ba65b: sounds good to me too",
        "6ddd17cf35914b23199f7316be5ba65b (00:50): 04beac4484f6576b0da1037194f76695, 0b9a93bcbf56042557d5a41dd3db0243:  the feature, or how it's implemented?",
        "04beac4484f6576b0da1037194f76695 (00:50): the feature",
        "28f9b1cae5ae23caa8471696342f6f0c (00:50): 042dd99eb0ff8653814e445ca0093427, mediastream demos were awesome :)",
        "1adba86c435b5fe0f7ea043370b1636b (00:50): cpearce: nevermind",
        "042dd99eb0ff8653814e445ca0093427 (00:50): 28f9b1cae5ae23caa8471696342f6f0c: great",
        "8676f40c7c07987dc4274b0a98f6e07e (00:50): 6ddd17cf35914b23199f7316be5ba65b, seems reasonable to me, though I've never been crazy about such UIs.  Somebody with some UX experience might have better ideas... but at the very least it's often nice to have &quot;expand all&quot;/&quot;collapse all&quot;",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:51): 6ddd17cf35914b23199f7316be5ba65b: click-to-expand/collapse seems good",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:51): dbaron: that JS_ASSERT regarding name-&gt;isIndex() that you mentioned like a week ago, what details do you have?  I'm pretty sure that's my assertion to fix, and I need details to do that",
        "8676f40c7c07987dc4274b0a98f6e07e (00:51): 0b9a93bcbf56042557d5a41dd3db0243, I didn't have a whole lot at the time, and I've forgotten most of it",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:51): dbaron: what about even the location of it in the code?",
        "8676f40c7c07987dc4274b0a98f6e07e (00:52): 0b9a93bcbf56042557d5a41dd3db0243, I don't think I was able to get to a window object in gdb to figure out what page it was",
        "6ddd17cf35914b23199f7316be5ba65b (00:52): dbaron: would having lots of nested spans like this be expensive, do you think?",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:52): dbaron: the location of the assertion, I meant",
        "6ddd17cf35914b23199f7316be5ba65b (00:52): dbaron: currently each tree is just a single &lt;pre&gt; block, which is obviously a lot simpler",
        "8676f40c7c07987dc4274b0a98f6e07e (00:52): 0b9a93bcbf56042557d5a41dd3db0243, that I know, since I have it commented out",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:52): that particular assertion should be statically knowable",
        "8676f40c7c07987dc4274b0a98f6e07e (00:53): 0b9a93bcbf56042557d5a41dd3db0243, https://hg.mozilla.org/users/dbaron_mozilla.com/patches/raw-file/1572d97a4ca8/comment-out-assert",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:53): aargh",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:53): dbaron: the caller of that method is what I need :-(",
        "8676f40c7c07987dc4274b0a98f6e07e (00:53): 0b9a93bcbf56042557d5a41dd3db0243, I might remember...",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:54): right now, if that assertion fires it's probably not going to lead to crashes",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:54): but soon, it will lead to crashes, and likely quite catastrophic ones",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:56): dbaron: if that was happening restoring session, just a grep through sessionstore.js for &quot;&quot;-quoted numbers that are greater than 2**32 might find the relevant context, too",
        "8676f40c7c07987dc4274b0a98f6e07e (00:57): 0b9a93bcbf56042557d5a41dd3db0243, I think it was one of the two callers in Parser::memberExpr",
        "0b9a93bcbf56042557d5a41dd3db0243 (00:57): possibly greater than 2**31 - 1, although I'm not sure about that",
        "8676f40c7c07987dc4274b0a98f6e07e (00:57): 0b9a93bcbf56042557d5a41dd3db0243, I'm trying to remember which one",
        "8676f40c7c07987dc4274b0a98f6e07e (00:58): 0b9a93bcbf56042557d5a41dd3db0243, I definitely remember looking at that code though (the PNK_STRING / PNK_NUMBER stuff in that function)",
        "0b9a93bcbf56042557d5a41dd3db0243 (01:10): dbaron: you're absolutely sure it's one of the two in that method?  both are guarded by isIndex checks, so that doesn't make any sense",
        "0b9a93bcbf56042557d5a41dd3db0243 (01:11): dbaron: also, was the build especially old?  I fixed bug 715682 which was an instance of that assert failing semi-recently",
        "8676f40c7c07987dc4274b0a98f6e07e (01:11): 0b9a93bcbf56042557d5a41dd3db0243, yeah, I recall it not making sense",
        "8676f40c7c07987dc4274b0a98f6e07e (01:11): 0b9a93bcbf56042557d5a41dd3db0243, I don't recall how old",
        "0b9a93bcbf56042557d5a41dd3db0243 (01:11): hmm",
        "0b9a93bcbf56042557d5a41dd3db0243 (01:11): assertions don't work when they get ignored :-(",
        "8676f40c7c07987dc4274b0a98f6e07e (01:11): 0b9a93bcbf56042557d5a41dd3db0243, but I do recall that I had a cset that looked like it would fix something like what I was seeing",
        "0b9a93bcbf56042557d5a41dd3db0243 (01:12): slightly older is also bug 710192, as well",
        "8676f40c7c07987dc4274b0a98f6e07e (01:13): 0b9a93bcbf56042557d5a41dd3db0243, well, I often feel like I'm the only person running debug builds for regular browsing, so...",
        "6ddd17cf35914b23199f7316be5ba65b (01:19): dbaron: would you mind taking a quick look at http://pastebin.mozilla.org/1453825?",
        "6ddd17cf35914b23199f7316be5ba65b (01:19): it's a proof-of-concept for the about:memory thing",
        "6ddd17cf35914b23199f7316be5ba65b (01:20): dbaron: you can click on 'explicit' or 'js' to toggle their sub-trees",
        "6ddd17cf35914b23199f7316be5ba65b (01:20): dbaron: it works, I'm wondering if there are better ways to do it",
        "6ddd17cf35914b23199f7316be5ba65b (01:21): dbaron: the parent/child thing feels like a hack",
        "8676f40c7c07987dc4274b0a98f6e07e (01:26): 6ddd17cf35914b23199f7316be5ba65b, not off the top of my head, but I'm sure there are many other ways",
        "6ddd17cf35914b23199f7316be5ba65b (01:28): dbaron: hmm, getting the sibling node should allow me to avoid the parent/child subsitution hack"
    ],
    "person_ids": [
        "27b936e497e4ec25729d07992c81cc40",
        "1adba86c435b5fe0f7ea043370b1636b",
        "7aa8445cf2afdabddaad1e8a9da0b4b6",
        "6ddd17cf35914b23199f7316be5ba65b",
        "8676f40c7c07987dc4274b0a98f6e07e",
        "04beac4484f6576b0da1037194f76695",
        "0b9a93bcbf56042557d5a41dd3db0243",
        "28f9b1cae5ae23caa8471696342f6f0c",
        "042dd99eb0ff8653814e445ca0093427"
    ]
}