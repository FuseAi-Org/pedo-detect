{
    "id": "829f6d2ed566df8d7751f1fd7b339509",
    "messages": [
        "06cb330920ae58e1614c9145d983b3d6 (18:00): if only we could find a way to usefully deprecate horrible legacy things like sync xhr in the main thread",
        "06cb330920ae58e1614c9145d983b3d6 (18:00): like maybe browsers could play the macarana whenever a sync xhr call is made",
        "b25b6b77a0087ff8385941e5545d32ea (18:02): How else am I suppose to write tests that intentionally halt script execution?",
        "ab7faae5d7b250ea8606486575f8f79c (18:02): 06cb330920ae58e1614c9145d983b3d6: Yeah, it's terrible when authors use convenient APIs",
        "ab7faae5d7b250ea8606486575f8f79c (18:03): b25b6b77a0087ff8385941e5545d32ea: You could run tests in a special browser mode that disables the macarena",
        "cc097e0d7183ae8436e7df709553c8c0 (18:03): b8810fee2f4a71f849f3f7409546d1d9: can't the prescan be turned off also?",
        "06cb330920ae58e1614c9145d983b3d6 (18:03): &quot;convenient&quot; isn't the word I'd use to describe synchronous APIs in the UI thread, heh",
        "cc097e0d7183ae8436e7df709553c8c0 (18:04): b8810fee2f4a71f849f3f7409546d1d9: does BOM influence encoding choice for responseText?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:05): cc097e0d7183ae8436e7df709553c8c0: technically, the prescan could be turned off. but why?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:05): cc097e0d7183ae8436e7df709553c8c0: I haven't tested the BOM in existing browsers",
        "06cb330920ae58e1614c9145d983b3d6 (18:06): dropping bombs on my poor plain text files :(",
        "06cb330920ae58e1614c9145d983b3d6 (18:06): (would like to drop a bomb on whoever came up with the idea of stapling a header onto a headerless file format)",
        "ab7faae5d7b250ea8606486575f8f79c (18:06): 06cb330920ae58e1614c9145d983b3d6: Plain text is a horrible legacy thing",
        "9149348a18459bbe18bcab66b06f1967 (18:07): The spec (http://goo.gl/6UNDL) says selectionDirection of textarea/input is platform dependent, and effectively says on Macs it defaults to 'none' when selecting with the mouse. I think we should make the wording much more strict so selectionDirection is actually usable across platforms.. anyone have thoughts on that?",
        "76680563b02870d015080e95984df8fc (18:08): I prefer &quot;Content-type: text/plain;charset=utf-8&quot;...",
        "76680563b02870d015080e95984df8fc (18:08): This way, charset information isn't in file itself.",
        "ab7faae5d7b250ea8606486575f8f79c (18:09): 9149348a18459bbe18bcab66b06f1967: That would presumably make it incompatible with platform conventions, which sounds bad for users",
        "cc097e0d7183ae8436e7df709553c8c0 (18:09): b8810fee2f4a71f849f3f7409546d1d9: the meta doesn't work today when people do innerHTML = responseText",
        "9149348a18459bbe18bcab66b06f1967 (18:09): It appears there is no way to tell which way the user selects the text... for instance, where the cursor should be after a selection is made (whether it's at the beginning or end of the selection). AFAIK, that's all selectionDirection is good for.",
        "06cb330920ae58e1614c9145d983b3d6 (18:10): gah",
        "06cb330920ae58e1614c9145d983b3d6 (18:10): a web editor that catches shift-delete and turns it into delete instead of cut : |",
        "cc097e0d7183ae8436e7df709553c8c0 (18:10): b8810fee2f4a71f849f3f7409546d1d9: i think responseText and responseXML should use the same encoding... but maybe the xml decl already broke that?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:14): cc097e0d7183ae8436e7df709553c8c0: WebKit considers &lt;meta&gt; today when reading responseText",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:14): for text/html",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:15): cc097e0d7183ae8436e7df709553c8c0: Gecko considers the XML decl for XML types when reading responseText (based on reading Gecko source; I didn't test)",
        "cc097e0d7183ae8436e7df709553c8c0 (18:17): b8810fee2f4a71f849f3f7409546d1d9: ok. then i guess it makes sense to do the scan (but also for responseText)",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:19): cc097e0d7183ae8436e7df709553c8c0: I intend to keep the charset for responseText and responseXML in sync for both HTML and XML",
        "cc097e0d7183ae8436e7df709553c8c0 (18:20): good :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:21): though there's a complication with streaming responseText",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:21): I guess I need to defer that until the HTML or XML parser has made its decision",
        "cc097e0d7183ae8436e7df709553c8c0 (18:22): does webkit scan 1024 bytes?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:24): cc097e0d7183ae8436e7df709553c8c0: I haven't verified, but I'd be surprised if it didn't stop at 1024 bytes",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:25): though things can be surprising on the Web",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:25): I'm quite pleased with the HTML/XML TF",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:26): The document we ended up with is quite sensible. Having said that, whether anyone (apart from the TAG) still cares is another matter",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:28): hmm. I might not make it to the HTML/XML TF telecon tomorrow",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:46): http://lists.w3.org/Archives/Public/www-tag/2011Sep/0035.html",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:49): in case anyone cares: http://www.w3.org/TR/progress-events/",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:49): CR now",
        "06cb330920ae58e1614c9145d983b3d6 (18:50): hopefully FileReader doesn't make every spec that uses it evil, heh",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:52): edb259c0e0038f38bb200bc20c8cbf7e: congrats for CR",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:53): 06cb330920ae58e1614c9145d983b3d6, still not sure what the better behavior should be",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:54): we have some room to make changes here",
        "06cb330920ae58e1614c9145d983b3d6 (18:54): well, i was assuming XHR was stuck and arguing that if necessary, FileAPI should break from XHR (if FileAPI follows XHR here, everything else forever will)",
        "06cb330920ae58e1614c9145d983b3d6 (18:54): if XHR itself can be improved, all the better",
        "76680563b02870d015080e95984df8fc (18:54): What tests?",
        "76680563b02870d015080e95984df8fc (18:55): There will be at least two interoperable implementations passing all test cases in the test suite for this specification. An implementation is to be available (i.e. for download), shipping (i.e. not private), and not experimental (i.e. intended for a wide audience). The working group will decide when the test suite is of sufficient quality to test interoperability and will produce implementation reports (hosted together with the test sui",
        "76680563b02870d015080e95984df8fc (18:55): te).",
        "76680563b02870d015080e95984df8fc (18:55): Makes sense...",
        "06cb330920ae58e1614c9145d983b3d6 (18:55): the ideal behavior, IMO, would be to forbid send() until the progress sequence (and any readystatechanges) have finished being dispatched, which is what I recommended for FileAPI",
        "06cb330920ae58e1614c9145d983b3d6 (18:56): (if you want to reuse the object to send another request/read another block, stuff it in a setTimeout(0))",
        "06cb330920ae58e1614c9145d983b3d6 (18:57): that way, no matter how you listen to the events, loadstart/loadend are always cleanly paired with no overlap",
        "06cb330920ae58e1614c9145d983b3d6 (18:58): (modulo stopPropagation or changes to the tree, if any, of course)",
        "06cb330920ae58e1614c9145d983b3d6 (18:59): (neither of which apply to these APIs)",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:59): 76680563b02870d015080e95984df8fc, isn't there a link?",
        "76680563b02870d015080e95984df8fc (18:59): Yeah, but I fail at finding those tests in directory structure...",
        "06cb330920ae58e1614c9145d983b3d6 (18:59): (well, with these APIs, there's still stopImmediatePropagation, but anyway)",
        "76680563b02870d015080e95984df8fc (18:59): Is it /ProgressEvents/tests/submissions/Ms2ger/?",
        "76680563b02870d015080e95984df8fc (19:00): That's only thing I've found in directory structure which somewhat reminds tests...",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:00): yeah",
        "76680563b02870d015080e95984df8fc (19:00): But then, where is &lt;script src=/resources/testharness.js&gt;&lt;/script&gt;",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:01): 76680563b02870d015080e95984df8fc, might be more useful to look here: http://w3c-test.org/webapps/ProgressEvents/tests/submissions/Ms2ger/",
        "76680563b02870d015080e95984df8fc (19:01): My browser fails at them.",
        "76680563b02870d015080e95984df8fc (19:01): I'm not surprised.",
        "76680563b02870d015080e95984df8fc (19:02): It got CR not long time ago.",
        "76680563b02870d015080e95984df8fc (19:02): http://testcases.glitchmr.pl/html/tag-nesting-003.html",
        "76680563b02870d015080e95984df8fc (19:02): I find this behavior weird...",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:02): most browsers support ProgressEvent to some extent, but constructing them not really... and that's mostly what is being tested",
        "76680563b02870d015080e95984df8fc (19:03): Pass - Interface objects properties should not be Enumerable",
        "76680563b02870d015080e95984df8fc (19:03): actually, yeah...",
        "76680563b02870d015080e95984df8fc (19:03): oh wait... that's expected if browser doesn't support it :P.",
        "76680563b02870d015080e95984df8fc (19:08): http://hixie.ch/tests/adhoc/http/content-type/css/001.html",
        "76680563b02870d015080e95984df8fc (19:08): ... for me this test is invalid",
        "76680563b02870d015080e95984df8fc (19:08): It uses Quirks Mode...",
        "76680563b02870d015080e95984df8fc (19:08): Yeah, it's expected that text/plain shouldn't be interpreted as CSS, but that page used Quirks Mode..."
    ],
    "person_ids": [
        "06cb330920ae58e1614c9145d983b3d6",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "cc097e0d7183ae8436e7df709553c8c0",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "9149348a18459bbe18bcab66b06f1967",
        "76680563b02870d015080e95984df8fc",
        "edb259c0e0038f38bb200bc20c8cbf7e"
    ]
}