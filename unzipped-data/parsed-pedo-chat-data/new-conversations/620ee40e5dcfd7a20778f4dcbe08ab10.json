{
    "id": "620ee40e5dcfd7a20778f4dcbe08ab10",
    "messages": [
        "8fb2e6674b6afb6909385e9e4a150523 (02:00): looking at doing it soon though hopefully",
        "af47d769cdc8beb7c974c9d08903961c (02:00): Er... I guess that doesn't work.",
        "af47d769cdc8beb7c974c9d08903961c (02:00): Stupid complicated search.",
        "3d825ab736200154c06f95be2c1fdd8b (02:00): you kissed me for nothing?",
        "af47d769cdc8beb7c974c9d08903961c (02:00): I did.",
        "af47d769cdc8beb7c974c9d08903961c (02:00): I'm sorry",
        "4ce6d9e506fbe65e9cb354a2677059d1 (02:00): linuxcrazy i believe the problem is linux o.o",
        "3d825ab736200154c06f95be2c1fdd8b (02:01): so, what doesn't work about it?",
        "0543a0625ce86be59ddc62dd865e58c8 (02:01): where *would* mysql.so be normally",
        "af47d769cdc8beb7c974c9d08903961c (02:01): Well that selects the unique users for the day, but I need the users that are new.",
        "af47d769cdc8beb7c974c9d08903961c (02:02): So I need to count the total users that have a first stats_visit on that day.",
        "3d825ab736200154c06f95be2c1fdd8b (02:02): so where min(date) for that user occurs on 2006-09-02?",
        "0543a0625ce86be59ddc62dd865e58c8 (02:02): ok this is the guide I followed. leith, does it look correct?",
        "0543a0625ce86be59ddc62dd865e58c8 (02:02): https://help.ubuntu.com/community/ApacheMySQLPHP",
        "af47d769cdc8beb7c974c9d08903961c (02:02): Yeah.",
        "af47d769cdc8beb7c974c9d08903961c (02:03): Which, again would be simple with a subselect.",
        "0543a0625ce86be59ddc62dd865e58c8 (02:05): AHA!!",
        "0543a0625ce86be59ddc62dd865e58c8 (02:05): found it!",
        "0543a0625ce86be59ddc62dd865e58c8 (02:05): didn't have ONE package installed",
        "af47d769cdc8beb7c974c9d08903961c (02:05): That'll learn you.",
        "8fb2e6674b6afb6909385e9e4a150523 (02:06): linuxcrazy: looks mostly right to me with a quick scan",
        "3d825ab736200154c06f95be2c1fdd8b (02:06): <a href=\"http://hashmysql.org/paste/2608\">http://hashmysql.org/paste/2608</a>",
        "3d825ab736200154c06f95be2c1fdd8b (02:06): brantley ^",
        "af47d769cdc8beb7c974c9d08903961c (02:06): On it.",
        "af47d769cdc8beb7c974c9d08903961c (02:07): Self join, I see...",
        "af47d769cdc8beb7c974c9d08903961c (02:07): My brain isn't ready for that, but I will go at it anyway.",
        "3d825ab736200154c06f95be2c1fdd8b (02:07): yes, as Leith said. Why, oh why, didn't we listen to Leith?",
        "0543a0625ce86be59ddc62dd865e58c8 (02:07): hey in this line, should it be uncommented? extension_dir = &quot;/usr/lib/php5/20051025/mysql.so&quot;",
        "0543a0625ce86be59ddc62dd865e58c8 (02:07): I want mysql to work with php",
        "0543a0625ce86be59ddc62dd865e58c8 (02:07): it should be right?",
        "8fb2e6674b6afb6909385e9e4a150523 (02:08): extension_dir should just point to the directory with the libraries in",
        "8fb2e6674b6afb6909385e9e4a150523 (02:08): not to a specific .so",
        "0543a0625ce86be59ddc62dd865e58c8 (02:09): O",
        "0543a0625ce86be59ddc62dd865e58c8 (02:09): ok",
        "0543a0625ce86be59ddc62dd865e58c8 (02:09): whoops",
        "0543a0625ce86be59ddc62dd865e58c8 (02:09): ty",
        "0543a0625ce86be59ddc62dd865e58c8 (02:10): WOOHOO!",
        "af47d769cdc8beb7c974c9d08903961c (02:10): Snoyes: I don't understand the WHERE s2.id IS NULL",
        "0543a0625ce86be59ddc62dd865e58c8 (02:10): mysql is working",
        "af47d769cdc8beb7c974c9d08903961c (02:10): What's that for?",
        "3d825ab736200154c06f95be2c1fdd8b (02:11): It's a LEFT join. So we'll get NULL values for any instances of s2 that don't satisfy the ON condition. Those happen to be the ones we want.",
        "3d825ab736200154c06f95be2c1fdd8b (02:11): Because the ON condition says that the rows from s2 have to be less than the given date. Hence those are the old rows. Hence we don't want them.",
        "af47d769cdc8beb7c974c9d08903961c (02:11): Ohh",
        "af47d769cdc8beb7c974c9d08903961c (02:11): I see.",
        "c56c5d2f56432bf8172322321dab9d42 (02:14): Snoyes: so Master-to-Slave replication could work over the Internet if there is enough bandwidth to exceed the average INSERT/UPDATE bandwidth on the master ?",
        "c56c5d2f56432bf8172322321dab9d42 (02:14): even thought the Slave will lag behind somewhat ?",
        "3d825ab736200154c06f95be2c1fdd8b (02:15): I don't see any particular reason why not.",
        "c56c5d2f56432bf8172322321dab9d42 (02:15): oki, makes sense to me",
        "c56c5d2f56432bf8172322321dab9d42 (02:15): it's only the INSERT/UPDATES that affect replication, if I understand the docs",
        "3d825ab736200154c06f95be2c1fdd8b (02:15): anything that changes data or structure.",
        "3d825ab736200154c06f95be2c1fdd8b (02:15): insert, update, delete, create/alter/drop database/table, etc.",
        "f81553e317cf64c8229717aeb15a6c54 (02:16): hi",
        "c56c5d2f56432bf8172322321dab9d42 (02:16): oh oh oh",
        "c56c5d2f56432bf8172322321dab9d42 (02:16): DELETES, of course",
        "c56c5d2f56432bf8172322321dab9d42 (02:16): table changes",
        "c56c5d2f56432bf8172322321dab9d42 (02:16): yeah",
        "c56c5d2f56432bf8172322321dab9d42 (02:16): DUH",
        "f81553e317cf64c8229717aeb15a6c54 (02:16): so I have a query that gets the min and max year",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:16): if you have made a column the primary key, there is no reason to make an index of it, right?",
        "f81553e317cf64c8229717aeb15a6c54 (02:16): how can I get the quarterwhen the year was minimum and when the year was maximum ?",
        "c56c5d2f56432bf8172322321dab9d42 (02:17): Hatake: making it a primary key requires an index to be made",
        "c56c5d2f56432bf8172322321dab9d42 (02:17): (the primary index)",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:17): ok, thats what I thought",
        "c56c5d2f56432bf8172322321dab9d42 (02:17): but you should not have to declare another index",
        "3d825ab736200154c06f95be2c1fdd8b (02:17): SELECT QUARTER(MIN(someDate)) AS minQuarter...",
        "c56c5d2f56432bf8172322321dab9d42 (02:18): (somebody correct me)",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:18): now, for example, Firstname, Surname, extention# as my primary key",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:18): and I'm going to make a select based on just the surname",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:18): should I declare an index of surname?",
        "c56c5d2f56432bf8172322321dab9d42 (02:18): well, yeah",
        "c56c5d2f56432bf8172322321dab9d42 (02:18): to help with the speed of the query",
        "3d825ab736200154c06f95be2c1fdd8b (02:18): or, if you're going to mostly query by surname, make your primary key Surname, Firstname, Extension",
        "af47d769cdc8beb7c974c9d08903961c (02:19): I too am in my flopp years.",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:19): thanks snoyes/sneaky",
        "9678ea1fdb7da6e5fb5aaefe48cec115 (02:20): whats the drawback to makeing indexs? just diskspace?",
        "3d825ab736200154c06f95be2c1fdd8b (02:20): slower inserts/updates",
        "27fa0f96dfc03bb1f2bebd6fee16f716 (02:21): deletes .. though in some cases if you have expensive where statements an index can speed up things even for updates/deletes",
        "f81553e317cf64c8229717aeb15a6c54 (02:25): snoyes: the SELECT QUARTER(MIN(someDate)) AS minQuarter didn't work :(",
        "f81553e317cf64c8229717aeb15a6c54 (02:25): I get null but the answer should be 1",
        "3d825ab736200154c06f95be2c1fdd8b (02:26): show your full query and the result of SHOW CREATE TABLE for the table in question.",
        "f81553e317cf64c8229717aeb15a6c54 (02:30): snoyes: select min(year) from quarterly_reports works just fine. (year is a column within the table)",
        "f81553e317cf64c8229717aeb15a6c54 (02:30): but usint select quarter(min(year)) as min_quarter from quarterly_reports didn't work :(",
        "3d825ab736200154c06f95be2c1fdd8b (02:30): oh - quarter needs a date, not just a year. Where is the month stored?",
        "3d825ab736200154c06f95be2c1fdd8b (02:32): I imagine SELECT QUARTER(MIN(CONCAT_WS('-', year, month, '01'))) would work. Maybe not uber efficient.",
        "f81553e317cf64c8229717aeb15a6c54 (02:32): snoyes: no month is stored. I'm storing the year as a 4 digit column and the quarter is a 1 - 4 digit column",
        "3d825ab736200154c06f95be2c1fdd8b (02:32): oh, I thought you were trying to find the quarter of the date you had stored.  Ok, that's different.  What version of MySQL?",
        "a4b2f111445d56946f87c02c5cd8b676 (02:34): &quot;Buy AMD CPU now &amp; get free money clip &quot;",
        "f81553e317cf64c8229717aeb15a6c54 (02:34): mysql 5",
        "3d825ab736200154c06f95be2c1fdd8b (02:34): SELECT year, quarter FROM quarterly_reports ORDER BY year, quarter ASC LIMIT 1",
        "f81553e317cf64c8229717aeb15a6c54 (02:35): but the thing is that I'm summarizing info. so my beginning query is",
        "a802a0377a1512d75e2c9c9f6e81ac90 (02:35): why does mysql create a huge &quot;mysqld.sql&quot; file in /tmp",
        "a802a0377a1512d75e2c9c9f6e81ac90 (02:35): it's at 5.2 gigs presently",
        "f81553e317cf64c8229717aeb15a6c54 (02:35): select max(year) as max_year, min(year) as min_year from quarterly_reports",
        "f81553e317cf64c8229717aeb15a6c54 (02:35): snoyes: so I'm only returning 1 row :(",
        "a802a0377a1512d75e2c9c9f6e81ac90 (02:35): can i make it not do this",
        "a802a0377a1512d75e2c9c9f6e81ac90 (02:36): oh it's a log",
        "3d825ab736200154c06f95be2c1fdd8b (02:39): SELECT max_year, max_quarter, min_year, min_quarter FROM (SELECT year AS max_year, quarter AS max_quarter FROM quarterly_reports ORDER BY year DESC, quarter DESC LIMIT 1) d1 JOIN (SELECT year AS min_year, quarter AS min_quarter FROM quarteryl_reports ORDER BY year, quarter LIMIT 1);",
        "af47d769cdc8beb7c974c9d08903961c (02:39): So if I try to delete from or drop a database it's just hanging...  Is there something I should do?",
        "3d825ab736200154c06f95be2c1fdd8b (02:39): s/;/ d2;"
    ],
    "person_ids": [
        "8fb2e6674b6afb6909385e9e4a150523",
        "af47d769cdc8beb7c974c9d08903961c",
        "3d825ab736200154c06f95be2c1fdd8b",
        "4ce6d9e506fbe65e9cb354a2677059d1",
        "0543a0625ce86be59ddc62dd865e58c8",
        "c56c5d2f56432bf8172322321dab9d42",
        "f81553e317cf64c8229717aeb15a6c54",
        "9678ea1fdb7da6e5fb5aaefe48cec115",
        "27fa0f96dfc03bb1f2bebd6fee16f716",
        "a4b2f111445d56946f87c02c5cd8b676",
        "a802a0377a1512d75e2c9c9f6e81ac90"
    ]
}