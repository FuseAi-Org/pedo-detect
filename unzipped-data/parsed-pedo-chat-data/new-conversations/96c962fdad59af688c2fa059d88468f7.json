{
    "id": "96c962fdad59af688c2fa059d88468f7",
    "messages": [
        "050421e96671fe1a3d8cf2b5dbe99cb7 (01:20): glob|away: so, anyway, Bugzilla seems to do fine with lots of comments - https://bugzilla.mozilla.org/show_bug.cgi?id=482975#c1000",
        "42ce7467e2f3a5563f76ed7d36b149e5 (01:34): hi, is here anybody that know how NS_IsMainThread gets implemented on android?",
        "a604f231696173b88fa8c6214a3b7c80 (01:43): what is the easiest way of displaying the failed images of a reftest?",
        "a604f231696173b88fa8c6214a3b7c80 (01:45): answering by own question, c&amp;p &amp;&amp; base64 -D &amp;&amp; open",
        "a604f231696173b88fa8c6214a3b7c80 (01:45): my",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (01:46): I would have said &quot;click the open reftest analyzer&quot; link on tbpl",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (01:47): or, lacking a tbpl for the source, copy-paste into https://hg.mozilla.org/mozilla-central/raw-file/tip/layout/tools/reftest/reftest-analyzer.xhtml",
        "a604f231696173b88fa8c6214a3b7c80 (01:51): do I have to copy and past all of it",
        "a604f231696173b88fa8c6214a3b7c80 (01:51): what I have is",
        "a604f231696173b88fa8c6214a3b7c80 (01:51): http://tinderbox.mozilla.org/showlog.cgi?log=MozillaTest/1327370120.1327371268.9702.gz",
        "a604f231696173b88fa8c6214a3b7c80 (01:55): how do I even get the raw log out of thinderbox",
        "46cea6e391c9bc3acb24e97115618252 (01:56): remove showlog bits, http://tinderbox.mozilla.org/MozillaTest/1327370120.1327371268.9702.gz",
        "a604f231696173b88fa8c6214a3b7c80 (01:56): awesome, thanks",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (01:58): ugh, tinderbox",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:00): but, the line before the images, the two lines of images, the line after",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:01): which will tell you that the upper left corner is 1,254,0 instead of 0,255,0",
        "a604f231696173b88fa8c6214a3b7c80 (02:05): thanks",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:09): oh, goodie, that's Win debug Moth bustage",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:10): of the log overflowing variety, apparently",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:11): waits to get his browser back",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:15): kills it and opens Chrome instead",
        "a406713e05b1b23bdd6f397d9294b81b (02:17): Should we add Chrome to the list of required development tools on https://developer.mozilla.org/En/Simple_Firefox_build ?  :P",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:17): too much recursion in test_ccdump.xul",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:18): huh, starting from Ms2ger?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:19): oh, no, further back",
        "0aa51a9d03871edd7f4e71ddab8323c5 (02:19): how about we work on making it fast?",
        "a406713e05b1b23bdd6f397d9294b81b (02:19): all the way back to the win debug build bustage...",
        "a406713e05b1b23bdd6f397d9294b81b (02:21): 050421e96671fe1a3d8cf2b5dbe99cb7: So, looks like eab22ddafe9ed99f3735e412bf7ae3e3's https://hg.mozilla.org/integration/mozilla-inbound/rev/04b4225269a4 is the culprit?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:21): so eab22ddafe9ed99f3735e412bf7ae3e3 or 46ecbec5ec7951ce102670dbd0b2def5",
        "a406713e05b1b23bdd6f397d9294b81b (02:21): or possibly 46ecbec5ec7951ce102670dbd0b2def5... yeah",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:21): meee?",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:22): 050421e96671fe1a3d8cf2b5dbe99cb7, the moth failure?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:22): eab22ddafe9ed99f3735e412bf7ae3e3: yeah, debug moth, chrome, infinite too much recursion in test_ccdump.xul",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:23): 050421e96671fe1a3d8cf2b5dbe99cb7, what's the alternative commit?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:24): don't ask me, I loaded a full log, I won't have a browser again for another five minutes",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:24): 050421e96671fe1a3d8cf2b5dbe99cb7, Should write an extension to load it in vim.",
        "a406713e05b1b23bdd6f397d9294b81b (02:25): eab22ddafe9ed99f3735e412bf7ae3e3: the parent, https://hg.mozilla.org/integration/mozilla-inbound/rev/79deba022227",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:25): oic",
        "a406713e05b1b23bdd6f397d9294b81b (02:25): wonders if that'll back out cleanly",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:26): a406713e05b1b23bdd6f397d9294b81b, There's a followup a bit higher up.",
        "a406713e05b1b23bdd6f397d9294b81b (02:26): good to know.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:26): but otherwise, yes, it should.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:26): would be pretty surprised if that broke cc logs, though.",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:26): a406713e05b1b23bdd6f397d9294b81b: what are we discussing?",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:27): 46ecbec5ec7951ce102670dbd0b2def5, the cset a406713e05b1b23bdd6f397d9294b81b mentioned might have caused windows debug moth permaorange.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:27): Or otherwise, it's its child.",
        "a406713e05b1b23bdd6f397d9294b81b (02:27): Hmm, eab22ddafe9ed99f3735e412bf7ae3e3's had Try runs, but they were months ago.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:28): a406713e05b1b23bdd6f397d9294b81b, And, I'll admit, I may have ignored a random-looking Windows moth orange.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:28): will be happy to read every error summary once they don't each take 60s to load.",
        "a406713e05b1b23bdd6f397d9294b81b (02:28): If you happen to have the emails still...",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:28): Perhaps!",
        "a406713e05b1b23bdd6f397d9294b81b (02:29): eab22ddafe9ed99f3735e412bf7ae3e3, 46ecbec5ec7951ce102670dbd0b2def5: Well, one option is to back out both, push both to Try, and re-land the good one.",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:29): a406713e05b1b23bdd6f397d9294b81b: i have try results from yesterday, lemme look",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:29): a406713e05b1b23bdd6f397d9294b81b, Can we re-trigger runs on Luke's commit?",
        "a406713e05b1b23bdd6f397d9294b81b (02:30): Let's see...",
        "a406713e05b1b23bdd6f397d9294b81b (02:30): yes, looks like we can.",
        "a406713e05b1b23bdd6f397d9294b81b (02:30): triggers new dep builds on 79deba022227",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:30): can we back them both out, get a our first Windows mochitest-chrome results in seven hours, and then try that or try?",
        "a406713e05b1b23bdd6f397d9294b81b (02:31): eab22ddafe9ed99f3735e412bf7ae3e3: I'd still like to back out in the meantime, so we don't leave inbound broken while we wait.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:31): a406713e05b1b23bdd6f397d9294b81b, sure, that's fine with me.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:31): has already re-landed his patch once.  :)",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:31): could we hold on for a second",
        "a406713e05b1b23bdd6f397d9294b81b (02:31): sure",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:32): 46ecbec5ec7951ce102670dbd0b2def5 wants to prove his innocence?",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:32): i'm looking at a log from try server last night (or trying to)",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:33): logs are soo sloow",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:33): heh, way to admit your guilt",
        "a406713e05b1b23bdd6f397d9294b81b (02:33): especially logs with infinite loops in them...",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:34): click the link for the xpcshell",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:34): open full log",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:34): does not understand why this log parsing is not entirely server-side.",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:34): get the &quot;download raw log&quot; link from that, trim off the filename to get the directory",
        "a406713e05b1b23bdd6f397d9294b81b (02:34): There's a slow server-side part",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:34): which is lazy, right?",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:34): It waits until you click before doing anything?",
        "a406713e05b1b23bdd6f397d9294b81b (02:34): and then there's just Firefox struggling to render hundreds of KB of text.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:34): And then does it cache anything?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:34): when you see that your moth logs are 1.5MB, that's your sign right there, but continue on anyway...",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:34): I mean just clicking on the build in TPBL.",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:34): i'm timing out just trying to load the log",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:35): We have the technology to make that fast.",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:35): GUILTY",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:35): WITCH",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:35): STONE HIM",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:36): https://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/<email/>-1508a11f889a/try-win32-debug/try_win7-debug_test-mochitest-other-build2946.txt.gz and avoid opening that link in a browser",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (02:36): or use Chrome if you must",
        "a03490c03eaa102dadc25dca3cc6772b (02:36): STONE HIM",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:37): $curl (blah) | wc -c   --&gt; 1,603,196",
        "dd83f96fa74f05bcbcf275c4352ab4f4 (02:38): throws a Rockmelt",
        "a03490c03eaa102dadc25dca3cc6772b (02:38): form of...a bucket of browser!",
        "a406713e05b1b23bdd6f397d9294b81b (02:38): prepares the backout",
        "9139b5bbff3c9c6a37be5d2af014270f (02:38): loaded just fine for me...",
        "dd83f96fa74f05bcbcf275c4352ab4f4 (02:39): *gleek*",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:39): hmm yeah, it does seem to be the same error.  fan tastic",
        "a406713e05b1b23bdd6f397d9294b81b (02:39): 46ecbec5ec7951ce102670dbd0b2def5: I'm about to push a backout.",
        "46ecbec5ec7951ce102670dbd0b2def5 (02:40): a406713e05b1b23bdd6f397d9294b81b: i think it is my cset, so you might as well not backout eab22ddafe9ed99f3735e412bf7ae3e3",
        "a406713e05b1b23bdd6f397d9294b81b (02:40): right.",
        "eab22ddafe9ed99f3735e412bf7ae3e3 (02:40): \\o/",
        "a406713e05b1b23bdd6f397d9294b81b (02:40): pushed",
        "898fc6ecff9a5867e6455f37fba81580 (03:04): My wife made me a pie before she headed down to L.A. for the week. This can only mean one thing ... I get to eat pie tonight :)",
        "9139b5bbff3c9c6a37be5d2af014270f (03:08): 898fc6ecff9a5867e6455f37fba81580++",
        "a604f231696173b88fa8c6214a3b7c80 (03:09): anyone knows how to print the raw bytes of a CGImageRef?",
        "918c1b2030c8a12aa1800a9e370024da (03:10): just one pie for all week ?",
        "050421e96671fe1a3d8cf2b5dbe99cb7 (03:12): no, one pie for tonight, and eating out for the next six days",
        "51c1edab440268cdb0754ff0c4584a9f (03:12): 11648e4e66e7ed6a86cb7f1d0cf604fe: sorry to have crushed your hopes on &quot;easy&quot; for cl.py native command",
        "51c1edab440268cdb0754ff0c4584a9f (03:13): 11648e4e66e7ed6a86cb7f1d0cf604fe: but yea, the bug I duped you to has some nice history with it, including the dep that caused it to be backed out.",
        "898fc6ecff9a5867e6455f37fba81580 (03:15): 918c1b2030c8a12aa1800a9e370024da: There is also meatloaf in the fridge ;)",
        "918c1b2030c8a12aa1800a9e370024da (03:15): YUmmmmmmmmmmmmmmmmmmmmmmmmm",
        "27a00904c55e1a3947176eabe2c0f262 (03:15): the rest of the time he's just gonna be going through his beer stockpile",
        "898fc6ecff9a5867e6455f37fba81580 (03:16): Hmm, this is totally not the channel I thought it was. Ah well",
        "918c1b2030c8a12aa1800a9e370024da (03:19): Of course, if you forget to put it up, the cat's going to be eating good :)",
        "00adb0702a98d60e91bee853adc4a0af (03:20): dbaron, ping",
        "8676f40c7c07987dc4274b0a98f6e07e (03:21): 00adb0702a98d60e91bee853adc4a0af, pong",
        "11648e4e66e7ed6a86cb7f1d0cf604fe (03:23): 51c1edab440268cdb0754ff0c4584a9f: I'm still trying to figure out why Bugzilla made me look like an idiot by not showing that bug in a search :)",
        "00adb0702a98d60e91bee853adc4a0af (03:23): dbaron, when we're computing style (in nsRuleNode::ComputeDisplayData in particular), is there a way to tell whether this computed-style is targeting a replaced vs. a non-replaced element?",
        "51c1edab440268cdb0754ff0c4584a9f (03:23): 11648e4e66e7ed6a86cb7f1d0cf604fe: just bad luck?",
        "00adb0702a98d60e91bee853adc4a0af (03:24): dbaron, motivation:  &quot;float&quot; computes to its initial value on a flexbox item.  &lt;img&gt; &amp; other replaced elements are flexbox items, while &lt;span&gt; is not (though they're both &quot;display:inline&quot; by default).",
        "8676f40c7c07987dc4274b0a98f6e07e (03:25): 00adb0702a98d60e91bee853adc4a0af, no... and if there were it would cause problems with sharing optimizations",
        "00adb0702a98d60e91bee853adc4a0af (03:25): dbaron, (until now, I've just been saying &quot;if your parent is a flexbox, then 'float' computes to its initial value&quot;, but that's technically not correct since &lt;spans&gt; inside of flexboxes aren't flexbox items)",
        "00adb0702a98d60e91bee853adc4a0af (03:25): dbaron, OK, I'll double-check my spec understanding &amp; then mail the list",
        "00adb0702a98d60e91bee853adc4a0af (03:26): dbaron, thanks!"
    ],
    "person_ids": [
        "050421e96671fe1a3d8cf2b5dbe99cb7",
        "42ce7467e2f3a5563f76ed7d36b149e5",
        "a604f231696173b88fa8c6214a3b7c80",
        "46cea6e391c9bc3acb24e97115618252",
        "a406713e05b1b23bdd6f397d9294b81b",
        "0aa51a9d03871edd7f4e71ddab8323c5",
        "eab22ddafe9ed99f3735e412bf7ae3e3",
        "46ecbec5ec7951ce102670dbd0b2def5",
        "a03490c03eaa102dadc25dca3cc6772b",
        "dd83f96fa74f05bcbcf275c4352ab4f4",
        "9139b5bbff3c9c6a37be5d2af014270f",
        "898fc6ecff9a5867e6455f37fba81580",
        "918c1b2030c8a12aa1800a9e370024da",
        "51c1edab440268cdb0754ff0c4584a9f",
        "27a00904c55e1a3947176eabe2c0f262",
        "00adb0702a98d60e91bee853adc4a0af",
        "8676f40c7c07987dc4274b0a98f6e07e",
        "11648e4e66e7ed6a86cb7f1d0cf604fe"
    ]
}