{
    "id": "3e7cfb538a1a22c577dcb8f1d1f8ea68",
    "messages": [
        "906cca2a5ed603c0f4e8b08b56a80768 (17:48): tbsaunde: you looking for a bug?",
        "906cca2a5ed603c0f4e8b08b56a80768 (17:48): (note bug 729831)",
        "47e87577fff6e08b0f2f43540db8c9c9 (17:48): Bug https://bugzilla.mozilla.org/show_bug.cgi?id=729831 cri, --, ---, surkov.alexander, NEW, Crash @ mozilla::a11y::StyleInfo::Margin",
        "22625f683d3bf3dd883140da90753a5c (18:00): tbsaunde, I gave up on suffix arrays/suffix trees for now",
        "22625f683d3bf3dd883140da90753a5c (18:00): tbsaunde, and I want to send the immediate result (which still should be faster then original) solution",
        "22625f683d3bf3dd883140da90753a5c (18:00): tbsaunde, so I want to create a class that does the trick",
        "22625f683d3bf3dd883140da90753a5c (18:01): tbsaunde, where should I put it?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:13): askalski:  why not just replace what's there now?",
        "22625f683d3bf3dd883140da90753a5c (18:13): tbsaunde, I have like 5 supporting methods to make code readable and debuggable",
        "22625f683d3bf3dd883140da90753a5c (18:13): tbsaunde, and they all operate on same arrays",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:14): askalski: so?",
        "22625f683d3bf3dd883140da90753a5c (18:14): tbsaunde, so putting it all into a single method is not really an option",
        "22625f683d3bf3dd883140da90753a5c (18:14): tbsaunde, I need some kind of wrapper, and class is perfect",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:15): davidb|afk: I'll look at those crashs when I have a minute, but iirc that one is on windows with steps to repro so probably better for you or Alex to work on it",
        "7a19c8b509a5d5c34b9fb935bd73dd5d (18:15): ugh yeah",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:15): askalski: so add stuff to the text updator?",
        "22625f683d3bf3dd883140da90753a5c (18:21): tbsaunde, is it really so bad to add a new class?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:22): askalski: no, but what is the point?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:22): wonders why davidb wants a second review on his telemetry patch",
        "22625f683d3bf3dd883140da90753a5c (18:24): tbsaunde, well, in my present implementation, all function names mimic the paper I was basing on, which makes it readable (if you know the paper, otherwise it's impossible to understand algorithm anyway)",
        "22625f683d3bf3dd883140da90753a5c (18:24): tbsaunde, I can either mix it with TextUpdater, and break the style",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:24): tbsaunde: we need a peer or owner on each patch",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:26): davidb: really? I thought it was legit if peers asked other people",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:26): tbsaunde: that's fuzzy to me, but possibly true",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:26): davidb: well, surkov certainly asks other people :)",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:27): does he r+ first?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:27): I think it depends, but certainly not on patches he write",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:27): heh",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:29): I'd be okay with transplanted trust.",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:29): The module owners have final say on that.",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:30): yeah",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:30): I didn't want to interrupt you and askalski here.",
        "22625f683d3bf3dd883140da90753a5c (18:30): tbsaunde, so what do you think, can I keep it as a separate class? I can nest it in TextUpdater",
        "22625f683d3bf3dd883140da90753a5c (18:31): but I guess keeping it in separate file may have some point",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:31): askalski: do what you think is reasonable :)",
        "22625f683d3bf3dd883140da90753a5c (18:31): ok, you'll see the patch proposition, and we'll talk again then",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:35): tbh if I was designing this I probably  wouldn't hve made textupdator a class in the first place, but shrug",
        "22625f683d3bf3dd883140da90753a5c (18:41): tbsaunde, I wonder one thing",
        "22625f683d3bf3dd883140da90753a5c (18:41): tbsaunde, there is &quot;skip prefix&quot; argument",
        "22625f683d3bf3dd883140da90753a5c (18:41): usually, when I hack something for myself",
        "940baac7a8cf188d66395b0115b78dc5 (18:41): just submitted a patch for a crasher. I don't know if that actually fixes it https://bugzilla.mozilla.org/show_bug.cgi?id=729861",
        "47e87577fff6e08b0f2f43540db8c9c9 (18:41): Bug 729861 cri, --, ---, hub, NEW, Crash in nsDocAccessible::GetAccessible",
        "22625f683d3bf3dd883140da90753a5c (18:42): I just do char * realstring = originalString + skipPrefix;",
        "22625f683d3bf3dd883140da90753a5c (18:42): so just moving the pointer. but here strings are classes",
        "22625f683d3bf3dd883140da90753a5c (18:42): are these randomly accessed (like std:string and std:vector in civilised implementations)?",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:43): hub: do you have a windows vm?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:43): askalski: I'm not sure I understand what your asking",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:43): they're all defined in xpcom/string/ but you have to dig through a couple layers of macros",
        "22625f683d3bf3dd883140da90753a5c (18:44): can I just hack some advanced pointers instead of just adding everywhere + prefix and -prefix",
        "22625f683d3bf3dd883140da90753a5c (18:44): ?",
        "47e87577fff6e08b0f2f43540db8c9c9 (18:44): <email/> requested review from trev.saunders@gmail .com for attachment 600054 on bug 729861.",
        "940baac7a8cf188d66395b0115b78dc5 (18:44): davidb: I have one, but no dev tools",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:44): hub: can you build on it?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:44): I believe you should be able to do PRUniChar* start = string.BeginReading() + aSkipStart;",
        "940baac7a8cf188d66395b0115b78dc5 (18:45): davidb: no devtools",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:45): needs to decide whether to stay on current task or not",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:45): ok",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:45): hub: they are free ya know :)",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:45): (as in beer)",
        "940baac7a8cf188d66395b0115b78dc5 (18:45): davidb: at that point I'm willing to actually check in and see",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:45): hub: how about a try build?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:45): davidb: yeah, but try is so much less painful ;)",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:46): ok",
        "940baac7a8cf188d66395b0115b78dc5 (18:46): I can do a try build, that's for sure",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:46): i guess that's what hub meant",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:46): ok",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:46): go for it",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:46): may or may not have debugged build errors into build with try",
        "940baac7a8cf188d66395b0115b78dc5 (18:46): tbsaunde: I have done that too.",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:46): then Jamie can verify at will",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:47): I don't know what you guys mean",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:47): ohhh",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:47): got it :)",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:47): davidb: instead of booting my windows vm you keep pushing things to try",
        "906cca2a5ed603c0f4e8b08b56a80768 (18:47): yep",
        "940baac7a8cf188d66395b0115b78dc5 (18:49): the thing is I don't know how to reproduce the crash",
        "940baac7a8cf188d66395b0115b78dc5 (18:49): but it seems to be a top crasher",
        "940baac7a8cf188d66395b0115b78dc5 (18:49): maybe it is time I get dressed to go to the office",
        "81fa1e07c4ea96f215901d989f8bf37b (18:50): psh",
        "81fa1e07c4ea96f215901d989f8bf37b (18:50): getting dressed is over rated",
        "22625f683d3bf3dd883140da90753a5c (18:50): tbsaunde, where I can find guidelines about naming conventions?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:51): askalski: I'm not sure there's a great answer to that, we mostly follow the gecko style guide, but that isn't a great example of documentation ...",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:51): askalski: what do you want to know?",
        "940baac7a8cf188d66395b0115b78dc5 (18:52): 81fa1e07c4ea96f215901d989f8bf37b: we have laws here",
        "22625f683d3bf3dd883140da90753a5c (18:53): tbsaunde, is there a certain suffix I should put on front of for example integer names?",
        "22625f683d3bf3dd883140da90753a5c (18:53): is for example stringLenght ok, or should I name it aStringLength or something",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:57): askalski: only arguments start with a",
        "22625f683d3bf3dd883140da90753a5c (18:57): ok",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:57): and no we aren't mad so we don't use ral hungarian notation :p",
        "94d50e2efa8ecc99acd742d7cdd18f4a (18:58): hub: so, I don't immediately understand why tht code was the way it was, so I think I'm calling reviewing it surkov's problem",
        "940baac7a8cf188d66395b0115b78dc5 (19:11): tbsaunde: ok",
        "940baac7a8cf188d66395b0115b78dc5 (19:12): tbsaunde: contentDoc isn't the same as mDoc because we might be coming from outside, like the outer frame or something",
        "940baac7a8cf188d66395b0115b78dc5 (19:12): tbsaunde: that's was part of the breakage in hittesting",
        "47e87577fff6e08b0f2f43540db8c9c9 (19:13): <email/> requested review from surkov.alexander@gm ail.com for attachment 600054 on bug 729861.",
        "47e87577fff6e08b0f2f43540db8c9c9 (19:13): Bug https://bugzilla.mozilla.org/show_bug.cgi?id=729861 cri, --, ---, hub, NEW, Crash in nsDocAccessible::GetAccessible",
        "94d50e2efa8ecc99acd742d7cdd18f4a (19:14): hub:  can you explain &quot;coming from outside&quot;?",
        "94d50e2efa8ecc99acd742d7cdd18f4a (19:14): I didn't pay much attention to what the hit testing problem was exactly.",
        "940baac7a8cf188d66395b0115b78dc5 (19:26): tbsaunde: like coming from the chrome or the outer document",
        "940baac7a8cf188d66395b0115b78dc5 (19:29): ok, going to the office. c-ya in 30",
        "22625f683d3bf3dd883140da90753a5c (19:34): tbsaunde, do we have a max value define for PRUint32?",
        "22625f683d3bf3dd883140da90753a5c (19:34): tbsaunde, found it",
        "47e87577fff6e08b0f2f43540db8c9c9 (19:37): <email/> changed the Target Milestone on bug 718237 from --- to mozilla13.",
        "47e87577fff6e08b0f2f43540db8c9c9 (19:37): Bug https://bugzilla.mozilla.org/show_bug.cgi?id=718237 maj, --, mozilla13, nobody, NEW, [SeaMonkey] &quot;accessible/events/test_focus_autocomplete.xul | Test timed out.&quot; (which also causes lot",
        "22625f683d3bf3dd883140da90753a5c (19:40): ok, I am finishing for today",
        "22625f683d3bf3dd883140da90753a5c (19:40): bye everyone",
        "906cca2a5ed603c0f4e8b08b56a80768 (19:41): good night!",
        "22625f683d3bf3dd883140da90753a5c (19:42): davidb, thanks",
        "b01242a4eacb89ad6f23ebd7f3f93d44 (19:51): just a general question. accessibility is interesting but what exactly drives the development here. With dom/layout i know what specs they follow but  here??"
    ],
    "person_ids": [
        "906cca2a5ed603c0f4e8b08b56a80768",
        "47e87577fff6e08b0f2f43540db8c9c9",
        "22625f683d3bf3dd883140da90753a5c",
        "94d50e2efa8ecc99acd742d7cdd18f4a",
        "7a19c8b509a5d5c34b9fb935bd73dd5d",
        "940baac7a8cf188d66395b0115b78dc5",
        "81fa1e07c4ea96f215901d989f8bf37b",
        "b01242a4eacb89ad6f23ebd7f3f93d44"
    ]
}