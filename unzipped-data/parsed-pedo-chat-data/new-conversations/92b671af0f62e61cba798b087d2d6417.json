{
    "id": "92b671af0f62e61cba798b087d2d6417",
    "messages": [
        "b25b6b77a0087ff8385941e5545d32ea (13:09): b8810fee2f4a71f849f3f7409546d1d9: java.lang.ClassCastException: org.xml.sax.InputSource cannot be cast to nu.validator.xml.TypedInputSource when starting validator.nu",
        "b25b6b77a0087ff8385941e5545d32ea (13:10): Did I do something obvious wrong?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:28): b25b6b77a0087ff8385941e5545d32ea: no, you didn't. that's the #1 V.nu local use FAQ",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:28): b25b6b77a0087ff8385941e5545d32ea: have you tried rerunning python build/build.py localent?",
        "b25b6b77a0087ff8385941e5545d32ea (13:35): b8810fee2f4a71f849f3f7409546d1d9: There is an FAQ? I should have checked, really...",
        "b25b6b77a0087ff8385941e5545d32ea (13:42): b8810fee2f4a71f849f3f7409546d1d9: running that didn't make any difference",
        "b25b6b77a0087ff8385941e5545d32ea (13:42): (where is the FAQ?)",
        "b25b6b77a0087ff8385941e5545d32ea (13:45): Oh it works now",
        "b25b6b77a0087ff8385941e5545d32ea (13:45): No idea if I changed anything",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:08): b25b6b77a0087ff8385941e5545d32ea: nothing changed -- the problem is that the build always fails with that message the first time you run it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:08): from a fresh checkout",
        "b25b6b77a0087ff8385941e5545d32ea (14:08): Ummm....",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:08): running the build a second time fixes it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:09): that rebuilds the necessary localent stuff",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:09): it's definitely something that should be changed in the build file",
        "b25b6b77a0087ff8385941e5545d32ea (14:09): Ah, OK",
        "b25b6b77a0087ff8385941e5545d32ea (14:10): a9b326df4e6da61c5b6f5e1058be83a2, b8810fee2f4a71f849f3f7409546d1d9: thanks for the help",
        "a9b326df4e6da61c5b6f5e1058be83a2 (14:10): I guess we could work around it for now by tweaking the build file to cause the build to be run twice the first time you check out",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:12): hi i wanted to ask about webstorage in HTML5.. When we use the anonymous functions in the callback like executeSql i think I  am facing there are some scope related problems while setting variables ...  does any one know how to safely set the scope of local variables from inside of anonymous functions?",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:12): am new to js...",
        "b25b6b77a0087ff8385941e5545d32ea (14:14): 9d5e71d4d1fd373540a8fca06dfa5ecb: Possibly you just need to use &quot;var foo = bar&quot; rather than &quot;foo = bar&quot;. Otherwise I don't understand the question",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:14): using the var statement should help",
        "b25b6b77a0087ff8385941e5545d32ea (14:14): Javascript is so awesome. How could making variables lobal by default possibly go wrong?",
        "b25b6b77a0087ff8385941e5545d32ea (14:15): *global",
        "ab7faae5d7b250ea8606486575f8f79c (14:15): finds function-scoping much more annoying than default-global",
        "a11aabeeceeae6b8cb5d12ea06b56554 (14:15): b25b6b77a0087ff8385941e5545d32ea: At least ECMAScript doesn't ahve that behaviour inherently",
        "b25b6b77a0087ff8385941e5545d32ea (14:15): As opposed to block scoping?",
        "ab7faae5d7b250ea8606486575f8f79c (14:15): Yes",
        "b25b6b77a0087ff8385941e5545d32ea (14:15): a11aabeeceeae6b8cb5d12ea06b56554: Huh?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (14:16): Most (all?) ES shells will throw ReferenceError if you do (function(){foo=1;})();",
        "ab7faae5d7b250ea8606486575f8f79c (14:17): (since I want to do &quot;for (var i = 0; i &lt; 4; ++i) setTimeout(function() { alert(i) }, 100)&quot; etc, instead of having to write it more like &quot;for (var i = 0; i &lt; 4; ++i) (function(i){setTimeout(function() { alert(i) }, 100)})(i)&quot;)",
        "b25b6b77a0087ff8385941e5545d32ea (14:18): a11aabeeceeae6b8cb5d12ea06b56554: No they won't",
        "a11aabeeceeae6b8cb5d12ea06b56554 (14:18): wonders what he's misremebering",
        "b25b6b77a0087ff8385941e5545d32ea (14:18): a11aabeeceeae6b8cb5d12ea06b56554: They way that variablke scoping works in ECMAScript?",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:19): http://pastebin.com/n8Yk4fQ6",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:19): hi here is an example",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:19): the variable var1",
        "b25b6b77a0087ff8385941e5545d32ea (14:19): ab7faae5d7b250ea8606486575f8f79c: That is a pretty special case",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:19): is not getting set...",
        "b25b6b77a0087ff8385941e5545d32ea (14:19): ab7faae5d7b250ea8606486575f8f79c: (although I don't disagree)",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:21): b25b6b77a0087ff8385941e5545d32ea: one simple way would be to make a class for call backs and set the variables to fetch from there... but is there a simpler way?",
        "ab7faae5d7b250ea8606486575f8f79c (14:21): b25b6b77a0087ff8385941e5545d32ea: I encountered it several times before understanding what the problem really was",
        "ab7faae5d7b250ea8606486575f8f79c (14:22): mostly when doing stuff like dynamically creating lots of scripted buttons",
        "b25b6b77a0087ff8385941e5545d32ea (14:22): ab7faae5d7b250ea8606486575f8f79c: Ah, I have never done that",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:23): Is this all about understanding of closures?",
        "b25b6b77a0087ff8385941e5545d32ea (14:24): 9d5e71d4d1fd373540a8fca06dfa5ecb: I assume your problem is that the callback is async so it hasn't been run when the function returns",
        "b25b6b77a0087ff8385941e5545d32ea (14:24): (the closure stuff looks fine)",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:25): b25b6b77a0087ff8385941e5545d32ea: So how to solve this?",
        "b25b6b77a0087ff8385941e5545d32ea (14:25): 9d5e71d4d1fd373540a8fca06dfa5ecb: I don't know what you are actually trying to achieve",
        "b25b6b77a0087ff8385941e5545d32ea (14:25): But you don't want to block on an SQL query running",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:26): well i am trying to return a result set to a calling function...",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:26): do i use the synchronus stuff mentioned in the w3c standard?",
        "ab7faae5d7b250ea8606486575f8f79c (14:27): The database API is asynchronous, so you can't return a result from it synchronously",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:27): ab7faae5d7b250ea8606486575f8f79c: there is a section 4.4 that says someting about syncro stuff http://dev.w3.org/html5/webdatabase",
        "ab7faae5d7b250ea8606486575f8f79c (14:28): Oh, okay",
        "ab7faae5d7b250ea8606486575f8f79c (14:28): doesn't actually know anything about the database API",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:28): oh!",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:29): so the only way to process is supplying a call back function?",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:29): as in when the query completes...",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:29): ?",
        "ab7faae5d7b250ea8606486575f8f79c (14:30): Looks like the synchronous API is only available in workers, not in normal web page scripts",
        "ab7faae5d7b250ea8606486575f8f79c (14:30): so you have to use the async one",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:30): hmm",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:30): no but",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:30): i think",
        "ab7faae5d7b250ea8606486575f8f79c (14:30): which means using a callback function instead of a return value",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:31): Thnks!",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:31): was about to split my head over that!",
        "ab7faae5d7b250ea8606486575f8f79c (14:31): (It's a bit of a pain that you have to rearchitect large parts of the application when adding a single asynchronous operation into the middle of it)",
        "b25b6b77a0087ff8385941e5545d32ea (14:32): ab7faae5d7b250ea8606486575f8f79c: It's not really clear how to avoid that pain though",
        "ab7faae5d7b250ea8606486575f8f79c (14:32): You can avoid it by starting with an asynchronous design",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:33): b25b6b77a0087ff8385941e5545d32ea: there's no written FAQ. your question is just the most frequent question I get",
        "ab7faae5d7b250ea8606486575f8f79c (14:34): (or using a programming environment that makes everything asynchronous automatically)",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:34): ab7faae5d7b250ea8606486575f8f79c: perhaps some neat design pattern",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:34): probably event based tuff",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:34): stuff*",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:34): ab7faae5d7b250ea8606486575f8f79c: and yes i will have to rewrite my app again :(",
        "b25b6b77a0087ff8385941e5545d32ea (14:37): ab7faae5d7b250ea8606486575f8f79c: Having a programming environement that makes everything async probably trades simplicity in simple cases for simplicity in complex cases",
        "b25b6b77a0087ff8385941e5545d32ea (14:37): Although it is also likely appropriate for the web",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:39): 9d5e71d4d1fd373540a8fca06dfa5ecb, you could use a worker",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:42): edb259c0e0038f38bb200bc20c8cbf7e: let me see...",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:46): edb259c0e0038f38bb200bc20c8cbf7e: so the use the synchronus elements instead of the asynchronus ones...Is the solution just that simple...?",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:47): BTW the only difference in the API is that the call back and the error functions are not there...",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:47): i mean the diff between API of the async and synchro stuff...",
        "ab7faae5d7b250ea8606486575f8f79c (14:48): 9d5e71d4d1fd373540a8fca06dfa5ecb: Workers can't e.g. access the DOM, so you'd have to tell a worker to do the database operations and then (asynchronously) get the results back and display them",
        "ab7faae5d7b250ea8606486575f8f79c (14:48): so it wouldn't necessarily be much simpler",
        "b25b6b77a0087ff8385941e5545d32ea (14:49): Workers seem more complex",
        "b25b6b77a0087ff8385941e5545d32ea (14:49): In general",
        "b25b6b77a0087ff8385941e5545d32ea (14:49): Does Mobile Safari even support workers?",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:49): 9d5e71d4d1fd373540a8fca06dfa5ecb, the database interaction would be synchronous, but the UI interaction would be asynchronous",
        "b25b6b77a0087ff8385941e5545d32ea (14:49): (I assume that's what you are targetting, although I would be happy to be wrong)",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:50): well i am making a scrapbook plugin for Chrome...:)",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:50): And saving the data in the provided webstorage",
        "b25b6b77a0087ff8385941e5545d32ea (14:50): Ah OK",
        "b25b6b77a0087ff8385941e5545d32ea (14:50): Well workers are a possibility then",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:50): the operations are to simply store and retrieve data elements",
        "b25b6b77a0087ff8385941e5545d32ea (14:50): although I doubt they help much in this case",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:52): b25b6b77a0087ff8385941e5545d32ea: I assume that i can simply return the result set *after the call completes* with workers to solve my problems...",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:52): Let me try\\",
        "9d5e71d4d1fd373540a8fca06dfa5ecb (14:52): Thanks",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:52): b8810fee2f4a71f849f3f7409546d1d9, nice email",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:53): I hadn't read the specific approach Google was proposing yet. I agree that the centralized solution they propose is wrong.",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:01): edb259c0e0038f38bb200bc20c8cbf7e: thanks. do you know / can you say if Opera has reconsidered the widget stuff in light of the HTML5 app cache?",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:02): that is, if Opera were starting without a widget legacy, would there still be good reasons to do widgets instead of pinning stuff to HTML5 app cache?",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:03): opinions vary :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:03): edb259c0e0038f38bb200bc20c8cbf7e: I see",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:07): you can see some of them on http://lists.w3.org/Archives/Public/public-webapps/2010AprJun/ &quot;[widgets] Zip vs GZip Tar&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (15:17): Widgets make some sense for a limited set of use cases. There are still some things that widgets can do that web apps and app cache currently can't do well",
        "b25b6b77a0087ff8385941e5545d32ea (15:18): 9d5e71d4d1fd373540a8fca06dfa5ecb: Why do you need workers to do that?"
    ],
    "person_ids": [
        "b25b6b77a0087ff8385941e5545d32ea",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "9d5e71d4d1fd373540a8fca06dfa5ecb",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "f139aba52f9fa1394b4034a7954b2220"
    ]
}