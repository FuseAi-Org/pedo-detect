{
    "id": "65dd932412e7d1c58af3a82660c006f7",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (12:56): 69b0d3dfe919a6b860a9fac82de52a7e, did you intentionally omit 'justify' from the allowed values of canvas context .textAlign?",
        "69b0d3dfe919a6b860a9fac82de52a7e (12:57): yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (12:57): &lt;string&gt; also",
        "f139aba52f9fa1394b4034a7954b2220 (12:58): isn't it possible to support it at all?",
        "f139aba52f9fa1394b4034a7954b2220 (12:59): or is it just too complex for this first version?",
        "65325d50b2e25aca54bc871b89758c9c (12:59): full justification looks shitty on the web usually",
        "65325d50b2e25aca54bc871b89758c9c (13:00): basically no site uses it",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:00): justify should be possible, would even be nice if maxWidth was taken as desiredWidth or something",
        "65325d50b2e25aca54bc871b89758c9c (13:00): CSS3 Text module has a super complex spec for fancy full justification",
        "f139aba52f9fa1394b4034a7954b2220 (13:00): the default wordpress template uses justify",
        "65325d50b2e25aca54bc871b89758c9c (13:00): which IE might even implement some of",
        "f139aba52f9fa1394b4034a7954b2220 (13:01): so you can't say basically no site uses it.",
        "ab7faae5d7b250ea8606486575f8f79c (13:01): You could imagine that 'left' means 'left or justify', since you can only draw a single line of text so it makes no difference",
        "65325d50b2e25aca54bc871b89758c9c (13:01): of the 4 random wordpress.com blogs I looked at, none seems to have full justified text",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): offtopic: http://shop.lego.com/ByTheme/Product.aspx?p=10179&amp;cn=416&amp;d=322",
        "65325d50b2e25aca54bc871b89758c9c (13:02): you could full-justify a single line to a specific width, but that is likely a bad idea",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:02): full justification would be meaningless since there's only one line, it would be stretch-to-fit",
        "65325d50b2e25aca54bc871b89758c9c (13:02): edb259c0e0038f38bb200bc20c8cbf7e: multiple people at my work have one of those",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:02): or space-to-fit",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:02): and i'm not adding that feature just because text-align happens to have it",
        "65325d50b2e25aca54bc871b89758c9c (13:03): full justify only ever looks good if you have an algorithm that is smart about adding justification vs. breaking lines, and is willing to either expand or compress both letter-spacing and word-spacing",
        "f139aba52f9fa1394b4034a7954b2220 (13:03): ok, that makes sense",
        "ab7faae5d7b250ea8606486575f8f79c (13:04): Why can't web browsers render everything using LaTeX?",
        "65325d50b2e25aca54bc871b89758c9c (13:04): WebKit's algorithm is not very smart (it breaks lines as normal and adds word-spacing)",
        "65325d50b2e25aca54bc871b89758c9c (13:04): ab7faae5d7b250ea8606486575f8f79c: good justification is expensive to do on the fly, since you have to optimize the whole paragraph and can't really work line-at-a-time",
        "65325d50b2e25aca54bc871b89758c9c (13:04): (which I believe is what TeX does)",
        "ab7faae5d7b250ea8606486575f8f79c (13:05): Computers are fast - I would have though they could optimise a ten-line paragraph without a huge amount of trouble",
        "ab7faae5d7b250ea8606486575f8f79c (13:05): *thought",
        "1e1cc9bdeb2f29f5480106aec7e9bc48 (13:06): talking in #whatwg",
        "25812bf456959aa5f28dc570f341a3ba (13:06): is 'WHATWG (HTML5) -- http://www.whatwg.org/ -- Logs: http://krijnhoetmer.nl/irc-logs/ -- Please leave your sense of logic at the door, thanks!'",
        "5d5b78699e57104f2fa03bbdf7b9197b (13:06): by a11aabeeceeae6b8cb5d12ea06b56554 on Tue Dec 18 21:41:19",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:06): one paragraph, sire",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:06): sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:07): html5 is about 5000 paragraphs",
        "65325d50b2e25aca54bc871b89758c9c (13:07): full justify is really most useful for very narrow columns as in newspapers",
        "65325d50b2e25aca54bc871b89758c9c (13:07): though I guess it looks good in books too",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:08): i think that's why CSS3 covers it in much detail",
        "65325d50b2e25aca54bc871b89758c9c (13:08): in the web context it can create &quot;rivers&quot; through the text when done badly",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:08): probably less so for CSS applied on a screen context",
        "ab7faae5d7b250ea8606486575f8f79c (13:09): I assume good justification also requires automatic hyphenation",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:10): that's another topic discussed quite a bit in the CSS WG...",
        "ab7faae5d7b250ea8606486575f8f79c (13:15): would be happier if more basic aspects of text rendering worked, like not having some fonts appear with no antialiasing on Linux, or like not having Safari sometimes render '=' with the top line twice the thickness of the bottom line, before worrying about complex typographical layout details",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:16): hmm. *I'm* hung up on machine validation of alt???",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:18): maybe you should ask which universe version of you they're referring too",
        "ab7faae5d7b250ea8606486575f8f79c (13:25): wonders why 69b0d3dfe919a6b860a9fac82de52a7e's proposal that makes alt mandatory has had so few responses",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:25): bites back some scathing cynicism",
        "65325d50b2e25aca54bc871b89758c9c (13:26): did anyone read it?",
        "65325d50b2e25aca54bc871b89758c9c (13:27): probably only people who dislike mandatory alt actually read that far",
        "ab7faae5d7b250ea8606486575f8f79c (13:27): I don't dislike mandatory alt but I read it :-)",
        "f139aba52f9fa1394b4034a7954b2220 (13:27): ab7faae5d7b250ea8606486575f8f79c, when did 69b0d3dfe919a6b860a9fac82de52a7e propose to make alt mandatory? Did I miss something?",
        "ab7faae5d7b250ea8606486575f8f79c (13:28): http://lists.w3.org/Archives/Public/public-html/2008May/0073.html",
        "ab7faae5d7b250ea8606486575f8f79c (13:30): (I suppose that wasn't actually saying alt should be mandatory in all cases, but I'm not sure what other cases remain)",
        "65325d50b2e25aca54bc871b89758c9c (13:32): 69b0d3dfe919a6b860a9fac82de52a7e's proposal is clearly meant to be a Modest one",
        "65325d50b2e25aca54bc871b89758c9c (13:32): but I don't hate it that much other than the sheer length of importantimage=&quot;importantimage&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (13:32): I really don't like the name importantimage for the attribute",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:33): i believe i noted the attribute name was dumb",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:33): and asked for better ideas",
        "f139aba52f9fa1394b4034a7954b2220 (13:34): how about introducing &lt;img src=&quot;...&quot; kind=&quot;Photo&quot;&gt; (where the value is a short, descriptive label of somekind)",
        "65325d50b2e25aca54bc871b89758c9c (13:34): the thing is, none of the people who would be expected to herald it as a brilliant breakthrough have spoken up",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:35): shocking",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:35): in other news",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:35): i need to make innerHTML convert undefined and null to strings before processing",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:35): should i just assume that that is what happens?",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:35): i don't really follow that part of WebIDL",
        "f139aba52f9fa1394b4034a7954b2220 (13:35): that way you're not altering the meaning of alt based on the presence of another attribtue, and it also gives more potentially useful information in conjuncion with alt",
        "65325d50b2e25aca54bc871b89758c9c (13:36): 69b0d3dfe919a6b860a9fac82de52a7e: heycam's explanation of that in email further confused me",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:37): as i understand it we have the following cases:",
        "65325d50b2e25aca54bc871b89758c9c (13:37): 69b0d3dfe919a6b860a9fac82de52a7e: it sounds like in the current version you have to specify [NoNull] to get that behavior for null but I am not really sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:37): (for setting DOMString attributes and for passing DOMString arguments)",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:37): 1. null -&gt; &quot;&quot;, undefined -&gt; &quot;&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:37): 2. null -&gt; &quot;&quot;, undefined -&gt; &quot;undefined&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (13:37): e.g. it distinguishes these two images, even though they have the same alt text:",
        "f139aba52f9fa1394b4034a7954b2220 (13:37): &lt;img src=&quot;house.png&quot; alt=&quot;The house is white, with green shutters on the windows.&quot; kind=&quot;Painting&quot;&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (13:37): &lt;img src=&quot;house.png&quot; alt=&quot;The house is white, with green shutters on the windows.&quot; kind=&quot;Photograph&quot;&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:37): 3. null -&gt; &quot;null&quot;, undefined -&gt; &quot;undefined&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:38): 4. null -&gt; null, undefined -&gt; null",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:39): case 2 actually exists? :(",
        "65325d50b2e25aca54bc871b89758c9c (13:39): I don't think Web IDL has anything to specify handling for null",
        "65325d50b2e25aca54bc871b89758c9c (13:39): I am also not offhand aware of APIs that do 1 or 4",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:39): Web IDL has [NoNull]",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:39): edb259c0e0038f38bb200bc20c8cbf7e: firefox with innerHTML does that",
        "65325d50b2e25aca54bc871b89758c9c (13:39): er",
        "65325d50b2e25aca54bc871b89758c9c (13:39): specify handling for undefined I mean",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:39): [NoNull] is a terrible name as it doesn't convey 1-4 of the above",
        "65325d50b2e25aca54bc871b89758c9c (13:40): I think 2 is what you get by default, and 3 is what you get with NoNull",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): 69b0d3dfe919a6b860a9fac82de52a7e, I don't think Firefox is the best reference",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): I believe WebKit, Opera, and IE are more aligned last I checked",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:40): i'm not saying it is",
        "65325d50b2e25aca54bc871b89758c9c (13:41): in WebKit's IDL extensions, 3 is what you get by default and 2 (or really null -&gt; null, undefined -&gt; &quot;undefined&quot;) is what you get with [ConvertNullToNullString]",
        "f139aba52f9fa1394b4034a7954b2220 (13:41): selectors api uses case 1 for return values from nsresolver",
        "65325d50b2e25aca54bc871b89758c9c (13:41): I think in DOM APIs, 2 (or really my variant of 2, but most things don't distinguish null string and empty string) is most common",
        "65325d50b2e25aca54bc871b89758c9c (13:42): but 3 is the most native-to-JavaScript behavior",
        "65325d50b2e25aca54bc871b89758c9c (13:43): Safari does 2 for assignment to innerHTML afaict",
        "65325d50b2e25aca54bc871b89758c9c (13:44): I can't find any place where we treat undefined passed for a string argument as empty string instead of &quot;undefined&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:44): can you find any cases where you treat undefined as null?",
        "65325d50b2e25aca54bc871b89758c9c (13:45): actually we have a function for it so maybe",
        "65325d50b2e25aca54bc871b89758c9c (13:46): lemme see",
        "f139aba52f9fa1394b4034a7954b2220 (13:46): 65325d50b2e25aca54bc871b89758c9c, it appears that webkit does for document.querySelector(undefined); It throws a syntax err, the same as if &quot;&quot; was passed",
        "65325d50b2e25aca54bc871b89758c9c (13:46): createDocumentType, querySelector and toDataURL",
        "65325d50b2e25aca54bc871b89758c9c (13:47): createDocumentType is probably the only one of those that can't be changes for compat reasons",
        "65325d50b2e25aca54bc871b89758c9c (13:47): sucks to have three different ways of treating DOMString arguments",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:47): createDocumentType is used?!",
        "65325d50b2e25aca54bc871b89758c9c (13:47): and that's not even accounting for the weirdshit on attribute setting or return values",
        "65325d50b2e25aca54bc871b89758c9c (13:48): edb259c0e0038f38bb200bc20c8cbf7e: shockingly, yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:48): getElementsByClassName() seems to treat undefined as &quot;&quot; in webkit trunk",
        "65325d50b2e25aca54bc871b89758c9c (13:50): I will not vouch for all our string treatment being the best choice compat-wise, mind you, not all of the cases have been compared against other implementations",
        "65325d50b2e25aca54bc871b89758c9c (13:50): Document.execCommand also treats undefined as null/empty for the third argument",
        "65325d50b2e25aca54bc871b89758c9c (13:50): (presumably to DTRT when it is omitted)",
        "65325d50b2e25aca54bc871b89758c9c (13:51): also for the URL and feature arguments of window.open",
        "f4dfad803df83144a5be86d9bca87678 (14:07): is in Dublin",
        "ab7faae5d7b250ea8606486575f8f79c (14:25): f139aba52f9fa1394b4034a7954b2220: &lt;img src=&quot;...&quot; kind=&quot;Photo&quot;&gt; would be much worse than &lt;img src=&quot;...&quot; alt=&quot;Photo&quot; some-metametadata-attribute&gt; for graceful degradation, since existing UAs won't tell the user it's a photo and will do something ugly like read the filename or ignore the image",
        "f139aba52f9fa1394b4034a7954b2220 (14:38): ab7faae5d7b250ea8606486575f8f79c, so as far as back compat is concerned, it's no worse than what the current spec says",
        "f139aba52f9fa1394b4034a7954b2220 (14:39): but it's still may be an improvement for future UAs",
        "ab7faae5d7b250ea8606486575f8f79c (14:41): f139aba52f9fa1394b4034a7954b2220: Would it be more of an improvement for future UAs than &lt;img importantimage&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:42): woot, i caught up with the backlog i got from playing gta4",
        "ab7faae5d7b250ea8606486575f8f79c (14:43): Does that mean you're going back to GTA4 again? :-)",
        "f139aba52f9fa1394b4034a7954b2220 (14:43): I think importantimage will suffer from many of the same problems as noalt=&quot;&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (14:43): 69b0d3dfe919a6b860a9fac82de52a7e: are you sure you're old enough to play GTA4?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (14:43): :D",
        "f139aba52f9fa1394b4034a7954b2220 (14:46): oh, I like 69b0d3dfe919a6b860a9fac82de52a7e's suggested improvements for WebIDL. I hope heycam accepts them, and then I only need to decide on the best behavior to choose for selectors api"
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "65325d50b2e25aca54bc871b89758c9c",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "1e1cc9bdeb2f29f5480106aec7e9bc48",
        "25812bf456959aa5f28dc570f341a3ba",
        "5d5b78699e57104f2fa03bbdf7b9197b",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "f4dfad803df83144a5be86d9bca87678",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}