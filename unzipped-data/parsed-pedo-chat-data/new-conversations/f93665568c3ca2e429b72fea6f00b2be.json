{
    "id": "f93665568c3ca2e429b72fea6f00b2be",
    "messages": [
        "57551cb51d38c51417f5abfeacfb9b13 (02:17): 1f8387eb43f131d7c309a90a4e36b5cb: aahhhhh. writing test-cases for some of these flexbox things is so confusing.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:17): 1f8387eb43f131d7c309a90a4e36b5cb: it's surprisingly hard to think about what the correct rendering is for many cases.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:20): Yus.  Anything in particular?",
        "57551cb51d38c51417f5abfeacfb9b13 (02:22): 1f8387eb43f131d7c309a90a4e36b5cb: &lt;div class=&quot;flexbox vertical-rl column&quot;&gt; versus &lt;div class=&quot;flexbox vertical-lr column&quot;&gt;",
        "57551cb51d38c51417f5abfeacfb9b13 (02:22): 1f8387eb43f131d7c309a90a4e36b5cb: assume the classnames set the display, writing-mode and flex-flow values respectively",
        "57551cb51d38c51417f5abfeacfb9b13 (02:22): 1f8387eb43f131d7c309a90a4e36b5cb: do those render the same? or is one the reverse order of the other",
        "57551cb51d38c51417f5abfeacfb9b13 (02:23): 1f8387eb43f131d7c309a90a4e36b5cb: in my current implementation it's rendering them reverse...but i think it might be wrong?",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:23): The lr/rl set the block-flow direction.  The inline-flow direction is top-to-bottom in both.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:24): So, since 'column' makes the main direction follow the block-flow direction, they'd be reversed.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:24): 1f8387eb43f131d7c309a90a4e36b5cb: ok. that explanation makes sense.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:25): 1f8387eb43f131d7c309a90a4e36b5cb: so, ignoreing multiline, &lt;div class=&quot;flexbox vertical-rl column&quot;&gt; would render the same as &lt;div class=&quot;flexbox horizontal-tb row rtl&quot;&gt;",
        "57551cb51d38c51417f5abfeacfb9b13 (02:25): 1f8387eb43f131d7c309a90a4e36b5cb: i say ignoring multiline because i haven't even sstarted thinking about how multiline affects things.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:26): Yes, they'd render the same.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:26): 1f8387eb43f131d7c309a90a4e36b5cb: they'd render the same except for padding-start, etc would be ltr in the first case and rtl in the second",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:26): They'd also render the same in multiline, since the perpendicular axises go in the same direction for both.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:26): Yes.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:26): 1f8387eb43f131d7c309a90a4e36b5cb: great.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:27): 1f8387eb43f131d7c309a90a4e36b5cb: thx for helping me think this through. you might want to give some of the above as examples in the spec.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:27): 1f8387eb43f131d7c309a90a4e36b5cb: since they clarify expected behavior. i think the spec text matches what you just described, but it's hard to think all that through.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:28): Heh, kk.  I need to draw up pictures for some of these, because writing-modes are hard to wrap your head around.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:28): yes!",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:28): The spec text definitely matches what I just said, because I checked it before saying anything just to make sure.  ^_^",
        "57551cb51d38c51417f5abfeacfb9b13 (02:28): 1f8387eb43f131d7c309a90a4e36b5cb: by far, the hardest part of implementing any of this is thinking through the tests",
        "57551cb51d38c51417f5abfeacfb9b13 (02:28): 1f8387eb43f131d7c309a90a4e36b5cb: the C++ code is mostly relatively straightforward",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:30): Related: urgh, writing the &quot;figure out the hypothetical size of each flexbox item&quot; is the hardest part of the algorithm.",
        "57551cb51d38c51417f5abfeacfb9b13 (02:31): 1f8387eb43f131d7c309a90a4e36b5cb: yup, the rest of the algorithm is relatively straightforward i think",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:53): who's a good person to cc for perf wg issues?",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:54): bdf7d7409da19264fa0c4bf6b4f2d0cc ?",
        "57551cb51d38c51417f5abfeacfb9b13 (02:54): 69b0d3dfe919a6b860a9fac82de52a7e: bdf7d7409da19264fa0c4bf6b4f2d0cc works with perf wg stuff a lot, i'm not sure how directly involved he is with the wg, but i believe he's editor of requestAnimationFram spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:54): k",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:57): sup?",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:57): 69b0d3dfe919a6b860a9fac82de52a7e, i'm editor of requestAnimationFrame and sit close to people who follow the rest of the specs",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:57): heycam's also editor on rAF",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:57): i'm not sure of his level of involvement in other specs",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:57): (and i've been too busy lately to do much at all, but oh well)",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:59): cced you on a bug",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:59): w3c bug",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (03:00): 69b0d3dfe919a6b860a9fac82de52a7e, kk",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:00): on another note, chrome trunk has an absurd regression rendering the html spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:01): taking 100s of milliseconds to repaint, continuously",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:01): even if nothing happens but mouse movement",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (03:11): can you file a bug?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:26): bdf7d7409da19264fa0c4bf6b4f2d0cc: bdf7d7409da19264fa0c4bf6b4f2d0cc http://code.google.com/p/chromium/issues/detail?id=98963",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:34): 69b0d3dfe919a6b860a9fac82de52a7e, 57551cb51d38c51417f5abfeacfb9b13: fantasai reminded me why display:none isn't very good, and thus why we probably do want a different model of hiding, such as what visibility:collapse might be able to offer.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:35): display:none has additional magic effects beyond the hiding - it also suppresses list counter increments, and there's a good chance it'll be defined as suppressing animations too.",
        "57551cb51d38c51417f5abfeacfb9b13 (03:35): 1f8387eb43f131d7c309a90a4e36b5cb: i see that thread...i'll respond eventaully...if we want a different behavior, that's fine....but retro-fitting visibility:collapse for that seems wrong since it already does the wrong thing most of the time",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:36): (This is because display:none subtrees are generally optimized away almost completely.)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:36): 1f8387eb43f131d7c309a90a4e36b5cb: sure, that's why i said you map [hidden] whatever you actually need",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:36): 57551cb51d38c51417f5abfeacfb9b13: Yeah, perhaps.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:36): 1f8387eb43f131d7c309a90a4e36b5cb: height:0, width:0, opacity:0, whatever it is you're styling",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:36): s/styling/animating/",
        "57551cb51d38c51417f5abfeacfb9b13 (03:36): 1f8387eb43f131d7c309a90a4e36b5cb: fantasai basically wants visiblity:collapse to be height:0;overflow:hidden, right?",
        "57551cb51d38c51417f5abfeacfb9b13 (03:37): s/height/logicalHeight/",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:37): Well, for block elements, yeah.",
        "57551cb51d38c51417f5abfeacfb9b13 (03:37): right",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:37): That's not sufficient for flexbox items, because of flex-pack:justify.",
        "06cb330920ae58e1614c9145d983b3d6 (03:37): it'd be unpleasant if using hidden results in a slower page than display: none",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:38): I suspect a better definition might be &quot;position:absolute; height:0; width:0;&quot;.  Still completely out-of-flow, but it generates boxes.",
        "06cb330920ae58e1614c9145d983b3d6 (03:38): i guess that'd mean everyone would force [hidden] to display: none if it made a visible (err, ... perceptible, heh) difference",
        "57551cb51d38c51417f5abfeacfb9b13 (03:39): 1f8387eb43f131d7c309a90a4e36b5cb: regardless, this should clearly be a new property/value",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:39): Yeah, you're probably right.  So I should still revert the visibility:collapse change.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:43): position:absolute is not much better than display:none, since it overrides 'display'",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:43): but it does happen to not screw up counters",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:43): It's much better in that it still generates a box, yeah.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:44): i think height:0 or width:0 is what you typically want if you want to affect layout",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:44): then you'd get a transition and so on",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:44): animating 'position' isn't likely to be useful",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:45): Just setting height or width doesn't work for flexbox.  You can still detect the presence of the &quot;hidden&quot; element if &quot;flex-pack:justify&quot; is used, because it'll look like a double-wide space there.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:45): that seems... bad",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:45): why is it not bad?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:45): Do you mean that it's bad that this effect occurs?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:46): well it seems like if your box has no height or width it should probably not make spaces appear",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:46): but i'm not familiar with contemporary flexbox ideas",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:47): flex-pack distributes the leftover space when all the items are done flexing.  'justify' puts it equally between every item.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:48): ah, i see",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:48): so you want a margin-collapsing-like effect",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:48): hmm",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:48): Maybe?  Note, though, that even if you did have something that acted like margin-collapsing, it still wouldn't animate well.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:48): how would you transition from the element being there to the element not being there and the space being distibuted as if it was not?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:49): with the spacing animating properly the whole way through?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:49): As soon as you stopped meeting the requirements for collapsing through, the two spaces would uncollapse and you'd have a wider space again.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:49): seems like that's the problem to fix",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:49): Yeah, you can't.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:49): As far as I can tell.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:49): Because that would require the algorithm to be stateful.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:49): that seems bad. people are all about their animations these days.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:49): that's probably the place to start in trying to fix this",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:50): There's a difference between the desired spacing around an element that just un-hid and the desired spacing around an element of the same size that's been sitting there the whole time.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:51): there's a difference between the spaces around the other elements in those two cases too",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:51): Yes.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:51): but it seems one needs a solution that allows for that value to transition smoothly",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:51): for this to be useful in practice",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (03:52): 69b0d3dfe919a6b860a9fac82de52a7e, you're using Leopard?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): bdf7d7409da19264fa0c4bf6b4f2d0cc: yes"
    ],
    "person_ids": [
        "57551cb51d38c51417f5abfeacfb9b13",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc",
        "06cb330920ae58e1614c9145d983b3d6"
    ]
}