{
    "id": "b4a4e3ac3ee3cca786aeb1ad03140584",
    "messages": [
        "88d4d34a8064a4ff39fd5e144eea7762 (23:35): 69b0d3dfe919a6b860a9fac82de52a7e, put it this way: there's such a thing as having too many tests.  You reach that point when the cost of running the extra tests outweighs the benefit of realistically catching any extra bugs.  For manual tests, that threshold is very, very low, since they're so expensive to write and run.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:36): How about when I run out of things to do, you assign me to write a basic spec for cross-browser UI testing, like with click simulation or whatever?",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:37): I imagine it wouldn't be hard to implement the few most basic things in at least one browser.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:38): (not that I'm saying I'll do that part, but maybe someone will be interested in doing it quickly)",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:41): (I'm still writing some more manual tests here, but I think it's a bad idea to write more than a few.)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:03): 88d4d34a8064a4ff39fd5e144eea7762: Does Watir, etc. not do this?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:04): a11aabeeceeae6b8cb5d12ea06b56554, Watir requires you to use Ruby, yes?  That's a pretty massive minus.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:04): We'd really want JavaScript tests that can be run straight from the browser, like Mochitests.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:05): It's also a bit weird for the tests for a spec to depend on a particular program implementation in a particular non-standard language.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:06): forgets the reason for moving from using stuff on the opera object to using Watir for testing stuff in Opera",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:07): Does anyone know how WebKit does it?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:09): 65325d50b2e25aca54bc871b89758c9c, how does WebKit do tests that require synthesizing user input like keypresses or mouse clicks?",
        "65325d50b2e25aca54bc871b89758c9c (00:09): 88d4d34a8064a4ff39fd5e144eea7762: depends",
        "65325d50b2e25aca54bc871b89758c9c (00:09): 88d4d34a8064a4ff39fd5e144eea7762: when it's a good enough test, we fake it with dom events",
        "65325d50b2e25aca54bc871b89758c9c (00:10): 88d4d34a8064a4ff39fd5e144eea7762: when real user events are needed, we have methods in our regression test tool that can send a real-looking event",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:10): Are these methods called from simple JavaScript code within WebKit, like Gecko does it, or is it some external program?",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:12): javascript bindings (exposed only to tests)",
        "65325d50b2e25aca54bc871b89758c9c (00:12): 88d4d34a8064a4ff39fd5e144eea7762: JS",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:12): Ah, so like Gecko, then.",
        "65325d50b2e25aca54bc871b89758c9c (00:12): some of these tests can also be run via manual steps with instructions",
        "65325d50b2e25aca54bc871b89758c9c (00:13): but not all",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:13): It would be nice to expose some of those in a safe way to spec tests, yes?  There are lots of things you can't do automated tests for without them.",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:13): define(safe)",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:13): For instance, require a command-line option that specifies the URL prefixes that are allowed to use them, say.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:14): So you could whitelist http://dvcs.w3.org/ or whatever.",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:14): that doesn't sound safe to me - not even https?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:14): Yeah, I guess that's not safe enough.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:14): Also, lots of people have commit access to there.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:15): Well, it's only got to be as safe as running the tests that browsers already have.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:15): But it's doable, even if it would require downloading the test locally and running the browser with a command-line switch pointing at the exact local file you want to run (but I hope we can make it more convenient than that).",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:16): the tests that webkit has right now that synthesize native events are run off of local disk in a different binary from the typical browser binary (DumpRenderTree instead of Safari.app or Chrome.app or whatnot)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:16): bdf7d7409da19264fa0c4bf6b4f2d0cc: So how do you test the code you actually ship?",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:17): for handling native events? i can't speak for safari but in chrome we also have tests for this at higher levels",
        "65325d50b2e25aca54bc871b89758c9c (00:17): a11aabeeceeae6b8cb5d12ea06b56554: we assume the framework works the same regardless of the app linking it, which is essentially true",
        "65325d50b2e25aca54bc871b89758c9c (00:18): WebKit.framework is used by many apps, not just Safari.app, we usually assume WebKit bugs won't have a specific effect only in Safari.app and not in a minimal WebKit-based test tool",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:19): 65325d50b2e25aca54bc871b89758c9c: What about platform specific bugs? You have stuff like DumpRenderTree for ARM/iOS?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:19): guesses the answer is &quot;no comment&quot;",
        "65325d50b2e25aca54bc871b89758c9c (00:19): our regression tests are run automated on every platform of interest before shipping to those platforms",
        "65325d50b2e25aca54bc871b89758c9c (00:19): we have bots that run on different versions of Mac OS X even",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:21): At the same number of builds across all platforms?",
        "65325d50b2e25aca54bc871b89758c9c (00:21): I'm not sure I understand the question",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:23): For every build run on 10.6/x86, is that build also run on all other platforms? Or do (at least some) other platforms not get tested on all builds?",
        "65325d50b2e25aca54bc871b89758c9c (00:23): the way it works is that on every SVN commit, the code is built on all target platforms and then all target platforms run the regression tests",
        "65325d50b2e25aca54bc871b89758c9c (00:23): at least on the open source side",
        "65325d50b2e25aca54bc871b89758c9c (00:23): I'm sure companies may also have internal testers for other build setups",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:25): in chrome land the bots run as fast as they can (so not necessarily on every commit, but in the limit they test every commit/platform combination if things cycle quickly enough). why do you ask?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:26): Curiousity as to what competitors are doing. :)",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:27): it's all on the internets. build.webkit.org",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:28): Yeah, I know. But certain detail is easier to find out by asking than looking and trying to work out.",
        "65325d50b2e25aca54bc871b89758c9c (00:29): the best way to find out all the details is to hack on WebKit for a while",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:30): That's not really the most practical while working for a competitor :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:30): (And I can't say I ever actually touched any of this with what I did with WebKit when I was involved)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:35): 88d4d34a8064a4ff39fd5e144eea7762: yeah, that's not a bad idea actually, if you can get the browsers on board (the testing api thing)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:36): 65325d50b2e25aca54bc871b89758c9c: i'm not sure i agree with your definition of &quot;amicable&quot;, but anyway, i submitted his proposal",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:36): committed, i should say",
        "65325d50b2e25aca54bc871b89758c9c (00:36): I just mean &quot;amicable&quot; in the sense of &quot;no need for further bureaucratic nonsense before we can close the issue&quot;",
        "65325d50b2e25aca54bc871b89758c9c (00:37): as opposed to &quot;Ian Hickson and Julian Reschke are totally best pals&quot;",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (00:47): a11aabeeceeae6b8cb5d12ea06b56554: i hack on firefox on occasion. it's good for you :)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (00:54): it's a shame we've had no implementor movement on UndoManager",
        "fd9ef1223e855714294498ebfde79f98 (00:54): 65325d50b2e25aca54bc871b89758c9c: someone should write a webcomic in which ian and julian are buddy cops",
        "65325d50b2e25aca54bc871b89758c9c (00:54): Lethal Specification",
        "a9b326df4e6da61c5b6f5e1058be83a2 (00:54): heh",
        "a9b326df4e6da61c5b6f5e1058be83a2 (00:55): which one is Mel GIbson?",
        "65325d50b2e25aca54bc871b89758c9c (00:55): Weberly Hills Cop",
        "a9b326df4e6da61c5b6f5e1058be83a2 (00:55): 69b0d3dfe919a6b860a9fac82de52a7e is Magneto and Julian is Professor Xavier",
        "a9b326df4e6da61c5b6f5e1058be83a2 (00:56): one day the will reconcile enough at least to do battle together against those who wish to destroy us all",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:01): anyone want to help me out writing the CCP for -129? It's a kitchen-sink issue that's gonna take forever to tease apart and provide status-quo rationales for.",
        "fd9ef1223e855714294498ebfde79f98 (01:01): looks up ISSUE-129",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:01): the existing CP is http://www.w3.org/html/wg/wiki/ChangeProposals/ARIAinHTML5",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:02): Wow, there are really a lot of e-mails in the &lt;video&gt; FPS thread.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:02): yeah. beats me why.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:02): well, other than what was said before, &quot;it's waht you get when you start with a solution&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:02): but still",
        "fd9ef1223e855714294498ebfde79f98 (01:02): 69b0d3dfe919a6b860a9fac82de52a7e: I'll help out",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:02): sweet",
        "fd9ef1223e855714294498ebfde79f98 (01:03): will have some free time while gearing up for the SF move",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:03): i guess i'll set something up on the whatwg wiki",
        "fd9ef1223e855714294498ebfde79f98 (01:03): sounds good",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:03): from what i understand, the best plan of attack is to break it down so that we discuss each of the originating bugs as a separate &quot;sub-issue&quot;",
        "fd9ef1223e855714294498ebfde79f98 (01:03): *nod*",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:04): and then we'll have to make sure that we've covered everything they did in their rationale, and then that we've covered everything they're proposing to change (that last one is the hardest, i think, since all they provided was new text for an entire section, without saying what they're changing exactly)",
        "fd9ef1223e855714294498ebfde79f98 (01:04): basically, it'll be a total pain in the ass",
        "fd9ef1223e855714294498ebfde79f98 (01:05): :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:05): yeah"
    ],
    "person_ids": [
        "88d4d34a8064a4ff39fd5e144eea7762",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "65325d50b2e25aca54bc871b89758c9c",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "fd9ef1223e855714294498ebfde79f98"
    ]
}