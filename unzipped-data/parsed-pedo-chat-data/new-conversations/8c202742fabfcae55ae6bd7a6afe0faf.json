{
    "id": "8c202742fabfcae55ae6bd7a6afe0faf",
    "messages": [
        "28a6d36d2fd2e2e987a704be0c3f7b0e (09:08): Wow. the edits I made to the HTML5 video article on Wikipedia yesterday haven't been reverted by the usual suspect!",
        "0fe8692be7a494c6561f745b9f3b0d17 (09:09): take away their bacon",
        "65325d50b2e25aca54bc871b89758c9c (09:23): now I am intrigued",
        "65325d50b2e25aca54bc871b89758c9c (09:24): b8810fee2f4a71f849f3f7409546d1d9: I see recent edits from you, but nothing reverting them, in the history",
        "65325d50b2e25aca54bc871b89758c9c (09:24): am I missing something?",
        "65325d50b2e25aca54bc871b89758c9c (09:24): oh",
        "65325d50b2e25aca54bc871b89758c9c (09:24): you said &quot;haven't&quot;",
        "65325d50b2e25aca54bc871b89758c9c (09:25): but now I wonder who the usual suspect is and what they have reverted in the past",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:28): 65325d50b2e25aca54bc871b89758c9c: the reverter had wanted to say that Theora support in Safari is &quot;No&quot; even though there are other cases in the table where installing codecs into a system media framework gets the &quot;Depends&quot; color",
        "65325d50b2e25aca54bc871b89758c9c (09:28): it looks like the table is still inconsistent",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:29): 65325d50b2e25aca54bc871b89758c9c: H.264 for Konqueror and Epiphany or something else?",
        "65325d50b2e25aca54bc871b89758c9c (09:29): for example it says &quot;No&quot; for H.264 in Knoqueror but &quot;Depends&quot; for Epiphany, even though both can use GStreamer",
        "0fe8692be7a494c6561f745b9f3b0d17 (09:29): i stand by my bacon comment",
        "65325d50b2e25aca54bc871b89758c9c (09:29): unless I misunderstand the situation",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:29): 65325d50b2e25aca54bc871b89758c9c: yeah, that looks bogus, but I didn't fix it because I didn't have time to verify yesterday",
        "65325d50b2e25aca54bc871b89758c9c (09:29): also there is a WebM QuickTime component, it appears",
        "65325d50b2e25aca54bc871b89758c9c (09:29): so unless for some reason that does't work in Safari, it should be a &quot;Depends&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:30): 65325d50b2e25aca54bc871b89758c9c: does the WebM component work in Safari now? last I tried, the December release didn't work in Safari. It just managed to confuse canPlayType",
        "65325d50b2e25aca54bc871b89758c9c (09:30): what would probably make the most sense is a column indicating whether that particular browser supports format pluggability",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:31): IIRC, they even said the December release was encode-only and didn't support decode properly yet",
        "65325d50b2e25aca54bc871b89758c9c (09:31): I'm also not clear on the distinction between &quot;Manual Install&quot; and &quot;Depends&quot;",
        "65325d50b2e25aca54bc871b89758c9c (09:31): ok, it might be that whatever is out does not work yet",
        "65325d50b2e25aca54bc871b89758c9c (09:32): I also recall that Opera uses GStreamer on at least some platforms, so is presumably format-extensible on those",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:32): 65325d50b2e25aca54bc871b89758c9c: I think &quot;supports installable codecs and has codec Foo available&quot; is much more informative that &quot;support installable codecs&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:32): 65325d50b2e25aca54bc871b89758c9c: the edit history of the page claims that Opera removed that pluggability",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:32): 65325d50b2e25aca54bc871b89758c9c: I have no idea if they really did. I suppose foolip would know.",
        "65325d50b2e25aca54bc871b89758c9c (09:32): it certainly is, though it's hard to parse what &quot;Depends&quot; means",
        "65325d50b2e25aca54bc871b89758c9c (09:33): I wonder also why Internet Explorer says &quot;No&quot; for &quot;Others&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:33): I think the &quot;Others&quot; column is entirely useless",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:33): 65325d50b2e25aca54bc871b89758c9c: the reference points to Dean's blog post",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:34): which, IIRC, said they'll allow WebM if installed but not arbitrary stuff",
        "65325d50b2e25aca54bc871b89758c9c (09:34): I was going to ask if that is actually true (would be extremely weird to support Media Foundation plugins but only whitelisted to one type!) but then I realized that is irrelevant for Wikipedia purposes",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:35): hmm. actually the reference is to a different blog post",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:35): 65325d50b2e25aca54bc871b89758c9c: I don't know if it is actually true",
        "65325d50b2e25aca54bc871b89758c9c (09:35): in the cited blog post it does say &quot;In its HTML5 support, IE9 will support playback of H.264 video only.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:35): but yeah, wikitruth is rather frustrating",
        "65325d50b2e25aca54bc871b89758c9c (09:36): but clearly WebM is a counter-example",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:39): 65325d50b2e25aca54bc871b89758c9c: IIRC, there's another blog post by Dean that seems to suggest they'd allow WebM pluggability but not Theora pluggability",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:40): 65325d50b2e25aca54bc871b89758c9c: I don't have a link at hand and I don't know what they shipped",
        "65325d50b2e25aca54bc871b89758c9c (09:40): this post: http://blogs.msdn.com/b/ie/archive/2010/05/19/another-follow-up-on-html5-video-in-ie9.aspx",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:40): maybe someone should make a Media Foundation component for Ogg/Theora",
        "65325d50b2e25aca54bc871b89758c9c (09:40): claims that VP8 will be supported if a codec is installed",
        "65325d50b2e25aca54bc871b89758c9c (09:40): but it doesn't really make clear if that's exclusive",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:42): 65325d50b2e25aca54bc871b89758c9c: fwiw, from quick testing, it seems at least plausible that Konqueror is so broken that codec pluggability is semi-random",
        "65325d50b2e25aca54bc871b89758c9c (09:43): heh",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:43): 65325d50b2e25aca54bc871b89758c9c: so it's not a given that the Konq/Epiphany discrepancy is wrong",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:44): anyway, even if I found a way to make Konq actually play H.264, it would be Original Research, which would be inadmissible",
        "65325d50b2e25aca54bc871b89758c9c (09:44): that is true",
        "65325d50b2e25aca54bc871b89758c9c (09:44): you'd need to convince someone to blog about it before it would be admissible",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:47): in general, video support in Konqueror is very, very broken",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:00): hah. Wikipedia has an annotation for [non-primary source needed]",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:00): they count W3C Bugzilla as a primary source about HTML5 bugginess",
        "65325d50b2e25aca54bc871b89758c9c (10:01): so wait, a w3c bug would be original research, but a blog post about it wouldn't be?",
        "65325d50b2e25aca54bc871b89758c9c (10:01): or are blogs excluded for some other reason?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:02): 65325d50b2e25aca54bc871b89758c9c: not original research but a primary source :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:02): the Wikipedia approach to sources is just weird, though",
        "65325d50b2e25aca54bc871b89758c9c (10:03): are primary sources bad?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:03): 65325d50b2e25aca54bc871b89758c9c: http://en.wikipedia.org/wiki/Wikipedia:No_original_research#Primary.2C_secondary_and_tertiary_sources",
        "65325d50b2e25aca54bc871b89758c9c (10:03): &quot;primary sources are permitted if used carefully&quot;",
        "65325d50b2e25aca54bc871b89758c9c (10:04): I hate rules that say &quot;be careful&quot;",
        "65325d50b2e25aca54bc871b89758c9c (10:04): that's not a useful guideline, it just makes you feel bad if you make a mistake",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:04): c480405f460f7a61964569640a6cd059: your second e-mail is very confusing, i think due to your use of the word 'focus' for several distinct yet concepts, and possibly due to a misunderstanding about what the APIs do",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:04): c480405f460f7a61964569640a6cd059: but i'm not sure what you meant so it's hard to say",
        "c480405f460f7a61964569640a6cd059 (10:05): 69b0d3dfe919a6b860a9fac82de52a7e: i could be talking out of my ass for sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:06): so i think there are two main problems that they are trying to solve here",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:06): or two main problem areas, more than two actual distinct problems",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:07): the first area is about focus. the need is to be able to draw a focus ring in whatever fashion the OS wants, or let the author do it as he wishes, if he wishes to do it in a fancy way and the user doesn't have special focus ring needs",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:07): the api is designed to basically have drawFocusRing() work like stroke(), but it only does anything if the given element is focused",
        "c480405f460f7a61964569640a6cd059 (10:07): 69b0d3dfe919a6b860a9fac82de52a7e: also, it draws with a OS-specific style, right?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:07): which means you can do  if (c.drawFocusRing(element, true)) { c.stroke() }",
        "c480405f460f7a61964569640a6cd059 (10:08): hmm.. second argument in spec isn't a bool",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:08): spec is out of date",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:08): which would draw nothing if element wasn't focused, and otherwise would draw either an OS ring if the user needs a special style, or the author's strokeStyle otherwise",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:09): let me regen with the suggested edits, hold no",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:09): on",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:09): now the second thing is the magnification accessibility ui",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:09): this has to follow focus, for widgets like checkboxes, and for widgets with a selection or a caret, follow the selection or caret",
        "c480405f460f7a61964569640a6cd059 (10:10): 69b0d3dfe919a6b860a9fac82de52a7e: err.. if you don't give it any coordinates, where does it draw?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:10): current path",
        "c480405f460f7a61964569640a6cd059 (10:10): ah",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:10): so for the former case, checkboxes and buttons and so on, you want it to just automatically do it if drawFocusRing() did something (i.e. if the element is focused)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:10): in the latter case, selection/caret, you apparently need to give a rect of the selection/caret, and this is what setSelectionCaretRectWhateverItIsCalled() is for",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:11): spec is regenned if you want to see the new text",
        "c480405f460f7a61964569640a6cd059 (10:11): 69b0d3dfe919a6b860a9fac82de52a7e: right, so my suggestion is that drawFocusRing should by default draw+call setSelectionCaretRect",
        "c480405f460f7a61964569640a6cd059 (10:12): 69b0d3dfe919a6b860a9fac82de52a7e: but you can opt out, or at least override that, and call setSelectionCaretRect yourself",
        "c480405f460f7a61964569640a6cd059 (10:12): 69b0d3dfe919a6b860a9fac82de52a7e: and just get the drawing part",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:12): that's what the spec has now, essentially -- it moves the magnifier unless you call setSelectionCaretRect in the same task",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:13): another way to put it is it waits until the event loop spins (the rendering happens) and moves the magnifier to the last place that wanted it moved",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:13): the current text isn't perfectly clear on this, i wasn't able to come up with a good way to say that yet",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:13): i'll probably tweak it later to be clearer",
        "c480405f460f7a61964569640a6cd059 (10:13): 69b0d3dfe919a6b860a9fac82de52a7e: http://dev.w3.org/html5/2dcontext/ still isn't updated",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:13): yeah i'm not comitting these changes, rich would lynch me",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:13): look at the whatwg copy",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:14): (in general i don't ever recommend looking at the w3c copy, it has all kinds of problems of various kinds)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:14): (s/copy/copies/ being one of the problems!)",
        "c480405f460f7a61964569640a6cd059 (10:14): 69b0d3dfe919a6b860a9fac82de52a7e: so i'm still not sure what part of my email is confused",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:15): it might just be me being confused",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:15): your sample code didn't make sense to me",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:15): closePath() doesn't do anything",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:15): (other than add a line to the path)",
        "c480405f460f7a61964569640a6cd059 (10:15): 69b0d3dfe919a6b860a9fac82de52a7e: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#2dcontext ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:16): yes",
        "c480405f460f7a61964569640a6cd059 (10:16): 69b0d3dfe919a6b860a9fac82de52a7e: still not updated, second argument is a coordinate",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:16): oh, right, that's the multipage copy. that won't update til i commit either, sorry.",
        "c480405f460f7a61964569640a6cd059 (10:17): 69b0d3dfe919a6b860a9fac82de52a7e: yeah, the code is bogus, i very rarely write canvas code so i forget how it works",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:17): the other thing in your mail i didn't really understand is &quot;drive user focus&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:17): i assume you mean drive the magnification",
        "c480405f460f7a61964569640a6cd059 (10:17): 69b0d3dfe919a6b860a9fac82de52a7e: yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:17): ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:17): i understand what you meant now",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:18): i love that anyone thinks authors are going to be enabling text selection on their canvases",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:18): it's so optimistic",
        "c480405f460f7a61964569640a6cd059 (10:21): 69b0d3dfe919a6b860a9fac82de52a7e: so can you give me a very short code example?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:21): to do what?",
        "c480405f460f7a61964569640a6cd059 (10:21): 69b0d3dfe919a6b860a9fac82de52a7e: assuming you have a 2dcontext already",
        "c480405f460f7a61964569640a6cd059 (10:22): 69b0d3dfe919a6b860a9fac82de52a7e: to draw a square focus rectangle",
        "c480405f460f7a61964569640a6cd059 (10:22): 69b0d3dfe919a6b860a9fac82de52a7e: assuming I don't feel the need for overriding OS style",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:22): c.beginPath(); c.rect(x,y,w,h); c.drawFocusRect(widget);",
        "c480405f460f7a61964569640a6cd059 (10:23): no closePath?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:23): (will only draw it if |widget| is actually focused)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:23): rect() autocloses the path",
        "c480405f460f7a61964569640a6cd059 (10:23): cool",
        "c480405f460f7a61964569640a6cd059 (10:24): so what were the coordinates in the old (currently committed to w3c) syntax?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:24): they were the center of the caret",
        "c480405f460f7a61964569640a6cd059 (10:24): also, should that be &quot;Ring&quot; rather than &quot;Rect&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:24): (the idea was that whenever you moved the caret, you would redraw the ring and give the new caret coords)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:24): yes",
        "c480405f460f7a61964569640a6cd059 (10:30): 69b0d3dfe919a6b860a9fac82de52a7e: is removing the coordinates something that richard has requested? Or is otherwise part of the WG decision?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:31): yeah it's the main part of his request as far as i can tell",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:31): the main problem with the old style is it required using a clipping region to avoid repainting the focus ring every time the caret moves",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:31): and it doesn't give a way to show selections",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:32): of course imho you shouldn't be using canvas at all for carets, so it's rather moot to me, and i'd be fine simply not supporting this use case at all",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:32): (focus rings around buttons, etc, is fine, obviously)",
        "c480405f460f7a61964569640a6cd059 (10:32): yeah, focus rings make a lot of sense, carets not so much",
        "65325d50b2e25aca54bc871b89758c9c (10:33): both carets and selection do have non-editing uses",
        "65325d50b2e25aca54bc871b89758c9c (10:33): whether anyone will use canvas for such, I don't know",
        "65325d50b2e25aca54bc871b89758c9c (10:33): canvas does let you draw text, and on Mac OS X, non-selectable text makes people sad, since it is very common to make even static error message text in dialogs selectable",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:34): there's tons of non-selectable text on Mac OS X",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:34): title bars, menus, tooltips -- and that's just what's on my screen right now :_)",
        "65325d50b2e25aca54bc871b89758c9c (10:35): yes, things that are active (i.e. draggable or clickable) are generally not selectable",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:36): axis labels in grapher (a typical case of what you'd put on canvas) aren't selectable",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:37): i don't really know what a good example of something you'd put in canvas as text is that is selectable in its native equivalent",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:37): anyway i should sleep",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:37): nn",
        "65325d50b2e25aca54bc871b89758c9c (10:37): they are in Keynote",
        "65325d50b2e25aca54bc871b89758c9c (10:38): what program makes graphs and won't let you select the label text?",
        "3b14b636129945831fcfcc7294686653 (10:48): people should just use prorovis :)",
        "3b14b636129945831fcfcc7294686653 (10:48): er, protovis",
        "3b14b636129945831fcfcc7294686653 (10:48): trying to make the canvas include selections seems like overengineering",
        "3b14b636129945831fcfcc7294686653 (10:48): there are better solutions for selectable text in the browser"
    ],
    "person_ids": [
        "28a6d36d2fd2e2e987a704be0c3f7b0e",
        "0fe8692be7a494c6561f745b9f3b0d17",
        "65325d50b2e25aca54bc871b89758c9c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "c480405f460f7a61964569640a6cd059",
        "3b14b636129945831fcfcc7294686653"
    ]
}