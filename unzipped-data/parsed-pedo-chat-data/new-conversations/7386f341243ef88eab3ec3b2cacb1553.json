{
    "id": "7386f341243ef88eab3ec3b2cacb1553",
    "messages": [
        "b82d2285299fe30e51fd090e329b37ff (12:30): any idea why the matched letter is not uppercased with :",
        "b82d2285299fe30e51fd090e329b37ff (12:30): &gt;&gt;&gt; re.sub('(\\s\\w)', r'\\1'.upper(), 'Claude dupond')",
        "b82d2285299fe30e51fd090e329b37ff (12:30): 'Claude dupond'",
        "b82d2285299fe30e51fd090e329b37ff (12:30): I would have 'Claude Dupond'",
        "54f20702d2d1753385de6fe8cb3db89d (12:32): mage_: use 'Claude dupond'.title() then...",
        "b82d2285299fe30e51fd090e329b37ff (12:33): thanks",
        "b82d2285299fe30e51fd090e329b37ff (12:33): but just curious, why my regex doesn't work ?",
        "54f20702d2d1753385de6fe8cb3db89d (12:33): re.sub replaces only the leftmost... re.subn does more...",
        "b82d2285299fe30e51fd090e329b37ff (12:33): I tried with subn too",
        "54f20702d2d1753385de6fe8cb3db89d (12:35): since your proposition doesn't even work on 'claude dupond' (there is no \\s left of 'c'), this is another good example for _not_ using re's",
        "b82d2285299fe30e51fd090e329b37ff (12:37): ok :p",
        "54f20702d2d1753385de6fe8cb3db89d (12:41): btw: re.sub('(^\\w|\\s\\w)', lambda m: m.groups()[0].upper(), 'claude dupond') does the job... title()'s nicer though",
        "81b3092ba63fca715f4cb1d5adc0ed64 (12:43): hi folks. is os.path.expanduser(&quot;~/foo&quot;) portable?",
        "81b3092ba63fca715f4cb1d5adc0ed64 (12:43): or do you need to do os.path.join(os.path.expanduser(&quot;~&quot;), &quot;foo&quot;)?",
        "b4a2591f4dec919fa3954523bf35a8c9 (12:44): resolve: I wouldn't think &quot;~&quot; was portable.",
        "b4a2591f4dec919fa3954523bf35a8c9 (12:44): But I don't do much with win32.",
        "81b3092ba63fca715f4cb1d5adc0ed64 (12:44): &quot;On Windows, only &quot;~&quot; is supported; it is replaced by the environment variable HOME or by a combination of HOMEDRIVE and HOMEPATH.&quot;",
        "b4a2591f4dec919fa3954523bf35a8c9 (12:44): =)",
        "81b3092ba63fca715f4cb1d5adc0ed64 (12:44): (so ~user doesn't work)",
        "81b3092ba63fca715f4cb1d5adc0ed64 (12:45): but that doesn't change my question :-)",
        "b4a2591f4dec919fa3954523bf35a8c9 (12:46): I'd imagine you need to use os.path.join, as the other is likely to give you something along the lines of: C:\\Documents and Settings\\user/foo",
        "b4a2591f4dec919fa3954523bf35a8c9 (12:47): But, again, I'm only chiming in with guesses. I don't even own a Win32 license.",
        "75a56ba96cd6b2a34f8194783a74e394 (12:49): are python pickles cross-platform between 32-bit and 64-bit pointer sizes?",
        "b82d2285299fe30e51fd090e329b37ff (12:56): froosch: in fact the .title() doesn't work with french accents, like ?\u00a9 ?\u00ae ?\u2020 and letters like ?\u00df, ... so I have to use a regex",
        "b82d2285299fe30e51fd090e329b37ff (12:56): &gt;&gt;&gt; print 'marie lebr?\u00a9ton'.title()",
        "b82d2285299fe30e51fd090e329b37ff (12:56): Marie Lebr?\u00a9Ton",
        "b82d2285299fe30e51fd090e329b37ff (12:56): I should have Marie Lebr?\u00a9ton",
        "75a56ba96cd6b2a34f8194783a74e394 (13:00): mage_: is this locale-dependent? try setting the locale through env.vars.",
        "75a56ba96cd6b2a34f8194783a74e394 (13:01): mage_: i mean through environment variables",
        "b82d2285299fe30e51fd090e329b37ff (13:01): my locale is en_US.UTF-8",
        "d9afc81a74a6157c22ffe85cb0845541 (13:02): yo",
        "b82d2285299fe30e51fd090e329b37ff (13:03): doesn't work with fr_FR too",
        "b82d2285299fe30e51fd090e329b37ff (13:03): &gt;&gt;&gt; os.environ['LANG']",
        "b82d2285299fe30e51fd090e329b37ff (13:03): 'fr_FR'",
        "b82d2285299fe30e51fd090e329b37ff (13:03): &gt;&gt;&gt; print 'marie lebr?\u00a9ton'.title()",
        "b82d2285299fe30e51fd090e329b37ff (13:03): Marie Lebr?\u00a9Ton",
        "d9afc81a74a6157c22ffe85cb0845541 (13:03): is there a way to add a method to all objects ?",
        "b82d2285299fe30e51fd090e329b37ff (13:03): setattr",
        "d9afc81a74a6157c22ffe85cb0845541 (13:03): i mean global",
        "b82d2285299fe30e51fd090e329b37ff (13:04): global ?",
        "b82d2285299fe30e51fd090e329b37ff (13:04): a separate module ?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:04): so all insances of any class will get this method",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:05): r0nny: You mean to every single object in all of Python? I don't think so.",
        "d9afc81a74a6157c22ffe85cb0845541 (13:05): :/",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:05): I suppose if you altered the class &quot;object&quot;, from which everything else theoretically descends...",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:05): But that seems a horribly bad idea",
        "d9afc81a74a6157c22ffe85cb0845541 (13:05): object cant be altered",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:06): Sure it can. But it requires changing the source and recompiling.",
        "d9afc81a74a6157c22ffe85cb0845541 (13:06): well - guess i will create my own class from wich i will descend my objects",
        "3b620f513ecd318ecf27bec742a1e2db (13:06): just did! <a href=\"http://xahlee.org/web/complex/index.html\">http://xahlee.org/web/complex/index.html</a>",
        "b82d2285299fe30e51fd090e329b37ff (13:06): the create the function in your parent class ...",
        "75a56ba96cd6b2a34f8194783a74e394 (13:08): mage_: dunno, redefine title() so that it behaves properly",
        "75a56ba96cd6b2a34f8194783a74e394 (13:10): r0nny: in Ruby, Object can be altered at runtime. that could be your next language! =)",
        "b82d2285299fe30e51fd090e329b37ff (13:10): matju: I would use a regex with re.U",
        "3b620f513ecd318ecf27bec742a1e2db (13:10): sorry. it should be just did! <a href=\"http://xahlee.org/complex/index.html\">http://xahlee.org/complex/index.html</a>",
        "75a56ba96cd6b2a34f8194783a74e394 (13:10): mage_: why?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:11): ruby lacks libs i need",
        "7d0f1ad2320a7e528c595f2875846dcd (13:11): r0nny, write them :p",
        "d9afc81a74a6157c22ffe85cb0845541 (13:11): there is nothin like twisted for example",
        "d9afc81a74a6157c22ffe85cb0845541 (13:11): pygi: i lack time",
        "b82d2285299fe30e51fd090e329b37ff (13:11): it's slow, that language is a dirty mix with python parts, perls parts, it's not as readeable as Python, half of the modules are in alpha version, it doesn't support UNICODE, ...",
        "75a56ba96cd6b2a34f8194783a74e394 (13:12): mage_: slow? did you try the bytecode version?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:12): cruby is __slow__",
        "d9afc81a74a6157c22ffe85cb0845541 (13:13): the bytcode stuff has much  more speed",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:14): My problem is that I find any ruby program of more than trivial complexity to be almost unreadable on the same order as perl. But that's just a personal preference.",
        "d9afc81a74a6157c22ffe85cb0845541 (13:15): ruby can be very readable",
        "d9afc81a74a6157c22ffe85cb0845541 (13:15): perl, too",
        "b82d2285299fe30e51fd090e329b37ff (13:15): the major problem we have here is that Ruby doesn't support unicode (we use RoR for one of our projects)",
        "b82d2285299fe30e51fd090e329b37ff (13:15): r0nny: nothing is cleaner and more readable as Python :-)",
        "d9afc81a74a6157c22ffe85cb0845541 (13:15): but it needs much more developer time to be keept readable then python needs",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:15): mage_: I live in an ASCII world. :)",
        "d9afc81a74a6157c22ffe85cb0845541 (13:16): mage_: i can allways switch to drango or turbogears (both are python)",
        "d9afc81a74a6157c22ffe85cb0845541 (13:16): eh you ;P",
        "b5672e9936c14b9b7c22b5cf6c60cb39 (13:16): #wxpython seems dead, will try here: hello, is there a way to &quot;globally&quot; trap or capture keyboard events in a frame or dialog?",
        "b82d2285299fe30e51fd090e329b37ff (13:16): I tried django",
        "b82d2285299fe30e51fd090e329b37ff (13:17): it's quite ok, but the ORM is quite limited",
        "b82d2285299fe30e51fd090e329b37ff (13:17): SQLAlchemy seems promising",
        "d9afc81a74a6157c22ffe85cb0845541 (13:17): hmm",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:18): Most of the Python ORMs I've played with have the same disease as Rails does: They work fine, as long as you're willing to do everything their way, from scratch.",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:18): SQLObject is moving in the right direction, I think, but has a ways to go as of yet",
        "b82d2285299fe30e51fd090e329b37ff (13:18): agreed.",
        "b82d2285299fe30e51fd090e329b37ff (13:18): TML: did you tried SQLAlchemy ?",
        "b82d2285299fe30e51fd090e329b37ff (13:19): it works completly different",
        "d9afc81a74a6157c22ffe85cb0845541 (13:19): hmm - catalyst is very changable, but i guess most of u wont touch perl",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:20): mage_: Last time I looked at SQLAlchemy, it had the same problem.",
        "b4a2591f4dec919fa3954523bf35a8c9 (13:21): mage_: Perhaps it's time I took another look.",
        "f6ddabb16a727e25e589e63ba9743f3b (13:22): anyone used python for cgi with apache under ubuntu?",
        "75a56ba96cd6b2a34f8194783a74e394 (13:25): mage_,r0nny: readability is one of the best topics for flamefests... there's so little to agree on! i don't think that the language influences readability that much, and what matters is how the programmer writes the code",
        "d9afc81a74a6157c22ffe85cb0845541 (13:26): matju: well - python limits u to some rules magically improve the readability - in other languages u need to folow these rules by yourself, also the syntactical possibilities incrase the possibilities to make a programm unreadable (and python hasnt as much as perl/ruby do)",
        "75a56ba96cd6b2a34f8194783a74e394 (13:27): mage_,r0nny: of course, i don't represent the ruby community, even though i'm a ruby oldfart",
        "75a56ba96cd6b2a34f8194783a74e394 (13:28): r0nny: i don't believe in magic but i damn well believe in the placebo effect.",
        "d9afc81a74a6157c22ffe85cb0845541 (13:28): matju: magic is allways a placebo effect",
        "75a56ba96cd6b2a34f8194783a74e394 (13:29): r0nny: i say that because there _are_ people who make a distinction between magic and placebo",
        "d9afc81a74a6157c22ffe85cb0845541 (13:29): but indentication makes a program more readable, and python is a language where u cant ignore identication",
        "d9afc81a74a6157c22ffe85cb0845541 (13:30): matju: any other then &quot;mages&quot; ?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:30): ;P",
        "75a56ba96cd6b2a34f8194783a74e394 (13:31): r0nny: anyone who like to pay for mages... ;-)",
        "d9afc81a74a6157c22ffe85cb0845541 (13:32): hmm",
        "306e1b5f004917e22911885474748aed (13:32): where can I get the new python logo preferably in png? I am at there site at logos but it seems they only have the old logos up :(",
        "5a5a867c687778f6a8648799e0da2f30 (13:34): I run a system command using os.system() and I would like to display a progress bass while it is executing (it usually takes about 15-20 seconds), any pointers on how one implements such a thing?",
        "5a5a867c687778f6a8648799e0da2f30 (13:34): s/bass/bar",
        "5a5a867c687778f6a8648799e0da2f30 (13:35): I have no way of knowing beforehand how long the command will take to execute as it depends on the volume of text it will process which is highly variable",
        "0ce59d37ccc58bf2e4797bdf0d4afa71 (13:36): eleftherios: using a GUI toolkit... or curses maybe, if it's a console app",
        "0ce59d37ccc58bf2e4797bdf0d4afa71 (13:36): eleftherios: you won't want to use os.system() though, unless you run it in a seperate thread, because it blocks",
        "5a5a867c687778f6a8648799e0da2f30 (13:36): it is a console app",
        "5a5a867c687778f6a8648799e0da2f30 (13:37): why do i need curses for a simple progress bar? I can just use '======&gt;'",
        "d9afc81a74a6157c22ffe85cb0845541 (13:37): eleftherios: find a way to make it tell you its process, else there is no way to make a bar",
        "d9afc81a74a6157c22ffe85cb0845541 (13:38): (a bar with no information about the process is pretty useless)",
        "5a5a867c687778f6a8648799e0da2f30 (13:38): r0nny, hm, I can't think of such a way :-/",
        "d9afc81a74a6157c22ffe85cb0845541 (13:38): then u cant make a bar",
        "d9afc81a74a6157c22ffe85cb0845541 (13:38): waht does this process, and can u replace it by a python class ?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:39): casue if it was a python class u can use callbaacks for process information",
        "5a5a867c687778f6a8648799e0da2f30 (13:39): no, it runs zmergelog (which merges apache logs) and then visitors (which is an apache log parser and creates html)",
        "5a5a867c687778f6a8648799e0da2f30 (13:40): I am just writing a simple wrapper script that calls those and gzips &amp; emails the result",
        "d9afc81a74a6157c22ffe85cb0845541 (13:40): guess then u just have to run it, and wait",
        "5a5a867c687778f6a8648799e0da2f30 (13:40): I guess so",
        "d9afc81a74a6157c22ffe85cb0845541 (13:42): maybe there are some libs for python deal with this",
        "d9afc81a74a6157c22ffe85cb0845541 (13:43): eh modules",
        "5a5a867c687778f6a8648799e0da2f30 (13:45): r0nny, can you think of any names?",
        "d9afc81a74a6157c22ffe85cb0845541 (13:46): no idea",
        "5a5a867c687778f6a8648799e0da2f30 (13:46): I'll have a look, thanks :-)"
    ],
    "person_ids": [
        "b82d2285299fe30e51fd090e329b37ff",
        "54f20702d2d1753385de6fe8cb3db89d",
        "81b3092ba63fca715f4cb1d5adc0ed64",
        "b4a2591f4dec919fa3954523bf35a8c9",
        "75a56ba96cd6b2a34f8194783a74e394",
        "d9afc81a74a6157c22ffe85cb0845541",
        "3b620f513ecd318ecf27bec742a1e2db",
        "7d0f1ad2320a7e528c595f2875846dcd",
        "b5672e9936c14b9b7c22b5cf6c60cb39",
        "f6ddabb16a727e25e589e63ba9743f3b",
        "306e1b5f004917e22911885474748aed",
        "5a5a867c687778f6a8648799e0da2f30",
        "0ce59d37ccc58bf2e4797bdf0d4afa71"
    ]
}