{
    "id": "ceb57cdad3df2587b5bd8ad20e9484e8",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (15:06): cc097e0d7183ae8436e7df709553c8c0: Maybe you could do BNF with error handling sort of vaguely like http://philip.html5.org/misc/xml\u0153\u00c4.txt",
        "ab7faae5d7b250ea8606486575f8f79c (15:10): (That's definitely not correct, but I think it's probably not fundamentally incorrect)",
        "ab7faae5d7b250ea8606486575f8f79c (15:17): (Oh, and entity expansion needs to be added as an extra post-parsing step)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:22): ab7faae5d7b250ea8606486575f8f79c: interesting",
        "cc097e0d7183ae8436e7df709553c8c0 (15:23): though i'm not sure it's worth rewriting it...",
        "cc097e0d7183ae8436e7df709553c8c0 (15:24): maybe i can have BNF as well in a Writing PIs with pseudo-attributes section, which doesn't deal with error handling",
        "ab7faae5d7b250ea8606486575f8f79c (15:25): It only has to be (re)written once, compared to lots of people reading it, so you should optimise for reads :-)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:25): true... :)",
        "ab7faae5d7b250ea8606486575f8f79c (15:25): I don't know if the BNF is better or worse that the state machine, though",
        "ab7faae5d7b250ea8606486575f8f79c (15:25): (at least when including error handling, which makes the BNF more confusing)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:26): if anything, i think i'm gonna have both, and without the error handling in the BNF",
        "ab7faae5d7b250ea8606486575f8f79c (15:26): (s/that/than/)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (15:27): remembers he was going to email Hixie seeming he's been avoiding me here :P",
        "cc097e0d7183ae8436e7df709553c8c0 (15:30): ab7faae5d7b250ea8606486575f8f79c: not sure if entity handling can be done as post-parsing without changing the algorithm, since it affects how duplicate pseudo-attrs are handled",
        "cc097e0d7183ae8436e7df709553c8c0 (15:31): &lt;?xml-stylesheet href='&amp;' href='x'?&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:32): Hixie: btw, allowing common attributes on a charset meta a at least a theoretical problem when it comes to converting between HTML and XHTML",
        "cc097e0d7183ae8436e7df709553c8c0 (15:32): oh, i guess it could if dropping duplicates is also done post-parsing",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:32): I wonder if I've said that before",
        "ab7faae5d7b250ea8606486575f8f79c (15:32): cc097e0d7183ae8436e7df709553c8c0: It can be done after the BNF parsing, and before the bit where it finds the matching productions an sticks them in the array",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:32): I get the feeling that I keep rediscovering issues each time a do a review sweep over the spec",
        "cc097e0d7183ae8436e7df709553c8c0 (15:32): ab7faae5d7b250ea8606486575f8f79c: yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:33): is the meta name=dns thingy implemented somewhere?",
        "cc097e0d7183ae8436e7df709553c8c0 (15:33): b8810fee2f4a71f849f3f7409546d1d9: don't think so",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:34): ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:34): I wonder if it is worth the trouble",
        "ab7faae5d7b250ea8606486575f8f79c (15:34): doesn't know how people usually define how to go from a BNF grammar into a useful data structure",
        "cc097e0d7183ae8436e7df709553c8c0 (15:35): ab7faae5d7b250ea8606486575f8f79c: lack of whitespace between pseudo-attrs should also be a parse error",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:35): ooh. &lt;style scoped&gt; has changed substantially",
        "ab7faae5d7b250ea8606486575f8f79c (15:35): cc097e0d7183ae8436e7df709553c8c0: Does that parse error do anything at all?",
        "cc097e0d7183ae8436e7df709553c8c0 (15:35): ab7faae5d7b250ea8606486575f8f79c: no",
        "ab7faae5d7b250ea8606486575f8f79c (15:35): Then why is it a problem to omit it? :-)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:36): ab7faae5d7b250ea8606486575f8f79c: because it doesn't work in opera, ie and safari, iirc",
        "cc097e0d7183ae8436e7df709553c8c0 (15:36): perhaps i should require it instead",
        "ab7faae5d7b250ea8606486575f8f79c (15:36): I did try to add that in, but then I realised it was hard (because of the &quot;reconsume the current input character&quot;) and couldn't be bothered :-p",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:36): time to send mail about style scoped...",
        "cc097e0d7183ae8436e7df709553c8c0 (15:39): ab7faae5d7b250ea8606486575f8f79c: does your BNF do &quot;stop parsing&quot; correctly?",
        "ab7faae5d7b250ea8606486575f8f79c (15:39): (By &quot;hard&quot; I just mean I couldn't work out how to do it nicely; there might still be a nice obvious way that I just haven't seen)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:40): although i guess i could change the parsing rules slightly, it doesn't really matter if = in name stops parsing or not",
        "ab7faae5d7b250ea8606486575f8f79c (15:42): cc097e0d7183ae8436e7df709553c8c0: Hmm, no, I think it parses '&lt;?... foo bar...' totally wrong because it'll get the name foo and then skip the WS and then match the b and be an error and then go back around and match the ar as a name",
        "ab7faae5d7b250ea8606486575f8f79c (15:42): ...but that's easy enough to fix by adding a 'ANYTHING* EOF' in the 'stop parsing' places, I guess",
        "cc097e0d7183ae8436e7df709553c8c0 (15:44): perhaps it's because i'm not very used to BNF, but i don't see where the holes are... :) seems fragile",
        "ab7faae5d7b250ea8606486575f8f79c (15:45): I'd expect it's possible to automatically prove that it handles every input deterministically",
        "cc097e0d7183ae8436e7df709553c8c0 (15:46): that's good",
        "ab7faae5d7b250ea8606486575f8f79c (15:46): and then use test cases to show that it does what you expect it to do :-)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:46): i'll have a look at this later",
        "cc097e0d7183ae8436e7df709553c8c0 (15:46): thanks for the help :)",
        "ab7faae5d7b250ea8606486575f8f79c (15:47): wonders if it's easier to invent a new formal grammar system that does error handling",
        "ab7faae5d7b250ea8606486575f8f79c (15:48): or maybe just a more compact syntax for the English prose state machines that are so popular nowadays",
        "96626168c6097aefced1ab85fd80fd6b (15:48): a11aabeeceeae6b8cb5d12ea06b56554, I didn't forget it, I knew you'd fill it in :p",
        "a11aabeeceeae6b8cb5d12ea06b56554 (15:48): :P",
        "ab7faae5d7b250ea8606486575f8f79c (15:57): (By the way, SFTP to Dreamhost doesn't really like Unicode filenames :-( )",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:00): Advance Higher Computing isn't quite as bad as I originally thought! Not only is the course mostly correct(!), but the programming can be done in any language you want!",
        "ab7faae5d7b250ea8606486575f8f79c (16:00): Befunge!",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:00): Brainfuck!",
        "ab7faae5d7b250ea8606486575f8f79c (16:01): Perl 6!",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:04): , realistically, could do with learning C++ better",
        "ab7faae5d7b250ea8606486575f8f79c (16:05): likes C++",
        "8c8837db54a2907cacd8633547977e33 (16:05): suggests whitespace",
        "ab7faae5d7b250ea8606486575f8f79c (16:06): so much so that I've got open a window showing Valgrind logs of memory leaks inside five levels of stack trace lines that just say &quot;?&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:06): that's even worse.",
        "ab7faae5d7b250ea8606486575f8f79c (16:07): Oops, I meant &quot;???&quot;, not &quot;?&quot;"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "cc097e0d7183ae8436e7df709553c8c0",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "96626168c6097aefced1ab85fd80fd6b",
        "8c8837db54a2907cacd8633547977e33"
    ]
}