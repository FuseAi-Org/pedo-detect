{
    "id": "bd2ed81d46f3fe7feb5ee65fdcc9a28a",
    "messages": [
        "eefe792db8ffb33a3398e30c4d8279c5 (20:20): why doesn't tit work right there, then?",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:20): let me give you the whole source",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:20): <a href=\"http://deadbeefbabe.org/paste/545\">http://deadbeefbabe.org/paste/545</a>",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:22): incidentally, robinl1, you can do things like    if file_extension in ['mp3','ogg']:",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:23): huh?",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:23): also, os.path.join is cleaner than appending slashes.",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:23): what does that do?",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:23): Just saying",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:23): technically, tests whether the file_extension string exists in that list",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:23): shorter, less error prone",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:24): at least, I like things that way",
        "f4ea20ae05d2da565e774193265e2df2 (20:24): test with a tuple, not a list.",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a (20:24): what the",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:24): but.... why didn't the filtering work?",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:24): nitpicker, ironfroggy:)",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a (20:24): ooh... there is no preincrement operator",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a (20:25): yes &quot;++x&quot; is valid syntax",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a (20:25): which just returns x...",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a (20:25): that's why my sequence numbers were off",
        "254c21f1687dd6a7eadf7406c9ffecec (20:25): robinl1, I don't know.  Open an interactive interpreter.",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:25): k",
        "254c21f1687dd6a7eadf7406c9ffecec (20:26): robinl1, &gt;&gt;&gt;import os; [entry for entry in os.listdir(&quot;/home/robin/&quot;) if os.path.isfile(entry)]",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:26): hmm.. there it DOES work",
        "10120f397a0f4db70d1aeb2d81229e70 (20:26): CardinalFang: what was your current directory when you did your test? /Users/cmiller?",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:26): so it's something in my program?",
        "254c21f1687dd6a7eadf7406c9ffecec (20:26): ChrisLong, Ah, good point!",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:27): ah, i get it, too",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:27): i will improve it, then",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:27): okay, that now works - thanks",
        "254c21f1687dd6a7eadf7406c9ffecec (20:28): container = &quot;/&quot;; [entry for entry in os.listdir(container) if os.path.isfile(os.path.join(container, entry))]",
        "2290ca8acebcc94bb06e51f3ca6e0ae7 (20:29): if i have a variable set in a template that i include in cheetah how do i access it in the template that has included it?",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:29): filenames = [entry for entry in os.listdir(path) if os.path.isfile(path + entry)]",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:29): got that, now",
        "254c21f1687dd6a7eadf7406c9ffecec (20:29): robinl1,  os.join  is your friend.",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:30): ...can't help but think os.walk with no recursion would be simpler...",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:30): i don't know an os.join",
        "eefe792db8ffb33a3398e30c4d8279c5 (20:30): what does it do?",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:30): os.path.join",
        "254c21f1687dd6a7eadf7406c9ffecec (20:30): Right, sorry.  <a href=\"http://python.org/doc/lib/\">http://python.org/doc/lib/</a>",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:31): it's a platform independant path glue thing",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:31): so that you don't have to depend on accidentally forgetting or adding an extra slash",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:31): and so that it'll work on windows too:)",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:33): e.g. os.path.join(root,pathbit,pathbit,filename)",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:33): or was that supposed to be an array?",
        "f4ea20ae05d2da565e774193265e2df2 (20:33): no it does take multiple arguments.",
        "f4ea20ae05d2da565e774193265e2df2 (20:34): and they arent called arrays!",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:34): wot-eva:)",
        "f4ea20ae05d2da565e774193265e2df2 (20:35): be having all the correctness!",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:35): I'm not gonna keep track of the exact nonclamenture when I write in three languages at the same time...",
        "f4ea20ae05d2da565e774193265e2df2 (20:35): there are important differences, and the terms arent actually language specific in their distinctions.",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:35): it's not like someone will go &quot;oh my GOD. Arrays! What the hell are those? Please help help!&quot;",
        "f4ea20ae05d2da565e774193265e2df2 (20:35): Arrays are to be considered homogenous, while lists are hetergenous.",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:36): within python?",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:36): see, now I didn't know that.",
        "f4ea20ae05d2da565e774193265e2df2 (20:36): and there are extensions to python provided distinctly different-from-list Array types.",
        "10120f397a0f4db70d1aeb2d81229e70 (20:36): and there is the builtin module array",
        "f4ea20ae05d2da565e774193265e2df2 (20:37): oh, yeah there is that so it isnt just an extra its included.",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:37): now that one is actually a *good* reason, ChrisLong",
        "10120f397a0f4db70d1aeb2d81229e70 (20:37): ironfroggy: i think we mean the same thing :)",
        "2ba3bf4ed9883e2ed03538ad58e16a41 (20:37): brb",
        "f4ea20ae05d2da565e774193265e2df2 (20:37): ChrisLong: i was thinking of NumPy which i think does its own thing.",
        "10120f397a0f4db70d1aeb2d81229e70 (20:38): ironfroggy: oh, yes, they have arrays too",
        "f59c82d8094b292316998d98cfb6fff7 (20:41): ChrisLong, thanks... looks like thats it :)",
        "10120f397a0f4db70d1aeb2d81229e70 (20:42): Mizipzor: glad i could help",
        "f59c82d8094b292316998d98cfb6fff7 (20:43): got another problem right when i fixed it... even though i didnt edit that part of the file, i get an error at the mapcell class: <a href=\"http://pastebin.com/731256\">http://pastebin.com/731256</a>",
        "f59c82d8094b292316998d98cfb6fff7 (20:43): that line is indentended... at least i think it is, ive switched to a new editor now... but...",
        "10120f397a0f4db70d1aeb2d81229e70 (20:46): pastebin is slow today, at least for me... just got a timeout from the proxy",
        "10120f397a0f4db70d1aeb2d81229e70 (20:47): ahh, now i see your pasting",
        "661f9c2c3a0e121fc2294c880521c3d4 (20:47): Yeah it was really slow for me too",
        "10120f397a0f4db70d1aeb2d81229e70 (20:49): Mizipzor: you forgot to paste the actual error message.",
        "f59c82d8094b292316998d98cfb6fff7 (20:49): yeah its very very slow but still better than flooding the channel, right?",
        "10120f397a0f4db70d1aeb2d81229e70 (20:50): definitely",
        "f59c82d8094b292316998d98cfb6fff7 (20:50): ChrisLong, the second half is from the interactive shell",
        "56261ef9bc8f0101acc611b6ba4e5a6d (20:50): I'm trying to figure out how to get a list of file paths on the command line using argv... I'm choking on paths with spaces... The usual windows thing to do is enclose everything in quotes... do I need to get the entire command string and parse out each parameter my own way or am I missing some obvious way to do this using built in commands?",
        "f59c82d8094b292316998d98cfb6fff7 (20:50): says the __init__ line should be intendented...",
        "10120f397a0f4db70d1aeb2d81229e70 (20:50): i know, but the traceback is incomplete",
        "f59c82d8094b292316998d98cfb6fff7 (20:51): oh! yeah youre right",
        "f59c82d8094b292316998d98cfb6fff7 (20:51): IndentationError: expected an indented block",
        "f59c82d8094b292316998d98cfb6fff7 (20:51): thats the last line"
    ],
    "person_ids": [
        "eefe792db8ffb33a3398e30c4d8279c5",
        "2ba3bf4ed9883e2ed03538ad58e16a41",
        "f4ea20ae05d2da565e774193265e2df2",
        "8dbad064a85bcb02bb1c2ca4eb6bfc3a",
        "254c21f1687dd6a7eadf7406c9ffecec",
        "10120f397a0f4db70d1aeb2d81229e70",
        "2290ca8acebcc94bb06e51f3ca6e0ae7",
        "f59c82d8094b292316998d98cfb6fff7",
        "661f9c2c3a0e121fc2294c880521c3d4",
        "56261ef9bc8f0101acc611b6ba4e5a6d"
    ]
}