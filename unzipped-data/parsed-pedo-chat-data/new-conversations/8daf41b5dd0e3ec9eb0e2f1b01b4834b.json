{
    "id": "8daf41b5dd0e3ec9eb0e2f1b01b4834b",
    "messages": [
        "cc097e0d7183ae8436e7df709553c8c0 (13:35): http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx is interesting",
        "cc097e0d7183ae8436e7df709553c8c0 (13:35): also affects xml parsing",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:38): I wonder what happens in other browsers",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:39): other browsers seem to simply do what is requested",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): it crashes IE6 :)",
        "cc097e0d7183ae8436e7df709553c8c0 (13:40): yeah",
        "cc097e0d7183ae8436e7df709553c8c0 (13:40): in opera you can get text nodes as child of the document node",
        "cc097e0d7183ae8436e7df709553c8c0 (13:40): s/child/children/",
        "cc097e0d7183ae8436e7df709553c8c0 (13:41): (with non-whitespace data)",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:41): that should prolly throw a HIERARCHY_REQUEST_ERR or something",
        "cc097e0d7183ae8436e7df709553c8c0 (13:41): i rather think we should do what webkit and firefox do",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:42): test snippet?",
        "65325d50b2e25aca54bc871b89758c9c (13:48): wow",
        "65325d50b2e25aca54bc871b89758c9c (13:48): I never would have even thought of handling that case with an error dialog which makes the page disappear when you click ok",
        "65325d50b2e25aca54bc871b89758c9c (13:50): that blog post is very vague about which browsers do what",
        "cc097e0d7183ae8436e7df709553c8c0 (13:50): edb259c0e0038f38bb200bc20c8cbf7e: http://dump.testsuite.org/2008/mutations-during-parsing/ ;)",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:51): :p",
        "65325d50b2e25aca54bc871b89758c9c (13:51): learns that webkit's xml parser does not enjoy mutation during parsing",
        "cc097e0d7183ae8436e7df709553c8c0 (13:52): 65325d50b2e25aca54bc871b89758c9c: webkit and firefox remember the modified dom and the parser drops elements or inserts them in the &quot;new&quot; place accordingly; opera assumes there were no mutations and just inserts elements blindly",
        "cc097e0d7183ae8436e7df709553c8c0 (13:52): s/elements/nodes/",
        "cc097e0d7183ae8436e7df709553c8c0 (13:52): at least last time i tested",
        "65325d50b2e25aca54bc871b89758c9c (13:53): http://tinyurl.com/6cwsfj",
        "65325d50b2e25aca54bc871b89758c9c (13:53): that's Travis's example in Live DOM Viewer",
        "65325d50b2e25aca54bc871b89758c9c (13:53): Safari seems top be dropping everything that would have gone in the removed node",
        "f139aba52f9fa1394b4034a7954b2220 (13:54): so rather than actually find a solution that doesn't throw an error, they still throw the error and abort, but just not tell the user about it? That's only marginally better.",
        "cc097e0d7183ae8436e7df709553c8c0 (13:54): hmm safari 3.1 crashed for 002.xml",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:55): 65325d50b2e25aca54bc871b89758c9c, the definition for caretRangeFromPoint will be rather vague and UI dependent",
        "cc097e0d7183ae8436e7df709553c8c0 (13:55): 65325d50b2e25aca54bc871b89758c9c: has there been changes to xml behavior in safari lately? last time i tested 001 and 002 worked the same and 003 and 004 worked the same",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:56): i'm still not quite sure how to phrase it",
        "cc097e0d7183ae8436e7df709553c8c0 (13:56): iirc, anyway",
        "65325d50b2e25aca54bc871b89758c9c (13:56): cc097e0d7183ae8436e7df709553c8c0: I was somewhat surprised that 002 crashed",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:56): HTML5 already addresses this, doesn't it?",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:57): the tree builder keeps node references on its stack and potentially keeps appending to nodes that are no longer in the tree",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:57): b8810fee2f4a71f849f3f7409546d1d9, it's mentioned",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:57): not sure if the exact final tree can always be determined",
        "cc097e0d7183ae8436e7df709553c8c0 (13:57): b8810fee2f4a71f849f3f7409546d1d9: doesn't cover xml though",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:57): xml is tricky anyway",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:58): for some time some browsers did not do incremental rendering or script execution",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:58): cc097e0d7183ae8436e7df709553c8c0: seems to me that the XML tree builder also needs to have a stack of node references and avoid trusting that the parentNode chain can be used as stack",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:59): i came across all these cases when writing teh html5 parser spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (13:59): i probably even blogged about them",
        "f139aba52f9fa1394b4034a7954b2220 (13:59): I don't see what's so difficult about the case mentioned in the blog.",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:00): 69b0d3dfe919a6b860a9fac82de52a7e: I think we need a Web spec that defines an entity resolver and a DOM builder on top of a SAXish XML parser",
        "65325d50b2e25aca54bc871b89758c9c (14:00): the blog was a surprisingly circuitous way of saying that IE will still do something crappy, and other browsers do better, and Travis has a vague opinion on which of the other browser behaviors is better",
        "f139aba52f9fa1394b4034a7954b2220 (14:01): with my limited testing, Firefox seems to be behaving sensibly",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:01): it seems like there's a policy or habit of not naming competitors on the IE blog",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:01): 69b0d3dfe919a6b860a9fac82de52a7e, maybe you can help out defining caretRangeFromPoint?",
        "65325d50b2e25aca54bc871b89758c9c (14:01): I tried his test case in live dom viewer and it seemed that both firefox and safari dropped everything that would have gone in the removed element",
        "65325d50b2e25aca54bc871b89758c9c (14:01): which is not what I expected",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): 65325d50b2e25aca54bc871b89758c9c: they don't drop it",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): 65325d50b2e25aca54bc871b89758c9c: they put them in that element",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): 65325d50b2e25aca54bc871b89758c9c: which is what html5 requires too",
        "65325d50b2e25aca54bc871b89758c9c (14:02): put them in that element which is already removed?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): 65325d50b2e25aca54bc871b89758c9c: html5's parser doesn't look at the dom at all (except for handling inlines)",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): 65325d50b2e25aca54bc871b89758c9c: the element is still in the parser's stack",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:03): you could put it in another document for all the parser cares",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:03): anyway",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:03): bed time",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:03): nn",
        "65325d50b2e25aca54bc871b89758c9c (14:04): that sounds sensible to me",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:05): 65325d50b2e25aca54bc871b89758c9c, any suggestions for caretRangeFromPoint?",
        "65325d50b2e25aca54bc871b89758c9c (14:05): edb259c0e0038f38bb200bc20c8cbf7e: I dunno",
        "65325d50b2e25aca54bc871b89758c9c (14:05): I very much need to go to bed",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:10): hmm, i'll try something out",
        "65325d50b2e25aca54bc871b89758c9c (14:10): edb259c0e0038f38bb200bc20c8cbf7e: so in Safari (and I think we did this for FF/IE compatibility) clicking in a non-editable area creates an invisible caret selection",
        "65325d50b2e25aca54bc871b89758c9c (14:11): you could define caretRangeFromPoint to give the same range as the caret selection you would get clicking there",
        "65325d50b2e25aca54bc871b89758c9c (14:11): though perhaps that is too vague",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:11): &quot;return an empty text range for the position where",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:11): a text insertion point indicator would have been placed if editing was",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:11): enabled and hit testing was performed at the coordinates x,y in the viewport&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:11): is my start",
        "65325d50b2e25aca54bc871b89758c9c (14:12): that is not bad",
        "65325d50b2e25aca54bc871b89758c9c (14:12): I'm off to bed for now, later",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:12): bye",
        "f139aba52f9fa1394b4034a7954b2220 (14:12): wow, it seems the people on HTML4all are accepting that &lt;acronym&gt; isn't in HTML5 now. I thought many of those people objected to its exclusion previously."
    ],
    "person_ids": [
        "cc097e0d7183ae8436e7df709553c8c0",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "65325d50b2e25aca54bc871b89758c9c",
        "f139aba52f9fa1394b4034a7954b2220",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "69b0d3dfe919a6b860a9fac82de52a7e"
    ]
}