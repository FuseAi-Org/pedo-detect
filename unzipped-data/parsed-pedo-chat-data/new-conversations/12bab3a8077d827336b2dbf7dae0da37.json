{
    "id": "12bab3a8077d827336b2dbf7dae0da37",
    "messages": [
        "1f8387eb43f131d7c309a90a4e36b5cb (19:04): Ok, I'm clearly missing something.  In Hixie's email about separating script download/parsing/execution, why wouldn't it alert &quot;fail&quot;?",
        "8b3687499080633e1898fa1dd209ef81 (19:04): Because you have to throw a SyntaxError before you can execute it, if you mean the email I think you mean?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:06): This is hilarious.  It actually works for everything I've tried so far: http://ryanelmquist.com/cgi-bin/xkcdwiki",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:12): 8b3687499080633e1898fa1dd209ef81: Ah, duh.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:14): 88d4d34a8064a4ff39fd5e144eea7762: Heh, cool.  I guess it's related to the fact that articles usually start with a summary that might link to more general concepts, and a lot of &quot;baseline&quot; general concepts link to philosophy.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:14): Seems so.",
        "9dfea2f9bd9114520591dceb20d528a1 (19:18): heh",
        "9dfea2f9bd9114520591dceb20d528a1 (19:18): The sequence quickly reached 'Language' and then spent 11 steps reaching Philosophy",
        "9dfea2f9bd9114520591dceb20d528a1 (19:18): ... but with a detour into geology, wtf",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:19): 9dfea2f9bd9114520591dceb20d528a1: Your task is to edit the language article to point directly to philosophy first.",
        "8b3687499080633e1898fa1dd209ef81 (19:19): 1f8387eb43f131d7c309a90a4e36b5cb, I wonder how many such changes have happened recently",
        "9dfea2f9bd9114520591dceb20d528a1 (19:19): The penultimate article was Modern Philosophy",
        "9dfea2f9bd9114520591dceb20d528a1 (19:19): That's cheating!",
        "9dfea2f9bd9114520591dceb20d528a1 (19:21): Challenge: Find a 10+ chain that doesn't terminate with Property (philosophy) -&gt; Modern philosophy -&gt; Philosophy",
        "ab7faae5d7b250ea8606486575f8f79c (19:28): 9dfea2f9bd9114520591dceb20d528a1: Ryan Giggs",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:35): b8810fee2f4a71f849f3f7409546d1d9: http://lists.w3.org/Archives/Public/www-validator/2011May/0031.html",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:36): &quot;Is Unicode Normalization Form C actually required by HTML5 or is this a validator bug?&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:39): b8810fee2f4a71f849f3f7409546d1d9: I realize the spec doesn't cite Form C directly, but I'm wondering what part of the conformance requirements that are directly stated in the spec have the effect of also make Form C a requirement",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:40): Ugh.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:41): Can we get rid of contenteditable=false?  It's a pain in the neck to worry about it all the time.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:41): (that was rhetorical, I'm pretty sure the answer is &quot;no&quot;)",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:42): Does that let you embed non-editable regions inside a contenteditable?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:42): Yes.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:42): Which I guess is handy, but it's a huge PITA to make sure all the algorithms leave them alone.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:43): Corner case, likely to have lots of bugs.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:43): Just ensuring that you don't climb out of contenteditable regions is comparatively easy.",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:43): Although the original idea of only allowing designMode on whole documents would be even easier to spec and implement.  :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:44): But I guess those horrible author people will want these silly features, so spec it we must.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:45): Those jerks.",
        "b25b6b77a0087ff8385941e5545d32ea (19:46): I hate authors almost as much as I hate generated content",
        "b25b6b77a0087ff8385941e5545d32ea (19:47): imagines he won't like shadow DOMs any more than generated content",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:47): At least you've dealt with shadow DOM for years and years, you just didn't know it.",
        "b25b6b77a0087ff8385941e5545d32ea (19:48): Because of generated content? Well yeah that's one way to look at it",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:48): No, because of &lt;input&gt;.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:48): And friends.",
        "b25b6b77a0087ff8385941e5545d32ea (19:49): Oh well that's just magic as far as I'm concerened",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:49): s/magic/shadow DOM/",
        "8b3687499080633e1898fa1dd209ef81 (19:50): s//magic/",
        "b25b6b77a0087ff8385941e5545d32ea (19:50): If that's how we implement it than I don't know about it. So it's magic to me :)",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:50): magicmagicmagic",
        "f9259f78376053934177e72f9ea0af8e (19:50): s/magic/typing nightmare/",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:50): I know that we, at least, implement it with some combination of pseudo-shadow-DOM and custom C++ renderers.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:51): But we're now switching over to pure shadow DOM.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:51): And it's apparently a big win.",
        "b25b6b77a0087ff8385941e5545d32ea (19:51): I remember Mozilla tried to do that like 10 years ago",
        "b25b6b77a0087ff8385941e5545d32ea (19:51): I dunno what happened",
        "b25b6b77a0087ff8385941e5545d32ea (19:51): But I certainly recally pure-XBL-forms builds",
        "b25b6b77a0087ff8385941e5545d32ea (19:51): *recall",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:52): XBL was just a bad version of shadow DOM, so there you go.",
        "8b3687499080633e1898fa1dd209ef81 (19:52): removed some traces of that earlier this year",
        "b25b6b77a0087ff8385941e5545d32ea (19:52): Well I know that XBL and shadow dom are the same or I wouldn't have mentioned it :)",
        "2466054b396284f05e6f6e4e7d3c806d (19:53): ye gods, people just don't grasp how ditching HTML versions in favour of feature detection is So Much Nicer(tm).",
        "b25b6b77a0087ff8385941e5545d32ea (19:53): Who wants versions now?",
        "8b3687499080633e1898fa1dd209ef81 (19:53): MS?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:57): Still?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:59): Are they reopening the issue?",
        "8b3687499080633e1898fa1dd209ef81 (20:03): knows nothing, but they seemed a possible suspect",
        "2466054b396284f05e6f6e4e7d3c806d (20:03): Nah, was some topic on a website about last call for HTML 5",
        "2466054b396284f05e6f6e4e7d3c806d (20:04): A relatively high-tech oriented site and there's people seriously wondering wth you would want feature detection over HTML versions.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:05): Maybe they've never written actual websites.",
        "2466054b396284f05e6f6e4e7d3c806d (20:06): That's my best explanation.",
        "ab7faae5d7b250ea8606486575f8f79c (20:06): Got to teach them that web standards aren't like actual standards that software actually implements, where you can meaningfully ask software what standards it implements",
        "2466054b396284f05e6f6e4e7d3c806d (20:07): I mean, I don't mess with website coding on a daily basis, but the entirety of using feature detection just makes so much more sense for a developing and moving platform like the web.",
        "2466054b396284f05e6f6e4e7d3c806d (20:07): ab7faae5d7b250ea8606486575f8f79c: Yeah, pointed them to explanations of graceful degradation and feature detection.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:08): In bytes, http://aryeh.name/spec/editcommands/editcommands.html is now about 6% the size of http://whatwg.org/c.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:08): And growing.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:09): isn't sure if that's scary or not",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): imagines the complexity of a spec increases non-linearly with its size",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): so the next 6% will be much harder",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:10): In some ways I've found it's gotten easier, because I have a much better understanding of how everything works.",
        "ab7faae5d7b250ea8606486575f8f79c (20:11): but fortunately /c will find growth even harder so it won't be too fast a moving target",
        "b25b6b77a0087ff8385941e5545d32ea (20:11): imagines this document will be merged into /c eventually",
        "b25b6b77a0087ff8385941e5545d32ea (20:11): So you can't win",
        "ab7faae5d7b250ea8606486575f8f79c (20:12): Hmm, yeah, I suppose agglutinating specs is quicker way to seemingly grow",
        "2466054b396284f05e6f6e4e7d3c806d (20:29): Anyone happen to know if lxml.html's pretty_print needs html5lib to function properly for pretty printing HTML 5 markup?",
        "2466054b396284f05e6f6e4e7d3c806d (20:29): Because currently, without any html5lib serialisation, it doesn't seem to properly pretty print.",
        "b25b6b77a0087ff8385941e5545d32ea (20:33): 2466054b396284f05e6f6e4e7d3c806d: No idea. I didn't think lxml ever depended on html5lib though, so I don't see why it would",
        "2466054b396284f05e6f6e4e7d3c806d (20:35): Well, it doesn't depend on it for its parsing, but you can use it in conjunction.",
        "2466054b396284f05e6f6e4e7d3c806d (20:35): I'm just not understanding why it's not pretty printing how I expect it.",
        "2466054b396284f05e6f6e4e7d3c806d (20:36): Even non-HTML5 elements are not pretty printing.",
        "2466054b396284f05e6f6e4e7d3c806d (20:36): I doubt that lxml would have a bug, so I must be doing something wrong.",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:49): a9b326df4e6da61c5b6f5e1058be83a2: Normalization checking is based on my 2006 expectation that HTML5 would normatively reference C300 in Charmod-Norm",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:50): b8810fee2f4a71f849f3f7409546d1d9: oh",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:50): but doesn't it sorta do that indirectly now?",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:51): a9b326df4e6da61c5b6f5e1058be83a2: how? AFAICT, my expectation has so far been wrong",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:52): I also received other feedback about this today",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:52): now I'm really curious to find out what the W3C i18n folks think about charmod-norm today and why",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:53): b8810fee2f4a71f849f3f7409546d1d9: I can probably get a quick answer to that by pinging r12a",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:53): I suppose the errors should be downgraded to warnings if there's not going to be a normative trail to a normalization spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:53): a9b326df4e6da61c5b6f5e1058be83a2: already did",
        "65325d50b2e25aca54bc871b89758c9c (20:53): good morning, folks",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:53): b8810fee2f4a71f849f3f7409546d1d9: OK",
        "8b3687499080633e1898fa1dd209ef81 (20:54): I hear i18n has been asking the CSSWG to require NFC-normalizing selectors in css3-namespaces",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:54): as far as how, I guess I assumed this was something that the upstream Unicode spec would mandate by now",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:54): 8b3687499080633e1898fa1dd209ef81: I thought they wanted processors to do late normalization",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:54): b8810fee2f4a71f849f3f7409546d1d9: so that the rest of us don't have to N number of times",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:54): 8b3687499080633e1898fa1dd209ef81: instead of requiring authors to do early normalization",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:54): 8b3687499080633e1898fa1dd209ef81: in the CSS case",
        "8b3687499080633e1898fa1dd209ef81 (20:55): I think you're right",
        "8b3687499080633e1898fa1dd209ef81 (20:55): I'm still surprised that they want that specced in namespaces",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:55): (FWIW, I'm very, very much against late normalization for identifier matching)",
        "8b3687499080633e1898fa1dd209ef81 (20:56): Make sure to convince your CSSWG representative, then :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:56): 8b3687499080633e1898fa1dd209ef81: there are multiple reps to convince :-/",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:57): multiple points of failure?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (20:57): 65325d50b2e25aca54bc871b89758c9c: \u201e\u00c5\u00e4\u201e\u00c5\u00d8\u201e\u00c7\u00e0\u201e\u00c5\u00dc",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:58): There's no way to make a position: fixed box adjust height (for instance) to fit its contents, right?",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:58): frankly, I get the feeling that the selector normalization debate is an indication that i18n on the Web has been solved",
        "8b3687499080633e1898fa1dd209ef81 (20:58): By that logic, a11y has been solved as well",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:59): 8b3687499080633e1898fa1dd209ef81: good point",
        "a9b326df4e6da61c5b6f5e1058be83a2 (21:01): b8810fee2f4a71f849f3f7409546d1d9: fwiw, I just (re)pinged r12a (but fact is, dude's pretty busy. used to be he had another full-time i18n person on W3C team to help, but now it's just him, and other i18n people outside of the W3C team have been significantly less active lately)"
    ],
    "person_ids": [
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "8b3687499080633e1898fa1dd209ef81",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "9dfea2f9bd9114520591dceb20d528a1",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "b25b6b77a0087ff8385941e5545d32ea",
        "f9259f78376053934177e72f9ea0af8e",
        "2466054b396284f05e6f6e4e7d3c806d",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}