{
    "id": "52df3dca4c58edddad8338601c065a6d",
    "messages": [
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:26): Not sure if this is the right place to ask but here goes: Anyone here have any hints on how to do indexable hash navigation in a site ? For example I want a dynamic ajax-based navigation that would use hashes (such as site.com/index.php#4asd27qsd) instead of normal static navigation (such as site.com/index.php?p=asd&amp;a=23).",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:28): a9cca614ecc1e67f985123ba13a4aaa6: that is a hot potato topic. But you could look at a project such as Backbone.js",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:28): c8326525decb5e9cd7c030d81c7bbe90: hot potato ?",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:28): I've managed to do something about 2 years ago but I'm not sure if it was INDEXABLE.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:28): As in if bots such as Google Bots can use hashes to index content.",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:29): google propsed that you should use #! (hashbang)",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:29): But there are a lot of opinions about that topic",
        "4c3305a5f44b1c0a170b065ee7b0c545 (16:30): indexedDB, y u no stable?",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:30): Hashbang, heh, funny name, never heard of it. Such as www.site.com/index.php#!a23adwa23arsd ?",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:31): I'm willing to give it a try. If Google Bot has implemented specific hash recognition, what's the problem ?",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:31): yes that could be a way www.domain.com/#!/user a9cca614ecc1e67f985123ba13a4aaa6",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:31): twitter also uses hashbang",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:32): a9cca614ecc1e67f985123ba13a4aaa6: i recommend google the topic &quot;hashbang&quot; - there are a lot of blog posts about it",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:33): c8326525decb5e9cd7c030d81c7bbe90: By #!a23adwa23arsd I mean something like a SHA-256 encrypted hash, so the user just sees a random &quot;identifier&quot; instead of actual data such as &quot;page=123,id=2,name=something&quot;",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:34): You can use whatever you want :-)",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:37): HTML5 gives you pushState which is what you want",
        "3e65db05e37f34bd21c82600a0356298 (16:41): is there a shim for that ? or something which fallback nicely if pushState isnt supporter by the browse r?",
        "ea4cd2f0efef9310f548e4f684415402 (16:42): 3e65db05e37f34bd21c82600a0356298: no, its unshimable",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:46): c8326525decb5e9cd7c030d81c7bbe90: Hmm. Is there any way to detect if a client that connects to a server is an indexing bot (such as Google Bot ) ?",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:47): 3e65db05e37f34bd21c82600a0356298: there is. look at History.js on github",
        "ea4cd2f0efef9310f548e4f684415402 (16:48): c8326525decb5e9cd7c030d81c7bbe90: thats not a shim...",
        "ea4cd2f0efef9310f548e4f684415402 (16:48): that uses location.hash and is notihng new",
        "3e65db05e37f34bd21c82600a0356298 (16:49): c8326525decb5e9cd7c030d81c7bbe90: thx",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:49): ea4cd2f0efef9310f548e4f684415402: but it is a nice fallback :-)",
        "ea4cd2f0efef9310f548e4f684415402 (16:49): stupid hashes i hate thee",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:50): a9cca614ecc1e67f985123ba13a4aaa6: you can look at the userAgent but that is more a backend thing i think",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:51): c8326525decb5e9cd7c030d81c7bbe90: Maybe one could implement both types of navigation (hash-based and classic), use hashes by default and switch back to classic whenever a bot is encountered.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:52): If it's just a matter of UserAgent, I guess some server-side programming would be enough for differentiating between a human being and a bot.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:54): Maybe use classic &lt;a&gt; links with href such as page.php?var1=sasd&amp;var2=2123 and use a little javascript to turn these to hash-based links if the client that accesses the page is human (based on a boolean transmitted to JS from the server-side part).",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:54): It's rather sketchy ... but might just work.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:55): That way bots would only deal with clasic referrers and would not have to go up against hashes and complicate things.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:55): Leaving hash-based links to be only used for user navigation with history and for sharing links between 2 human beings.",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:56): You can catch all clicks on &lt;a /&gt; elements with javascript and do that hash thing - so only people that has js enabled will use this &quot;system&quot;",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:56): That's easily done with jQuery.",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:57): Along with the usage of event.preventDefault()",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:57): Yeah... might just work.",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:57): yes",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:57): a9cca614ecc1e67f985123ba13a4aaa6: maybe take a look at jquery mobile, they do the exact same thing",
        "a9cca614ecc1e67f985123ba13a4aaa6 (16:58): I guess indexing bots filter out the URLs and access them separately, they don't .... click... right ?",
        "c8326525decb5e9cd7c030d81c7bbe90 (16:59): I have no clue, but i would be surprised if the did a &quot;click&quot;-event :D",
        "a9cca614ecc1e67f985123ba13a4aaa6 (17:01): Maybe they employ something like this to workaround, say, hotlinking restrictions ?"
    ],
    "person_ids": [
        "a9cca614ecc1e67f985123ba13a4aaa6",
        "c8326525decb5e9cd7c030d81c7bbe90",
        "4c3305a5f44b1c0a170b065ee7b0c545",
        "3e65db05e37f34bd21c82600a0356298",
        "ea4cd2f0efef9310f548e4f684415402"
    ]
}