{
    "id": "c53b1c54b47800823876ea9629a73c51",
    "messages": [
        "0a39f78bcb297ab0ebe8a29c28bfed89 (12:55): planet: 9elements - HTML5 Canvas Experiment &lt;http://hacks.mozilla.org/2009/08/9elements-html5-canvas-experiment/&gt;",
        "64fad28965d003cde964ea3016e257a3 (13:15): Does anyone know if Googlebot can read xhtml served as application/xhtml+xml?",
        "002fd66affb058c756926402acf97570 (13:16): It sort of can.",
        "64fad28965d003cde964ea3016e257a3 (13:16): As pure xml, no stupid spaces between the attributes and closing /",
        "64fad28965d003cde964ea3016e257a3 (13:17): sort of?",
        "64fad28965d003cde964ea3016e257a3 (13:17): like html quirks mode?",
        "002fd66affb058c756926402acf97570 (13:17): It treats it using it's generic XML handling, IIRC",
        "64fad28965d003cde964ea3016e257a3 (13:17): ah",
        "002fd66affb058c756926402acf97570 (13:17): *its",
        "64fad28965d003cde964ea3016e257a3 (13:18): Will IE ever support application/xhtml+xml?",
        "002fd66affb058c756926402acf97570 (13:18): I doubt it has a quirks mode, as there is only one diff. in quirks in HTML parsing",
        "002fd66affb058c756926402acf97570 (13:18): 64fad28965d003cde964ea3016e257a3: They've said they will support it in the future, but that they have higher priority things to work on now",
        "a924fb58d2c25874322f4e5126f608b9 (13:18): 64fad28965d003cde964ea3016e257a3: It's basically a staring contest between IE implementing and everyone giving up on XHTML in general. ;)",
        "64fad28965d003cde964ea3016e257a3 (13:19): I had to add some php to give an html 3.2 doc to users who support only html to parts of my site :(",
        "64fad28965d003cde964ea3016e257a3 (13:19): sucks",
        "64fad28965d003cde964ea3016e257a3 (13:20): puts the link http:/ 64fad28965d003cde964ea3016e257a3galitz.com/index.xhtml for those curious",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (13:20): Title: Grant Galitz - Main Page (at 64fad28965d003cde964ea3016e257a3galitz.com)",
        "002fd66affb058c756926402acf97570 (13:21): Why does that need to be XHTML? Why not use HTML?",
        "a924fb58d2c25874322f4e5126f608b9 (13:21): That page is evil",
        "a924fb58d2c25874322f4e5126f608b9 (13:21): It's all... wobbly",
        "64fad28965d003cde964ea3016e257a3 (13:21): I use PHP::XMLWriter",
        "002fd66affb058c756926402acf97570 (13:22): What do you gain by using XMLWriter?",
        "64fad28965d003cde964ea3016e257a3 (13:22): I wanted to make it easier for myself.",
        "64fad28965d003cde964ea3016e257a3 (13:22): it was",
        "64fad28965d003cde964ea3016e257a3 (13:23): DOM in php is iffy for html",
        "a924fb58d2c25874322f4e5126f608b9 (13:23): Well, at least you're using XML tools instead of trying to echo() XML. That's a plus.",
        "002fd66affb058c756926402acf97570 (13:23): XMLWriter is so buggy it's more or less useless though",
        "002fd66affb058c756926402acf97570 (13:23): I think I've found bugs in more or less every function of it",
        "64fad28965d003cde964ea3016e257a3 (13:24): Almost no comments left in the manual",
        "64fad28965d003cde964ea3016e257a3 (13:24): for xmlwriter",
        "002fd66affb058c756926402acf97570 (13:24): (PHP devs say they aren't PHP bugs, report on libxml2, libxml2 devs say applications should only pass valid UTF-8 strings, so PHP should sanitize)",
        "64fad28965d003cde964ea3016e257a3 (13:25): Well, it works right in FF, opera, and webkit browsers",
        "64fad28965d003cde964ea3016e257a3 (13:25): but webkit seems to have this javascript bug",
        "64fad28965d003cde964ea3016e257a3 (13:26): when modifying margins and padding of div tags by js",
        "64fad28965d003cde964ea3016e257a3 (13:26): webkit doesn't re-render right, as it doesn't resize after the margins/paddings have been made smaller",
        "64fad28965d003cde964ea3016e257a3 (13:27): for at least my site personally, so I had to stop it browser-specifically. :(",
        "64fad28965d003cde964ea3016e257a3 (13:28): gsnedders: What do you think about webkit's bug?",
        "3f2e2531201cfbf853f16f668132eaf2 (13:28): As far as I'm aware, Googlebot uses its HTML parser for application/xhtml+xml pages",
        "b25b6b77a0087ff8385941e5545d32ea (13:29): had the same awareness as 3f2e2531201cfbf853f16f668132eaf2",
        "002fd66affb058c756926402acf97570 (13:29): feigns total ignorance",
        "64fad28965d003cde964ea3016e257a3 (13:29): forgot to mention the webkit bug starts when the div tags are allowed more 'room' by smaller margins/paddings after being shrunk by higher values of the same previously on the same page instance.",
        "64fad28965d003cde964ea3016e257a3 (13:31): thanks",
        "64fad28965d003cde964ea3016e257a3 (13:31): bye",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:49): bug 7211",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (13:49): http://www.w3.org/Bugs/Public/show_bug.cgi?id=7211 <email/>, P2, NEW, define &quot;positive integer&quot; and use it consistently, instead of &quot;non-negative integer greater than zero&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:49): anne: \u201a\u00dc\u00eb",
        "a924fb58d2c25874322f4e5126f608b9 (13:50): a9b326df4e6da61c5b6f5e1058be83a2: It used to be that, but it was changed for clarity",
        "a924fb58d2c25874322f4e5126f608b9 (13:50): How about just &quot;integer greater than zero&quot; instead?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:51): a924fb58d2c25874322f4e5126f608b9: I don't feel strongly about it either way. Just filed the bug because I was thinking about it, and it's worthwhile to have a resolution on record for it for the next time someone asks.",
        "a924fb58d2c25874322f4e5126f608b9 (13:52): Fair enough",
        "a9b326df4e6da61c5b6f5e1058be83a2 (13:52): that said, there are a couple place in the spec that use the term &quot;positive integer&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:55): it does not really matter what it is called",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:55): what matters is that we're not introducing new datatypes in the body of the spec"
    ],
    "person_ids": [
        "0a39f78bcb297ab0ebe8a29c28bfed89",
        "64fad28965d003cde964ea3016e257a3",
        "002fd66affb058c756926402acf97570",
        "a924fb58d2c25874322f4e5126f608b9",
        "3f2e2531201cfbf853f16f668132eaf2",
        "b25b6b77a0087ff8385941e5545d32ea",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "edb259c0e0038f38bb200bc20c8cbf7e"
    ]
}