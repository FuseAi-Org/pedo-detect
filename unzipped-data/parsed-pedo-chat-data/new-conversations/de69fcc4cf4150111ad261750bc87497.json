{
    "id": "de69fcc4cf4150111ad261750bc87497",
    "messages": [
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (16:57): ugh - you'd think browsers would be able to implement alpha transparency based word-wrapping :)",
        "f139aba52f9fa1394b4034a7954b2220 (16:59): what?",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:00): well, we have nice block wrapping of text, but nothing more advanced, eg. having an image of a black circle with transparent background",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:00): then have browser detect parts that are 'empty' and allow text flow around it",
        "f139aba52f9fa1394b4034a7954b2220 (17:01): oh, right. I think there might be some CSS proposals for that somewhere, and I'm pretty sure it can be done in SVG by specifying the path. I'm not sure of the details though.",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:02): looks like I get to write a fun article if it's possible via svg",
        "f139aba52f9fa1394b4034a7954b2220 (17:02): 15dc8f30526c5bbaaa37c9fcf3f7c89a, is this what you're looking for? http://dev.w3.org/csswg/css3-exclusions/",
        "ab7faae5d7b250ea8606486575f8f79c (17:03): People will presumably complain about security implications, so it'd have to be restricted to word-wrapping around same-origin images",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:03): neat!",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:04): security implications?",
        "f139aba52f9fa1394b4034a7954b2220 (17:04): 15dc8f30526c5bbaaa37c9fcf3f7c89a, being able to detect the content of the image at all is a security risk for non-same-origin images",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:05): 15dc8f30526c5bbaaa37c9fcf3f7c89a: using the feature to probe the alpha channel of a confidential image",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:05): ....",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:05): the program would be doing that, not a human being",
        "f139aba52f9fa1394b4034a7954b2220 (17:05): but that CSS proposal works by specifying an explicit path, rather than any image heuristics or edge detection",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:05): oh.",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:06): with clever SVG filters applied, it might be possible to move each of R, G and B to alpha channel, too",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:06): so what you're saying is that by using automatic edge detection one could externally somehow identify it's content by the edges? :P",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:06): 15dc8f30526c5bbaaa37c9fcf3f7c89a: yeah",
        "f139aba52f9fa1394b4034a7954b2220 (17:06): depending on what the image is, yes",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:08): it's a fun concept to think of using 2px fontsize, but realistically what sort of image with transparency would have some sort of secret information",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:09): an email address perhaps?",
        "ab7faae5d7b250ea8606486575f8f79c (17:09): http://top-secret-project-intranet-server/logo-containing-secret-project-name.gif",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:09): you'd then have to OCR the edges...",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:09): and not the entire shape",
        "b25b6b77a0087ff8385941e5545d32ea (17:09): Which you could maybe do",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:10): somehow I doubt OCR has advanced that much :P",
        "ab7faae5d7b250ea8606486575f8f79c (17:10): You don't need OCR, you just send the raw outline data back to the attacker's server",
        "f139aba52f9fa1394b4034a7954b2220 (17:10): as b8810fee2f4a71f849f3f7409546d1d9 said, you could use SVG filters, clipping regions or other effects to adjust which colours are rendered transparently, which means you can probe the image to find edges",
        "ab7faae5d7b250ea8606486575f8f79c (17:10): where they can read it manually",
        "b25b6b77a0087ff8385941e5545d32ea (17:10): Right, that's basically what I meant",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:11): talk about an edge case :P",
        "f139aba52f9fa1394b4034a7954b2220 (17:12): 15dc8f30526c5bbaaa37c9fcf3f7c89a, these are similar reasons to why canvases become tainted, and restrict the ability to obtain pixel data, when a non-same-origin image is added",
        "ab7faae5d7b250ea8606486575f8f79c (17:12): Security is all about edge cases, since it only takes one to break the security model",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:13): realistically can't the wrap script just have a certain limit on scan resolution of the image?",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:13): eg. 12px blocks as a minimum",
        "b25b6b77a0087ff8385941e5545d32ea (17:14): (the &quot;edge case&quot; thing scored 1 comedy drumroll btw)",
        "b25b6b77a0087ff8385941e5545d32ea (17:15): You could try making a limit like that but it seems hard to justify",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): (But with images it seems pretty futile to try squashing all attacks, because there's various (hypothetical?) timing-related attacks and presumably the performance cost of protecting against them is unacceptable in a benchmark-driven browser marketing environment)",
        "f139aba52f9fa1394b4034a7954b2220 (17:15): 15dc8f30526c5bbaaa37c9fcf3f7c89a, that all depends on the target image and what level of detail is really necessary to obtain the information. Even a crude outline might be enough in some cases",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): wonders if anyone has actually got such attacks working in practice",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:16): I find it silly that things like this even need to be discussed because we're trying to shelter even the dumbest programmer from an attack like that",
        "b25b6b77a0087ff8385941e5545d32ea (17:16): whereas disallowing this kind of functionality for cross domain images seems like a quite reasonable solution that has the normal properties of the web security model",
        "b25b6b77a0087ff8385941e5545d32ea (17:16): Uh",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:16): if someone is able to inject something that sends data back to a 3rd party server then they have much much larger issues",
        "ab7faae5d7b250ea8606486575f8f79c (17:16): It's not about injecting something",
        "b25b6b77a0087ff8385941e5545d32ea (17:16): There are no programmers involved",
        "ab7faae5d7b250ea8606486575f8f79c (17:17): It's about a user visiting http://attacker.com/ which runs scripts on the user's machine (i.e. behind their firewall)",
        "f139aba52f9fa1394b4034a7954b2220 (17:17): 15dc8f30526c5bbaaa37c9fcf3f7c89a, &lt;img src=&quot;http://intranet/top-secret/image.png&quot;&gt;",
        "b25b6b77a0087ff8385941e5545d32ea (17:18): Evil site A convinces a user to visit their page and loads a resource from secret IP-restricted server B into A. It then uses some technique to extract information from that resource",
        "b25b6b77a0087ff8385941e5545d32ea (17:18): Allowing them to discover secrets held on B",
        "15dc8f30526c5bbaaa37c9fcf3f7c89a (17:21): like a flash uploader since they happen to know the EXACT address of the secret image url :P"
    ],
    "person_ids": [
        "15dc8f30526c5bbaaa37c9fcf3f7c89a",
        "f139aba52f9fa1394b4034a7954b2220",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "b25b6b77a0087ff8385941e5545d32ea"
    ]
}