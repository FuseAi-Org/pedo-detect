{
    "id": "8bfbd7ad63693c240c29c5993070b775",
    "messages": [
        "b3d618437c76d62698834c804d50a637 (03:05): is this the place to ask about offline manifest files?",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:05): Probably.",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:05): It's *a* place.",
        "b3d618437c76d62698834c804d50a637 (03:06): great :) I have a NETWORK: header with the url /api/* but never see a hit to anything in that folder?",
        "b3d618437c76d62698834c804d50a637 (03:07): I'm using jQuery on the client to hit the url with an ajax request.",
        "b3d618437c76d62698834c804d50a637 (03:07): &amp; testing with the iPhone Simulator",
        "b3d618437c76d62698834c804d50a637 (03:07): can NETWORK paths have wildcards?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:13): b3d618437c76d62698834c804d50a637: remove the &quot;*&quot; -- it's a prefix match",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:13): the &quot;*&quot; is unnecessary",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:13): (and indeed means that /api/*foo would hit the network bet /api/foo would not)",
        "b3d618437c76d62698834c804d50a637 (03:13): 69b0d3dfe919a6b860a9fac82de52a7e: perfect, thanks.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:22): Hrm.  Drawing up some demos, and for some reason I'm getting a &quot;SECURITY_ERR: DOM Exception 18&quot; when I try 'var idata = $(&quot;#back&quot;)[0].getContext('2d').getImageData(0,0,100,100);'.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:23): Am I doing anything obviously wrong?",
        "c9964ca7d2b330edd3a8c66417ea0389 (03:23): 1f8387eb43f131d7c309a90a4e36b5cb: tainted your canvas by drawImage()ing an image from another domain?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:24): I'm drawing a video from desktop.  That might taint, right?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:24): That is, from file://",
        "c9964ca7d2b330edd3a8c66417ea0389 (03:24): I suppose so, yeah. http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#security-with-canvas-elements",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:25): k, I'll upload to my server and try it there instead.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:25): should get localhost working.",
        "c9964ca7d2b330edd3a8c66417ea0389 (03:25): which browser btw? ;)",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:25): chrome 5",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:26): Yup, works fine on server.  Damn crazy file:// origin policies.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:28): Wow, micro-optimizations can really help when you're trying to do realtime video processing.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:30): My lag went from noticeable (about 1/10th second) to unnoticeable just by using a temp var to kill a property access in a tight loop, and switching from /8 to &gt;&gt;&gt;3.",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:34): &gt;&gt;3, you must mean.",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:34): What language are you using?",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:34): JavaScript?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:36): Yeah.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:36): And no, I mean &gt;&gt;&gt;, because I want to fill in 0s.",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:37): &gt;&gt; propagates the sign.",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:38): I've never heard of that convention in my life.",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:38): It doesn't work in C, does it?",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:38): Some JS-specific thing?",
        "1f8387eb43f131d7c309a90a4e36b5cb (03:38): I have no clue.  I just know that's how JS works.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (03:52): can anyone take a quick look at the code to this very simple &lt;canvas&gt; example and tell me if there is anyway to reduce any of the lines: http://standardista.com/webkit/ch7/canvas.html",
        "232cfb8f6e3d3fc35eab68ea25c1777d (03:53): i know it's not the best use of canvas, but i am writing an intro tutorial to drawing shapes, and don't want to get anything wrong",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:02): Seems correct to me.  Dunno much about canvas, though.",
        "1f8387eb43f131d7c309a90a4e36b5cb (04:04): Same here.  Looks roughly okay.",
        "1f8387eb43f131d7c309a90a4e36b5cb (04:05): Yay!  Got all 3 of my demos done.  Woo!",
        "1f8387eb43f131d7c309a90a4e36b5cb (04:05): is now ready to actually give his talk tonight.",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:05): knock 'em dead :)",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:07): thanks",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:09): 232cfb8f6e3d3fc35eab68ea25c1777d: the call to context.scale() seems superfluous, otherwise fine. personally, i'd use save/restore to get rid of the shadow instead of setting a transparent shadowColor",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:11): c9964ca7d2b330edd3a8c66417ea0389: i tried the save, restore but that didn't work, and read up that transparency would make the shadow not render, though it feels like a hack even though it's in the spec",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:12): 232cfb8f6e3d3fc35eab68ea25c1777d: save/restore doesn't touch shadowColor? sounds like a bug.. which browser?",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:13): i didn't get it to touch shadowColor.  Believe I tested in Opera 10.6 and Saf 5",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:13): but i could have had the syntax wrong if it was supposed to.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:17): c9964ca7d2b330edd3a8c66417ea0389: the scale was to test pixelation on scaling. when i scale transform canvas and svg, they both pixelate. I would have especially expected svg to not pixelate",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:18): 232cfb8f6e3d3fc35eab68ea25c1777d: hm. scaling an svg from an &lt;img&gt; element?",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:19): oh, it's only opera that pixelates. Safari doesn't",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:19): c9964ca7d2b330edd3a8c66417ea0389: just testing for rendering",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:19): ah :)",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:20): so when asked i can explain.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:21): was trying to show that pixelation occurs with &lt;canvas&gt; but not &lt;svg&gt;",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:21): proven in Safari 5 ... was looking at Opera earlier.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:21): http://standardista.com/webkit/ch7/canvas2.html v. http://standardista.com/webkit/ch7/svg2.html",
        "c9964ca7d2b330edd3a8c66417ea0389 (04:22): is startled by the :hover zooming",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:26): checking pixelation.  My sandbox is full of hideousnesss and bad UI :D",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:32): The behavior of CSS transform on a vector image is probably undefined.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:32): CSS is usually vague like that.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:36): It just says &quot;transform it using the given matrix&quot;, not &quot;transform it by applying the given matrix to the collection of pixels&quot; or &quot;transform it by [some clever description that implies SVGs aren't pixellated]&quot;.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:41): my understanding on the difference between SVG and Canvas, is that canvas is basically the painting of pixels. So, should pixelate on zoom. But SVG is &quot;scalable&quot; and &quot;Vector&quot; based graphics, so should scale.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:42): SVG does scale.  If you changed the height and width, it would.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:42): But CSS transforms doesn't say one way or the other how it's supposed to work here, AFAICT.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:42): Scaling nicely seems like a better idea, but I didn't see it in the spec.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:42): (Maybe I should read the spec before I say stuff like that, though.)",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:42): let me try with css: height and width",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:42): instead",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:42): rather, as well",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:43): Yeah, that should work better, if you can get it to work.",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:43): Should work on the &lt;img&gt;, at least.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:43): it renders as i expected in Safari 5",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:43): canvas pixelated, svg didnt'",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:43): same transform",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:44): Yes, that makes more sense, but I don't think the spec requires the latter behavior.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:51): &lt;img&gt; does work nicely, topmost of the three... sorry for the bad UX example (Opera 10.6 is the one that had the pixelation with transform) http://www.standardista.com/webkit/ch7/svg3.html",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:54): but changing height on an element redraws the page. Repainting the page can be slow. I need to fine tooth comb the spec."
    ],
    "person_ids": [
        "b3d618437c76d62698834c804d50a637",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "c9964ca7d2b330edd3a8c66417ea0389",
        "232cfb8f6e3d3fc35eab68ea25c1777d"
    ]
}