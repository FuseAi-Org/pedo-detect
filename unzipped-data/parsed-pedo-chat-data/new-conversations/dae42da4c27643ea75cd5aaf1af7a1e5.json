{
    "id": "dae42da4c27643ea75cd5aaf1af7a1e5",
    "messages": [
        "78885357e970c69de0c33081760a04c9 (20:50): wow. I'm reading back trying to understand clearly why &lt;body&gt; would sufficiently count as a block level element in the case 69b0d3dfe919a6b860a9fac82de52a7e has that email...",
        "78885357e970c69de0c33081760a04c9 (20:51): &quot;Generally, block-level elements may contain inline elements and other block-level elements. Generally, inline elements may contain only data and other inline elements.&quot;",
        "78885357e970c69de0c33081760a04c9 (20:51): that's really... helpful.",
        "78885357e970c69de0c33081760a04c9 (20:51): via: http://www.w3.org/TR/html4/struct/global.html#h-7.5.3",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:52): hey, what's up",
        "78885357e970c69de0c33081760a04c9 (20:54): Hi 69b0d3dfe919a6b860a9fac82de52a7e. We've been discussing this old WHATWG email: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2005-March/003217.html",
        "78885357e970c69de0c33081760a04c9 (20:54): and the current wording of that paragraph in the web forms spec.",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:56): ah",
        "78885357e970c69de0c33081760a04c9 (20:56): I noticed what I thought was a odd error message in Henri's validator last night but it turns out to be correct interpretation of things...",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:56): just with an odd error message :-)",
        "78885357e970c69de0c33081760a04c9 (20:56): yes, which I understand the logic behind it at least now.",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:57): yeah",
        "78885357e970c69de0c33081760a04c9 (20:57): I leave it to Henri and Anne to discuss their issues with the current wording though...",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:58): well i'm sure the wording will change when wf2 is merged into html5",
        "78885357e970c69de0c33081760a04c9 (20:59): (I'm tempted to do a little data mining because I think the example you give of a body-&gt;form-&gt;input is a pretty common one... but perhaps it is more edgy than I believe....)",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): wf2 is written as a diff spec which makes its wording a little... annoying at times",
        "78885357e970c69de0c33081760a04c9 (20:59): yeah, I know the forms stuff is still quite fluid.",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): 78885357e970c69de0c33081760a04c9: oh it's very common",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): 78885357e970c69de0c33081760a04c9: so is &lt;body&gt; &lt;div&gt; text",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): 78885357e970c69de0c33081760a04c9: and &lt;body&gt; &lt;img&gt;",
        "78885357e970c69de0c33081760a04c9 (20:59): sure.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): those are all equivalently bad",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): (&lt;div&gt; text &lt;/div&gt; is only allowed because of its use in making custom widgets where we really don't have useful semantic elements at hand)",
        "78885357e970c69de0c33081760a04c9 (21:01): Right, those examples seem pretty clear... but I think web authors are going to be a little confused by the &lt;form&gt; instance... because adding the extra &lt;p&gt; seems like semantics for the sake of it. (though of course a &lt;fieldset&gt; is quite logical... but I'm guessing most will just dump in a &lt;p&gt; to work around the validator message)",
        "78885357e970c69de0c33081760a04c9 (21:02): for the record... loathes these types of debates",
        "a924fb58d2c25874322f4e5126f608b9 (21:02): What's it going to be on &lt;p&gt;&lt;form&gt;&lt;input&gt; vs &lt;form&gt;&lt;p&gt;&lt;input&gt;? Is one still bad and the other good?",
        "78885357e970c69de0c33081760a04c9 (21:02): but I'd rather wait until wf2 is merged and see what happens then.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:03): well we could define &lt;form&gt;-containing-only-inline as being a paragraph-equivalent container, like we do with &lt;li&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:03): but that won't help those people using &lt;br&gt;s in there to get the effect they should be doing with &lt;p&gt;",
        "78885357e970c69de0c33081760a04c9 (21:03): I think there is an assumption that's exactly what it means...",
        "78885357e970c69de0c33081760a04c9 (21:04): right... the &lt;br&gt; usage is nasty.",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:04): 69b0d3dfe919a6b860a9fac82de52a7e: whenever CSS generates an anonymous block box, assume paragraph semantics",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:04): i think if we do that i may explicitly ban &lt;br&gt; in &lt;form&gt;, since the only use case i can think of is things like shipping labels, and those would ned actual &lt;p&gt; elements to indicate the address",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:05): looks out from his window on this floor of the ivory tower at the beautiful tag soup fields below",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:05): b8810fee2f4a71f849f3f7409546d1d9: &lt;div&gt; doesn't define a paragraph",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:05): b8810fee2f4a71f849f3f7409546d1d9: the whole point of &lt;div&gt; is that it doesn't define anything (except grouping)",
        "a924fb58d2c25874322f4e5126f608b9 (21:06): So what is the &quot;best&quot; way to do a line-based form? One-column table? No-style list? &lt;br&gt;? No-padding &lt;p&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:06): &lt;p&gt;",
        "a924fb58d2c25874322f4e5126f608b9 (21:07): What if a group of those lines would normally be a &lt;p&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:07): like what?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:07): like an address label?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:07): &lt;p&gt; with &lt;br&gt;",
        "a924fb58d2c25874322f4e5126f608b9 (21:09): And what if you want two-column alignment? :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): the presentation is a CSS issue",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:13): a two-column &lt;table&gt; can be appropriate though if the markup consists of just a list of labels with associated form controls",
        "3f2e2531201cfbf853f16f668132eaf2 (21:17): would like a validator mode that ignores any content-model requirement that is just there for semantic purity and not for any practical problem",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:18): 3f2e2531201cfbf853f16f668132eaf2: wouldn't that be most of them?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:18): 3f2e2531201cfbf853f16f668132eaf2: what's the practical problem of having an &lt;h1&gt; in an &lt;h2&gt; ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:19): or an &lt;li&gt; without a parent &lt;ol&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:19): or a &lt;dt&gt; with no associated &lt;dd&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:19): or the root element being &lt;div&gt; instead of &lt;html&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:19): or of there not being a &lt;title&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:20): or of value=&quot;&quot; on &lt;li&gt; not having a numeric value",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:20): etc...",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:20): many things can be &quot;wrong&quot; without their wrongness necessarily being an immediate practical problem",
        "a924fb58d2c25874322f4e5126f608b9 (21:21): 3f2e2531201cfbf853f16f668132eaf2: A @suppresserrors directive, perhaps. &quot;I know I'm not supposed to put this &lt;p&gt; here, but I'm going to do it, so don't bug me&quot;",
        "a924fb58d2c25874322f4e5126f608b9 (21:22): The validator can't really know the difference otherwise",
        "3f2e2531201cfbf853f16f668132eaf2 (21:25): &lt;h1&gt; inside &lt;h2&gt; would make header extractors (like for tables of contents) break; &lt;li&gt; outside &lt;ol&gt; doesn't get indented properly and gets parsed confusingly in existing browsers; missing &lt;title&gt; means people can't bookmark your page nicely; non-numeric &lt;li&gt; value won't get rendered properly; etc",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:26): inline text without a proper paragraph container will get rendered confusingly by an aural UA",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:26): and can't be styled properly",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:26): and won't have proper paragraph margins",
        "3f2e2531201cfbf853f16f668132eaf2 (21:34): Does &lt;span&gt;&lt;div&gt;...&lt;/div&gt;&lt;/span&gt; cause problems?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:36): confusing styling behaviour by default?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:36): i don't know what it would mean, which i suppose is another problem",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:36): it also wouldn't parse right if used after a &lt;p&gt; element with an implied end tag",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:37): i don't think the &quot;allow everything except what causes problems&quot; strategy is a winning one, to be honest",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:37): it seems overly risky",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:37): without a clear gain",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:37): hmm, transparent &lt;a&gt; is going to be tricky",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:38): transparent &lt;a&gt;?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:38): &lt;a&gt; around block-level elements",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:39): ah",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:39): yes it is",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:39): that has exactly the same problem as above &lt;p&gt; ... &lt;a&gt; &lt;div&gt; ... &lt;/div&gt; &lt;/a&gt; is an issue while &lt;p&gt; ... &lt;/p&gt; &lt;a&gt; &lt;div&gt; ... isn't",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:40): that's just one of the problems, yeah",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:40): DOM-wise and parsing-wise is solved afaict",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:41): btw, I wanted to ask about no new features, what about Ruby markup?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:41): and this async JavaScript thread",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:43): ruby is on the list of things that will be added",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:43): worker pools are punted to 5.1",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:43): 69b0d3dfe919a6b860a9fac82de52a7e: is &quot;the list&quot; concretely written down somewhere?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:44): the list is wf2, rendering, and ruby, i believe.",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:44): ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:44): i may come across some old suggestions that were sent before the feature freeze that deserve to be added, too",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:44): we'll see",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:44): I should probably document that Validator.nu doesn't support IPv6...",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:45): http://fileformats.blogspot.com/2007/11/design-principles-for-html-5.html maybe we should have another note with a few reasons of why HTML5 is needed...",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:45): (the ones that zcorpan mentioned there + what b8810fee2f4a71f849f3f7409546d1d9 talked about during the TPAC)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:47): i'd just stick it in the design principles",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:47): since hte goals mostly explain why we have hte principles we have",
        "3f2e2531201cfbf853f16f668132eaf2 (21:48): b8810fee2f4a71f849f3f7409546d1d9: Non-support of IPv6 is the default assumption for users of anything at all on the internet - it's perhaps more efficient to only document the rare cases where something does support IPv6",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (21:49): i guess that could work too",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:50): 3f2e2531201cfbf853f16f668132eaf2: well, yeah. but it sucks that portless URIs look like a failure at the other end and URIs with port do nothing which is *really* weird"
    ],
    "person_ids": [
        "78885357e970c69de0c33081760a04c9",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "3f2e2531201cfbf853f16f668132eaf2",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0"
    ]
}