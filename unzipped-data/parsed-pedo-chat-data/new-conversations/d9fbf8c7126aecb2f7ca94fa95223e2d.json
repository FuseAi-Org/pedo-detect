{
    "id": "d9fbf8c7126aecb2f7ca94fa95223e2d",
    "messages": [
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:55): recommendations for a perl module for parsing e-mail messages?",
        "8b3687499080633e1898fa1dd209ef81 (18:56): My recommendation would be not to use perl :)",
        "b25b6b77a0087ff8385941e5545d32ea (18:56): Or to parse email messages",
        "4d05dc3c4352ebe7593b536f2078cfe9 (18:56): 58869a2e5c3f0eab9aa398b0a798e354: hey, I remember you have tools to check mozilla and webkit repositories?",
        "8b3687499080633e1898fa1dd209ef81 (18:56): b25b6b77a0087ff8385941e5545d32ea, ssh, I want him to parse them :)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:57): if perl's good enough for Hixie, it's good enough for me",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:58): if there's a decent bugzilla library for python, I'd rather write it in python instead",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:59): but I couldn't find any python bugzilla library",
        "ab7faae5d7b250ea8606486575f8f79c (18:59): Surely the solution to any parsing problem is regexps",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:00): 4d05dc3c4352ebe7593b536f2078cfe9: Just WebKit and Chromium",
        "4d05dc3c4352ebe7593b536f2078cfe9 (19:00): 58869a2e5c3f0eab9aa398b0a798e354: are they public tools ?",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:01): http://peter.sh/data/last-week/webkit/2011-20-monday.html",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:01): http://peter.sh/data/last-week/chromium/2011-20-monday.html",
        "ab7faae5d7b250ea8606486575f8f79c (19:01): a9b326df4e6da61c5b6f5e1058be83a2: Are these emails from random users that might be malformed etc?",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:01): They're hardly tools, just a more convenient list of changesets",
        "8b3687499080633e1898fa1dd209ef81 (19:01): I think Mozilla has python tools for interacting with bugzilla, but I don't know if the W3C instance has BZAPI set up",
        "8b3687499080633e1898fa1dd209ef81 (19:01): ab7faae5d7b250ea8606486575f8f79c, emails to public-html-comments",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:01): ab7faae5d7b250ea8606486575f8f79c: yeah",
        "b25b6b77a0087ff8385941e5545d32ea (19:02): always wonders if bzapi is a intentional reference to bz-the-person",
        "ab7faae5d7b250ea8606486575f8f79c (19:02): (It looks like stuff like Email::Simple might be nice enough but it says &quot;you cannot expect it to cope well as the only parser between you and the outside world&quot; which presumably isn't ideal here)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:03): ab7faae5d7b250ea8606486575f8f79c: OK",
        "ab7faae5d7b250ea8606486575f8f79c (19:03): has no personal experience of anything other than piping strings into sendmail, though",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:03): 8b3687499080633e1898fa1dd209ef81: I don't think it does have BZAPI set up",
        "8b3687499080633e1898fa1dd209ef81 (19:03): b25b6b77a0087ff8385941e5545d32ea, not afaik",
        "8b3687499080633e1898fa1dd209ef81 (19:04): a9b326df4e6da61c5b6f5e1058be83a2, I'd argue that's your first step, then :)",
        "4d05dc3c4352ebe7593b536f2078cfe9 (19:04): 58869a2e5c3f0eab9aa398b0a798e354: that's exactly what I'm looking for, a more convenient way to list mozilla changesets",
        "b25b6b77a0087ff8385941e5545d32ea (19:04): 8b3687499080633e1898fa1dd209ef81: Surely I can't be the only person who thinks of that when I see it though :)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:04): 8b3687499080633e1898fa1dd209ef81: it just exposes a REST API anyway, right?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:04): not bound to python clients",
        "8b3687499080633e1898fa1dd209ef81 (19:04): Yep",
        "b25b6b77a0087ff8385941e5545d32ea (19:05): Isn't the first step to upgrade to a newer bugzilla? Tht would solve lots of problems, right?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:05): sure",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:05): and probably introduce a lot of others",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:05): 4d05dc3c4352ebe7593b536f2078cfe9, I may have a look in setting this up for Mozilla as well, but won't have any bandwidth until next wek",
        "58869a2e5c3f0eab9aa398b0a798e354 (19:05): week*",
        "8b3687499080633e1898fa1dd209ef81 (19:05): (https://github.com/toolness/pybugzilla, btw)",
        "b25b6b77a0087ff8385941e5545d32ea (19:06): a9b326df4e6da61c5b6f5e1058be83a2: Maybe. But the W3C copy seems to be well behind",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:06): b25b6b77a0087ff8385941e5545d32ea: and anyway, I have to work with what I have",
        "4d05dc3c4352ebe7593b536f2078cfe9 (19:07): 58869a2e5c3f0eab9aa398b0a798e354: don't worry, I was just looking for an existing tool so I don't have to write it :)",
        "b25b6b77a0087ff8385941e5545d32ea (19:08): mike][inq: f you wanted an upgrade you would presiumably point out that newer versions have more aria. Tht works like a cheat code, right? :)",
        "8c8837db54a2907cacd8633547977e33 (19:08): 1f8387eb43f131d7c309a90a4e36b5cb: ping",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:09): 8c8837db54a2907cacd8633547977e33: pong",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:09): b25b6b77a0087ff8385941e5545d32ea: that's a good point, actually",
        "a9b326df4e6da61c5b6f5e1058be83a2 (19:09): I didn't know they hard aria markup",
        "b25b6b77a0087ff8385941e5545d32ea (19:09): apologieses if he disturbed mike][inq",
        "8c8837db54a2907cacd8633547977e33 (19:10): 1f8387eb43f131d7c309a90a4e36b5cb: are you aware that gradients in browsers don't actually have &quot;no intrinsic dimensions&quot;?  like, background-image: gradient; background-size: 5px; acts as though the gradient had an intrinsic aspect ratio equal to that of the background positioning area",
        "b25b6b77a0087ff8385941e5545d32ea (19:10): wonders how well dbolter gets on with bugzilla",
        "8c8837db54a2907cacd8633547977e33 (19:11): 1f8387eb43f131d7c309a90a4e36b5cb: which seems a bit bizarre to me, but I'm not sure if you're trying to codify reality or codify a sensible behavior",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:11): 8c8837db54a2907cacd8633547977e33: the gradient itself has no dimensions.  The gradient, when used, acquires dimensions equal to the element's background area.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:12): I'm not sure whether or not background-size:5px should affect things.  Maybe?",
        "8c8837db54a2907cacd8633547977e33 (19:12): 1f8387eb43f131d7c309a90a4e36b5cb: the way css3 says to negotiate background-size, something with no dimensions and no aspect ratio and only one dimension constrained is rendered as if for 'contain'",
        "8c8837db54a2907cacd8633547977e33 (19:13): 1f8387eb43f131d7c309a90a4e36b5cb: which in that case means as large as possible while holding that specified dimension fixed",
        "8c8837db54a2907cacd8633547977e33 (19:13): 1f8387eb43f131d7c309a90a4e36b5cb: so background-size: 5px should per current spec algorithms give you 5px by (other dimension of BPA)",
        "8c8837db54a2907cacd8633547977e33 (19:14): 1f8387eb43f131d7c309a90a4e36b5cb: in browsers now it gives you 5px by (whatever length gives a ratio equal to that of the BPA)",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:16): 8c8837db54a2907cacd8633547977e33: Okay, so I've looked at the spec again.  That behavior *should* be a bug, but it's not entirely clear from the spec, because it's not well-defined how the background-properties map into the inputs to the size resolution algorithm in the Image Values spec.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:17): The intent is that saying &quot;background-size:5px&quot; will make the &quot;specified size&quot; input be a 5px by 5px square, which immediately wins and sets the concrete object size to 5px by 5px.",
        "8c8837db54a2907cacd8633547977e33 (19:17): seems pretty clear to me how they map into the background-size algorithm in css3 b&amp;b",
        "8c8837db54a2907cacd8633547977e33 (19:17): which takes as inputs only intrinsic width/height/aspect ratio",
        "8c8837db54a2907cacd8633547977e33 (19:21): fwiw I encountered this because I was implementing the css3 background-size algorithm for images partially or completely lacking intrinsic dimensions",
        "8c8837db54a2907cacd8633547977e33 (19:22): and the change to make gradients have no intrinsic ratio tripped a couple tests we have that expect the current behavior, rather than the one css3 b&amp;b + images seems to specify",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:23): I do need to resolve precisely where background-size sits in the size resolution order.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:32): 8c8837db54a2907cacd8633547977e33: So, background-size actually repeats most of what's in the Image Values algorithm.",
        "8c8837db54a2907cacd8633547977e33 (19:32): that's possible",
        "8c8837db54a2907cacd8633547977e33 (19:32): that seems bad",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:33): If you provide 0, 1, or 2 dimensions, the behavior is identical to the Image Values algorithm, with the dimensions being the &quot;specified size&quot;.",
        "8c8837db54a2907cacd8633547977e33 (19:33): seems like images should delegate to css3 b&amp;b for background-size, which *does* actually have a specified algorithm",
        "8c8837db54a2907cacd8633547977e33 (19:33): unlike &lt;img&gt; or &lt;object&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:33): It should be the other way around, actually.  Image Values has the generic algorithm that everyone uses.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:33): But the B&amp;B module was written before I wrote that algorithm, thus the current state of affairs.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:34): But anyway, the current behavior (where the gradient takes the ratio of the box as its intrinsic ratio) is a bug.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:34): It should size itself to the background-size box.",
        "8c8837db54a2907cacd8633547977e33 (19:34): wait",
        "8c8837db54a2907cacd8633547977e33 (19:34): so gradients *have* intrinsic dimensions then?",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:35): no",
        "8c8837db54a2907cacd8633547977e33 (19:35): I guess I'm just confused how images would have anything more than a width (maybe), a height (maybe), and proportions (maybe)",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:36): That is all they have, which means we're miscommunicating somehow.",
        "8c8837db54a2907cacd8633547977e33 (19:38): well, a gradient indicated by linear-gradient(...) has more than that somehow, because it has a different width/height/ratio depending on the context that uses it",
        "8c8837db54a2907cacd8633547977e33 (19:38): and the goal was, I thought, to make gradients a special case of images writ generally",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:38): That's completely expected.  You use a gradient as a background on a 200x100 box, the gradient will be resolved into a 200x100 image.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:39): This is described by the sizing algorithm.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:39): Background-size *should* affect that computation, so writing &quot;width:200px; height:100px; background-size:5px;&quot; should resolve it into a 5x100 image.",
        "8c8837db54a2907cacd8633547977e33 (19:39): so &quot;Gradients have no intrinsic dimensions.&quot; in 5. Gradients is just flat-out wrong?",
        "8c8837db54a2907cacd8633547977e33 (19:40): wait",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:40): No, it's correct.  I'm not sure what we're confusing each other over. ^_^",
        "8c8837db54a2907cacd8633547977e33 (19:40): background-size: 5px is b-s: 5px auto, which means the height is chosen to preserve the proportions of the image",
        "8c8837db54a2907cacd8633547977e33 (19:40): which for a gradient that ostensibly is 200x100 means you'd have 5px 2.5px rendered",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:41): Yes.  But gradients have no proportions before resolution, so it instead drops down to taking the height of the sizing area.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:41): You're confusing yourself by thinking about things in the wrong order.",
        "8c8837db54a2907cacd8633547977e33 (19:41): so, this idea of an image that doesn't have proportions, then does, is what's not represented by b&amp;b",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:41): You're imagining it goes &quot;set size of element&quot; -&gt; &quot;resolve gradient size&quot; -&gt; &quot;apply background-size&quot;.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:43): 8c8837db54a2907cacd8633547977e33: Well, it's unclear in B&amp;B, because such a thing didn't exist at the time.",
        "8c8837db54a2907cacd8633547977e33 (19:43): I don't think I'm imagining anything -- I'm simply reading b&amp;b which says that the size of the background is determined by consulting the specified background-size, then resolving any auto/contain/cover using the intrinsic dimensions width, height, and ratio of the image",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:43): ...yes?  That's correct, and consistent with what I've been saying.",
        "8c8837db54a2907cacd8633547977e33 (19:43): which exist independent of context, as part of the image itself",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:43): Can you give me a situation that you believe is resolving incorrectly?",
        "8c8837db54a2907cacd8633547977e33 (19:46): 200x100 box, with gradient, background-size: 20px auto; 1) width is 20px as specified; 2) &quot;An \u201a\u00c4\u00f2auto\u201a\u00c4\u00f4 value for one dimension is resolved by using the image's intrinsic ratio and the size of the other dimension, or failing that, using the image's intrinsic size, or failing that, treating it as 100%.&quot; =&gt; no intrinsic ratio to consult, no intrinsic size, fail to treating as 100% 3) rendered...",
        "8c8837db54a2907cacd8633547977e33 (19:46): ...size is 20px by 100px",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:46): Yes, that's entirely correct.",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:46): What part of that do you think is inconsisten with what I've said?",
        "8c8837db54a2907cacd8633547977e33 (19:46): I don't",
        "8c8837db54a2907cacd8633547977e33 (19:47): so I'm confused about how we're disagreeing, then, because I thought we were somehow",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:47): We aren't.  ^_^",
        "8c8837db54a2907cacd8633547977e33 (19:47): well then!",
        "8c8837db54a2907cacd8633547977e33 (19:47): glad that's settled",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:47): Violent agreement it is!",
        "1f8387eb43f131d7c309a90a4e36b5cb (19:48): And, important note, the gradient itself is rendered into a 20x100 box, so color-stop positions done as lengths are resolved against that.  They're not resolved against a 200px-wide box and then scaled down to 20px-wide."
    ],
    "person_ids": [
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "8b3687499080633e1898fa1dd209ef81",
        "b25b6b77a0087ff8385941e5545d32ea",
        "4d05dc3c4352ebe7593b536f2078cfe9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "58869a2e5c3f0eab9aa398b0a798e354",
        "8c8837db54a2907cacd8633547977e33",
        "1f8387eb43f131d7c309a90a4e36b5cb"
    ]
}