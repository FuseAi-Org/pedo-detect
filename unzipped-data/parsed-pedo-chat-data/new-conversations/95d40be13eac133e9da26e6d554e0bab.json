{
    "id": "95d40be13eac133e9da26e6d554e0bab",
    "messages": [
        "57d876083caf517f49e8cf5e03307450 (20:56): out of curiosity",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:56): yes?",
        "57d876083caf517f49e8cf5e03307450 (20:56): if I do &lt;a&gt;foo&lt;span&gt;bar&lt;/a&gt;baz&lt;/span&gt;",
        "57d876083caf517f49e8cf5e03307450 (20:56): what happens?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:56): per spec?",
        "57d876083caf517f49e8cf5e03307450 (20:57): &lt;!DOCTYPE html&gt;, so yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:57): the doctype doesn't affect this i think",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:57): http://software.hixie.ch/utilities/js/live-dom-viewer/?%20%3Ca%3Efoo%3Cspan%3Ebar%3C%2Fa%3Ebaz%3C%2Fspan%3E",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:57): test it in webkit or firefox, they implement the spec",
        "57d876083caf517f49e8cf5e03307450 (20:57): i.e., do both bar and baz get styled with the span and foo and bar get the link?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:58): the resulting document has one &lt;span&gt; and it contains just &quot;bar&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:58): note that &lt;a&gt; is particularly special here",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:58): and you'll get different results if you replace it with &lt;b&gt;, for example",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): also different results if you replace the &lt;span&gt; with &lt;div&gt;, say",
        "cc097e0d7183ae8436e7df709553c8c0 (20:59): 69b0d3dfe919a6b860a9fac82de52a7e: there's no difference between &lt;a&gt; and &lt;b&gt; here",
        "57d876083caf517f49e8cf5e03307450 (20:59): damn",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): oh right, &lt;a&gt;'s specialness is when you nest &lt;a&gt;s",
        "cc097e0d7183ae8436e7df709553c8c0 (21:00): 57d876083caf517f49e8cf5e03307450: http://www.whatwg.org/specs/web-apps/current-work/complete/the-end.html#an-introduction-to-error-handling-and-strange-cases-in-the-parser",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): you'll get different results if you change &lt;a&gt; to &lt;Span&gt; and &lt;Span&gt; to &lt;div&gt;?",
        "57d876083caf517f49e8cf5e03307450 (21:00): oh well",
        "57d876083caf517f49e8cf5e03307450 (21:01): well, I need the &lt;a&gt; to stay an &lt;a&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): anyway my point is just that that general pattern can give various results depending on the element in question",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): what's the context of your question?",
        "57d876083caf517f49e8cf5e03307450 (21:01): basically, I'm trying to refactor this code2html utility I'm writing",
        "57d876083caf517f49e8cf5e03307450 (21:02): so I get syntax highlighting as regions and link objects also as regions",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): ah",
        "57d876083caf517f49e8cf5e03307450 (21:02): I'm not sure I care about partially overlapping syntax highlighting/linkificaiton",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): yeah you definitely don't want to rely on weird parsing behaviours here",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:03): they're invalid for a reason :-)",
        "57d876083caf517f49e8cf5e03307450 (21:03): since that would be somebody's bug",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:03): the best bet when doing docs with two overlapping ranges is to wrap one set of ranges normally, and then do the second set at the fine-grained level by rewrapping just the text nodes for the second set",
        "57d876083caf517f49e8cf5e03307450 (21:04): but links can be entirely within sytanx regions (i.e., an http in a comment) or syntax regions can be entirely within links (i.e., quallified namespaces)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:04): e.g. if you have  hel(lo[ pret)ty wor]ld",
        "57d876083caf517f49e8cf5e03307450 (21:04): I'm not sure I have a case where a link and syntax region partially overlap...",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:04): you'd do &quot;hel&lt;span&gt;lo pret&lt;/span&gt; world&quot; first",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:04): and then (using &lt;b&gt;s for the sake of clarity:",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:05): &quot;hel&lt;span&gt;lo&lt;b&gt; pret&lt;/b&gt;&lt;/span&gt;&lt;b&gt; wor&lt;/b&gt;ld&quot; second",
        "57d876083caf517f49e8cf5e03307450 (21:05): I've noticed s/span/b/g changes the resulting dom to do the logically right thing for my use case",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:05): if you have more than two sets of ranges, you're best off just dealing with ranges individually, as in:",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:06): &quot;hel&lt;span class=&quot;a&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;a b&quot;&gt; pret&lt;/span&gt;&lt;span class=&quot;b&quot;&gt; wor&lt;/span&gt;ld&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:06): hth",
        "57d876083caf517f49e8cf5e03307450 (21:06): I was just wondering if the corner cases would have worked even if I didn't look for them"
    ],
    "person_ids": [
        "57d876083caf517f49e8cf5e03307450",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}