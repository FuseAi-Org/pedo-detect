{
    "id": "d1674f17aa759ab29a463af63e936863",
    "messages": [
        "021b7bf3ff2076c746a1ed6f90658a06 (15:09): oh no thats anoying, i have conected a qtextedit and a qfontcombobox. the problem is the fontbox emits fontchanged even when i change it by slot, so if you select font they get into a loop",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:11): disconnect suitable signals temporarily",
        "021b7bf3ff2076c746a1ed6f90658a06 (15:15): yes, seems the only solutiion",
        "89374fc184ec3d548904c336adab9252 (15:16): anyone here?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:25): sure",
        "89374fc184ec3d548904c336adab9252 (15:25): got a clue how the qspinbox determines it's elements' sizes?",
        "89374fc184ec3d548904c336adab9252 (15:26): the line edit, the buttons?",
        "021b7bf3ff2076c746a1ed6f90658a06 (15:27): bad. if i select a text  and continue the selection over a text that is e.g. bold, the whole text becomes bold, becouse during selection the  currentCharFormatChanged  signal is emited",
        "021b7bf3ff2076c746a1ed6f90658a06 (15:28): um i forgot to disconect the italic signal",
        "89374fc184ec3d548904c336adab9252 (15:33): oooooooo...almost got it",
        "89374fc184ec3d548904c336adab9252 (15:33): just need to figure out what height a spinbox is supposed to be",
        "89374fc184ec3d548904c336adab9252 (15:33): in a cross-platform way",
        "89374fc184ec3d548904c336adab9252 (15:35): QAbstractSpinBox::sizeHint()",
        "89374fc184ec3d548904c336adab9252 (15:35): woohoo!",
        "89374fc184ec3d548904c336adab9252 (15:35): thank goodness for open source",
        "021b7bf3ff2076c746a1ed6f90658a06 (15:38): rtfs ;)",
        "89374fc184ec3d548904c336adab9252 (15:41): exactly",
        "89374fc184ec3d548904c336adab9252 (15:41): the best acronym of them all",
        "89374fc184ec3d548904c336adab9252 (15:41): I have python to thank for that",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:47): in what way?",
        "89374fc184ec3d548904c336adab9252 (15:49): python code is much more readable, and the nature of the language implies reading code as a necessity for using code",
        "89374fc184ec3d548904c336adab9252 (15:49): things get a little more rigid with compiled languages",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:49): sure",
        "89374fc184ec3d548904c336adab9252 (15:49): so it was a smoother introduction to code reading habits, and I'm finally getting fast at it with C++",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:49): but in what way did python help? qt isn't written in python",
        "89374fc184ec3d548904c336adab9252 (15:49): there are python extensions",
        "89374fc184ec3d548904c336adab9252 (15:50): code usability is unmatched",
        "89374fc184ec3d548904c336adab9252 (15:50): qpp = QApplication(sys.argv)",
        "89374fc184ec3d548904c336adab9252 (15:50): w = QWidget()",
        "89374fc184ec3d548904c336adab9252 (15:50): w.show()",
        "89374fc184ec3d548904c336adab9252 (15:50): app.exec_loop()",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:50): well, i know pyqt",
        "89374fc184ec3d548904c336adab9252 (15:50): shortes app ever, 4 lines",
        "89374fc184ec3d548904c336adab9252 (15:50): as it should be",
        "89374fc184ec3d548904c336adab9252 (15:50): quite fast, too",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:50): so you looked at some old app and found out about sizeHint()?",
        "89374fc184ec3d548904c336adab9252 (15:52): I read the qt source",
        "89374fc184ec3d548904c336adab9252 (15:52): qabstractspinbox.cpp",
        "89374fc184ec3d548904c336adab9252 (15:52): qt is it's own best example",
        "89374fc184ec3d548904c336adab9252 (15:53): my job required I make a spinbox with caled auto-repeat and different keyboard behavior, so I wrote it but needed to paint it",
        "89374fc184ec3d548904c336adab9252 (15:53): it toook a few hours of reading qstyle, but I got it",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:53): nice",
        "89374fc184ec3d548904c336adab9252 (15:56): how many people do you reckon are commercial developers in this channel?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:56): a few. i think",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:56): i am both commercial and os",
        "89374fc184ec3d548904c336adab9252 (15:56): what oss do you do?",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:57): all kinds",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:57): :)",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:57): nothing you have ever seen",
        "e5c246c422bf5aeed2dab4c68c680e2b (15:58): my recent stuff hasn't even reached the &quot;o&quot; of &quot;os&quot; yet",
        "89374fc184ec3d548904c336adab9252 (15:58): same here",
        "19bce048094dbf467be59fb0d5e69d5f (15:58): How does one pass an argument to a SLOT, for instance connect(&amp;foo, SIGNAL(clicked)), this, SLOT(setText(My value passed here)?",
        "89374fc184ec3d548904c336adab9252 (15:59): the arguments have to come from the signal",
        "89374fc184ec3d548904c336adab9252 (15:59): your syntax is wrong",
        "89374fc184ec3d548904c336adab9252 (15:59): SIGNAL(valueChanged(int)) =&gt; SLOT(setValue(int))",
        "89374fc184ec3d548904c336adab9252 (16:00): man, erc in emacs is awesome",
        "89374fc184ec3d548904c336adab9252 (16:00): you get code formatting right in irc",
        "19bce048094dbf467be59fb0d5e69d5f (16:00): Oh, no setValue is my private slot patrickkidd",
        "89374fc184ec3d548904c336adab9252 (16:01): jit's just an example",
        "19bce048094dbf467be59fb0d5e69d5f (16:01): When I click on the button I want to pass the current iteration value to the slot.",
        "89374fc184ec3d548904c336adab9252 (16:01): anyway, the args come from the signal",
        "89374fc184ec3d548904c336adab9252 (16:01): that's not how you do it",
        "89374fc184ec3d548904c336adab9252 (16:01): just ask for it some other way from within the slot",
        "19bce048094dbf467be59fb0d5e69d5f (16:01): The values on the signal are predefined though, no?",
        "89374fc184ec3d548904c336adab9252 (16:02): for the standard widgets, yes",
        "19bce048094dbf467be59fb0d5e69d5f (16:02): Hmm, internal class member?",
        "89374fc184ec3d548904c336adab9252 (16:02): you can make your own with whatever arguments you want",
        "89374fc184ec3d548904c336adab9252 (16:02): but a slot should not do anything other than what it's sender can do",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:02): patrickkidd: erc? url?",
        "89374fc184ec3d548904c336adab9252 (16:02): it's good design",
        "89374fc184ec3d548904c336adab9252 (16:02): chakie: google erc, emacs",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:02): ack",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:03): ah",
        "89374fc184ec3d548904c336adab9252 (16:03): Zesty: so you should not send the value from the button, because the button has nothing to do with your value, only the parent widget with the slot does",
        "19bce048094dbf467be59fb0d5e69d5f (16:03): Hmm, seems a bit overkill to have to create a widget for a 9 button arrangement.",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:03): thought it was something related to a code browser",
        "d166c00706088a1723ca6ed2590378eb (16:03): I'm using ERC Version 5.1.2 with GNU Emacs 22.0.50.1 (i686-pc-linux-gnu) of 2006-06-05.",
        "89374fc184ec3d548904c336adab9252 (16:03): why?",
        "89374fc184ec3d548904c336adab9252 (16:03): just code it, it's no big deal",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:03): a widget isn't anything big and heavy",
        "89374fc184ec3d548904c336adab9252 (16:04): chakie: erc == irc client for emacs",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:04): patrickkidd: sure, i googled it. and emacs irc client doesn't really interest me",
        "89374fc184ec3d548904c336adab9252 (16:04): kj",
        "89374fc184ec3d548904c336adab9252 (16:04): k",
        "19bce048094dbf467be59fb0d5e69d5f (16:04): Not for competent QT users, no.",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:04): i could use something better than speedbar for browsing stuff",
        "89374fc184ec3d548904c336adab9252 (16:05): chakie: ahh, you don't need that stuff",
        "19bce048094dbf467be59fb0d5e69d5f (16:05): subclassing QWidget, creating a new header, and cpp for such a simple request just feels overkill.",
        "d166c00706088a1723ca6ed2590378eb (16:05): chakie_work: ecb ?",
        "89374fc184ec3d548904c336adab9252 (16:05): just stick to a notepad and pen",
        "89374fc184ec3d548904c336adab9252 (16:05): get a good pen, though",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:05): pgas: i've never really got ecb to do what i want",
        "89374fc184ec3d548904c336adab9252 (16:05): Zesty: ;if it feels overkill, get python",
        "89374fc184ec3d548904c336adab9252 (16:06): google: PyQt",
        "89374fc184ec3d548904c336adab9252 (16:06): takes half the pain away",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:06): pyqt is really, really good",
        "89374fc184ec3d548904c336adab9252 (16:06): but then you'll just get used to writing loads of code anyway",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:06): especially if c++ isn't familiar",
        "89374fc184ec3d548904c336adab9252 (16:06): true that",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:06): and the api is 99.9% similar",
        "19bce048094dbf467be59fb0d5e69d5f (16:06): I'm familiar with python, but I'd rather play with C++",
        "89374fc184ec3d548904c336adab9252 (16:07): then get used to v-e-r-b-o-s-i-t-y",
        "89374fc184ec3d548904c336adab9252 (16:07): but good luck",
        "89374fc184ec3d548904c336adab9252 (16:08): so I'm thinking about how I've got my qabstractitemmodels set up",
        "89374fc184ec3d548904c336adab9252 (16:08): and I'm not so sure I've done it right",
        "89374fc184ec3d548904c336adab9252 (16:08): I've got a heirarchical set of data for this audio app",
        "89374fc184ec3d548904c336adab9252 (16:09): instruments have groups and articulations and regions, but regions belong in groups",
        "89374fc184ec3d548904c336adab9252 (16:09): there are other objects that live in the groups, articulations, and regions",
        "89374fc184ec3d548904c336adab9252 (16:09): there are even multiple instruments",
        "89374fc184ec3d548904c336adab9252 (16:10): at the moment I've got a model for each data type. Each model is updated based on it's parent's selection, so each model really just turns into a view, like in a database",
        "89374fc184ec3d548904c336adab9252 (16:11): but I was wondering if it made sense to use just one big model and organize everything in a tree.",
        "89374fc184ec3d548904c336adab9252 (16:11): ...or even how hard that would be. It would rely on QAbstractItemView::setRootIndex heavily to define the views' scope",
        "89374fc184ec3d548904c336adab9252 (16:11): there would be a lot of model::isRegion(index) model::isGroup(index)",
        "89374fc184ec3d548904c336adab9252 (16:12): maybe",
        "89374fc184ec3d548904c336adab9252 (16:12): any thoughts?",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:15): i don't really have anything to contribute there",
        "e5c246c422bf5aeed2dab4c68c680e2b (16:15): but a tree where you use different roots for different views does in my ears sound like too complicated",
        "89374fc184ec3d548904c336adab9252 (16:16): yeah",
        "89374fc184ec3d548904c336adab9252 (16:17): although, if it was too complicated setRootKey probably wouldn't be there..",
        "89374fc184ec3d548904c336adab9252 (16:17): hard to tell",
        "89374fc184ec3d548904c336adab9252 (16:17): I''l pop a question to support"
    ],
    "person_ids": [
        "021b7bf3ff2076c746a1ed6f90658a06",
        "e5c246c422bf5aeed2dab4c68c680e2b",
        "89374fc184ec3d548904c336adab9252",
        "19bce048094dbf467be59fb0d5e69d5f",
        "d166c00706088a1723ca6ed2590378eb"
    ]
}