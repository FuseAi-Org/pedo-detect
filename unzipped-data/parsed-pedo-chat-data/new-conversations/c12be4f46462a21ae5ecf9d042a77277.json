{
    "id": "c12be4f46462a21ae5ecf9d042a77277",
    "messages": [
        "bf3302d057c10c59c6d4cee9270c6892 (14:18): i.e SELECT SQL_CALC_FOUND_ROWS yourField, yourField2 ... FROM table ... rest of query; SELECT FOUND_ROWS(); in next query",
        "8fb2e6674b6afb6909385e9e4a150523 (14:18): no.. SELECT ... ^",
        "3eb3484168dcc766de96a25d10835e61 (14:18): it's simplified but it explains th jist of the problem",
        "0a555c057694035eeeecd1cd88a0ef66 (14:20): trelayne: I take it that category_id is not nullable?",
        "bf3302d057c10c59c6d4cee9270c6892 (14:20): mm cream of wheat, bacon and toast",
        "2353a428206baa5dab647a2bb42ee109 (14:20): Jax: comma or none?",
        "bf3302d057c10c59c6d4cee9270c6892 (14:21): none",
        "2353a428206baa5dab647a2bb42ee109 (14:21): thx",
        "3eb3484168dcc766de96a25d10835e61 (14:21): roland,  yes",
        "3eb3484168dcc766de96a25d10835e61 (14:21): it will never have a value of null in the _xref table",
        "3eb3484168dcc766de96a25d10835e61 (14:23): I want to be able to use a left join to ensure that all coupons are there, but that returns null for category_id when there is NO record in _xref with that category_id. And if there is, then it should return the 123 (the category_id in the example)",
        "2353a428206baa5dab647a2bb42ee109 (14:24): i have an horrendic mysql query",
        "2353a428206baa5dab647a2bb42ee109 (14:24): it of course doesn't work...",
        "2353a428206baa5dab647a2bb42ee109 (14:24): !pastebin",
        "2353a428206baa5dab647a2bb42ee109 (14:24): ac5c74b64b4b8352ef2f181affb5ac2a pastebin",
        "2353a428206baa5dab647a2bb42ee109 (14:24): !hep",
        "2353a428206baa5dab647a2bb42ee109 (14:24): !help",
        "ac5c74b64b4b8352ef2f181affb5ac2a (14:24): Get help on what?",
        "bf3302d057c10c59c6d4cee9270c6892 (14:24): hashmysql.org/paste",
        "0a555c057694035eeeecd1cd88a0ef66 (14:24): trelayne: ok i understand.",
        "0a555c057694035eeeecd1cd88a0ef66 (14:25): trelayne: use a left join like you do now, dont use a where",
        "0a555c057694035eeeecd1cd88a0ef66 (14:25): trelayne: but change the select to:",
        "2353a428206baa5dab647a2bb42ee109 (14:25): <a href=\"http://hashmysql.org/paste/2473\">http://hashmysql.org/paste/2473</a>",
        "2353a428206baa5dab647a2bb42ee109 (14:25): Jax: mind taking a look at my madness?",
        "bf3302d057c10c59c6d4cee9270c6892 (14:26): what error you getting?",
        "2353a428206baa5dab647a2bb42ee109 (14:26): ERROR 1064 (42000):",
        "3eb3484168dcc766de96a25d10835e61 (14:26): here's an updated version with an example to be sure",
        "2353a428206baa5dab647a2bb42ee109 (14:26): 'MATCH  (dsc.Name, dsc.Keyword, dsc.Description ) AGAINST ('\\\\\\&quot;test\\\\\\&quot;' IN BOOLE' at",
        "3eb3484168dcc766de96a25d10835e61 (14:26): <a href=\"http://hashmysql.org/paste/viewentry.php?id=2472\">http://hashmysql.org/paste/viewentry.php?id=2472</a>",
        "bf3302d057c10c59c6d4cee9270c6892 (14:27): what is that error bashusr ?",
        "0a555c057694035eeeecd1cd88a0ef66 (14:28): trelayne: SELECT cpn.coupon_id,cpn.name,IF(category_id = '123', category_id, NULL) as category_id",
        "0a555c057694035eeeecd1cd88a0ef66 (14:28): trelayne: but that will give you duplicate records, so:",
        "0a555c057694035eeeecd1cd88a0ef66 (14:28): trelayne: SELECT DISTINCT cpn.coupon_id,cpn.name,IF(category_id = '123', category_id, NULL) as category_id",
        "2353a428206baa5dab647a2bb42ee109 (14:29): ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'MATCH (dsc.Name, dsc.Keyword, dsc.Description ) AGAINST ('\\\\\\&quot;test\\\\\\&quot;' IN BOOLE' at line 1",
        "2353a428206baa5dab647a2bb42ee109 (14:29): Jax:",
        "0a555c057694035eeeecd1cd88a0ef66 (14:29): trelayne: are you sure category is a character field btw?",
        "0a555c057694035eeeecd1cd88a0ef66 (14:29): trelayne: i mean, it isnt an integer field?",
        "3eb3484168dcc766de96a25d10835e61 (14:29): actually category in real life is a varchar field",
        "3eb3484168dcc766de96a25d10835e61 (14:30): no",
        "3eb3484168dcc766de96a25d10835e61 (14:30): category)id",
        "3eb3484168dcc766de96a25d10835e61 (14:30): category_id",
        "2353a428206baa5dab647a2bb42ee109 (14:30): i forgot a comma",
        "3eb3484168dcc766de96a25d10835e61 (14:33): wait I think there is still a problem..",
        "3eb3484168dcc766de96a25d10835e61 (14:33): that solution will result in exactly two rows when the category_id is present",
        "3eb3484168dcc766de96a25d10835e61 (14:34): because the left join will have spouted out null for rows where category_id was not 123",
        "3eb3484168dcc766de96a25d10835e61 (14:34): assuming a distinct",
        "3eb3484168dcc766de96a25d10835e61 (14:36): does that make sense?",
        "2353a428206baa5dab647a2bb42ee109 (14:39): sweet..",
        "2353a428206baa5dab647a2bb42ee109 (14:39): it works",
        "efb10b10ae32226dcb0b29d3983438b2 (14:43): if I write to a database on a replication slave, what'll happen?",
        "8fb2e6674b6afb6909385e9e4a150523 (14:44): you will have an extra database on the slave",
        "8fb2e6674b6afb6909385e9e4a150523 (14:44): that is not on the master",
        "efb10b10ae32226dcb0b29d3983438b2 (14:44): what if I write to a database that is a replica of one on the master?",
        "efb10b10ae32226dcb0b29d3983438b2 (14:45): so they're now different",
        "8fb2e6674b6afb6909385e9e4a150523 (14:45): they will be out of synch",
        "efb10b10ae32226dcb0b29d3983438b2 (14:45): okay.",
        "8fb2e6674b6afb6909385e9e4a150523 (14:45): you may get duplicate errors later though",
        "8fb2e6674b6afb6909385e9e4a150523 (14:45): depending on primary keys etc",
        "efb10b10ae32226dcb0b29d3983438b2 (14:45): I ignorantly tried to use replication to live migrate a website and all sorts of crap has happened",
        "8fb2e6674b6afb6909385e9e4a150523 (14:45): well take a backup of everything before you screw it up more eh ;)",
        "efb10b10ae32226dcb0b29d3983438b2 (14:45): mm",
        "efb10b10ae32226dcb0b29d3983438b2 (14:46): unfortunately several hundred people are trying to use the website",
        "efb10b10ae32226dcb0b29d3983438b2 (14:46): I might be retarded.",
        "8fb2e6674b6afb6909385e9e4a150523 (14:46): be even more unfortunate if several hundred can not use it due to loss of or incorrect data too thought right? ;)",
        "efb10b10ae32226dcb0b29d3983438b2 (14:46): yep",
        "3eb3484168dcc766de96a25d10835e61 (14:49): strange, I wouldh ave thought my problem is simple to solve, but it looks like it might be more complex",
        "efb10b10ae32226dcb0b29d3983438b2 (14:49): what's the best (safest) way to backup a live database?",
        "efb10b10ae32226dcb0b29d3983438b2 (14:49): I would normally just use mysqldump, but I don't know if it's appropriate",
        "3eb3484168dcc766de96a25d10835e61 (14:50): put a maintenance message on the website at night, block off access. ANd do you're back up",
        "3eb3484168dcc766de96a25d10835e61 (14:50): honestly, it's the only way to go without corrupting your DB",
        "0014e1c8aa3b4301135690d9b1136172 (14:51): a",
        "efb10b10ae32226dcb0b29d3983438b2 (14:51): I thought so",
        "efb10b10ae32226dcb0b29d3983438b2 (14:51): what about websites that people don't actually seem to ever stop accessing?",
        "efb10b10ae32226dcb0b29d3983438b2 (14:51): I guess they just have to tolerate a little bit of downtime",
        "3eb3484168dcc766de96a25d10835e61 (14:51): ex-parrot now those are hogs",
        "efb10b10ae32226dcb0b29d3983438b2 (14:51): besides, this is an auction site. I won't be popular if I ever have to restore a backup :(",
        "3eb3484168dcc766de96a25d10835e61 (14:52): well then, the backup is a little more complex let's say",
        "efb10b10ae32226dcb0b29d3983438b2 (14:52): really this whole damn thing should be on a cluster",
        "efb10b10ae32226dcb0b29d3983438b2 (14:53): nobody consulted me before launching it, and now it's up to me and another guy to keep it running... :(",
        "3eb3484168dcc766de96a25d10835e61 (14:54): well at least you have another guy :-)",
        "efb10b10ae32226dcb0b29d3983438b2 (14:54): yes - somebody to blame :)",
        "3eb3484168dcc766de96a25d10835e61 (14:54): is is possible to use a group by on a left clause",
        "3eb3484168dcc766de96a25d10835e61 (14:54): I mean a left join",
        "68e4f051885d000571016cc44f7ea081 (14:54): ex-parrot: you can convert all your database tables to innodb, then use --single-transaction with mysqldump for a lockless live backup",
        "68e4f051885d000571016cc44f7ea081 (14:55): ex-parrot: but the beef is in the restore, &quot;nobobdy wants backup. everybody wants restore&quot;.",
        "efb10b10ae32226dcb0b29d3983438b2 (14:55): thanks for the suggestion isotopp",
        "68e4f051885d000571016cc44f7ea081 (14:55): ex-parrot: so you might as well have a slave running that is more or less idle or doing dhw quries that are noncritical,",
        "3eb3484168dcc766de96a25d10835e61 (14:55): speaking of locking, what is the best DB table type to use to update a Datbase table?",
        "68e4f051885d000571016cc44f7ea081 (14:55): ex-parrot: and if the master fails, you switch the clients over to the slave.",
        "3eb3484168dcc766de96a25d10835e61 (14:56): I mean an inventory database table",
        "68e4f051885d000571016cc44f7ea081 (14:56): ex-parrot: (you should be de-slaving (liberating) the slave before that)",
        "efb10b10ae32226dcb0b29d3983438b2 (14:56): Isotopp, that's how I got in to my current mess, was switching the clients to the slave without turning it off as a slave",
        "efb10b10ae32226dcb0b29d3983438b2 (14:56): I realised altogether too late what I had done",
        "68e4f051885d000571016cc44f7ea081 (14:56): trelayne: if you have oltp type of work, use innodb. if you have dwh type of work use myisam.",
        "efb10b10ae32226dcb0b29d3983438b2 (14:56): and now something we can't find is corrupt",
        "3eb3484168dcc766de96a25d10835e61 (14:56): oltp?",
        "3eb3484168dcc766de96a25d10835e61 (14:57): overlapping type processes?",
        "68e4f051885d000571016cc44f7ea081 (14:57): ex-parrot: yes, switchover has to be done cleanly. if you dislike replication in mysql another way to do it is to use drbd.",
        "68e4f051885d000571016cc44f7ea081 (14:57): trelayne: online transaction processing",
        "3eb3484168dcc766de96a25d10835e61 (14:57): heh.. sorry",
        "3eb3484168dcc766de96a25d10835e61 (14:57): yep that's what we're doing",
        "68e4f051885d000571016cc44f7ea081 (14:57): ex-parrot: drbd is a &quot;raid-1 over the network&quot; type of disk driver",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: so you have a regular mysql on the active machine,",
        "3eb3484168dcc766de96a25d10835e61 (14:58): after a transcation, we need to update the inventory.. but we want to avoid a negative value in case another client is doing the same",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: and disk writes are copied to a second passive machine.",
        "efb10b10ae32226dcb0b29d3983438b2 (14:58): yeah",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: <a href=\"http://en.wikipedia.org/wiki/DRBD\">http://en.wikipedia.org/wiki/DRBD</a>",
        "efb10b10ae32226dcb0b29d3983438b2 (14:58): Isotopp, I've seen it",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: has a nice drawing",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: then automate the switchover using another piece of software such as heartbeat",
        "68e4f051885d000571016cc44f7ea081 (14:58): ex-parrot: it is all nicely integrated",
        "efb10b10ae32226dcb0b29d3983438b2 (14:58): I think I'll set up an ndb cluster eventually, because we want redundant webservers too",
        "efb10b10ae32226dcb0b29d3983438b2 (14:58): yeah",
        "3eb3484168dcc766de96a25d10835e61 (14:59): if anyone has a link to a tutorial with examples on innodb and otlp, I would appreciate it",
        "68e4f051885d000571016cc44f7ea081 (14:59): ex-parrot: cluster is most likely not working the way you think it works.",
        "efb10b10ae32226dcb0b29d3983438b2 (14:59): I'm running one right now, it seems to do what I expect it to do.",
        "68e4f051885d000571016cc44f7ea081 (15:00): ex-parrot: you are fine then. most people find the performance aspects of shared-nothing clusters a bit confusing",
        "efb10b10ae32226dcb0b29d3983438b2 (15:01): how so, Isotopp ?",
        "3eb3484168dcc766de96a25d10835e61 (15:02): slashdot runs on innodb",
        "68e4f051885d000571016cc44f7ea081 (15:04): ex-parrot: optimizer in mysql is built to minimize disk seeks. cluster is an in memory database, there is no seek time to avoid. optimizer knows nothing about table fragments in cluster and network latency,",
        "68e4f051885d000571016cc44f7ea081 (15:04): ex-parrot: but cluster is very sensitive to network latency.",
        "68e4f051885d000571016cc44f7ea081 (15:04): ex-parrot: so the optimizer often makes questionable choices with regard to cluster.",
        "3eb3484168dcc766de96a25d10835e61 (15:04): <a href=\"http://dev.mysql.com/books/mysqlpress/mysql-tutorial/ch10.html\">http://dev.mysql.com/books/mysqlpress/mysql-tutorial/ch10.html</a>",
        "efb10b10ae32226dcb0b29d3983438b2 (15:04): ahh, interesting Isotopp",
        "efb10b10ae32226dcb0b29d3983438b2 (15:05): I'll have to research it further. my cluster at the moment handles management and DNS so isn't performance sensitive.",
        "48cbffb0018e689e433a5e764efd23fa (15:07): <a href=\"http://pastebin.ca/155760\">http://pastebin.ca/155760</a>  Whyyy?",
        "48cbffb0018e689e433a5e764efd23fa (15:07): It's the position_id key in `staff` that's causing me trouble.. If I remove it it creates just fine",
        "48cbffb0018e689e433a5e764efd23fa (15:10): It's probably something really obvious I'm missing",
        "b15590470eb5da4bb5fd9c758c570eed (15:10): hi",
        "b15590470eb5da4bb5fd9c758c570eed (15:11): can I change the restrictions about foreign keys?",
        "b15590470eb5da4bb5fd9c758c570eed (15:12): so, I would be able to set a field as 0, without having an effective foreign key as 0 in the other table",
        "341533da270e2ad8e634262a8a959f63 (15:17): /dev/null&quot;)"
    ],
    "person_ids": [
        "bf3302d057c10c59c6d4cee9270c6892",
        "8fb2e6674b6afb6909385e9e4a150523",
        "3eb3484168dcc766de96a25d10835e61",
        "0a555c057694035eeeecd1cd88a0ef66",
        "2353a428206baa5dab647a2bb42ee109",
        "ac5c74b64b4b8352ef2f181affb5ac2a",
        "efb10b10ae32226dcb0b29d3983438b2",
        "0014e1c8aa3b4301135690d9b1136172",
        "68e4f051885d000571016cc44f7ea081",
        "48cbffb0018e689e433a5e764efd23fa",
        "b15590470eb5da4bb5fd9c758c570eed",
        "341533da270e2ad8e634262a8a959f63"
    ]
}