{
    "id": "f879170dfb95f7d5af23237b4be16269",
    "messages": [
        "9c78062ba26c2a356add43b100064f8a (20:50): does anyone know of an html5 parser in c++?",
        "57d876083caf517f49e8cf5e03307450 (20:50): gecko's HTML parser?",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:50): 9c78062ba26c2a356add43b100064f8a, Mozilla uses one.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:50): Grr, Chrome just lost all my open tabs on upgrade and restart.  &gt;:(",
        "57d876083caf517f49e8cf5e03307450 (20:51): (well, technicaly it's written in Java, converted to C++ automatically, and then hand-tweaked for better performance)",
        "57d876083caf517f49e8cf5e03307450 (20:51): but I digress",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:51): And I see no way to get them back.  Oh well.",
        "9c78062ba26c2a356add43b100064f8a (20:52): 88d4d34a8064a4ff39fd5e144eea7762: curious about dependencies",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:52): 9c78062ba26c2a356add43b100064f8a, no idea, sorry.",
        "9c78062ba26c2a356add43b100064f8a (20:52): 88d4d34a8064a4ff39fd5e144eea7762: =)",
        "9c78062ba26c2a356add43b100064f8a (20:53): 57d876083caf517f49e8cf5e03307450: from what i understand, there are deps on jsc",
        "9c78062ba26c2a356add43b100064f8a (20:54): 57d876083caf517f49e8cf5e03307450: sorry, i read gecko and thought webcore ;)",
        "8b3687499080633e1898fa1dd209ef81 (20:57): 9c78062ba26c2a356add43b100064f8a, b8810fee2f4a71f849f3f7409546d1d9 has at least thought about releasing a C++ HTML parser, IIRC",
        "9c78062ba26c2a356add43b100064f8a (20:57): 8b3687499080633e1898fa1dd209ef81: i just found this in a google search... http://www.netsurf-browser.org/projects/hubbub/",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:58): indeed, it's planned and ok'ed by Mozilla. I just need to take a break from Gecko work to do it.",
        "9c78062ba26c2a356add43b100064f8a (20:59): does anyone have any opinion on this? (http://www.netsurf-browser.org/projects/hubbub/)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:00): 57d876083caf517f49e8cf5e03307450: it's not really &quot;hand-tweaked for better performance&quot; after the translation, FWIW",
        "57d876083caf517f49e8cf5e03307450 (21:00): b8810fee2f4a71f849f3f7409546d1d9: I thought there were a few patches applied only to the C++ end",
        "57d876083caf517f49e8cf5e03307450 (21:00): I could be recalling wrong",
        "57d876083caf517f49e8cf5e03307450 (21:01): gecko is not my main cup of tea",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:01): 57d876083caf517f49e8cf5e03307450: there are some minor differences between Java and C++ but they are baked into the translator, so there's no patching of the translator output",
        "57d876083caf517f49e8cf5e03307450 (21:01): ah",
        "57d876083caf517f49e8cf5e03307450 (21:02): same basic idea",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:02): the main differences are:",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:02): 1) the named character data layout is generated separately so that tables aren't translated from the Java tables",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:03): 2) in the near future, the C++ version will have two copies of the tokenizer loop: one with error reporting and one without",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:03): (the goto stuff turned out to be slower than the switchiness, so I threw it away)",
        "57d876083caf517f49e8cf5e03307450 (21:04): I'm not surprised",
        "57d876083caf517f49e8cf5e03307450 (21:05): switch statements are probably more aggressively optimized than gotos",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:05): I suppose so",
        "57d876083caf517f49e8cf5e03307450 (21:05): on the basis that people actually use switch statements",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:05): :-)",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:23): 65325d50b2e25aca54bc871b89758c9c: Doesn't the fact that Ian's diff is different from Rich's qualify as an objection from Ian?",
        "65325d50b2e25aca54bc871b89758c9c (21:23): 1f8387eb43f131d7c309a90a4e36b5cb: I prefer not to make assumptions",
        "4bffc1c8184390779b64ab7be56e9b71 (21:24): Just had an interesting idea.",
        "65325d50b2e25aca54bc871b89758c9c (21:24): of anyone (Ian, you, or anyone else) thinks Rich's diff is inconsistent with the decision or contains changes not actually required by the decision, they can say so",
        "4bffc1c8184390779b64ab7be56e9b71 (21:24): It's debatably redundant, due to TLS, but here it goes.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:25): 1f8387eb43f131d7c309a90a4e36b5cb, logically it shouldn't imply that.  Maybe he thinks that there are multiple legitimate ways to read the decision.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:25): An option for &lt;input&gt; for password fields, where a hash type can be specified in the tag so that the browser hashes the password before sending it to the webserver.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:26): 4bffc1c8184390779b64ab7be56e9b71: If the attacker can snoop, they can probably MITM you as well and just alter the page in-flight to the user to not have the hash, and then alter the response back to the server to have the hashed data.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:26): 4bffc1c8184390779b64ab7be56e9b71, can be done pretty easily in JavaScript.  Is it really widely enough done that there's a need for a declarative feature?",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:27): 1f8387eb43f131d7c309a90a4e36b5cb, it works against passive MITMs, which is a valid use-case.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:27): Passive MITM is often less risky or easier than active MITM.",
        "9c78062ba26c2a356add43b100064f8a (21:27): is anyone familiar with libDOM?",
        "4bffc1c8184390779b64ab7be56e9b71 (21:27): 1f8387eb43f131d7c309a90a4e36b5cb: Assume the network is secure against active MITM.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:27): Which established networks are.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:28): You know, and other unlikely stuff.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:28): 4bffc1c8184390779b64ab7be56e9b71, usually if you can do passive MITM, you can do active too.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:28): If you can read the packets, you're presumably intercepting them somehow and can change them.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:28): Maybe not in some Wi-Fi scenarios, not sure about that.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:29): Mmm, that's true.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:29): In many open wifi scenarious, you can alternately just broadcast yourself as a hotspot and act as a MITM proxy.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:29): Right, but you're always much more likely to be detected if you tamper with anything, so passive-only MITM is still a valid use-case.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:29): I just don't think it's important enough to justify a declarative feature for something that's trivial to do from script.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:29): Hmm.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:29): vBulletin does this from script, for example.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Okay, assume this isn't intended to combat MITM.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): What about...",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:30): Special markup is only a good idea if it would be very widely useful.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Assume HTTPS, but it's to protect against",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Wait, nevermind.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): That's also stupid.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): :D",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Oh well.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:30): Sounds like you're starting with a feature and then trying to think of uses.  That's not a good way to go about things.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Just a thought.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:30): Start with &quot;I want to do X but the existing ways all have problems&quot;.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:30): A concrete use-case.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:30): Yeah, fair comment.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:31): People are not usually interesting in writing specifications and code for features that aren't demonstrably useful in real life.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:31): It's very rare I actually come up with an idea, so I'm not used to the critical thinking that comes with it :P",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:31): No problem.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:31): I've thought of the same feature, I think.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:32): Kind of why I came here, I expected exactly what I got.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:32): Criticism that would tell me why it's a stupid idea :P",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:32): Happy to oblige.  :)",
        "4bffc1c8184390779b64ab7be56e9b71 (21:34): Got a little bit excited about contributing to HTML specification for a brief moment.",
        "4bffc1c8184390779b64ab7be56e9b71 (21:34): I'll return with yet another brilliant yet flawed concept soon, no doubt.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:37): Looking forward to it!"
    ],
    "person_ids": [
        "9c78062ba26c2a356add43b100064f8a",
        "57d876083caf517f49e8cf5e03307450",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "8b3687499080633e1898fa1dd209ef81",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "65325d50b2e25aca54bc871b89758c9c",
        "4bffc1c8184390779b64ab7be56e9b71"
    ]
}