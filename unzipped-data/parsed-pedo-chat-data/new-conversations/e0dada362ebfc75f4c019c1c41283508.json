{
    "id": "e0dada362ebfc75f4c019c1c41283508",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (01:30): so",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:30): if i have an opportunistic caching namespace of &quot;http://example.com/data/&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): then if i go to &quot;http://example.com/data/a&quot; it'll get cached",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): but what if i go to &quot;http://example.com/data/&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): should that match it too?",
        "a924fb58d2c25874322f4e5126f608b9 (01:31): I would say yes, since it's likely to be http://example.com/data/index.html or similar in the background",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): k",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:35): validator.nu now supports &amp;out=json&amp;callback=foo to get a JS callback instead of pure JSON",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:36): with IdentifierName and reserved word checks",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:46): wonders why Gecko and WebKit accept gzip, deflate but Opera acceps deflate, gzip",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:46): isn't gzip just deflate plus magic &amp; CRC?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:51): slowly gets rid of red boxes in his work-in-progress offline section",
        "6905646aa63b96d6bdfbd256603fa58e (01:53): 69b0d3dfe919a6b860a9fac82de52a7e: out of curiosity, what do you use that has red boxen?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:56): i mean the red boxes in the spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:56): http://www.whatwg.org/specs/web-apps/current-work/#offline",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:56): (not checked in yet)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:57): nice! the silly pipes thing i have that takes a word from my blog entries and then gets a flickr picture for that word to render next to my blog picked a picture of zibibbo's!",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:58): rfc 2616 is being friendly by defining the whole q value thing for content-encodings instead of just listing the order of preference...",
        "6905646aa63b96d6bdfbd256603fa58e (02:00): 69b0d3dfe919a6b860a9fac82de52a7e: ah",
        "a924fb58d2c25874322f4e5126f608b9 (02:00): b8810fee2f4a71f849f3f7409546d1d9: Yeah, it's really intuitive and never confused anyone",
        "b8810fee2f4a71f849f3f7409546d1d9 (02:05): opera makes use of the q facility: Accept-Encoding: deflate, gzip, x-gzip, identity, *;q=0",
        "f4dfad803df83144a5be86d9bca87678 (02:10): 69b0d3dfe919a6b860a9fac82de52a7e: awesome blog post. I am getting my head around tipping here too",
        "ab7faae5d7b250ea8606486575f8f79c (02:21): About canvas exceptions: there are quite a lot of simple cases where browsers differ, like getContext('unrecognised') and toDataURL('image/jpeg') and toDataURL('image/png', 1) and restore() and lots of Infinity/NaN and globalCompositeOperation='unknown' and loads more",
        "ab7faae5d7b250ea8606486575f8f79c (02:22): but I don't know which ones are worth trying to fix now (like for FF3 / Opera 9.5)",
        "ab7faae5d7b250ea8606486575f8f79c (02:27): (Also, I don't really like how the spec handles infinities in the transform functions - it seems weird and confusing, since it'll just silently stop rendering, and I expect it'd be more helpful to have exceptions in those cases)",
        "ab7faae5d7b250ea8606486575f8f79c (02:29): (Hmm, it looks like Opera 9.5 does throw exceptions in those cases (contrary to the spec), whereas Opera 9.2 didn't)",
        "ab7faae5d7b250ea8606486575f8f79c (02:29): ((All Firefoxes throw, and Safari 3 doesn't))",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:39): ab7faae5d7b250ea8606486575f8f79c: iirc the idea was to make it easier to plot graphs with asymptotes without having to be too careful about boundary conditions",
        "ab7faae5d7b250ea8606486575f8f79c (02:45): 69b0d3dfe919a6b860a9fac82de52a7e: If you're plotting graphs, you'd want lineTo to handle infinities without throwing - transformations aren't relevant for that",
        "bc75c2548b71aed454f81ac6897bd078 (02:45): hrm. I see opensearch mentioned in the discussion of link elements... I don't suppose the js API exposed by some browsers will make it into the spec as well?",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:47): ab7faae5d7b250ea8606486575f8f79c: i forget the exact use case. but it was something to do with an edge case and making it easier to handle.",
        "ab7faae5d7b250ea8606486575f8f79c (02:47): The comment in the spec blames me for wanting scale(x);translate(1/x);drawStuff() to work (drawing nothing) when x=0, but I'm not convinced now that that's sufficiently useful or common",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:48): ah heh",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:48): well, send more mail",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:48): not sure when i'll get to canvas next though",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:48): it's gotten more attention than most parts of the spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:49): incidentally I don't suppose anyone has written a perl html5 parser yet",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:49): wants to write one himself but doesn't want to embark on that quite yet",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:49): yet i need one now :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:49): oh well, regexps it is.",
        "ab7faae5d7b250ea8606486575f8f79c (02:50): I'll see if I can think of any compelling arguments about infinite transformations, though I'm not sure if I'll come up with anything useful :-)",
        "ab7faae5d7b250ea8606486575f8f79c (02:50): I have a Perl HTML5 tokeniser",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:50): i need a dom really",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:50): but interesting",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:50): is it online anywhere?",
        "ab7faae5d7b250ea8606486575f8f79c (02:51): http://canvex.lazyilluminati.com/svn/tokeniser/ will generate the Perl code",
        "ab7faae5d7b250ea8606486575f8f79c (02:51): looks for a pregenerated version",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:52): nice",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:52): http://canvex.lazyilluminati.com/svn/tokeniser/tokeniser.pl presumably",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:53): ah no that's the wrapper",
        "ab7faae5d7b250ea8606486575f8f79c (02:53): That has everything except the tokeniser algorithm :-)",
        "ab7faae5d7b250ea8606486575f8f79c (02:54): http://canvex.lazyilluminati.com/misc/tokeniser/ though I haven't tested it recently and it was never particularly well developed in the first place",
        "ab7faae5d7b250ea8606486575f8f79c (02:54): (It can run all the tokeniser tests successfully, though)",
        "ab7faae5d7b250ea8606486575f8f79c (02:55): (...except for some Unicode issues, I think)",
        "ab7faae5d7b250ea8606486575f8f79c (02:55): Oh, it's even got hardcoded file paths in it",
        "ab7faae5d7b250ea8606486575f8f79c (02:58): still wants to write the rest of the HTML5 parser, and then it should work in C++/JS/Perl at the same time",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:58): good luck",
        "ab7faae5d7b250ea8606486575f8f79c (02:59): still wants to do too many other things and doesn't know when he'll have the time :-(",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:00): i know the feeling",
        "ab7faae5d7b250ea8606486575f8f79c (03:01): $ echo '&lt;test ===&gt;foo' | perl tokeniser.pl",
        "ab7faae5d7b250ea8606486575f8f79c (03:01): [[&quot;StartTag&quot;,&quot;test&quot;,{&quot;=&quot;:&quot;=&quot;}],[&quot;Character&quot;,&quot;foo\\n&quot;]]",
        "ab7faae5d7b250ea8606486575f8f79c (03:01): Hooray, it still works (after I remembered how to install the JSON module)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:21): oh hey, look at that, my cronjobs aren't running any more so the issues list isn't updating",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:22): contacts dreamhost",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:36): hmm",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:36): we don't really have a way to _disable_ the app cache once you have one",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:00): if i go to page A and it has an application=&quot;&quot; with a manifest M1 that brings in page B",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:00): and i later go to page B",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:00): we have decided that it should load B from appcache M1",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:00): ok so i go to M1 and load B but I find that that copy of B says application=&quot;&quot; M2, not M1",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:00): so what do i do?",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:02): i can't just load it from M1 anyway, because then it'll fail and there's no way out other than fixing M1.",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:02): so i have to give up and load it from the network (assuming i haven't got M2 loaded yet)",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:02): but then i might find that it actually says application=&quot;&quot; with a manifest M1",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:03): (i'm assuming that this whole time the manifests themselves aren't changing, so we're not updating anything)",
        "69b0d3dfe919a6b860a9fac82de52a7e (04:15): ...but i guess getting it back as M1 would be ok... i would just overwrite that particular entry in the cache."
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "6905646aa63b96d6bdfbd256603fa58e",
        "f4dfad803df83144a5be86d9bca87678",
        "ab7faae5d7b250ea8606486575f8f79c",
        "bc75c2548b71aed454f81ac6897bd078"
    ]
}