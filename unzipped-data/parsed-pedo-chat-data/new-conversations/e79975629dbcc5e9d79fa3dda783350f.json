{
    "id": "e79975629dbcc5e9d79fa3dda783350f",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (17:48): sweet",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:48): people are actually going to fix the cookie issue",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:48): https://www.ietf.org/mailman/listinfo/http-state",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:48): awesomeness",
        "3b14b636129945831fcfcc7294686653 (17:49): what mime type should I use to serve javascript?",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:50): doesn't matter",
        "3b14b636129945831fcfcc7294686653 (17:50): well, if I have to pick something...",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:50): you could not include a mime type",
        "3b14b636129945831fcfcc7294686653 (17:50): haha",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:50): IETF prefers applicatoin/ecmascript or application/javascript; HTML5 prefers text/javascript",
        "3b14b636129945831fcfcc7294686653 (17:51): text/javascript it is :)",
        "cc097e0d7183ae8436e7df709553c8c0 (17:51): apache defaults to application/x-javascript i think",
        "3b14b636129945831fcfcc7294686653 (17:51): cc097e0d7183ae8436e7df709553c8c0: actually, application/javascript",
        "3b14b636129945831fcfcc7294686653 (17:51): at least on my mac",
        "cc097e0d7183ae8436e7df709553c8c0 (17:51): oh they changed",
        "3b14b636129945831fcfcc7294686653 (17:52): cc097e0d7183ae8436e7df709553c8c0: they also have an entry for &quot;text/javascript&quot; with no extension",
        "3b14b636129945831fcfcc7294686653 (17:52): http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types",
        "cc097e0d7183ae8436e7df709553c8c0 (17:52): is that the latest mime.types for apache?",
        "3b14b636129945831fcfcc7294686653 (17:52): cc097e0d7183ae8436e7df709553c8c0: for some reason the python mimetypes module overrides javascript to do application/x-javascript",
        "3b14b636129945831fcfcc7294686653 (17:52): cc097e0d7183ae8436e7df709553c8c0: I assume it's the latest",
        "3b14b636129945831fcfcc7294686653 (17:52): it's in their svn",
        "cc097e0d7183ae8436e7df709553c8c0 (17:54): updates http://wiki.whatwg.org/wiki/Video_type_parameters",
        "73cf54d5a46ca56882c4ee523cf6b057 (17:56): edb259c0e0038f38bb200bc20c8cbf7e: they're finally getting rid of cookies?",
        "73cf54d5a46ca56882c4ee523cf6b057 (17:57): cool!",
        "73cf54d5a46ca56882c4ee523cf6b057 (17:57): =)",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:00): a working group developing new ways to abuse HTTP",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:01): love it",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:01): isn't HTTP just the wrong protocol if you need stateful client/server interaction?",
        "ab7faae5d7b250ea8606486575f8f79c (18:02): 73cf54d5a46ca56882c4ee523cf6b057: I thought you were in favour of adding features to the language just because somebody thinks they're useful and the language designers shouldn't get in their way, so you ought to be happy that they're working on cookies which lots of people find useful",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:02): no I'm in favour of adding features which provide mechanisms to leverage components of the underlying architecture of the web",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:03): no augment bullshit ontop of it like cookies",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:03): which exist because people try to do stupid things with HTTP",
        "ab7faae5d7b250ea8606486575f8f79c (18:03): They exist because people try to solve practical problems using HTTP",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:04): stateful interaction is mostly bad design",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:05): particularly on HTTP",
        "ab7faae5d7b250ea8606486575f8f79c (18:05): Or HTTP is badly designed for stateful interaction :-)",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:06): stateful interaction is a horrific way to build an anarchic scalable distributed system the size of the web",
        "ab7faae5d7b250ea8606486575f8f79c (18:10): Most people aren't building the web, they're just building a single centralised web site with no need for scalability and it works fine for them",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:12): I'm talking about the why HTTP was designed the way it was",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:12): and why it was successful",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:12): that platform is 'the web'",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:13): I don't really see the problem with people creating systems that operate the same way the web does",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:14): not really hard to see why that might be a good idea in the long run as your domain evolves",
        "73cf54d5a46ca56882c4ee523cf6b057 (18:14): the solution isn't cookies it's education and tooling",
        "709698dbdf971a9099a819777b5c9333 (18:15): I think reusing the legend element, given the issues, is a contradiction of the goal of backwards compatability.",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:20): 709698dbdf971a9099a819777b5c9333, but that's not the only goal we have",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:20): 709698dbdf971a9099a819777b5c9333, so it's not a simple as that ;)",
        "3b14b636129945831fcfcc7294686653 (18:20): huh. apache's list has the 'wav' extension twice, for audio/wav and audio/x-wav",
        "3b14b636129945831fcfcc7294686653 (18:21): I wonder how they decide precedence.  That's probably a bug",
        "3b14b636129945831fcfcc7294686653 (18:21): /typo",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:23): 3b14b636129945831fcfcc7294686653: judging by past experiences, if you file a bug now, they might get around to fixing it 5 years from now",
        "3b14b636129945831fcfcc7294686653 (18:23): heh",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:24): and you will get a lot of entertaining comments posted to the bug during that time, from a wide variety of genuine jackasses",
        "a9b326df4e6da61c5b6f5e1058be83a2 (18:24): great entertainment value",
        "3b14b636129945831fcfcc7294686653 (18:26): python's mimetypes module overrides rdf and wsdl to be application/xml instead of application/rdf+xml &amp; application/wsdl+xml",
        "3b14b636129945831fcfcc7294686653 (18:26): is there a good reason to send application/xml instead of the others?",
        "709698dbdf971a9099a819777b5c9333 (18:27): edb259c0e0038f38bb200bc20c8cbf7e: I think legend would be an excellent element to use with figure and details, except every major browser has issues with it, and not because they did anything wrong. HTML 4 defines legend, as a form element, to be a replaced element. Undoing that is a radical change in definition.",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:34): I don't think HTML4 defined it as such",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:34): 709698dbdf971a9099a819777b5c9333: I agree. I tried to some DOM Scripting with &lt;details&gt; and it proved to be impossible because of the way that browsers interpret the presence of the &lt;legend&gt; element (Safari throws it away, Firefox generates a &lt;fieldset&gt;).",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:34): The problem is ...what's the alternative?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:35): (in theory it should be treated as an unknown element outside of &lt;fieldset&gt;)",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:35): to elaborate a little bit, one of the other goals we have is keeping the language simple",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:35): and as browsers fix their bugs &lt;legend&gt; will become useful",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:36): it might take a little longer, but not having to introduce a new element seems worth it",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:36): edb259c0e0038f38bb200bc20c8cbf7e: I agree and I think that Safari and Firefox will probably fix this pretty quickly but IE (again) is going to really slow things down.",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:37): I've read through the arguments for and against &lt;legend&gt;: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2008-February/014038.html",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:37): And I agree, in principle, that it's far more preferable to &quot;recycle&quot; an existing element than to create a new one.",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:38): But I'd really like to be able to use the new HTML5 elements and as long as some of them use &lt;legend&gt;, they're effectively out of bounds. :-(",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:40): Remy has a more detailed breakdown of the issues: http://html5doctor.com/legend-not-such-a-legend-anymore/",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:40): yeah, it's dilemma",
        "799e13a4897a53a85b6e7bc560c5dcde (18:40): can a Worker be used to run canvas operations?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:40): I guess so far we decided not to cater to the early adopter crowd :)",
        "b07211a0c7cb119232799d2119cea90f (18:40): 799e13a4897a53a85b6e7bc560c5dcde: sure",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:41): 799e13a4897a53a85b6e7bc560c5dcde, it can only process ImageData objects",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:41): b07211a0c7cb119232799d2119cea90f, not really, there's no DOM in a Worker",
        "799e13a4897a53a85b6e7bc560c5dcde (18:42): edb259c0e0038f38bb200bc20c8cbf7e: but that is okay i think... for me... if i get the image data pass to a worker and mainipulate the data postMessage back to the main thread and putImageData...",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:42): edb259c0e0038f38bb200bc20c8cbf7e: Yeah, and that's fair enough. It's just a shame that so much doesn't need catering to (e.g. &lt;section&gt;, &lt;article&gt;, &lt;header&gt;); we can just go ahead and use them without waiting for browsers. On the face of it, &lt;details&gt; and &lt;figure&gt; should fall into the same category ...but that damned &lt;legend&gt; throws a spanner in the works.",
        "b07211a0c7cb119232799d2119cea90f (18:42): edb259c0e0038f38bb200bc20c8cbf7e: I meant you can do ImageData stuff, but you were more precise. :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:43): &lt;div class=&quot;legend&quot;&gt; :/",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:54): edb259c0e0038f38bb200bc20c8cbf7e: yeah, that's what I'm doing for now with the new structural elements anyway (using class names rather than elements, as an interim step) so I can do that for anything requiring a &lt;legend&gt; too.",
        "709698dbdf971a9099a819777b5c9333 (18:55): Has anyone looked to see if similar issues arise with the caption element?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:56): yes, it does not work because of &lt;table&gt; parsing",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4 (18:56): 709698dbdf971a9099a819777b5c9333: I believe &lt;caption&gt; has its own issues because it is expected inside a table.",
        "709698dbdf971a9099a819777b5c9333 (19:11): How about &lt;label&gt;?",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:12): maybe you should read the email abeb4c0ac6ffb27ee5fbbc20aca0b2f4 pointed to",
        "709698dbdf971a9099a819777b5c9333 (19:13): good point"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "3b14b636129945831fcfcc7294686653",
        "cc097e0d7183ae8436e7df709553c8c0",
        "73cf54d5a46ca56882c4ee523cf6b057",
        "ab7faae5d7b250ea8606486575f8f79c",
        "709698dbdf971a9099a819777b5c9333",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "abeb4c0ac6ffb27ee5fbbc20aca0b2f4",
        "799e13a4897a53a85b6e7bc560c5dcde",
        "b07211a0c7cb119232799d2119cea90f"
    ]
}