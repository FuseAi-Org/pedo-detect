{
    "id": "7ee646bb1edc7c786007f1625081091d",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (20:49): http://blog.ioactive.com/2012/02/ssl-traffic-analysis-on-google-maps.html is pretty interesting",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:49): would SPDY make that more complicated because it all becomes a single stream?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): edb259c0e0038f38bb200bc20c8cbf7e: only if you were actually using more than just google maps at a time, as far as i can tell",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): edb259c0e0038f38bb200bc20c8cbf7e: if i understand correctly, the only real solution is to pad all requests and responses and make them on a strict schedule",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): edb259c0e0038f38bb200bc20c8cbf7e: hard core encrypted channels just send continual noise at the max bandwidth and when they want to send data they replace the noise with the data",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): edb259c0e0038f38bb200bc20c8cbf7e: assuming a good encryption algorithm, my understanding is that you then can't tell what's being sent",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): edb259c0e0038f38bb200bc20c8cbf7e: of course you can still tell a lot e.g. that there is a connection, so that both sides exist, which is an issue e.g. in war situations",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): 8b7a8196348038c107614af0b08f2d21 would know more",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:14): sounds pretty fascinating",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:21): I wonder when w3.org will go TLS-only",
        "8b7a8196348038c107614af0b08f2d21 (21:31): traffic analysis is really hard to defeat",
        "8b7a8196348038c107614af0b08f2d21 (21:31): at least without cover traffic",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:31): isn't it essentially impossible without cover traffic?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:44): Microsoft research paper writes &quot;XmlHttpRequest&quot; o_O",
        "8b7a8196348038c107614af0b08f2d21 (21:45): 69b0d3dfe919a6b860a9fac82de52a7e: i try not to say &quot;impossible&quot; :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:45): fair enough",
        "8b7a8196348038c107614af0b08f2d21 (21:45): i think Tor tries to defeat traffic analysis without cover traffic",
        "8b7a8196348038c107614af0b08f2d21 (21:45): but it's unclear how successful they are",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:46): don't they use other people's traffic as cover traffic?",
        "8b7a8196348038c107614af0b08f2d21 (21:46): aren't you the one who says &quot;the impossible just takes longer?&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:46): i mean it's not as good as a continuous stream, but...",
        "8b7a8196348038c107614af0b08f2d21 (21:46): 69b0d3dfe919a6b860a9fac82de52a7e: yes, they mix traffic from multiple sources, but they have problems because that traffic can be removed statistically",
        "8b7a8196348038c107614af0b08f2d21 (21:46): its more like noise",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:47): wow, interesting",
        "8b7a8196348038c107614af0b08f2d21 (21:47): so, then you get into shaping the traffic by adding queues and delays",
        "8b7a8196348038c107614af0b08f2d21 (21:47): etc",
        "8b7a8196348038c107614af0b08f2d21 (21:47): there's a whole literature about it",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:47): i'm sure",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:49): is it even possible to design a system that does not have these flaws?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:49): can you measure anything other than amount of data?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:51): timing",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:51): oh, how fast the connection is? how often requests are made, etc?",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:52): for example, if a site sends a ping every 2s in one mode and a ping every 2.5s in another mode, even if they're the same size, you can tell which mode the app is in",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:52): just by looking at when the packets are sent",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:52): I guess that can tell you quite a bit",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:52): the general topic here is called &quot;side channel attacks&quot;.",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:52): q.v. http://en.wikipedia.org/wiki/Side_channel_attack",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:53): power consumption is another one that that page mentions",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:53): that is, size plus timing seem like vectors that will turn out to be pretty unique",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:53): e.g. you can tell what's going on based on how much power you are pulling -- if it's just idling, it'll use less power than if it's doing heavy computation",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:54): also in the case of TLS communication on the web there's things like DNS requests, the IP address of the communication's destination, etc",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:55): e.g. you can tell if someone is logging in on big sites because they get redirected through a separate login service",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): even if the data is mixed in with noise like i was suggesting earlier, you can also learn things by watching what happens if you flip random bits in the stream",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): since the receiving end might just discard the noise rather than verify that it wasn't tampered with",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:56): (encryption typically avoids this, q.v. integrity)",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:57): encryption systems, i should say",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:57): encryption itself doesn't"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "8b7a8196348038c107614af0b08f2d21"
    ]
}