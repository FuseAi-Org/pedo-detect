{
    "id": "3b728786cd48f09c79cadbc5f36aef7c",
    "messages": [
        "4d647473081c3ad729446a01a377813b (16:31): &quot;The net result of the 3.0 generalizations is that Python 3.0 runs the pystone benchmark around 10% slower than Python 2.5. Most likely the biggest cause is the removal of special-casing for small integers. There\u201a\u00c4\u00f4s room for improvement, but it will happen after 3.0 is released!&quot;",
        "4d647473081c3ad729446a01a377813b (16:31): guess we better not port html5lib just yet",
        "4d647473081c3ad729446a01a377813b (16:31): -- http://docs.python.org/dev/3.0/whatsnew/3.0.html",
        "a480104b0e570389c6f4284a88c7cd9d (16:32): unicode is much better in python 3",
        "4d647473081c3ad729446a01a377813b (16:33): sure",
        "a480104b0e570389c6f4284a88c7cd9d (16:33): in any case, I'd like to see b8810fee2f4a71f849f3f7409546d1d9's work be used to bootstrap a C/C++ implementation with a Python binding",
        "4d647473081c3ad729446a01a377813b (16:33): doesn't like the new print either",
        "4d647473081c3ad729446a01a377813b (16:33): I'd love that too",
        "a480104b0e570389c6f4284a88c7cd9d (16:33): yea, the new print sucks, but isn't a big deal",
        "a480104b0e570389c6f4284a88c7cd9d (16:33): I mostly use print for debugging",
        "b25b6b77a0087ff8385941e5545d32ea (16:34): is very happy about better unicode handling",
        "b25b6b77a0087ff8385941e5545d32ea (16:35): although html5lib has some bugs that only occur on UCS2 or UCS4 builds",
        "b2d7de6ddeb88e87bf22a21033bb1830 (16:35): I think the new print looks ok, but I haven't tried it. What's the problem with it?",
        "a480104b0e570389c6f4284a88c7cd9d (16:35): parens are required",
        "b2d7de6ddeb88e87bf22a21033bb1830 (16:35): likes parens",
        "b25b6b77a0087ff8385941e5545d32ea (16:36): I have a hard time complaining about two extra characters",
        "b25b6b77a0087ff8385941e5545d32ea (16:36): I guess it may be a small usability loss",
        "4d647473081c3ad729446a01a377813b (16:36): I don't :) but a480104b0e570389c6f4284a88c7cd9d is right, it's not crucial",
        "a480104b0e570389c6f4284a88c7cd9d (16:37): In ruby, p is a function that can be used without parens, and equates roughly to python's print(repr(...)).  Very handy for debugging.",
        "b25b6b77a0087ff8385941e5545d32ea (16:37): a480104b0e570389c6f4284a88c7cd9d: Can't most ruby functions be used without parens?",
        "a480104b0e570389c6f4284a88c7cd9d (16:37): yes",
        "b25b6b77a0087ff8385941e5545d32ea (16:38): generally likes parens around functions",
        "b25b6b77a0087ff8385941e5545d32ea (16:39): Or at least I found it weird when I tried Haskell. Although that could be other things too",
        "a480104b0e570389c6f4284a88c7cd9d (16:39): the one case where it is handy is functions that return None (or nil, or void or whatever) can be used as statements.",
        "a480104b0e570389c6f4284a88c7cd9d (16:49): b8810fee2f4a71f849f3f7409546d1d9: take a look at http://rails.intertwingly.net/blog/index.html using your html5 parser enhanced minefield",
        "a480104b0e570389c6f4284a88c7cd9d (16:50): The whatwg logo is borked",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:08): a480104b0e570389c6f4284a88c7cd9d: That bug has been fixed on trunk. It was a layout layer problem.",
        "a480104b0e570389c6f4284a88c7cd9d (17:08): cool",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:09): a480104b0e570389c6f4284a88c7cd9d: https://bugzilla.mozilla.org/show_bug.cgi?id=459817",
        "a480104b0e570389c6f4284a88c7cd9d (17:11): oh, cool, I'm the testcase!  :-)",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): Python 2.x lets you say &quot;print x,&quot; to prevent it printing a newline at the end; can you do something similar in Python 3.0 if print is using standard function call syntax instead?",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:16): print(x, end=&quot;&quot;), I think",
        "ab7faae5d7b250ea8606486575f8f79c (17:17): That's quite horrid",
        "ab7faae5d7b250ea8606486575f8f79c (17:17): prefers it when programming languages are updated to make it easier to write things, not harder",
        "a480104b0e570389c6f4284a88c7cd9d (17:17): http://docs.python.org/dev/3.0/whatsnew/3.0.html#print-is-a-function",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:20): should probably care about supporting Python 3 now",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:20): does html5lib work at all?",
        "b25b6b77a0087ff8385941e5545d32ea (17:21): a11aabeeceeae6b8cb5d12ea06b56554: No",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:21): ab7faae5d7b250ea8606486575f8f79c: I did not know about the &quot;print x,&quot; in 2.X. That's pretty weird syntax - even if it is easy to write. I think the new syntax is easier to understand for people who are not Python wizards",
        "b25b6b77a0087ff8385941e5545d32ea (17:21): That is pretty low on my priority list though, after &quot;stop hunderds of testcases failing&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (17:24): made a start on the ferry but has some way to go",
        "b25b6b77a0087ff8385941e5545d32ea (17:24): Like before it was over a thousand testcases",
        "ab7faae5d7b250ea8606486575f8f79c (17:25): b2d7de6ddeb88e87bf22a21033bb1830: It isn't any easier for those people to write - they'll do &quot;print('hello')&quot; and not want a newline, then they'll see that it adds a newline, and then they'll either give up or they'll have to look in the documentation, which will then tell them &quot;write 'print &quot;hello&quot;,' to suppress the newline&quot; or &quot;write 'print(&quot;hello&quot;, end=&quot;&quot;)' to suppress the newline&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (17:25): so it's equally a pain both ways",
        "b25b6b77a0087ff8385941e5545d32ea (17:25): sys.stdout.write(&quot;hello&quot;) works I guess",
        "a480104b0e570389c6f4284a88c7cd9d (17:26): only if you import sys :-)",
        "ab7faae5d7b250ea8606486575f8f79c (17:26): but with the new way, when you're feeling very frustrated at the lack of a decent debugger and are trying to sprinkle a load of print commands throughout your code to work out what's going on, you'll have to type more characters on every line and you will get even more frustrated :-)",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:27): yeah. I was thinking about reading code that others had written. If I saw &quot;print x,&quot; somewhere I would probably not even notice the ',' and I would certainly not guess that it was for suppressing the newline",
        "b25b6b77a0087ff8385941e5545d32ea (17:28): import sys; p = sys.stdout.write",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:28): If I was in charge, print would not output newlines at all. I don't mind putting a \\n at the end of my strings.",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:28): s/newlines/automatic newlines/",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): The rationale at http://www.python.org/dev/peps/pep-3105/ seems to be concerned entirely with relatively uncommon advanced requirements, and totally ignores the basic &quot;I just want to print some text&quot; use case",
        "ab7faae5d7b250ea8606486575f8f79c (17:30): b2d7de6ddeb88e87bf22a21033bb1830: Recent versions of Perl attempt to solve that problem by having 'print' which does no newlines, and 'say' which adds one automatically",
        "a480104b0e570389c6f4284a88c7cd9d (17:30): That's Python for you: one size fits all.  If you want a language which cottons to use cases (at the expense of consistency), consider Perl or Ruby.",
        "4d647473081c3ad729446a01a377813b (17:31): I very much like significant whitespace though",
        "ab7faae5d7b250ea8606486575f8f79c (17:33): I think the main reason I use Python nowadays is ctypes, because I can't anything that works that well in Perl",
        "ab7faae5d7b250ea8606486575f8f79c (17:33): and if I'm writing a little bit of code that requires ctypes, I might as well write the rest of the program in Python because that's easier than mixing languages",
        "b2d7de6ddeb88e87bf22a21033bb1830 (17:33): 4d647473081c3ad729446a01a377813b: I'd actually prefer c-style { and }. The whitespace blocks are okay until you want to refactor a 3000 line program. Moving and reindenting big blocks of code feels dangerous when the indentation actually matters.",
        "4d647473081c3ad729446a01a377813b (17:33): I don't write 3000 line programs",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): $ wc -l html5parser.py",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): 2169 html5parser.py",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): It's close :-p",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:35): wonders if PyDev supports all the eclipse refactoring goodness for Python"
    ],
    "person_ids": [
        "4d647473081c3ad729446a01a377813b",
        "a480104b0e570389c6f4284a88c7cd9d",
        "b25b6b77a0087ff8385941e5545d32ea",
        "b2d7de6ddeb88e87bf22a21033bb1830",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}