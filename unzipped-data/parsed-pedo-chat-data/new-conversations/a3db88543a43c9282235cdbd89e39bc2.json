{
    "id": "a3db88543a43c9282235cdbd89e39bc2",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (03:14): so tempted to test E4X in Acid3",
        "a131216c7af242e66537a58b4ca7c9f9 (03:17): eww",
        "a131216c7af242e66537a58b4ca7c9f9 (03:17): i'm not a fan of E4X",
        "a131216c7af242e66537a58b4ca7c9f9 (03:18): do you test trailing commas in array literals and object literals?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:19): yup",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): test 81",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): at least, i do for array literals",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): how should i test it for oject literals?",
        "6923fbf94c13b38a31f434d910ffbef8 (03:22): { &quot;foo&quot;: &quot;bar&quot;,} ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): but how do i test it?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): what's the failure condition?",
        "6923fbf94c13b38a31f434d910ffbef8 (03:23): eval? for a parse error?",
        "6923fbf94c13b38a31f434d910ffbef8 (03:23): doesn't know",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): oh, there are browsers that have parse errors with that?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): wow",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): tests",
        "6923fbf94c13b38a31f434d910ffbef8 (03:24): 69b0d3dfe919a6b860a9fac82de52a7e: I doubt there are",
        "6923fbf94c13b38a31f434d910ffbef8 (03:25): doesn't understand what support would mean other than not erroring out",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:25): can't find object literals in es3",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:28): so uh",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:28): {a:0,} is illegal",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:29): safari and opera allow it",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:29): firefox and ie throw",
        "65325d50b2e25aca54bc871b89758c9c (03:32): 69b0d3dfe919a6b860a9fac82de52a7e: are you sure?",
        "65325d50b2e25aca54bc871b89758c9c (03:32): javascript:alert({a:0,})",
        "65325d50b2e25aca54bc871b89758c9c (03:32): that works for me in Firefox",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:33): what does it alert?",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:33): http://software.hixie.ch/utilities/js/js-eval-window/ for {a:0,} raises a SyntaxError for me",
        "65325d50b2e25aca54bc871b89758c9c (03:33): [object Object]",
        "65325d50b2e25aca54bc871b89758c9c (03:33): (it's obviously not a parse error)",
        "65325d50b2e25aca54bc871b89758c9c (03:33): I think the syntax error might be because it parses it as a block",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:33): ah indeed",
        "65325d50b2e25aca54bc871b89758c9c (03:34): if you put it in parens I bet it works",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:34): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:34): that's what i just did",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:34): i'm so not going near this in acid3",
        "65325d50b2e25aca54bc871b89758c9c (03:34): Safari and Opera probably are doing extra semicolon insertion",
        "65325d50b2e25aca54bc871b89758c9c (03:34): when parsing as a block",
        "65325d50b2e25aca54bc871b89758c9c (03:34): or something",
        "65325d50b2e25aca54bc871b89758c9c (03:35): actually 0, isn't even a valid comma expression",
        "65325d50b2e25aca54bc871b89758c9c (03:35): I'm not sure why it parses",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:35): yeah"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a131216c7af242e66537a58b4ca7c9f9",
        "6923fbf94c13b38a31f434d910ffbef8",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}