{
    "id": "544c50a63aa9a948eccabd7714f431e9",
    "messages": [
        "673d7d497cb7c30e46ce951bc321aafd (07:41): is there some rfc which describes valid combinations of tcp flags ?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:42): maybe the TCP RFC?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:42): otherwise the linux kernel has a list",
        "673d7d497cb7c30e46ce951bc321aafd (07:45): ill try the linux kernel",
        "673d7d497cb7c30e46ce951bc321aafd (07:46): know anything more specific like in which file ? :P",
        "de76c8e6cbbc3c1c44788a340cac141e (07:46): net/netfilter/nf_conntrack_proto_tcp.c:777",
        "de76c8e6cbbc3c1c44788a340cac141e (07:46): line number is from 2.6.18-rc2",
        "de76c8e6cbbc3c1c44788a340cac141e (07:47): that's part of conntrack, btw, so you don't need to use these in iptables",
        "de76c8e6cbbc3c1c44788a340cac141e (07:47): just drop INVALID state packets",
        "673d7d497cb7c30e46ce951bc321aafd (07:47): but hmm...",
        "673d7d497cb7c30e46ce951bc321aafd (07:48): so you mean a filtering for bad tcp flags is not necessary if you perform a -m state -state INVALID ?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:48): correct",
        "de76c8e6cbbc3c1c44788a340cac141e (07:48): all the rulesets that do filtering are wasting their time",
        "673d7d497cb7c30e46ce951bc321aafd (07:48): really sure about that ?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:48): yep",
        "673d7d497cb7c30e46ce951bc321aafd (07:48): got a source for that ? :P",
        "de76c8e6cbbc3c1c44788a340cac141e (07:48): it's right there in the code",
        "673d7d497cb7c30e46ce951bc321aafd (07:48): i mean then why is the NEW not SYN check needed ?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:48): ask #netfilter to get a developer's opinion",
        "de76c8e6cbbc3c1c44788a340cac141e (07:49): in that same file, look at the comment above nf_ct_tcp_loose",
        "673d7d497cb7c30e46ce951bc321aafd (07:49): i need to find that file somewhere first :P",
        "673d7d497cb7c30e46ce951bc321aafd (07:49): not that happy to extract 300 meg of linux source on this box :P",
        "de76c8e6cbbc3c1c44788a340cac141e (07:49): just a sedc",
        "de76c8e6cbbc3c1c44788a340cac141e (07:50): <a href=\"http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;h=af8adcba23a7235da6a57206d36e53ef451fb67a;hb=82d6897fefca6206bca7153805b4c5359ce97fc4;f=net/netfilter/nf_conntrack_proto_tcp.c\">http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;h=af8adcba23a7235da6a57206d36e53ef451fb67a;hb=82d6897fefca6206bca7153805b4c5359ce97fc4;f=net/netfilter/nf_conntrack_proto_tcp.c</a>",
        "673d7d497cb7c30e46ce951bc321aafd (07:50): kernel.org doesnt seem to have it in extracted form",
        "673d7d497cb7c30e46ce951bc321aafd (07:50): ohh there it was",
        "de76c8e6cbbc3c1c44788a340cac141e (07:50): yes it does - you just need to know where to look :)",
        "673d7d497cb7c30e46ce951bc321aafd (07:51): :)",
        "673d7d497cb7c30e46ce951bc321aafd (07:56): hmm im digging through that code but I cant find for which &quot;function&quot; tcp_valid_flags is being called from",
        "de76c8e6cbbc3c1c44788a340cac141e (07:56): line 842",
        "673d7d497cb7c30e46ce951bc321aafd (07:56): yes",
        "673d7d497cb7c30e46ce951bc321aafd (07:57): but how does 842 tell me that it is &quot;-m state -state INVALID&quot; ?",
        "673d7d497cb7c30e46ce951bc321aafd (07:57): and not something else ?",
        "de76c8e6cbbc3c1c44788a340cac141e (07:57): the return is -NF_ACCEPT, which goes up to the function calling tcp_error...",
        "de76c8e6cbbc3c1c44788a340cac141e (07:58): which is inside conntrack core code, probably",
        "673d7d497cb7c30e46ce951bc321aafd (07:58): ahh 797",
        "673d7d497cb7c30e46ce951bc321aafd (07:58): 1170",
        "673d7d497cb7c30e46ce951bc321aafd (07:58): struct nf_conntrack_protocol nf_conntrack_protocol_tcp4 =",
        "673d7d497cb7c30e46ce951bc321aafd (07:58): blbala",
        "de76c8e6cbbc3c1c44788a340cac141e (07:59): yep",
        "673d7d497cb7c30e46ce951bc321aafd (07:59): .error = tcp_error,",
        "673d7d497cb7c30e46ce951bc321aafd (07:59): so this means it is silently taken care of the conntrack ?",
        "673d7d497cb7c30e46ce951bc321aafd (07:59): +by",
        "673d7d497cb7c30e46ce951bc321aafd (07:59): well except for the logentries which might arrive",
        "de76c8e6cbbc3c1c44788a340cac141e (07:59): and nf_conntrack_core.c:1100 calls that function",
        "de76c8e6cbbc3c1c44788a340cac141e (08:00): which looks like it just sets invalid if it's &lt;= 0",
        "673d7d497cb7c30e46ce951bc321aafd (08:01): 1100 ?",
        "673d7d497cb7c30e46ce951bc321aafd (08:01): 1100 /* tcp_packet will set them */",
        "de76c8e6cbbc3c1c44788a340cac141e (08:01): in a different file",
        "673d7d497cb7c30e46ce951bc321aafd (08:01): net/netfilter/nf_conntrack_core.c",
        "de76c8e6cbbc3c1c44788a340cac141e (08:01): yes",
        "673d7d497cb7c30e46ce951bc321aafd (08:01): 1100 in conntrack_core is -&gt;",
        "673d7d497cb7c30e46ce951bc321aafd (08:01): 1100 /* tcp_packet will set them */",
        "de76c8e6cbbc3c1c44788a340cac141e (08:02): <a href=\"http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;hb=HEAD;f=net/netfilter/nf_conntrack_core.c\">http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;hb=HEAD;f=net/netfilter/nf_conntrack_core.c</a>",
        "de76c8e6cbbc3c1c44788a340cac141e (08:02): were you just editing the f= part?",
        "673d7d497cb7c30e46ce951bc321aafd (08:02): yup",
        "673d7d497cb7c30e46ce951bc321aafd (08:02): <a href=\"http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;h=af8adcba23a7235da6a57206d36e53ef451fb67a;hb=82d6897fefca6206bca7153805b4c5359ce97fc4;f=net/netfilter/nf_conntrack_core.c\">http://www.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;h=af8adcba23a7235da6a57206d36e53ef451fb67a;hb=82d6897fefca6206bca7153805b4c5359ce97fc4;f=net/netfilter/nf_conntrack_core.c</a>",
        "de76c8e6cbbc3c1c44788a340cac141e (08:02): that does nothing when you specify the specific hash",
        "de76c8e6cbbc3c1c44788a340cac141e (08:02): look at the header of the file",
        "673d7d497cb7c30e46ce951bc321aafd (08:03): but ok",
        "673d7d497cb7c30e46ce951bc321aafd (08:03): so it seems that in 2.6.18 the ipt_unclean has been sort of merged into the core and is now performed on EVERY packet",
        "673d7d497cb7c30e46ce951bc321aafd (08:03): no need to drop   -state INVALID   or a custom badtcp chain ?",
        "de76c8e6cbbc3c1c44788a340cac141e (08:04): unclean was never a good idea... it's gone",
        "673d7d497cb7c30e46ce951bc321aafd (08:04): i liked the idea of a specific module which you could use if you want to or not",
        "de76c8e6cbbc3c1c44788a340cac141e (08:04): but yeah, same kinda point",
        "de76c8e6cbbc3c1c44788a340cac141e (08:04): well, it's part of connection tracking",
        "673d7d497cb7c30e46ce951bc321aafd (08:04): yes now it is",
        "de76c8e6cbbc3c1c44788a340cac141e (08:04): conntrack can't handle packets with bad TCP flags",
        "673d7d497cb7c30e46ce951bc321aafd (08:04): but anyway...",
        "de76c8e6cbbc3c1c44788a340cac141e (08:04): so it must set them to something...",
        "673d7d497cb7c30e46ce951bc321aafd (08:05): since i use some oldish 2.4 kernel i think i still need by custom badtcp chain",
        "de76c8e6cbbc3c1c44788a340cac141e (08:05): look in 2.4 source if you want",
        "de76c8e6cbbc3c1c44788a340cac141e (08:05): it'll be in ip_conntrack_proto_tcp.c",
        "673d7d497cb7c30e46ce951bc321aafd (08:05): you mean that 2.6.18 sets the packets to INVALID ?",
        "de76c8e6cbbc3c1c44788a340cac141e (08:05): net/ipv4/netfilter/ iirc",
        "de76c8e6cbbc3c1c44788a340cac141e (08:05): correct",
        "673d7d497cb7c30e46ce951bc321aafd (08:05): ahh k",
        "673d7d497cb7c30e46ce951bc321aafd (08:05): so basically",
        "673d7d497cb7c30e46ce951bc321aafd (08:05): to test my custom chain i should have the INVALID check first",
        "de76c8e6cbbc3c1c44788a340cac141e (08:06): right",
        "673d7d497cb7c30e46ce951bc321aafd (08:06): and then the checks for the other combinations",
        "de76c8e6cbbc3c1c44788a340cac141e (08:06): actually, check before with no jumps, and after with jumps",
        "673d7d497cb7c30e46ce951bc321aafd (08:06): and then just iptables -L -n -v to see if INVALID traps all the bad packets or if some of them gets through to my custom chain",
        "de76c8e6cbbc3c1c44788a340cac141e (08:06): then you see if INVALID catches them",
        "673d7d497cb7c30e46ce951bc321aafd (08:06): actually, check before with no jumps, and after with jumps &lt;- ?",
        "de76c8e6cbbc3c1c44788a340cac141e (08:07): iptables -A chain -p tcp --tcp-flags SYN,FIN",
        "de76c8e6cbbc3c1c44788a340cac141e (08:07): that will just increment counters",
        "673d7d497cb7c30e46ce951bc321aafd (08:07): ahh yes",
        "673d7d497cb7c30e46ce951bc321aafd (08:08): will find out which kernel i have in that floppy",
        "673d7d497cb7c30e46ce951bc321aafd (08:09): 2.4.19",
        "de76c8e6cbbc3c1c44788a340cac141e (08:09): old",
        "673d7d497cb7c30e46ce951bc321aafd (08:10): yeah i know",
        "673d7d497cb7c30e46ce951bc321aafd (08:10): but still functional for this purpose",
        "673d7d497cb7c30e46ce951bc321aafd (08:10): i will however try to build my own distro using 2.6 and stuff",
        "673d7d497cb7c30e46ce951bc321aafd (08:11): but that will come in autumn or so",
        "673d7d497cb7c30e46ce951bc321aafd (08:11): it will basically be based on floppyfw but with my needs",
        "673d7d497cb7c30e46ce951bc321aafd (08:13): 2.4.19 is down and im checking the ip conntrack proto tcp",
        "de76c8e6cbbc3c1c44788a340cac141e (08:13): looks like it doesn't have it",
        "de76c8e6cbbc3c1c44788a340cac141e (08:14): (I was checking 2.4.33)",
        "673d7d497cb7c30e46ce951bc321aafd (08:14): the tcp packet check in 2.4.19 was kind of... unexisting :P",
        "673d7d497cb7c30e46ce951bc321aafd (08:14): it had only basic stuff",
        "673d7d497cb7c30e46ce951bc321aafd (08:15): /* We're guaranteed to have the base header, but maybe not the",
        "673d7d497cb7c30e46ce951bc321aafd (08:15): options. */",
        "673d7d497cb7c30e46ce951bc321aafd (08:15): i mean i rest my case :P",
        "673d7d497cb7c30e46ce951bc321aafd (08:15): but still",
        "673d7d497cb7c30e46ce951bc321aafd (08:15): ill put the invalid check first and then followed by the approved combinations",
        "673d7d497cb7c30e46ce951bc321aafd (08:16): this way it will be functional also with iptables from 2.6 and the functionallity can be verified with  iptables -L -v -n -t BADTCP",
        "673d7d497cb7c30e46ce951bc321aafd (08:32): danieldg: still there ?",
        "de76c8e6cbbc3c1c44788a340cac141e (08:32): yeah",
        "673d7d497cb7c30e46ce951bc321aafd (08:34): danieldg: <a href=\"http://www.tbg.nu/iptables.txt\">http://www.tbg.nu/iptables.txt</a>",
        "673d7d497cb7c30e46ce951bc321aafd (08:34): what do you think about that ?",
        "673d7d497cb7c30e46ce951bc321aafd (08:34): the badtcp custom chain that is which is printed in the top of the txt file",
        "673d7d497cb7c30e46ce951bc321aafd (08:35): all flags are valid only for established packets",
        "673d7d497cb7c30e46ce951bc321aafd (08:35): except syn    and   syn + psh    which will be for new packets",
        "de76c8e6cbbc3c1c44788a340cac141e (08:35): looks good to me",
        "673d7d497cb7c30e46ce951bc321aafd (08:36): i think i can comment out the new not syn first rule there",
        "673d7d497cb7c30e46ce951bc321aafd (08:36): since the",
        "673d7d497cb7c30e46ce951bc321aafd (08:36): iptables -A BADTCP -p tcp --tcp-flags ALL SYN -m state --state NEW -j RETURN          should take care of that part",
        "673d7d497cb7c30e46ce951bc321aafd (08:36): and that packets who didnt match that will be dropped anyway",
        "de76c8e6cbbc3c1c44788a340cac141e (08:36): yes",
        "673d7d497cb7c30e46ce951bc321aafd (08:36): i have the state INVALID before the badtcp check",
        "673d7d497cb7c30e46ce951bc321aafd (08:37): in its own custom chain",
        "673d7d497cb7c30e46ce951bc321aafd (08:37): what is your opinion of the existens of RST packets vs FIN packets ?",
        "673d7d497cb7c30e46ce951bc321aafd (08:37): which one is more common (and should be placed higher in the badtcp chain) ?",
        "673d7d497cb7c30e46ce951bc321aafd (08:37): ACK should be the far most common so those are placed first :)",
        "673d7d497cb7c30e46ce951bc321aafd (08:50): <a href=\"http://www.tbg.nu/iptables.txt\">http://www.tbg.nu/iptables.txt</a> - has now the updated BADTCP custom chain..."
    ],
    "person_ids": [
        "673d7d497cb7c30e46ce951bc321aafd",
        "de76c8e6cbbc3c1c44788a340cac141e"
    ]
}