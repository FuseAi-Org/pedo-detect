{
    "id": "fef7e7fe8a2ec6acaa15b6b43af0761f",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (09:59): 69b0d3dfe919a6b860a9fac82de52a7e: do you have a preliminary guess of where the about:blank stuff might be going?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:59): no, but i have scheduled friday to fix it",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:59): great",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:11): b8810fee2f4a71f849f3f7409546d1d9: so I notice that a year or so ago George submitted a jing patch that improves reporting for missing-attribute and missing-element cases",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:11): http://code.google.com/p/jing-trang/issues/detail?id=35",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:12): a9b326df4e6da61c5b6f5e1058be83a2: yeah. I had hoped to see the patch on trunk by now",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:13): b8810fee2f4a71f849f3f7409546d1d9: James seemed to not want to land it until some revisions to PatternValidator get made",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:14): http://code.google.com/p/jing-trang/issues/detail?id=35#c1",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:14): (James' comment)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:15): b8810fee2f4a71f849f3f7409546d1d9: but there are a couple of problems with that patch as implemented",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:15): one is the format of the error messages it emits",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:15): ideally, the expection objects would carry enough data for formatting the message on the application side",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:15): for example, for &lt;link&gt; it will give you: &quot;[href, rel] required attributes missing from element link&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:16): yeah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:17): so the other problem is that it does not provide enough information for at least one case I can think of",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:17): which is the case of &lt;object&gt;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:18): where the requirement is basically an OR case",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:18): a data attribute OR a type attribute",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:19): what does it provide in that case?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:20): same as for the link case -- it just emits, &quot;[data, type] required attributes missing from element object&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:20): his implementation just adds the attributes to a Set",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:20): on then it calls toString to dump that",
        "66b0d785bfa15d051888c24dabba7342 (10:21): 69b0d3dfe919a6b860a9fac82de52a7e: it wouldn't really add to complexity since we're already cutting subtrees based on the precense of itemscope",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:21): ah. I wonder how hard it would be to distinguish &quot;all of these&quot; and &quot;one of these&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:21): HTML5 doesn't have &quot;one of these groups&quot;, IIRC",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:21): b8810fee2f4a71f849f3f7409546d1d9: maybe not so hard. I'll take a look at it a bit more and see",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:22): 66b0d785bfa15d051888c24dabba7342: i have no idea what you're responding to :-)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:22): b8810fee2f4a71f849f3f7409546d1d9: or I guess maybe I should ping George about it first",
        "66b0d785bfa15d051888c24dabba7342 (10:22): 69b0d3dfe919a6b860a9fac82de52a7e: 'what do you think of making the spec explicitly drop hidden=&quot;&quot; subtrees from the microdata processing?'",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:22): a9b326df4e6da61c5b6f5e1058be83a2: or maybe ping James and George both in the bug report",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:24): b8810fee2f4a71f849f3f7409546d1d9: OK",
        "66b0d785bfa15d051888c24dabba7342 (10:24): however, I'm not quite sure what good it would do, it would most certainly cause surprise to some people",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:25): ah",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:26): brb",
        "66b0d785bfa15d051888c24dabba7342 (10:27): since CSS selectors, getElementById, etc won't ignore that which is hidden=&quot;&quot;, my vote would be no",
        "66b0d785bfa15d051888c24dabba7342 (10:28): but I admit to not entirely understanding the purpose of hidden=&quot;&quot; to begin with",
        "f139aba52f9fa1394b4034a7954b2220 (10:33): 69b0d3dfe919a6b860a9fac82de52a7e, maybe I'm misunderstanding something, but your response here about nested vocabularies seems confusing http://lists.w3.org/Archives/Public/public-html/2010Jan/0905.html",
        "f139aba52f9fa1394b4034a7954b2220 (10:35): You wrote: &quot;I think it's better to just use itemtype=&quot;&quot; everywhere you want to start a new vocabulary&quot; - but in the vCard example 66b0d785bfa15d051888c24dabba7342 gave, the nested adr stuff isn't a new vocabulary. I thought 66b0d785bfa15d051888c24dabba7342's idea was that it should default to inhereting the itemtype",
        "f139aba52f9fa1394b4034a7954b2220 (10:35): But in the somewhat contrived example you gave, where they are different, it does make sense to require an explicit itemtype",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:48): f139aba52f9fa1394b4034a7954b2220: adr is a &quot;new vocabulary&quot; for the purposes of that sentence",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:48): sorry for being ambiguous",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:48): i really meant a new set of name-value pair names",
        "f139aba52f9fa1394b4034a7954b2220 (10:49): well, it shouldn't be. That seems very unintuitive to require the author to repeat the same itemtype again, and I don't expect most authors using the vCard vocabulary will remember that",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): f139aba52f9fa1394b4034a7954b2220: no what i'm saying is that md-vcard, if it wants to work with rdf, should require that the adr types have their own types",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): different than the vcard type",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): since they're not vcards but addresses",
        "f139aba52f9fa1394b4034a7954b2220 (10:52): but they're part of the same vcard vocabulary",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:53): only to the same extent that the &quot;reload()&quot; method on the Location object is part of the Window object",
        "f139aba52f9fa1394b4034a7954b2220 (10:53): so, if an author doesn't care about the RDF conversion, can they get away without using an explicit itemtype, and still express the semantics they want?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:53): sure, that's what md-vcard does",
        "f139aba52f9fa1394b4034a7954b2220 (10:54): ok. It still seems weird that the semantics that are expressable through md-vcard, can't be mapped to RDF in a sane way by default",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:56): they could, just not using the vocabulary-agnostic rdf conversion algorithm",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:56): even the work vocabulary can't really be converted naively -- you have to apply extra rules to get it into its &quot;proper&quot; RDF form",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:57): (those rules are actually provided, though)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:57): a lot of this is a result of RDF's complexity",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:57): e.g. using URLs everywhere",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:58): i suppose we _could_ automatically map the adr properties to URLs by concatenating the &quot;path&quot; to the property",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:59): hm, no, that wouldn't work",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:59): there'd be no way to guarantee uniqueness",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:01): (if the above doesn't make much sense to people reading archives, it's because i wasn't very eloquent.)",
        "ab7faae5d7b250ea8606486575f8f79c (11:22): &quot;a proprietary raid-like solution for redundancy&quot; - can you still get read access to your data without relying on a proprietary solution, e.g. if your Drobo hardware dies and nobody manufactures them any more?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:28): ab7faae5d7b250ea8606486575f8f79c: no",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:28): ab7faae5d7b250ea8606486575f8f79c: but i have two, so if one dies i'm ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:28): if both die i'm screwed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:28): (if both die after drobo stop making them, that is)",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:36): WHATWG: HTML5: Mention that you shouldn't dereference an item type URL. http://html5.org/tools/web-apps-tracker?from=4613&amp;to=4614",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:37): are those microdata item times, or more general?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:37): it refers to the value of the microdata itemtype=&quot;&quot; property",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:39): is that an attribute where i might put things like foaf:Person, if my item was describing a person?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:39): more or less, yes",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:39): i think it's fine to say the design doesn't *require* derferencing, ... but to forbid it seems rather strong",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): the exact text doesn't forbid it",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): it is more subtle than the checkin comment",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:40): was reading the link",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:40): it has an '...in order to determine how to process'",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): right",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:41): it's just an opaque string, unless you know it isn't",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:41): but one way of knowing more about it is to read a document from the Web",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:41): sure, a human is allowed to do whatever",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:41): humans aren't one of the spec's conformance classes",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:41): and software that human has installed?",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:42): can it not have a mode that includes lookups?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:42): can you give a more concrete example?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:42): i'm not sure what you mean by &quot;includes lookups&quot;",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:42): again, it should be optional rather than mandatory ... not requiring schema downloads was one of the original rdf requirements",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:43): ok, you load the class definition, and realise it's a subclass of one you have some built-in UI widget to display ... so the user gets a slightly prettier ui",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:43): eg. doap:Project says it is subclass of foaf:Project, and you had a layout hardcoded for projects, keyed off the foaf:Project uri",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:45): class definition?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:46): microdata doesn't have class definitions",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:46): microdata isn't really intended for the use cases than need RDF and all the schemas and reasoning and all that, to be honest",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:46): for that people should just use RDF",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:47): it's not fancypants reasoning",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:47): just matching some triples from a different doc",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:47): but microdata is the syntax; what user apps do with it isn't your concern",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): sounds pretty fancy to me if it's applying UIs to subclassed vocabularies through some sort of automated definition mechanism :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): what user apps do with it is my only concern, the syntax is just a means to that end",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): actually i'd go even further",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): what _users_ do with it is my only concern",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:48): well, i'm not too worried about that rule in the spec; folk will just ignore it if they want to",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): the user apps and syntax are _both_ just a means to that end",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): they can ignore anything they like if they don't want to follow the spec :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): not much i can do about people who don't want to follow the spec",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:48): wouldn't be the first time!",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:49): anyway, time for bed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:49): nn",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:49): gnite!",
        "c8418bd17d6b1d70bf83c9f1c1664266 (11:49): time for elevensies"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "66b0d785bfa15d051888c24dabba7342",
        "f139aba52f9fa1394b4034a7954b2220",
        "ab7faae5d7b250ea8606486575f8f79c",
        "c8418bd17d6b1d70bf83c9f1c1664266"
    ]
}