{
    "id": "dc969d80d6e7d9a7a837042112ddd50c",
    "messages": [
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:33): hmm, HTTP interoperability...",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:43): I hacked the Python server a bit more and I can now make my own &quot;asis&quot; files. Similar to Apache, except that no header whatsoever is generated in my version.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:43): Browsers are already non-interoperable when it comes to multiple Location or Content-Type headers",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:43): and that's everything I've tested so far",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:44): They do all recognize that supporting LF besides the mandatory CRLF from HTTP is a nice thing to do",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:45): And they also all agree that listing the status text and status after HTTP/1.1 is not necessarily needed and can be omitted (prolly defaulting to 200 OK?!)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:45): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: yeah, 200",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:45): Similarly, &quot;HTTP/1.1 302 FOOBAR&quot; results in a redirect",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:45): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: the status text is in some cases not sent anyway",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: that's as per RFC2616",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: the status text is meaningless, though required",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:46): oh, status text is optional?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: no, it must be there, though it means nothing",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:46): grmbl",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: I think 200 foo is valid",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:46): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: you just need _something_",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:46): i do love this Python Web server thingie though",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:47): my one ended up with such a terrible codebase",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:47): I can test everything I couldn't before. The only problem is that whenever I update it I have to rerun the script and pick a different port",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:47): I'm planning on writing a new one",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:47): you want mine? it's 87 lines of pretty ok code...",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:48): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: &quot;The reason phrases listed here are only recommendations -- they MAY be replaced by local equivalents without affecting the protocol.&quot;",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:48): lol",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:48): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: I'd rather write my own. Good practice for my Python (which isn't that brillaint)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:48): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: (that's from RFC2616, BTW)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:49): i got that",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:49): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: you need the space preceding the reason phrase, but the reason phrase itself may be blank",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:49): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: it's mad. :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:49): you sure?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:49): goes to test",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:50): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: oh, that's per RFC 2616",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:50): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: in the real world, nothing requires that space",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:50): lots of things break if you try and require it",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:50): indeed, without that space things just work",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:51): got bug reports on the first HTTP client I wrote, which did quite strictly follow RFC2616",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:51): without HTTP/1.1 it is all printed as text/plain though",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:51): HTTP/1.1.1 has different results in different UAs",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:52): Safari prints out the entire response, most other just take it as HTTP/1.1",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:56): hopefully I'll have time over my October holidays to work on HTTP parsing\u201a\u00c4\u00b6",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:57): this is fun stuff",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:57): saner than HTML, though",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (18:57): like a whole new can of interoperability holes to exploit",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:57): (mostly)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:57): IIS does some really weird stuff",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:59): If-None-Match: foobar returns 400 (Bad Request), whereas If-None-Match: &quot;foobar&quot; works fine"
    ],
    "person_ids": [
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}