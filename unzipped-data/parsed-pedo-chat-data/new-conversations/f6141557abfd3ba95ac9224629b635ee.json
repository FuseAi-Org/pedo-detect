{
    "id": "f6141557abfd3ba95ac9224629b635ee",
    "messages": [
        "88d4d34a8064a4ff39fd5e144eea7762 (23:48): b25b6b77a0087ff8385941e5545d32ea, given the choice between using RDFa and using nothing, many people would use nothing.  Except when RDFa is the only thing that works with CC license readers, or Rich Snippets, or . . .",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:49): I'm not worried about individual authors saying &quot;Let's use RDFa, that sounds great!&quot;  I'm worried about organizations with some clout basing new de facto standards on it.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:49): Thus forcing everyone to use it.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:49): That's how it's worked its way into MediaWiki.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:50): I couldn't really argue with &quot;But you have CC license-scraping bots and this would be great for Commons.&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:50): (Wikimedia Commons, that is)",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:50): RDFa is the only Creative Commons-approved way to embed license metadata, AFAIK.",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:53): 88d4d34a8064a4ff39fd5e144eea7762: FWIW, I think committees don't get to vote to kill specs. they only get to vote on whether they allocate their resources to developing a given technology",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:54): for example, OASIS doesn't get to vote OOXML out of existence",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:54): Well, the W3C could still endorse one or the other exclusively.",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:54): and the W3C didn't successfully vote HTML out of existence",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:54): 88d4d34a8064a4ff39fd5e144eea7762: sure",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:54): So could the HTMLWG.",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:54): yes",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:54): That would have an impact.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:55): Just like disbanding the XHTMLWG had an impact.  We get to say &quot;No, don't use that, it's obsolescent.&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:55): I doubt it will happen, though.",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:55): shakes fist dramatically at the W3C",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:55): it had a publicity impact",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:55): but XHTML2 was already dead",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:55): Yes, that's my point.",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:55): or s still very much alive depending on point of view",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:56): If the W3C said &quot;Hey, we decided RDFa is a bad idea, use microdata instead&quot;, then we could say to Creative Commons &quot;Hey, why don't you encourage people to use microdata instead of RDFa?  The W3C says so!&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:56): 88d4d34a8064a4ff39fd5e144eea7762: I observe that the W3C didn't stop work on XForms when it invited HTML5 (incl. Web Forms 2.0) in",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:57): And I think that's silly too.  :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:57): (plus, I'm sure that will die soon enough, unless it has significant non-HTML users)",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): XForms got baked into ODF 1.0",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): some approximation of RDFa got baked into ODF 1.1, according to rumors",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:00): Yay.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:01): Oh well, none of this can possibly be more horrible than all the legacy HTML currently has to deal with.",
        "b25b6b77a0087ff8385941e5545d32ea (00:01): wouldn't put money on that",
        "b25b6b77a0087ff8385941e5545d32ea (00:02): (I am about to go sleep otherwise I might try to say something more useful)",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:05): It's okay, it's unlikely there's anything useful to say in this discussion, except &quot;Leave them alone for now and let God sort it out.&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (00:13): Seems unfair to leave our mess for Him to clean up",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:15): Well, it's really His mess, since He's the owner of the entire universe, after all.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:15): So everything is His.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:15): Also, it's His fault for telling us we can't murder people for promoting bad standards.",
        "ab7faae5d7b250ea8606486575f8f79c (00:19): That seems a little extremist",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:19): Yes, I agree, it's just as likely they'd have murdered us, so we can't really blame Him on that score.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:20): We can blame the people responsible for the other standards, though.  :)",
        "ab7faae5d7b250ea8606486575f8f79c (00:20): I don't think people who promote what you consider bad standards are that extremist either :-p",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:27): &quot;Sure; but if I've scheduled for it, I can deal with a hundred comments in",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:27): a day -- that's not a problem.&quot; -- http://www.w3.org/mid/<email/>",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:30): re rjavascript, i guess it would be useful with a linter for js performance pitfalls in modern implementations",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): Haha, Google Site Performance is telling me my page is performing poorly because I don't have gzip compression enabled for http://www.google-analytics.com/urchin.js.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): \\o/",
        "b25b6b77a0087ff8385941e5545d32ea (00:30): Die with die",
        "b25b6b77a0087ff8385941e5545d32ea (00:31): obviously got distracted from going to bed",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:31): or maybe browsers should have a way to log in the error console when the js engine has to do something expensive",
        "b25b6b77a0087ff8385941e5545d32ea (00:31): was talking about the &quot;with&quot; statement in case it wasn't obvious",
        "b25b6b77a0087ff8385941e5545d32ea (00:32): 73eaf221abca1b8244e34b0b9e76ac46: It seems like something Dragonfly et. al. could tell you (depending on how much attaching a debugger affects the actual code)",
        "b25b6b77a0087ff8385941e5545d32ea (00:33): (But it would be nice if they could do per-call profiling with big warnings for things that hit slow paths)",
        "ab7faae5d7b250ea8606486575f8f79c (00:34): &quot;slow paths&quot; include falling off the JIT, which might be really quite difficult to explain to an average script developer",
        "a924fb58d2c25874322f4e5126f608b9 (00:34): I'm a bit rusty on the edges, but isn't there some overlap between rjavascript and stuff like caja?",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:35): ab7faae5d7b250ea8606486575f8f79c: no need to explain why it's slow, just state that it's slow and suggest fast alternatives",
        "ab7faae5d7b250ea8606486575f8f79c (00:35): (There's a thing that gives JIT profiling information for code in SpiderMonkey but it's not the most user-friendly thing imaginable, by necessity)",
        "b25b6b77a0087ff8385941e5545d32ea (00:36): ab7faae5d7b250ea8606486575f8f79c: That was basically what I had in mind hen I said &quot;slow paths&quot;. I'm not sure why it would be hard to explain to people sufficiently motivated to profile their code",
        "b25b6b77a0087ff8385941e5545d32ea (00:38): really is going to bed now",
        "ab7faae5d7b250ea8606486575f8f79c (00:40): b25b6b77a0087ff8385941e5545d32ea: It seems hard because they'd first need to understand what a tracing JIT is and how it works",
        "ab7faae5d7b250ea8606486575f8f79c (00:41): http://blog.mozilla.com/dmandelin/2009/02/26/tracevis-performance-visualization-for-tracemonkey/",
        "ab7faae5d7b250ea8606486575f8f79c (00:45): It's easy to suggest &quot;don't use with&quot; and &quot;don't use eval&quot;, but I don't really see how you could automatically give suggestions for the more complex problems that occur",
        "ab7faae5d7b250ea8606486575f8f79c (00:48): (It would still be nice, just maybe not possible)",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:04): hasn't figured out what &quot;with&quot; actually does yet, but gets the impression that it's cool and trendy and is vaguely disappointed if he shouldn't use it in JS for performance reasons",
        "a924fb58d2c25874322f4e5126f608b9 (01:04): It's horrible and evil",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:04): But also cool and trendy?",
        "a924fb58d2c25874322f4e5126f608b9 (01:04): No",
        "a924fb58d2c25874322f4e5126f608b9 (01:05): It was cool and trendy a few years ago, when having the shortest bookmarklets possible was a goal",
        "a924fb58d2c25874322f4e5126f608b9 (01:05): And it sometimes appears in golfing, I suppose?"
    ],
    "person_ids": [
        "88d4d34a8064a4ff39fd5e144eea7762",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}