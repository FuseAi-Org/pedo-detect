{
    "id": "016ce3eee2d7da4e81498ebbf3e7b28e",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (23:32): so firebug crashes on me when I try to debug an unresponsive script",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:33): and Web Inspector in WebKit beach balls on unresponsive script and doesn't offer to debug it",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:37): looks like there'd be a use case for Canvas 3D: http://googlesystem.blogspot.com/2008/05/google-earth-browser-plugin.html",
        "6905646aa63b96d6bdfbd256603fa58e (23:57): b8810fee2f4a71f849f3f7409546d1d9: how are you running it as javascript?",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:58): 6905646aa63b96d6bdfbd256603fa58e: compiled it with GWT with a JS entry point",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:58): however, the tokenizer eof() method goes into an infinite loop in JS but not in Java bytecode",
        "ab7faae5d7b250ea8606486575f8f79c (23:58): Does GWT produce readable JS code?",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:58): 6905646aa63b96d6bdfbd256603fa58e: with the browser's native DOM as the tree impl",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): ab7faae5d7b250ea8606486575f8f79c: it can produce semi-readable code which is how I figured what loop it gets stuck into",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): ab7faae5d7b250ea8606486575f8f79c: by default, the output is *totally* unreadable",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:12): b8810fee2f4a71f849f3f7409546d1d9: if you can find a way to reproduce it in a small test file, i can report the bug",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:13): 69b0d3dfe919a6b860a9fac82de52a7e: do you mean small HTML input or a minimized Java case?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:13): small gwt input; minimised java case",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:13): 69b0d3dfe919a6b860a9fac82de52a7e: that would be *hard*",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:13): 69b0d3dfe919a6b860a9fac82de52a7e: I'll try to debug this a bit more in the morning",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:13): yeah, i figure it would be",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): realistically i doubt the gwt team would have the time to track down the bug if they had to learn your code too :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:14): yeah :-(",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:14): I'll see if the method behaves the same way in isolation",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:15): it's an open source project though right? there should be a public bug reporting form if you want to just attach the entire project with steps to reproduce",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:15): also does it do the same thing in other UAs?",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:15): yeah, there's a public bug tracker",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:15): same problem both in Gecko and WebKit",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): k",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): probably a fundamental compiler bug then unless it's actually a bug in your code somehow",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:17): it works in the hosted mode",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:18): which suggests it is a compiler bug",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): yep",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:20): nn",
        "78885357e970c69de0c33081760a04c9 (00:34): &quot;TBL: I feel it is important that the HTML5 spec be split into smaller chunks.&quot; http://www.w3.org/2001/tag/2008/05/21-minutes",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:34): i think everyone agrees with that",
        "ab7faae5d7b250ea8606486575f8f79c (00:34): It's fun trying to install Python 2.3 modules on Gentoo, since I have to make the /usr/bin/python symlink point to python2.3 so they get installed for 2.3, but Gentoo's package manager relies on Python 2.4 features :-(",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:35): 69b0d3dfe919a6b860a9fac82de52a7e: i don't think it's particularly important",
        "ab7faae5d7b250ea8606486575f8f79c (00:35): jgraham / edb259c0e0038f38bb200bc20c8cbf7e / etc: Is it know that several tests like &quot;32-bit hex numeric entity&quot; fail in Python 2.3?",
        "ab7faae5d7b250ea8606486575f8f79c (00:35): s/know/known/",
        "ab7faae5d7b250ea8606486575f8f79c (00:35): (...in html5lib)",
        "ab7faae5d7b250ea8606486575f8f79c (00:35): (&quot;OverflowError: string/unicode conversion&quot;)",
        "13a118dae3762d82e80fa95e0236d059 (00:40): jgraham: hey :) any news on a html5lib release?",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:40): b8810fee2f4a71f849f3f7409546d1d9: i agree that always allowing = in unquoted attributes seems bad",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:41): b8810fee2f4a71f849f3f7409546d1d9: src and href (and action) are not the only attributes that take uris in practice, &lt;option value&gt; in particular was pretty common",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:43): b8810fee2f4a71f849f3f7409546d1d9: (or rather, letting the authoring mistakes in go uncatched seems bad)",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:43): s/in //",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:45): b8810fee2f4a71f849f3f7409546d1d9: moreover, uris were not the only cases of deliberate use of =",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:48): ab7faae5d7b250ea8606486575f8f79c, I forgot whether we cared about Python 2.3",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:49): ab7faae5d7b250ea8606486575f8f79c, I guess we might",
        "ab7faae5d7b250ea8606486575f8f79c (00:49): edb259c0e0038f38bb200bc20c8cbf7e: It's weird since it works fine when I run test_tokenizer.py, but a few of those tokeniser tests fail when I run runtests.py :-/",
        "ab7faae5d7b250ea8606486575f8f79c (00:50): Does an earlier test do something funny to the Python environment?",
        "ab7faae5d7b250ea8606486575f8f79c (00:55): Oh, test_parser.py does warnings.simplefilter(&quot;error&quot;)",
        "ab7faae5d7b250ea8606486575f8f79c (01:02): Hmm, the problem is too non-obvious and hard to reproduce :-(",
        "ab7faae5d7b250ea8606486575f8f79c (01:02): therefore gives up on it"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "6905646aa63b96d6bdfbd256603fa58e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "78885357e970c69de0c33081760a04c9",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "13a118dae3762d82e80fa95e0236d059",
        "edb259c0e0038f38bb200bc20c8cbf7e"
    ]
}