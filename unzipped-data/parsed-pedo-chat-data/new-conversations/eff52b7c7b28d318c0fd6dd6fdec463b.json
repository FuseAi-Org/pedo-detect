{
    "id": "eff52b7c7b28d318c0fd6dd6fdec463b",
    "messages": [
        "439cdfaa2971ad446568f3d5a517e5d1 (10:07): Gasp. 2h lost on a forgotten |return|.",
        "439cdfaa2971ad446568f3d5a517e5d1 (10:07): bashes head against wall.",
        "439cdfaa2971ad446568f3d5a517e5d1 (10:07): hopes that we will have static analysis for JS one of these days.",
        "6ba643dd1744c0733e5befe047d6025f (10:08): 439cdfaa2971ad446568f3d5a517e5d1: need help to kill yourself? :)",
        "439cdfaa2971ad446568f3d5a517e5d1 (10:08): :)",
        "827fac6a4d016d53b6874573cf37fc05 (10:08): Almost as bad as 2h lost on mixing up loop variables.",
        "827fac6a4d016d53b6874573cf37fc05 (10:09): i and j get real tricky sometimes..",
        "8b3687499080633e1898fa1dd209ef81 (10:13): It's more fun if you use i for two nested loops",
        "827fac6a4d016d53b6874573cf37fc05 (10:14): heh",
        "27a00904c55e1a3947176eabe2c0f262 (10:16): b023109ebddfcf4ca2fb128d6cb6f88a: you're preaching to the choir :) i'd love to see such a thing set up, but it's not up to me, and it's not something i can do",
        "b92af08a18aff623222629da14873ffd (10:17): 8b3687499080633e1898fa1dd209ef81: that's one time that let can actually save you :-)",
        "8b3687499080633e1898fa1dd209ef81 (10:17): b92af08a18aff623222629da14873ffd, or using C *gasp*",
        "439cdfaa2971ad446568f3d5a517e5d1 (10:18): 6ba643dd1744c0733e5befe047d6025f: I think that JS gives me all the help I need on that front, thanks.",
        "b023109ebddfcf4ca2fb128d6cb6f88a (10:21): 27a00904c55e1a3947176eabe2c0f262: oh, oops sorry about that. got a little carried away. I'm just concerned about the costs to do it\\",
        "27a00904c55e1a3947176eabe2c0f262 (10:21): :)",
        "b023109ebddfcf4ca2fb128d6cb6f88a (10:22): 27a00904c55e1a3947176eabe2c0f262: if a neat little document that explains how to set it up with all the constraints, references, help stuff would be nice. or a small test-basis project for stipulated time could give useful info. of its impact.",
        "b92af08a18aff623222629da14873ffd (10:30): discovers a hover delete button the hard way :s",
        "b023109ebddfcf4ca2fb128d6cb6f88a (10:32): 27a00904c55e1a3947176eabe2c0f262: an ad-supported  (atleast less annoying ones which's again relative :| ) model could do away with costs. yea, would be nice to see such thing setup tho.",
        "27a00904c55e1a3947176eabe2c0f262 (10:38): i doubt that would offset the cost of setting up the ads",
        "b023109ebddfcf4ca2fb128d6cb6f88a (10:47): yea. thanks 27a00904c55e1a3947176eabe2c0f262 , jdm and 827fac6a4d016d53b6874573cf37fc05 for answering my query",
        "b023109ebddfcf4ca2fb128d6cb6f88a (10:47): gotta go now",
        "439cdfaa2971ad446568f3d5a517e5d1 (10:58): On the other hand, investing a few lines of code into something that lets me print useful traces for asynchronous JavaScript was A Good Thing (tm).",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb (10:59): smaug: ping",
        "03cd618659ad3063c1d53077657a801c (10:59): 5ccdf3c6e2bd992bcd2f3a1abaad46cb: pong",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb (11:00): smaug: hey, i wonder if you could ask for approval of the focus manager fix yourself and give the risk assessment",
        "03cd618659ad3063c1d53077657a801c (11:00): ah, sorry, forgot to update that bug",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb (11:03): smaug: while talking about it, could you also explain the risk for fx 10? we really want to have it there and having a better description from you would probably help",
        "03cd618659ad3063c1d53077657a801c (11:04): 5ccdf3c6e2bd992bcd2f3a1abaad46cb: added a comment",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb (11:05): smaug: thanks! Lets see if we will be lucky",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:06): 8b3687499080633e1898fa1dd209ef81: do you read every patch and try checkin?",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb (11:07): ttaubert: is it possible with your custom shortcuts extension to re-assign the quit shortcut?",
        "8b3687499080633e1898fa1dd209ef81 (11:07): 9b3ef8e7773a46885690fdb7931a02f5, roughly every m-c checkin, and I skim over try pushes regularly",
        "59e570bef8ead953686ff65207d2dfbc (11:10): he has so many try pushes himself that he can't help but notice",
        "280c14695448bfae4ed8a15528e9eb21 (11:13): for the crash tests on tbpl on mobile, can you see the logcat from before the crash? Or even the partial stack-trace? All it seems to be telling me is that it crashed...",
        "8b3687499080633e1898fa1dd209ef81 (11:21): 59e570bef8ead953686ff65207d2dfbc, pff",
        "59e570bef8ead953686ff65207d2dfbc (11:21): :)",
        "f98dfe3de1ed073d07da1065fb908d31 (11:25): 280c14695448bfae4ed8a15528e9eb21, you might be able to get access to one of the tinderbox machines",
        "f98dfe3de1ed073d07da1065fb908d31 (11:25): jmaher would know more, when he comes online",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:34): what should I put for &quot;Risk for taking this patch&quot;, viz. bug 705407 on aurora?",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:35): doesn't really understand the cost/benefits of fallible and infallible mallocs",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:35): nor why &quot;infallible but liable to crash&quot; is a good thing",
        "b2d09b73eb5ad0228f9cb2e51485a45f (11:36): are you talking about the windows version?",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:36): to me it sounds like legalizing theft to reduce the crime statistics",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:36): b2d09b73eb5ad0228f9cb2e51485a45f: the patch is cross-platform",
        "8b3687499080633e1898fa1dd209ef81 (11:36): 9b3ef8e7773a46885690fdb7931a02f5, better than fallible and still going to crash somewhere randomly",
        "8b3687499080633e1898fa1dd209ef81 (11:37): Risks: none, IMO",
        "8b3687499080633e1898fa1dd209ef81 (11:38): Random code of the day: #if defined(mips) || defined(__mips__) || defined(MIPS) || defined(_MIPS_)",
        "827fac6a4d016d53b6874573cf37fc05 (11:39): :|",
        "b2d09b73eb5ad0228f9cb2e51485a45f (11:46): ehum, thanks. does the windows version still crash after being build with msvc?",
        "9b3ef8e7773a46885690fdb7931a02f5 (11:50): b2d09b73eb5ad0228f9cb2e51485a45f: oh, sorry, was that to me? someone tested a try build on windows and said it didn't crash (or rather that it crashed somewhere else) -- bug 705407 comment 10",
        "b2d09b73eb5ad0228f9cb2e51485a45f (11:58): yes, also, strange",
        "b2d09b73eb5ad0228f9cb2e51485a45f (11:58): let me run it again and see where it crashes",
        "b2d09b73eb5ad0228f9cb2e51485a45f (12:04): it's line 5464 in jsobj.cpp",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:19): is puzzled how bug 718066 differs from about:telemetry",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:21): (other than including a unique identifier and being opt-out rather than opt-in, if the discussion in related bug 707970 is correct)",
        "27a00904c55e1a3947176eabe2c0f262 (12:28): 54d718f6cca21e66ee5a5e3bfd001912: pretty much just that. there's some high-level overlap, but the data collected is very different",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:51): !seen bent",
        "eb215559f21ce08fc2c0af415cb66253 (12:51): bent was last seen 2 days, 11 hours, 17 minutes and 35 seconds ago, saying 'but i don't think we do' in #b2g."
    ],
    "person_ids": [
        "439cdfaa2971ad446568f3d5a517e5d1",
        "6ba643dd1744c0733e5befe047d6025f",
        "827fac6a4d016d53b6874573cf37fc05",
        "8b3687499080633e1898fa1dd209ef81",
        "27a00904c55e1a3947176eabe2c0f262",
        "b92af08a18aff623222629da14873ffd",
        "b023109ebddfcf4ca2fb128d6cb6f88a",
        "5ccdf3c6e2bd992bcd2f3a1abaad46cb",
        "03cd618659ad3063c1d53077657a801c",
        "9b3ef8e7773a46885690fdb7931a02f5",
        "59e570bef8ead953686ff65207d2dfbc",
        "280c14695448bfae4ed8a15528e9eb21",
        "f98dfe3de1ed073d07da1065fb908d31",
        "b2d09b73eb5ad0228f9cb2e51485a45f",
        "54d718f6cca21e66ee5a5e3bfd001912",
        "eb215559f21ce08fc2c0af415cb66253"
    ]
}