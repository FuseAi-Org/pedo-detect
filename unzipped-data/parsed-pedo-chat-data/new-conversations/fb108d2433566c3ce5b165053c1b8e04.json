{
    "id": "fb108d2433566c3ce5b165053c1b8e04",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): so to get an.ne I need to a have a registered company in Nigeria named &quot;an&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): that seems like too much trouble",
        "070dd72385b8b2b205db53237da57200 (15:50): man, uganda doesn't have any silly restrictions like that",
        "88d4d34a8064a4ff39fd5e144eea7762 (15:53): edb259c0e0038f38bb200bc20c8cbf7e, surely you could just bribe the right official?",
        "cc097e0d7183ae8436e7df709553c8c0 (16:08): &quot;Markup conformance requirements that need to be tested and give them a stable identifier that will persist across drafts of the specification.&quot; - http://www.w3.org/TR/2010/NOTE-test-methodology-20100128/",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:10): wonders how many thousands of distinct conformance requirements there are in HTML5.",
        "ab7faae5d7b250ea8606486575f8f79c (16:11): That's easy, just use the text of the conformance requirement as the identifier",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:12): I guess if the text changes, you've changed the conformance requirement anyway . . .",
        "ab7faae5d7b250ea8606486575f8f79c (16:13): 88d4d34a8064a4ff39fd5e144eea7762: I counted 223 requirement statements for &lt;canvas&gt; a while ago",
        "ab7faae5d7b250ea8606486575f8f79c (16:13): so there's going to be quite a lot across the whole spec",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:13): Is that counting something like &quot;When X occurs, user agents must execute the following algorithm:&quot; as one requirement or lots?",
        "ab7faae5d7b250ea8606486575f8f79c (16:14): Lots",
        "ab7faae5d7b250ea8606486575f8f79c (16:15): (I suppose it's more about testable points than about conformance requirements)",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:16): There are what, like 8,000 tests for CSS2.1?  And HTML5 is how much longer, twenty times as long?",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:16): :/",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:17): is ballparking",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:17): last estimate was 50000 tests needed",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:17): maybe that was optimistic",
        "65325d50b2e25aca54bc871b89758c9c (16:18): HTML5 has lots of features, many different facets to test for each, very detailed requirements for most of them, and some nontrivial interactions among different features",
        "65325d50b2e25aca54bc871b89758c9c (16:19): so probably the level of test coverage needed is even higher than comparison of length to CSS would imply",
        "65325d50b2e25aca54bc871b89758c9c (16:19): though to be fair, CSS is also pretty damn complicated",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): CSS is prolly more complicated",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): most of HTML5 is written in a pretty straightforward way",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): CSS has very complex interactions",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:19): You couldn't test a lot of HTML5 requirements in a cross-browser way, could you?  You'd need something more like Mozilla's mochitests, that can synthesize input and whatnot.",
        "65325d50b2e25aca54bc871b89758c9c (16:19): CSS has some very complex interactions by design",
        "65325d50b2e25aca54bc871b89758c9c (16:20): HTML5 has a fair number of complex interactions by accident of history",
        "65325d50b2e25aca54bc871b89758c9c (16:20): there are many HTML requirements that would be hard to test if the browser itself is your only test tool",
        "65325d50b2e25aca54bc871b89758c9c (16:20): that doesn't mean you can't do it in a cross-browser way",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:21): How would you do it, then?  Except manually, of course.",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:21): doesn't want to see anyone try running 100,000 tests manually :P",
        "65325d50b2e25aca54bc871b89758c9c (16:21): one possible way is to run an external program to synthesize input events, and possibly capture output",
        "65325d50b2e25aca54bc871b89758c9c (16:22): people have made such tools that work with any given browser, for example for testing Web sites or for general QA of any native application with a GUI",
        "cc097e0d7183ae8436e7df709553c8c0 (16:22): i generated about 15000 tests for a css feature",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:22): &quot;Generated&quot;?",
        "65325d50b2e25aca54bc871b89758c9c (16:23): of course for any conformance requirement that can be tested by scripting against the DOM, that's the best way to do it",
        "cc097e0d7183ae8436e7df709553c8c0 (16:23): yeah, i wrote some python scripts",
        "cc097e0d7183ae8436e7df709553c8c0 (16:24): although i wanted to generate more for interaction with svg",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:25): So how many substantively different things did these 15,000 tests actually test?",
        "cc097e0d7183ae8436e7df709553c8c0 (16:27): i tested different combinations of percentages, lengths and keywords, visibility:hidden/visible, and the different values for the feature, for a number of different elements",
        "cc097e0d7183ae8436e7df709553c8c0 (16:27): including invalid cases",
        "cc097e0d7183ae8436e7df709553c8c0 (16:27): oh and with different images"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "070dd72385b8b2b205db53237da57200",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "cc097e0d7183ae8436e7df709553c8c0",
        "ab7faae5d7b250ea8606486575f8f79c",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}