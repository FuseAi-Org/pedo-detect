{
    "id": "2d7c69dcc8bc45e0f3fc70123745eb73",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (21:36): wonders what the OOXML namespaces are",
        "ab7faae5d7b250ea8606486575f8f79c (21:37): The five hundred page Primer document is full of examples like '&lt;revisions xmlns=&quot;...&quot; xmlns:r=&quot;...&quot;&gt;' and I can't find anywhere saying what you actually write in place of '...'",
        "ab7faae5d7b250ea8606486575f8f79c (21:50): Oh, the five thousand page specification does mention the namespaces in various places, so that's alright",
        "f139aba52f9fa1394b4034a7954b2220 (21:51): ab7faae5d7b250ea8606486575f8f79c: did you download the entire 5000 page spec?",
        "7b55d0f261619a93f9ae615a3cb18967 (21:51): well is &quot;...&quot; a valid namespace?",
        "f139aba52f9fa1394b4034a7954b2220 (21:52): 7b55d0f261619a93f9ae615a3cb18967: no, it needs to be a URI",
        "f139aba52f9fa1394b4034a7954b2220 (21:52): (though, in practice, &quot;...&quot; would work since consumers simply do string comparison.  They never need to resolve the URI",
        "ab7faae5d7b250ea8606486575f8f79c (21:53): f139aba52f9fa1394b4034a7954b2220: It's only 33MB",
        "f139aba52f9fa1394b4034a7954b2220 (21:54): ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:54): f139aba52f9fa1394b4034a7954b2220: true for just about any API except XOM",
        "f139aba52f9fa1394b4034a7954b2220 (21:54): what does XOM do specially?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:54): f139aba52f9fa1394b4034a7954b2220: XOM is designed to barf if the string does not look like a URI",
        "ab7faae5d7b250ea8606486575f8f79c (21:55): &quot;&lt;w:r&gt;&lt;w:t&gt;This sentence needs to be long enough to cause some kind of line br&lt;/w:t&gt;&lt;w:softHyphen/&gt;&lt;w:t&gt;eaking.&lt;/w:t&gt;&lt;/w:r&gt;&quot; - isn't there, like, a Unicode character for soft hyphens?",
        "f139aba52f9fa1394b4034a7954b2220 (21:55): what's its criteria for looking like a URI?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:55): f139aba52f9fa1394b4034a7954b2220: dunno. I haven't checked",
        "ab7faae5d7b250ea8606486575f8f79c (21:56): (Their examples of line-breaking are all rather broken because the PDF page width is wider than their &quot;long enough&quot; sentences so it doesn't actually demonstrate any line-breaking)",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:59): ab7faae5d7b250ea8606486575f8f79c: there is, U+00AD",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:00): f139aba52f9fa1394b4034a7954b2220: https://xom.dev.java.net/source/browse/xom/src/nu/xom/URIUtil.java?rev=1.26&amp;view=markup",
        "7b55d0f261619a93f9ae615a3cb18967 (22:00): http://www.oreillynet.com/xml/blog/images/OpenXMLSchemas3.pdf",
        "ab7faae5d7b250ea8606486575f8f79c (22:00): wonders why they use the term &quot;high ANSI&quot; for all Unicode characters that are not ASCII, &quot;complex script&quot; or &quot;East Asian&quot;",
        "7b55d0f261619a93f9ae615a3cb18967 (22:00): is that list of namespaces at the end what you're looking for?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:00): f139aba52f9fa1394b4034a7954b2220: doesn't appear to be comprehensive",
        "f139aba52f9fa1394b4034a7954b2220 (22:00): b8810fee2f4a71f849f3f7409546d1d9: thanks",
        "ab7faae5d7b250ea8606486575f8f79c (22:01): 73eaf221abca1b8244e34b0b9e76ac46: I guess the more relevant question is, why &lt;w:softHyphen/&gt; instead of &amp;#xAD;?",
        "ab7faae5d7b250ea8606486575f8f79c (22:02): 7b55d0f261619a93f9ae615a3cb18967: Ah, thanks, looks like it is",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:04): ab7faae5d7b250ea8606486575f8f79c: &amp;#xAD; doesn't have enough angle brackets? :)",
        "7b55d0f261619a93f9ae615a3cb18967 (22:05): think we should just remove all non-tag stuff from our formats",
        "7b55d0f261619a93f9ae615a3cb18967 (22:06): &lt;word value=&quot;hello&quot;/&gt;&lt;comma /&gt;&lt;space /&gt; &lt;word value=&quot;world&quot;/&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (22:07): It's not like they're that fond of angle brackets - they use one tag with a comma-separated lists of font names in an attribute, instead of something properly XMLish like &lt;fonts&gt;&lt;font name=&quot;1&quot;/&gt;&lt;font name=&quot;2&quot;/&gt;&lt;/fonts&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:09): http://about.validator.nu/htmlparser/",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:09): does that look like something that could be announced?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:10): nope",
        "ab7faae5d7b250ea8606486575f8f79c (22:10): ODF says to use Unicode characters for soft/non-breaking hyphens",
        "ab7faae5d7b250ea8606486575f8f79c (22:10): but it does have a &lt;text:tab/&gt; element",
        "ab7faae5d7b250ea8606486575f8f79c (22:10): Oh, it also has &lt;text:s/&gt; for a space character",
        "ab7faae5d7b250ea8606486575f8f79c (22:10): (and &lt;text:s text:c=&quot;42&quot;/&gt; for multiple space characters)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:11): fixed the download link",
        "ab7faae5d7b250ea8606486575f8f79c (22:12): I guess XML isn't so great at marking up text documents when you want to have complex typography like whitespace",
        "f4dfad803df83144a5be86d9bca87678 (22:13): is there some spec that specifies img {display none;} shouldn't download the image?",
        "ab7faae5d7b250ea8606486575f8f79c (22:14): b8810fee2f4a71f849f3f7409546d1d9: http://about.validator.nu/htmlparser/apidocs/nu/validator/htmlparser/sax/HtmlParser.html says &quot;Version: $Id$&quot; which doesn't sound terribly useful",
        "ab7faae5d7b250ea8606486575f8f79c (22:14): f4dfad803df83144a5be86d9bca87678: I believe HTML5 says they must download the image",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:15): ab7faae5d7b250ea8606486575f8f79c: hmm. template dating from CVS days. how do I do -kkv with Subclipse?",
        "ab7faae5d7b250ea8606486575f8f79c (22:15): (or at least it says they must download the image when the image element is created, regardless of whether it's invisible via CSS)",
        "ab7faae5d7b250ea8606486575f8f79c (22:15): (but Opera doesn't do that, if I remember correctly)",
        "ab7faae5d7b250ea8606486575f8f79c (22:16): b8810fee2f4a71f849f3f7409546d1d9: I have no idea with Subclipse, but you'd have to set the file's &quot;svn:keywords&quot; property to &quot;Id&quot; (for each affected file)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:16): ab7faae5d7b250ea8606486575f8f79c: thanks",
        "f4dfad803df83144a5be86d9bca87678 (22:17): ab7faae5d7b250ea8606486575f8f79c: {display none;} seems to be a strategy for not downloading imgs on network expensive environments like handhelds/mobiles",
        "ab7faae5d7b250ea8606486575f8f79c (22:17): b8810fee2f4a71f849f3f7409546d1d9: Is htmlparser-1.0.zip meant to contain a __MACOSX directory containing only hidden files?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:17): ab7faae5d7b250ea8606486575f8f79c: artifact of OSX",
        "ab7faae5d7b250ea8606486575f8f79c (22:18): I guessed that from the name ;-)",
        "ab7faae5d7b250ea8606486575f8f79c (22:18): (but have no idea what it's containing)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:19): ab7faae5d7b250ea8606486575f8f79c: HFS resource fork and metadata emulation cruft",
        "ab7faae5d7b250ea8606486575f8f79c (22:19): f4dfad803df83144a5be86d9bca87678: Do you know if browser other than Opera acts that way?",
        "ab7faae5d7b250ea8606486575f8f79c (22:19): *if any browser",
        "f4dfad803df83144a5be86d9bca87678 (22:23): ab7faae5d7b250ea8606486575f8f79c: no, but I think it's a good idea if certain imgs can be marked not to download for the &quot;@media handheld&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (22:23): b8810fee2f4a71f849f3f7409546d1d9: The XSLT4HTML5 example appears to run correctly, so that seems good :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:23): ab7faae5d7b250ea8606486575f8f79c: good",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:24): proof by implementation that XSLT can be used with HTML5",
        "ab7faae5d7b250ea8606486575f8f79c (22:27): tries sorting the HTML5 spec",
        "ab7faae5d7b250ea8606486575f8f79c (22:27): &quot;Exception in thread &quot;main&quot; org.xml.sax.SAXParseException: Start tag ?h1? has a non-NCName name.&quot; - oh, that didn't work :-(",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:28): whoa",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:29): ab7faae5d7b250ea8606486575f8f79c: thanks",
        "f4dfad803df83144a5be86d9bca87678 (22:29): &quot;&quot;&quot;When the src attribute is set, the user agent must immediately begin to download the specified resource, unless the user agent cannot support images, or its support for images has been disabled.&quot;&quot;&quot;",
        "f4dfad803df83144a5be86d9bca87678 (22:31): its support for images has  been disabled.  ==  img {display none;} ??",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:32): forgot the Digit production...",
        "b07211a0c7cb119232799d2119cea90f (22:32): f4dfad803df83144a5be86d9bca87678: no, as in the user has told the browser to not display images",
        "b07211a0c7cb119232799d2119cea90f (22:32): setting an image to display:none does not amount to diabling image support",
        "b07211a0c7cb119232799d2119cea90f (22:32): since e.g. alt text isn't displayed",
        "f4dfad803df83144a5be86d9bca87678 (22:32): that's really binary when it comes to images.",
        "f4dfad803df83144a5be86d9bca87678 (22:33): though I guess it could prevent odd things happening.",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:38): ab7faae5d7b250ea8606486575f8f79c: fixed",
        "ab7faae5d7b250ea8606486575f8f79c (22:39): &quot;Exception in thread &quot;main&quot; org.xml.sax.SAXParseException: This document is not mappable to XML 1.0 without data loss to ?--? in a comment.&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (22:39): (I assume that's intentional)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:40): ab7faae5d7b250ea8606486575f8f79c: that is correct, isn't it",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): Hmm... Your validator complains about it on line 41550, column 5",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): which is",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): &lt;!-- XXX alt=&quot;&quot;: Define that either the src=&quot;&quot; is shown (as an image)",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): or the alt=&quot;&quot; is shown (inline) but should not ever have both at",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): once. --&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): I'm not quite sure where the &quot;Consecutive hyphens did not terminate a comment.&quot; comes from in that section",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): Oh",
        "ab7faae5d7b250ea8606486575f8f79c (22:43): There's a &lt;!-- just before that",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:44): whew",
        "ab7faae5d7b250ea8606486575f8f79c (22:45): If I fix that, it all seems to work correctly",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:46): ab7faae5d7b250ea8606486575f8f79c: thanks",
        "ab7faae5d7b250ea8606486575f8f79c (22:49): If I pass a load of arbitrary HTML through it, I get &quot;Exception in thread &quot;main&quot; org.xml.sax.SAXParseException: Attribute name ?type&quot;block&quot;? is not an NCName.&quot; which seems entirely true",
        "ab7faae5d7b250ea8606486575f8f79c (22:53): can't think of any other easy ways to try to break it"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "f139aba52f9fa1394b4034a7954b2220",
        "7b55d0f261619a93f9ae615a3cb18967",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "f4dfad803df83144a5be86d9bca87678",
        "b07211a0c7cb119232799d2119cea90f"
    ]
}