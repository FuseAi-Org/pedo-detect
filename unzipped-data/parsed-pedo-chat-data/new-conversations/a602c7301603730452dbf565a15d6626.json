{
    "id": "a602c7301603730452dbf565a15d6626",
    "messages": [
        "15bf902c673396cf2696209bd165dbf8 (18:44): i have a drag &amp; drop script for my site... is there any way to test when the drag event starts if the element is on the top layer. if it is behind something it will be set to the top layer?",
        "af7018bce3402d595aa0d0a2799da15b (18:44): JS mutex hints, anyone?",
        "1418091152ccd1dc64db38125b8b4dd2 (18:44): well",
        "1418091152ccd1dc64db38125b8b4dd2 (18:45): there should be a z-order thing",
        "1418091152ccd1dc64db38125b8b4dd2 (18:45): lemme look at something",
        "1418091152ccd1dc64db38125b8b4dd2 (18:45): z-index",
        "af7018bce3402d595aa0d0a2799da15b (18:45): I have a number of times invoking an action, and I need to queue all the subsequent calls until the topmost one returns. Anyone has ideas how to do that?",
        "af7018bce3402d595aa0d0a2799da15b (18:45): s/times/timers/",
        "15bf902c673396cf2696209bd165dbf8 (18:46): for the z-index would you need to know the index of the highest element ?",
        "1418091152ccd1dc64db38125b8b4dd2 (18:46): msturge, .style.z-index = 1000; or something lol",
        "1418091152ccd1dc64db38125b8b4dd2 (18:47): not sure how you could detect what is the highest",
        "15bf902c673396cf2696209bd165dbf8 (18:47): hahaha... yes that would work... but the page is designed to render &quot;several&quot; elements 10+ all floating around",
        "1418091152ccd1dc64db38125b8b4dd2 (18:47): and whatever is clicked moves to the top",
        "1418091152ccd1dc64db38125b8b4dd2 (18:47): hmm",
        "15bf902c673396cf2696209bd165dbf8 (18:48): i can see how the index's would go wobbly if i just set them to some high value each time",
        "1418091152ccd1dc64db38125b8b4dd2 (18:48): agreed",
        "15bf902c673396cf2696209bd165dbf8 (18:49): at the moment to get me started i used <a href=\"http://www.dynamicdrive.com/dynamicindex11/domdrag/dom-drag.js\">http://www.dynamicdrive.com/dynamicindex11/domdrag/dom-drag.js</a>",
        "1418091152ccd1dc64db38125b8b4dd2 (18:49): I *can* think of ways to kinda fake it",
        "1418091152ccd1dc64db38125b8b4dd2 (18:49): as in, they would work",
        "15bf902c673396cf2696209bd165dbf8 (18:49): when it creates the elements it doesn't seem to use z-index. so i'm wondering if it's doing the layers in a different way",
        "1418091152ccd1dc64db38125b8b4dd2 (18:50): how are you creating them?",
        "15bf902c673396cf2696209bd165dbf8 (18:50): yal i was thinking about looping through all the elements, if they have the id of a draggable object get it's z-index when highest is found use that. and set the other to the lowest.",
        "1418091152ccd1dc64db38125b8b4dd2 (18:50): or",
        "1418091152ccd1dc64db38125b8b4dd2 (18:51): everytime you drag something, it increments a counter",
        "1418091152ccd1dc64db38125b8b4dd2 (18:51): and applies that counter # to be its z-index",
        "1418091152ccd1dc64db38125b8b4dd2 (18:51): therefor, the last thing you drag will always have the highest z-index",
        "15bf902c673396cf2696209bd165dbf8 (18:51): mmm... that could work",
        "1418091152ccd1dc64db38125b8b4dd2 (18:52): I'm going to implement the same thing on something I'm working on, now that I think of it",
        "15bf902c673396cf2696209bd165dbf8 (18:53): it doesn't seem to be a popular topic on google. mostly just dragging... and sorting",
        "1418091152ccd1dc64db38125b8b4dd2 (18:54): its the dragging bit I had problems implementing",
        "1418091152ccd1dc64db38125b8b4dd2 (18:54): where did you get your script for that?",
        "af7018bce3402d595aa0d0a2799da15b (18:54): so, no mutexes for me? ;P",
        "1418091152ccd1dc64db38125b8b4dd2 (18:54): dunno what a mutex is",
        "1418091152ccd1dc64db38125b8b4dd2 (18:54): so not from me :-)",
        "15bf902c673396cf2696209bd165dbf8 (18:56): <a href=\"http://www.dynamicdrive.com/dynamicindex11/domdrag/dom-drag.js\">http://www.dynamicdrive.com/dynamicindex11/domdrag/dom-drag.js</a>",
        "15bf902c673396cf2696209bd165dbf8 (18:57): i've been building on that",
        "1418091152ccd1dc64db38125b8b4dd2 (18:57): wow",
        "1418091152ccd1dc64db38125b8b4dd2 (18:57): thats WAY simpler than what I've got",
        "1418091152ccd1dc64db38125b8b4dd2 (18:57): mind you, do you run into problems with text being selected randomly?",
        "15bf902c673396cf2696209bd165dbf8 (18:58): not as of now. i haven't really noticed any problems with this script yet. just this layer problem",
        "1418091152ccd1dc64db38125b8b4dd2 (19:05): hmm",
        "1418091152ccd1dc64db38125b8b4dd2 (19:24): ok... question",
        "233ca1f467e8dabcd3aa31cbb31694d9 (19:24): mst: Set another variable, say &lt;variable&gt;$MUTEX",
        "233ca1f467e8dabcd3aa31cbb31694d9 (19:25): mst: And just refuse to use the original variable if that variable is set.",
        "1418091152ccd1dc64db38125b8b4dd2 (19:25): if I have an input string in the form of &quot;&lt;name&gt;1&quot;",
        "1418091152ccd1dc64db38125b8b4dd2 (19:25): I want to just get the number at the end of the string",
        "1418091152ccd1dc64db38125b8b4dd2 (19:26): since I'm a regex noob, is there a way to pull that?",
        "46760632fe3926290a2d59541c376a65 (19:26): /dev/brain&quot;)",
        "233ca1f467e8dabcd3aa31cbb31694d9 (19:26): CerebroJD: /[^\\d]*(\\d+)/",
        "1418091152ccd1dc64db38125b8b4dd2 (19:27): and how do I use that?",
        "1418091152ccd1dc64db38125b8b4dd2 (19:27): ooh",
        "af7018bce3402d595aa0d0a2799da15b (19:28): Twey_: I worked around it by creating a private data buffer for each action",
        "af7018bce3402d595aa0d0a2799da15b (19:30): thanks anyway",
        "233ca1f467e8dabcd3aa31cbb31694d9 (19:30): mst: Heh, OK",
        "233ca1f467e8dabcd3aa31cbb31694d9 (19:33): CerebroJD: var num = yourstring.replace(/[^\\d]*(\\d+)/, '$1');",
        "1418091152ccd1dc64db38125b8b4dd2 (19:34): what does the $1 mean?",
        "53e46739579560198dd355c9538f3a69 (19:34): firs ()",
        "53e46739579560198dd355c9538f3a69 (19:34): *first",
        "1418091152ccd1dc64db38125b8b4dd2 (19:34): is $0 the first bit, with $1 being the second?",
        "1418091152ccd1dc64db38125b8b4dd2 (19:35): jseval &quot;test1&quot;.replace(/[^\\d]*(\\d+)/, '$1');",
        "1418091152ccd1dc64db38125b8b4dd2 (19:35): jseval: &quot;test1&quot;.replace(/[^\\d]*(\\d+)/, '$1');",
        "0ff551825eefd6e6b2c3185f7e00b54f (19:35): CerebroJD: Return: 1",
        "1418091152ccd1dc64db38125b8b4dd2 (19:35): win",
        "1418091152ccd1dc64db38125b8b4dd2 (19:35): thx :D",
        "0ff421762117392eb0ae973c1453b4de (19:39): I am using  request.responseXML to get my response back, yet .getElementsByTagName gives me an error",
        "1e6235e02c4e660245795d019cc22870 (19:39): <a href=\"http://pastebin.ca/106726\">http://pastebin.ca/106726</a>",
        "0ff421762117392eb0ae973c1453b4de (19:39): it always seems like ti comes back as plain text",
        "0ff551825eefd6e6b2c3185f7e00b54f (19:39): The paste 106726 has been copied to <a href=\"http://erxz.com/pb/2409\">http://erxz.com/pb/2409</a>",
        "1e6235e02c4e660245795d019cc22870 (19:39): why do the bullets disappear?",
        "1e6235e02c4e660245795d019cc22870 (19:39): at least they do in FF and safari",
        "1e6235e02c4e660245795d019cc22870 (19:40): yes, opera too",
        "1e6235e02c4e660245795d019cc22870 (19:41): any ideas?",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (19:53): possibly because you're setting their style to &quot;block&quot; when they should really be &quot;list-item&quot; (see <a href=\"http://www.w3.org/TR/CSS21/visuren.html#propdef-display\">http://www.w3.org/TR/CSS21/visuren.html#propdef-display</a>)",
        "1e6235e02c4e660245795d019cc22870 (19:53): sounds promising, thanks :)",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (19:54): this is why it's better to toggle visibility by setting display to &quot;none&quot; to hide and setting it to &quot;&quot; to show again, which reverts to whatever the default display attribute is",
        "1e6235e02c4e660245795d019cc22870 (19:54): oh, that's a good idea",
        "1e6235e02c4e660245795d019cc22870 (19:56): thanks again :)"
    ],
    "person_ids": [
        "15bf902c673396cf2696209bd165dbf8",
        "af7018bce3402d595aa0d0a2799da15b",
        "1418091152ccd1dc64db38125b8b4dd2",
        "233ca1f467e8dabcd3aa31cbb31694d9",
        "46760632fe3926290a2d59541c376a65",
        "53e46739579560198dd355c9538f3a69",
        "0ff551825eefd6e6b2c3185f7e00b54f",
        "0ff421762117392eb0ae973c1453b4de",
        "1e6235e02c4e660245795d019cc22870",
        "2bdd04d0ec117ac0f48fb417f4542ad8"
    ]
}