{
    "id": "84714cc1cb4757b6109bd448de5aee1d",
    "messages": [
        "679aa9acaa7e936de27ec30d8a6865cc (02:07): how do I get element by class?",
        "679aa9acaa7e936de27ec30d8a6865cc (02:07): is that even possible?",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:08): glen_quagmire: Prototype.js has that function",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:08): it's not native to javascript",
        "679aa9acaa7e936de27ec30d8a6865cc (02:08): mochit?",
        "679aa9acaa7e936de27ec30d8a6865cc (02:09): mochikit?",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:09): maybe, I have no idea",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:09): javascript frameworks are for wimps",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:11): GarethAdams: out of curiosity what do you mean by framework?",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:11): GarethAdams: is prototype.js included in that definition?",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:11): I probably mean library",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:11): and what do you call prototype.js ?",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:11): I wasn't entirely serious",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:12): ok, but I'm curious",
        "b94923bd08c1e791653e442d3aae4086 (02:12): bewest :o",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:12): what kind of thing is prototype.js?",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:12): it's a library",
        "6239f0a4eb71a025df48cd9b32ad7a84 (02:12): gareth: did you just reecommend prototype.js",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:13): a set of prewritten functions, most of which are too general to be efficient on any particular page",
        "6239f0a4eb71a025df48cd9b32ad7a84 (02:13): seriously, ive been considering using it, but i seen its recommendations by anyone i revere",
        "7f6bc1f3864e442f82b055d9fe7bb3df (02:14): document.getElementById(&quot;div1&quot;).innerHTML=&quot;&quot;; will erase everything within that element correct?",
        "65d80b12a8feb8a1d3073fef8f1fc147 (02:14): sia-soup: yes, including event handlers and whatnot",
        "7f6bc1f3864e442f82b055d9fe7bb3df (02:14): i wan it to erase all children",
        "7f6bc1f3864e442f82b055d9fe7bb3df (02:14): too",
        "6239f0a4eb71a025df48cd9b32ad7a84 (02:15): ohh it will baby",
        "6239f0a4eb71a025df48cd9b32ad7a84 (02:15): it replaces everything between &lt;tag&gt; and &lt;/tag&gt;",
        "679aa9acaa7e936de27ec30d8a6865cc (02:17): i want to update parent from popup",
        "679aa9acaa7e936de27ec30d8a6865cc (02:17): window.opener.",
        "679aa9acaa7e936de27ec30d8a6865cc (02:18): &lt;input name=&quot;blah&quot; type=&quot;checkbox&quot;/&gt;",
        "679aa9acaa7e936de27ec30d8a6865cc (02:18): so do I use onchange?",
        "679aa9acaa7e936de27ec30d8a6865cc (02:18): if it changes, i'm gonna do something",
        "7049adecafa952f177c12843254f99ca (02:19): onchange occurs when the .value is changed",
        "f9f55a3e8be14fc877a9ae5642b53041 (02:19): but not when it's changed programatically",
        "7049adecafa952f177c12843254f99ca (02:19): and that only happens on non-select elements when they lose focus",
        "7049adecafa952f177c12843254f99ca (02:20): events are only triggered by user interaction as a general rule",
        "679aa9acaa7e936de27ec30d8a6865cc (02:20): i mean when user checks or unchecks checkbox, i need to call a function",
        "679aa9acaa7e936de27ec30d8a6865cc (02:20): how do I do that?",
        "7049adecafa952f177c12843254f99ca (02:21): onclick/onkeypress",
        "679aa9acaa7e936de27ec30d8a6865cc (02:21): thanks",
        "7049adecafa952f177c12843254f99ca (02:21): you need both, I like to navigate forms with the kb",
        "679aa9acaa7e936de27ec30d8a6865cc (02:23): yah . but onChange just works",
        "679aa9acaa7e936de27ec30d8a6865cc (02:31): when I press check/uncheck checkbox, i need to update a list.and add/delete this checkbox's name or value to the list",
        "679aa9acaa7e936de27ec30d8a6865cc (02:31): &lt;input name=&quot;car&quot; type=&quot;checkbox&quot; onChange=&quot;updateKeywords();&quot;/&gt;",
        "679aa9acaa7e936de27ec30d8a6865cc (02:31): do I have to pass this to updateKeywords() like onChange=&quot;updateKeywords(this);&quot; ?",
        "679aa9acaa7e936de27ec30d8a6865cc (02:33): ok so I get HTMLInputElement",
        "5e22a39ccf920b270a88def51d3be172 (02:33): pass it like any other variable?",
        "5e22a39ccf920b270a88def51d3be172 (02:34): my bad",
        "5e22a39ccf920b270a88def51d3be172 (02:34): 1) use a closure 2) use a global",
        "5e22a39ccf920b270a88def51d3be172 (02:34): 3) user interpolation",
        "5e22a39ccf920b270a88def51d3be172 (02:34): *use",
        "5e22a39ccf920b270a88def51d3be172 (02:34): 1 and 3 require setting up the event after you get the element",
        "679aa9acaa7e936de27ec30d8a6865cc (02:35): ok too compilcated",
        "679aa9acaa7e936de27ec30d8a6865cc (02:35): i pass this...so in the updateKeywords(obj) , how do I retrieve if the input checkbox is checked or not?",
        "679aa9acaa7e936de27ec30d8a6865cc (02:35): DOM element reference doesn't seem to know",
        "679aa9acaa7e936de27ec30d8a6865cc (02:41): is there std::vector or growable array or list in javascript?",
        "1e6235e02c4e660245795d019cc22870 (02:41): arrays are growable",
        "679aa9acaa7e936de27ec30d8a6865cc (02:41): std::map would be nice",
        "1e6235e02c4e660245795d019cc22870 (02:41): you can write one trivially",
        "679aa9acaa7e936de27ec30d8a6865cc (02:42): useruser: how do you grow an array and search for an element and remove it?",
        "1e6235e02c4e660245795d019cc22870 (02:42): glen_quagmire: oh, removal is not so simple i think",
        "679aa9acaa7e936de27ec30d8a6865cc (02:42): i need to push_back a lot and search for something and remove it frequently",
        "1e6235e02c4e660245795d019cc22870 (02:43): glen_quagmire: i see",
        "1e6235e02c4e660245795d019cc22870 (02:43): glen_quagmire: you could write that pretty easily tho, i think",
        "679aa9acaa7e936de27ec30d8a6865cc (02:43): possibly, if it's like a dictionary where i can reference an element using string, that'd be cool",
        "679aa9acaa7e936de27ec30d8a6865cc (02:43): no i need to do it in 15 min deadline",
        "1e6235e02c4e660245795d019cc22870 (02:44): dunno then",
        "0589eab78f18bfc6ac239b671666af49 (02:45): how do i create an array from a string for example:  str='&quot;hello&quot;, &quot;world&quot;';  a = new Array(str);  // this doesnt work",
        "679aa9acaa7e936de27ec30d8a6865cc (02:47): i want  a javascript container that i can insert/find/delete",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:49): dhonn, what kind of array do you want.  An array of it's characters?",
        "0589eab78f18bfc6ac239b671666af49 (02:49): well i want it to be simlar to a[0]='hello'; a[1] ='world';",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:50): var str=&quot;hello, world&quot;;  var arr=str.split(',');",
        "1e6235e02c4e660245795d019cc22870 (02:50): glen_quagmire: use objects",
        "d12a37cf054627b08c7d84073cee1deb (02:51): why cant i do something like this? -&gt; if (var t = &quot;/hello eh uh&quot;.match(/^\\/\\s+(\\S+)\\s+(.+)/)) { alert(t); }",
        "679aa9acaa7e936de27ec30d8a6865cc (02:51): ok",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:51): rimad, because you can't declare a variable inside of an if statement.",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:52): var t; if (t=...){ alert(t); }",
        "d12a37cf054627b08c7d84073cee1deb (02:52): damn",
        "d12a37cf054627b08c7d84073cee1deb (02:52): aah ok!",
        "d12a37cf054627b08c7d84073cee1deb (02:52): i get it now",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:52): You could just drop the 'var ' too",
        "0589eab78f18bfc6ac239b671666af49 (02:52): even though its like 'hello', 'world'",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:52): but you might get a warning along the lines of 'Assignment to undeclared variable t in ...'",
        "d12a37cf054627b08c7d84073cee1deb (02:53): hmh..",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:53): dhonn, is the string formatted w/ the quotes (like a CSV line or something)",
        "d12a37cf054627b08c7d84073cee1deb (02:53): jseval: if (t = &quot;/hello eh uh&quot;.match(/^\\/\\s+(\\S+)\\s+(.+)/)) { alert(t); }",
        "0ff551825eefd6e6b2c3185f7e00b54f (02:53): rimad: Return: undefined",
        "d12a37cf054627b08c7d84073cee1deb (02:53): jseval:var t; if (t = &quot;/hello eh uh&quot;.match(/^\\/\\s+(\\S+)\\s+(.+)/)) { alert(t); }",
        "0589eab78f18bfc6ac239b671666af49 (02:53): yeah",
        "0ff551825eefd6e6b2c3185f7e00b54f (02:53): rimad: Return: undefined",
        "d12a37cf054627b08c7d84073cee1deb (02:54): it compiles right",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:54): variables don't technically have to be declared with the 'var ' keyword",
        "1e6235e02c4e660245795d019cc22870 (02:54): dhonn: you could use eval",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:54): that's why you'd only get a warning, if anything",
        "1e6235e02c4e660245795d019cc22870 (02:54): dhonn: if you trust the input",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a (02:54): using var vs. not using var makes a difference in the scope of the variable, but that's all.",
        "679aa9acaa7e936de27ec30d8a6865cc (02:55): ok i have &lt;input type=&quot;text... what's that called value?",
        "0589eab78f18bfc6ac239b671666af49 (02:55): see this will work a = new Array('hello', 'world');  but this doesnt str=&quot;'hello', 'world'&quot;;  a=new Array(str)",
        "1e6235e02c4e660245795d019cc22870 (02:55): dhonn: a = eval( '[' + str + ']' );",
        "679aa9acaa7e936de27ec30d8a6865cc (02:55): value of HTMLElementInput ?",
        "d12a37cf054627b08c7d84073cee1deb (02:55): kicken any reason why inserting javascript:if (t = &quot;/hello eh uh&quot;.match(/^\\/\\s+(\\S+)\\s+(.+)/)) { alert(t); } in IE's url bar doesnt...do anything?"
    ],
    "person_ids": [
        "679aa9acaa7e936de27ec30d8a6865cc",
        "f9f55a3e8be14fc877a9ae5642b53041",
        "65d80b12a8feb8a1d3073fef8f1fc147",
        "b94923bd08c1e791653e442d3aae4086",
        "6239f0a4eb71a025df48cd9b32ad7a84",
        "7f6bc1f3864e442f82b055d9fe7bb3df",
        "7049adecafa952f177c12843254f99ca",
        "5e22a39ccf920b270a88def51d3be172",
        "1e6235e02c4e660245795d019cc22870",
        "0589eab78f18bfc6ac239b671666af49",
        "9a2b9664480d18b4f9bdb1fa5bd20b0a",
        "d12a37cf054627b08c7d84073cee1deb",
        "0ff551825eefd6e6b2c3185f7e00b54f"
    ]
}