{
    "id": "104344406196226009aa08f2acabedf8",
    "messages": [
        "c528372192f08b77456f62d8c8736017 (13:29): given an object, how do i get the object's id?",
        "26189ca156760514ce0c04917cd91cea (13:29): .id?",
        "c528372192f08b77456f62d8c8736017 (13:29): no",
        "c528372192f08b77456f62d8c8736017 (13:29): undefined",
        "26189ca156760514ce0c04917cd91cea (13:29): Javascript should be able to modify a div's opacity (as in -moz-opacity), right?",
        "189edbf28f3da1f5bf29efe53c42687b (13:30): sloloem you can stick with style.opacity for ff/saf",
        "26189ca156760514ce0c04917cd91cea (13:30): That works?",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:31): SubOne: are you able to select the object in the first place?",
        "26189ca156760514ce0c04917cd91cea (13:31): Is it still a decimal &lt;= 1?",
        "c528372192f08b77456f62d8c8736017 (13:31): i have the object",
        "26189ca156760514ce0c04917cd91cea (13:31): Yup",
        "c528372192f08b77456f62d8c8736017 (13:31): i need the objects id",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:31): SubOne: then [object].id should be it",
        "c528372192f08b77456f62d8c8736017 (13:31): not working",
        "c528372192f08b77456f62d8c8736017 (13:31): sec...",
        "c528372192f08b77456f62d8c8736017 (13:32): oh nvm",
        "c528372192f08b77456f62d8c8736017 (13:32): i knew i was doing something wrong",
        "c528372192f08b77456f62d8c8736017 (13:32): the object was actually inside another",
        "c528372192f08b77456f62d8c8736017 (13:32): ty",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:32): then please don't ask, until you feel the urge to bang your head against the desk :)",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:35): sloloem: i just saw your example. neat",
        "26189ca156760514ce0c04917cd91cea (13:35): It's pretty hackish.",
        "26189ca156760514ce0c04917cd91cea (13:35): But I suppose I can't complain much since it works... want me to post current code?",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:35): just upload it to the server where i can see it in action :)",
        "26189ca156760514ce0c04917cd91cea (13:36): <a href=\"http://dagon.rh.rit.edu/.sp34k/news_test.html\">http://dagon.rh.rit.edu/.sp34k/news_test.html</a>",
        "26189ca156760514ce0c04917cd91cea (13:36): It's live",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:38): sloloem: i have a problem though. would people want to wait to watch it scroll through? i personally ignore that kind of effect",
        "c8036b7fc3fa351a2f522a7beadf7ce1 (13:39): it's like the ending of a movie, few stays around to see the credits",
        "26189ca156760514ce0c04917cd91cea (13:40): It's not a focal point sort of thing.  It's going to slide into a little place in the navigation, so while looking around the rest of the site if something in it catches there interest they can go right to it.",
        "26189ca156760514ce0c04917cd91cea (13:40): their*",
        "8ecbc343e07e18988aa4f044bf77a9ed (13:42): when I add to the DOM a node containing &lt;script&gt; IE doesn't execute it. Why?",
        "26189ca156760514ce0c04917cd91cea (13:44): Either way, it increases the power of my e-peen.  I'm still trying to teach myself JS so I make pointless little things like these.",
        "8ecbc343e07e18988aa4f044bf77a9ed (13:44): and the worst thing is that is the span or divi containing the script elements has not text (or other elements different from &lt;script) the script is not seen",
        "8ecbc343e07e18988aa4f044bf77a9ed (13:45): stupid IE!",
        "26189ca156760514ce0c04917cd91cea (13:46): Anyway it's 5 am..time to sleep.",
        "26189ca156760514ce0c04917cd91cea (13:46): Thanks",
        "47c909526d3e7bc272ff28024890cdcb (13:49): hi all",
        "47c909526d3e7bc272ff28024890cdcb (13:49): I have &lt;input type=&quot;text&quot; value=&quot;foo&quot;&gt; in a form - is there a way to add the readonly attribute to it with a js call?",
        "189edbf28f3da1f5bf29efe53c42687b (13:50): yes, just set the readonly property to a value that's == true",
        "47c909526d3e7bc272ff28024890cdcb (13:51): Raevel: thx",
        "46760632fe3926290a2d59541c376a65 (13:56): /dev/brain&quot;)",
        "73d3a3c8fad101072862df81a75da100 (13:59): when I set the background color of a table with a hex value, then later retrieve it I get an rbg value.  But what if I need to compare the color to the original hex value?",
        "b04f8adae7f9091c3683e93984962cf1 (14:01): Raevel: available.",
        "189edbf28f3da1f5bf29efe53c42687b (14:02): BuddaBoy please identify so we can pm",
        "b04f8adae7f9091c3683e93984962cf1 (14:06): Raevel: sorry. early morning :) done",
        "69e1ea730bbfa9551287adbbc0e01f14 (14:06): hats the javascript line for opening a link in a new window?",
        "189edbf28f3da1f5bf29efe53c42687b (14:11): Fr0zen window.open(url)",
        "69e1ea730bbfa9551287adbbc0e01f14 (14:11): thx",
        "6a702c604058bea73648584db122537b (14:15): if I call a function from within a class, is it possible to get the classname that was calling this function ?",
        "6a702c604058bea73648584db122537b (14:15): callee something.",
        "6a702c604058bea73648584db122537b (14:16): hmm arguments.caller",
        "2114e0638af29f138931c77528ba06ec (14:17): 3) bad = 1;&quot;)",
        "6a702c604058bea73648584db122537b (14:18): ok not really, doesn't work..",
        "189edbf28f3da1f5bf29efe53c42687b (14:19): rhalff try function func() { alert(func.caller); } func();",
        "189edbf28f3da1f5bf29efe53c42687b (14:19): i can not understand the logic in changing the property of the function itself though",
        "6a702c604058bea73648584db122537b (14:22): Raevel, I want to get an automatic prefix for log messages, so it prints the function and classname the message came from.",
        "189edbf28f3da1f5bf29efe53c42687b (14:23): i know a very ugly hack for it",
        "6a702c604058bea73648584db122537b (14:23): and that is :)",
        "189edbf28f3da1f5bf29efe53c42687b (14:24): /* code */ try { foo.bar.baz } catch (e) { dostuffwith(e) } /* more code */",
        "189edbf28f3da1f5bf29efe53c42687b (14:25): might be a better way to get that information, im not sure",
        "d7220e4452f45c44f0c3b7dc8e644680 (14:38): I'm trying to strip the <a href=\"http://host.here\">http://host.here</a> part of an image url, what's wrong with:   picture     = /^http:\\/\\/[^\\/]*(.*)/.exec(picture)[0];",
        "189edbf28f3da1f5bf29efe53c42687b (14:40): tehmaze #1 [^\\/]* will match everything since it's greedy and comes first, make it lazy, #2 index 0 is the whole match",
        "d7220e4452f45c44f0c3b7dc8e644680 (14:40): xah, this works: var picture = picture.replace(/^http:\\/\\/[^\\/]*/, &quot;&quot;);",
        "d7220e4452f45c44f0c3b7dc8e644680 (14:41): [^\\/]* will match everything except for the first /",
        "189edbf28f3da1f5bf29efe53c42687b (14:41): that replace wont work either, you will remove the whole string",
        "189edbf28f3da1f5bf29efe53c42687b (14:42): well ok, if you know there has to be in a sub-dir",
        "d7220e4452f45c44f0c3b7dc8e644680 (14:43): javascript:alert(&quot;<a href=\"http://foo/bar&quot;.replace\">http://foo/bar&quot;.replace</a>(/http:\\/\\/[^\\/]*/, &quot;&quot;));",
        "d7220e4452f45c44f0c3b7dc8e644680 (14:43): try that..",
        "189edbf28f3da1f5bf29efe53c42687b (14:45): read the last thing i wrote"
    ],
    "person_ids": [
        "c528372192f08b77456f62d8c8736017",
        "26189ca156760514ce0c04917cd91cea",
        "189edbf28f3da1f5bf29efe53c42687b",
        "c8036b7fc3fa351a2f522a7beadf7ce1",
        "8ecbc343e07e18988aa4f044bf77a9ed",
        "47c909526d3e7bc272ff28024890cdcb",
        "46760632fe3926290a2d59541c376a65",
        "73d3a3c8fad101072862df81a75da100",
        "b04f8adae7f9091c3683e93984962cf1",
        "69e1ea730bbfa9551287adbbc0e01f14",
        "6a702c604058bea73648584db122537b",
        "2114e0638af29f138931c77528ba06ec",
        "d7220e4452f45c44f0c3b7dc8e644680"
    ]
}