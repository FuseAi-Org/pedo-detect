{
    "id": "e17c2a4cfb7bc86cf1f42f1aa33344ba",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (16:26): 4d647473081c3ad729446a01a377813b: i couldn't find any tokens in their proposal, just a single on/off flag",
        "4d647473081c3ad729446a01a377813b (16:27): yup",
        "4d647473081c3ad729446a01a377813b (16:27): I guess Tyler still has the idea to transmit such data through URLs",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:28): i guess i'll wait to see what his reply is",
        "4d647473081c3ad729446a01a377813b (16:28): afaict the proposal is just not complete enough as to how it ought to function, but hopefully a reply to your email will shed some light on that",
        "4d647473081c3ad729446a01a377813b (16:28): right :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:29): this JSON thing in public-rdfa-in-xhtml-tf seems to somewhat miss the point of the object of prefixes",
        "1989c83fcd827071e593796698b07eeb (16:30): reasking from yesterday: is there an html5 way to specify that an &lt;article&gt; with a summarized post in a blog's main page and the permalink of the post page have the same content?",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:30): and this thread on public-web-security that assumes that it's ok to embed arbitrary hostile css seems to be also somewhat missing the point",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:30): 1989c83fcd827071e593796698b07eeb: can you elaborate?",
        "1989c83fcd827071e593796698b07eeb (16:31): I'll try rephrasing: is there a semantic way to mark a post's &quot;read more&quot; link in a blog's main page? a way to say that link is a permalink to the same content you see now?",
        "4d647473081c3ad729446a01a377813b (16:32): rel=bookmark?",
        "4d647473081c3ad729446a01a377813b (16:33): http://whatwg.org/html5#link-type-bookmark",
        "1989c83fcd827071e593796698b07eeb (16:33): that's it :) thanks!",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:33): rel=bookmark is how you label a permalink, yeah",
        "1989c83fcd827071e593796698b07eeb (16:34): and it relates to the ancestor &lt;article&gt; which is exactly what I asked :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:37): i could've sworn i'd already written the text for what 8111 is asking",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:40): &quot;a new version of opera was downloaded, but the update was not applied&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (16:40): well... apply it then",
        "ab7faae5d7b250ea8606486575f8f79c (16:50): 69b0d3dfe919a6b860a9fac82de52a7e: The line-wrapping seems to not be applied to messages like http://www.w3.org/Bugs/Public/show_bug.cgi?id=8110#c1 :-(",
        "ab7faae5d7b250ea8606486575f8f79c (16:51): so words like &quot;If&quot; and &quot;please&quot; still appear on lines by themselves",
        "ab7faae5d7b250ea8606486575f8f79c (16:51): at least with my particular browser and font and font size",
        "4d647473081c3ad729446a01a377813b (16:52): hmm, wfm",
        "ab7faae5d7b250ea8606486575f8f79c (16:52): (I was concerned about that rather than about the initial bug reports)",
        "ab7faae5d7b250ea8606486575f8f79c (16:52): 4d647473081c3ad729446a01a377813b: I guess you don't have my particular browser and font and font size :-)",
        "4d647473081c3ad729446a01a377813b (16:53): guess not",
        "ab7faae5d7b250ea8606486575f8f79c (16:53): It works for me if I zoom in or out, but not when I just look at it normally",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:01): ab7faae5d7b250ea8606486575f8f79c: that doesn't go through my script, i use safari to edit the bugs",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:02): only comments by <email/> are scripted",
        "69a015ebfe18fc6dfbd151c0b269ff26 (17:04): Lines of poetry or source code I want to individually manipulate via the dom. The HTML5 way would be &lt;pre&gt;&lt;span&gt;...&lt;/span&gt;&lt;br&gt;...&lt;/pre&gt;?",
        "a924fb58d2c25874322f4e5126f608b9 (17:05): If the lines are entities, sounds like a list",
        "ab7faae5d7b250ea8606486575f8f79c (17:05): 69b0d3dfe919a6b860a9fac82de52a7e: Oh, I'd assumed it was somewhat automated",
        "69a015ebfe18fc6dfbd151c0b269ff26 (17:08): &lt;pre&gt;&lt;ol&gt; is sadly not allowed.",
        "a924fb58d2c25874322f4e5126f608b9 (17:08): You wouldn't need &lt;pre&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:09): 69a015ebfe18fc6dfbd151c0b269ff26: lines of poetry (unless it has unusual formatting) should use &lt;p&gt;&lt;span&gt;...&lt;/span&gt;&lt;br&gt;&lt;span&gt;...&lt;/span&gt;&lt;/p&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:09): 69a015ebfe18fc6dfbd151c0b269ff26: (the &lt;span&gt;s being needed only if you want to do DOM manipulation)",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:10): 69a015ebfe18fc6dfbd151c0b269ff26: source code would just be &lt;pre&gt;&lt;code&gt;&lt;span&gt;...&lt;/span&gt;\\n&lt;span&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; (where \\n is a line break, not a literal &quot;\\n&quot;)",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:10): (and again, &lt;span&gt;s here just for DOM manipulation)",
        "69a015ebfe18fc6dfbd151c0b269ff26 (17:10): Frustrating, but ok.",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:10): why frustrating?",
        "69a015ebfe18fc6dfbd151c0b269ff26 (17:11): &lt;line&gt; is more expressive.",
        "a924fb58d2c25874322f4e5126f608b9 (17:11): Not much difference between &lt;line&gt; and &lt;span&gt;&lt;br&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:11): if it wasn't for &lt;br&gt; already existing, &lt;line&gt; would probably be better",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:11): but we already have &lt;br&gt;, so that's water under the bridge",
        "4d647473081c3ad729446a01a377813b (17:12): would &lt;line&gt; have white-space:nowrap ?",
        "4d647473081c3ad729446a01a377813b (17:12): or pre-line or some such",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:12): dunno, haven't thought about it",
        "4d647473081c3ad729446a01a377813b (17:13): was never quite sure how &lt;l&gt; would work and whether it would be the quite the same as &lt;br&gt;",
        "69a015ebfe18fc6dfbd151c0b269ff26 (17:14): I'd imagine white-space: normal for poetry and white-space:pre for XHTML2s &quot;blockcode &gt; l&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:14): ok wtf. &lt;table rules=all&gt; has an effect on _padding_??",
        "65325d50b2e25aca54bc871b89758c9c (17:17): 69b0d3dfe919a6b860a9fac82de52a7e: good point re the public-web-security thread",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:17): actually make that border-spacing",
        "65325d50b2e25aca54bc871b89758c9c (17:17): 69b0d3dfe919a6b860a9fac82de52a7e: you can do a lot of damage, security-wise, just by moving controls around on the page, making them invisible, injecting images or text content....",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:18): 65325d50b2e25aca54bc871b89758c9c: yeah!",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:18): 65325d50b2e25aca54bc871b89758c9c: if you accept arbitrary input, you have to whitelist, it's not rocket science",
        "65325d50b2e25aca54bc871b89758c9c (17:18): I'm not sure if they are trying to defend against deliberate self-injection of arbitrary CSS from an untrusted source, or just mitigate the damage if it occurs accidentally (on a site that successfully prevents script injection)",
        "4d647473081c3ad729446a01a377813b (17:18): the latter",
        "4d647473081c3ad729446a01a377813b (17:19): hmm, I guess it can apply to both",
        "4d647473081c3ad729446a01a377813b (17:19): but it seemed like they were walking about injection scenarios",
        "4d647473081c3ad729446a01a377813b (17:19): talking, not walking",
        "65325d50b2e25aca54bc871b89758c9c (17:19): 4d647473081c3ad729446a01a377813b, 69b0d3dfe919a6b860a9fac82de52a7e: I think UM is probably worth supporting as an alternate XHR mode (it's useful for sandboxing toolkits like Caja), but it's not at all obvious how one would apply it to video",
        "4d647473081c3ad729446a01a377813b (17:19): or &lt;img&gt;",
        "4d647473081c3ad729446a01a377813b (17:19): or EventSource",
        "4d647473081c3ad729446a01a377813b (17:20): etc.",
        "65325d50b2e25aca54bc871b89758c9c (17:20): like, if your secret token is in the page then anyone can get it using &quot;View Source&quot;",
        "4d647473081c3ad729446a01a377813b (17:20): but UM can be one extra flag in the current XHR spec rather than a whole separate spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:20): isn't UM a subset of CORS?",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:20): specifically, basically the subset IE implements?",
        "65325d50b2e25aca54bc871b89758c9c (17:20): 4d647473081c3ad729446a01a377813b: I don't mind if there's a separate spec for what the flag does, assuming that's extensive enough to be more than a few sentences",
        "4d647473081c3ad729446a01a377813b (17:20): you'd always exclude credentials and set Origin to null",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:21): why would a site opt out of including Origin",
        "4d647473081c3ad729446a01a377813b (17:21): given that all the infrastructure is already in XHR/CORS it seems like a waste, but sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:21): if it knows to opt out of it, why would it use it",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:21): the point of the proposal seems to be to remove the risk that someone might use Origin at all",
        "4d647473081c3ad729446a01a377813b (17:21): well yeah, it's not clear we need it at all if we decide CORS is the way to go",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:21): so allowing people to disable Origin is unlikely to satisfy anyone",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:23): sweet jesus",
        "2cc83be0233de2f6f7813e9af67fd5de (17:23): why is &lt;table border&gt; still in HTML5?",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:23): i'm 4-for-4 on uninteroperable behaviour for mixing CSS with table frames=all",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:23): er, rules=all",
        "65325d50b2e25aca54bc871b89758c9c (17:25): 69b0d3dfe919a6b860a9fac82de52a7e: ability to *opt* out of Origin does serve one use case, namely allowing content sandboxed by something like Caja to still do XHR",
        "4d647473081c3ad729446a01a377813b (17:26): you would get that automatically with &lt;iframe sandbox&gt;, fwiw",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:27): 65325d50b2e25aca54bc871b89758c9c: that still wouldn't be safe for same-origin requests",
        "65325d50b2e25aca54bc871b89758c9c (17:28): (assuming non-sandboxed content on that site does send Origin with its XHR requests)",
        "65325d50b2e25aca54bc871b89758c9c (17:28): (and checks it)",
        "65325d50b2e25aca54bc871b89758c9c (17:29): 4d647473081c3ad729446a01a377813b: I am not sure what problem if any people doing Caja-like things would have with &lt;iframe sandbox&gt; - they do dislike regular iframes since those let a bit too much power leak through (e.g. ability to navigate the top frame)",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:29): this would also mean we should add new flags for EventSource, WebSocket, &lt;video&gt;, &lt;img&gt;, etc",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:30): which i don't think makes sense",
        "65325d50b2e25aca54bc871b89758c9c (17:30): good point - the Caja model is not compatible with protecting such things purely via Origin without addition of some new flag",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:30): i think if you're doing something like caja you have to build the entire platform from the ground up, you can't do half the job and then rely on the browser's XHR or WebSocket, etc.",
        "65325d50b2e25aca54bc871b89758c9c (17:31): (for EventSource or WebSocket it is plausible, at least they are APIs)",
        "65325d50b2e25aca54bc871b89758c9c (17:31): Caja currently presumably does not pass through EventSource or WebSocket at all",
        "65325d50b2e25aca54bc871b89758c9c (17:32): but if they allow &lt;img&gt; and &lt;canvas&gt;, then Caja-tized content (or whatever the term is) can read the pixels of all of the embedding site's images",
        "1f8387eb43f131d7c309a90a4e36b5cb (17:45): 2cc83be0233de2f6f7813e9af67fd5de: The same reason tons of other retarded old presentational attributes are in HTML5 - because sites use them and rely on them working.  &lt;table border&gt; is *not* valid HTML5, though - the spec says not to use it, but specifies how browsers should treat it when it does appear.",
        "2cc83be0233de2f6f7813e9af67fd5de (17:45): ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:45): oh sorry creap, missed your question",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:45): thanks tab",
        "1f8387eb43f131d7c309a90a4e36b5cb (17:45): np",
        "2cc83be0233de2f6f7813e9af67fd5de (17:46): I don't see how a site would rely on border for _working_ though?",
        "2cc83be0233de2f6f7813e9af67fd5de (17:46): border=0 for table layouts?",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:46): 1f8387eb43f131d7c309a90a4e36b5cb: did you see manu's updated change proposal? not sure if there's anything that needs adding to yours, it didn't seem to make any particularly strong new points, but i might have missed something",
        "1f8387eb43f131d7c309a90a4e36b5cb (17:48): How strange.",
        "69b0d3dfe919a6b860a9fac82de52a7e (17:49): 2cc83be0233de2f6f7813e9af67fd5de: many sites use border, especially if they were written in the 90s",
        "1f8387eb43f131d7c309a90a4e36b5cb (17:52): 2cc83be0233de2f6f7813e9af67fd5de: More specifically, a browser which ignored &lt;table border&gt; entirely would render a lot of sites in a visibly uglier way than other browsers.  So they'd be at a competitive disadvantage.  HTML5 helps by defining precisely what they need to do when they see that attribute, since they'll have to handle it anyway.  This way they don't have to spend QA time and money reverse-engineering...",
        "1f8387eb43f131d7c309a90a4e36b5cb (17:52): ...other browsers.",
        "4e528aa62dacc1d204b6b9a06e317317 (18:07): tries to remember what the devapi list is called",
        "4e528aa62dacc1d204b6b9a06e317317 (18:08): ah, public-device-apis",
        "1989c83fcd827071e593796698b07eeb (18:10): googling for &quot;html5 outline&quot; gives http://james.html5.org/outliner.html as the first result. since that doesn't work, maybe that page could redirect to http://gsnedders.html5.org/outliner/ ?"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "4d647473081c3ad729446a01a377813b",
        "1989c83fcd827071e593796698b07eeb",
        "ab7faae5d7b250ea8606486575f8f79c",
        "69a015ebfe18fc6dfbd151c0b269ff26",
        "a924fb58d2c25874322f4e5126f608b9",
        "65325d50b2e25aca54bc871b89758c9c",
        "2cc83be0233de2f6f7813e9af67fd5de",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "4e528aa62dacc1d204b6b9a06e317317"
    ]
}