{
    "id": "6bca664dd8ffbc7d52e18e8931543d6a",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (11:03): ponders how to fix the &lt;video&gt; load() problem",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:05): namely that &lt;video&gt;&lt;source src=a&gt;&lt;source src=b&gt;&lt;/video&gt; doesn't load src=b",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:05): if src=a is broken",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:05): because when b is inserted, &lt;video&gt; is still checking a",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:06): maybe but i've no way of knowing that there is another &lt;source&gt; coming",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:06): so i can't wait...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:06): and i can't just run the algorithm again when b comes along, because then a will be fetched twice",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): let",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): er",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): i have the following events:",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): video created",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): video inserted",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): source created",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): source inserted",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): src added/changed/removed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:14): but source could have been inserted by script before another...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:15): if script adds sources, we should probably wait for a load()",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:15): but if the parser does it should probably be implied...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:15): hm, assymetry",
        "ab7faae5d7b250ea8606486575f8f79c (11:17): Can't you make it not start any downloads until reaching the &lt;/video&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:17): there might not be on, consider &lt;span&gt;&lt;video&gt;&lt;source&gt;&lt;/span&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): one",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): or &lt;video&gt;EOF",
        "ab7faae5d7b250ea8606486575f8f79c (11:18): Oh, right",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): it would be nice to have the parser just be like a script",
        "ab7faae5d7b250ea8606486575f8f79c (11:19): Can't you make it not start any downloads until the page has finished downloading and parsing and running scripts?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:19): parser inserts video (which might have a src), then inserts sources",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:19): we could, but the page might never finish downloading",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:19): consider an infinite iframe used for &quot;comet&quot;-like stuff which includes both &lt;script&gt; and &lt;audio&gt; elements",
        "ab7faae5d7b250ea8606486575f8f79c (11:21): Can't you make it not start any downloads until either reaching the &lt;/video&gt; or until the page has finished downloading and parsing and running scripts, whichever comes earliest?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:22): we could but that's not very intuitive",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:22): we're trying to make the platform less quirky, not more :-)",
        "ab7faae5d7b250ea8606486575f8f79c (11:22): (By &quot;&lt;/video&gt;&quot; I probably mean &quot;anything that causes the video element to be popped from the stack of open elements&quot;, if I remember the parser correctly)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:22): there's no real good place to hook into the parser to do that currently",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): and i'd really rather not do anything in the parser",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): &lt;script&gt; has proven that to be a nightmare",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): it also gets really complicated to redefine it for xml",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): and it means you can't use DOM manipulation to pretend to be a parser",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): such as hsivonen's live dom viewer",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:24): what would we want to have happen is an author inserts &lt;video&gt;, &lt;source&gt;, &lt;source&gt;, then moves the first source to after the second",
        "ab7faae5d7b250ea8606486575f8f79c (11:25): Fair enough",
        "f139aba52f9fa1394b4034a7954b2220 (11:27): wtf? &quot;I develop on Win95a and 98SE [...].&quot; -- http://www.w3.org/Bugs/Public/show_bug.cgi?id=6606",
        "f139aba52f9fa1394b4034a7954b2220 (11:29): A developer is the last kind of person I'd expect to be using exremely obsolete software",
        "ab7faae5d7b250ea8606486575f8f79c (11:30): used Windows 2000 until about 2007, but using 95 today is really going a step too far",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:33): the difficulty is distinguishing between &lt;video&gt;&lt;source&gt;&lt;source&gt; and &lt;video&gt;&lt;source&gt;&lt;!-- long delay --&gt;&lt;souce&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (11:34): I'm still using XP, it's nearly 8 years old now too, and I expect I'll still keep it around until Microsoft drops support for it or stops releasing new IE releases for it",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:34): i suppose we could get rid of the list of potential media resources",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:35): and just have it so that the load() algorithm, once invoked, remembers where it was, and walks down the list of &lt;source&gt; elements...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:35): though if one is removed...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:35): hmm",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:36): this may require a rewrite of how media elements load resources",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:36): but if we keep it similar enough that shouldn't be a big deal...",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:36): stops talking to himself and switches to his editor",
        "ab7faae5d7b250ea8606486575f8f79c (11:38): You have an editor?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:38): emacs",
        "ab7faae5d7b250ea8606486575f8f79c (11:38): I thought you were doing all the work yourself, not just proxying feedback to the real editor and stealing all the credit for his work",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:39): if there was someone else to blame, you can bet i'd be letting them take all the blame",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:51): src=&quot;&quot; proves problematic even with this system",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:51): maybe we need a new NETWORK_ state",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:52): NETWORK_EMPTY would mean that nothing is happening yet, and NETWORK_WAITING would mean that the load algorithm is active but has no resource to load",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:53): and NETWORK_LOADING would mean that the algorithm is actively trying to load something",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:53): NETWORK_NONE, NETWORK_WAITING, NETWORK_LOADING, NETWORK_IDLE, NETWORK_LOADED, maybe?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:53): eh i'm going to bed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:54): nn"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "f139aba52f9fa1394b4034a7954b2220"
    ]
}