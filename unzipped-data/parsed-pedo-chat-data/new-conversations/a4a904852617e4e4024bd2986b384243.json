{
    "id": "a4a904852617e4e4024bd2986b384243",
    "messages": [
        "3d2d57713d8842b3def3085cbd614f68 (17:52): http://blog.mozilla.com/security/2010/12/27/addons-mozilla-org-disclosure/",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:09): Would it not make sense to allow microdata to take value from the .value property of form fields? http://www.w3.org/TR/microdata/#values",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:10): Hm, that's interesting.  The immediate problem I can see is that, in the course of normal web crawling, you'd often see the value as &quot;&quot;.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:10): I suppose the use-case is to let the user fill out a form and then extract the Microdata from it automatically?",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:15): 1f8387eb43f131d7c309a90a4e36b5cb: That's a use.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:16): 1f8387eb43f131d7c309a90a4e36b5cb: I was actually looking at it in the context of http://tech.groups.yahoo.com/group/rest-discuss/message/17135?threaded=1&amp;var=1&amp;l=1",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:17): 1f8387eb43f131d7c309a90a4e36b5cb: Which is discussing decorating HTML forms with RDFa semantics to decouple the domain vocabulary from the URL/form-encoding interface presented by the server and represented by @name",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:17): is reading.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:17): 1f8387eb43f131d7c309a90a4e36b5cb: &quot;&lt;input id=&quot;case_title&quot; name=&quot;Case.Title&quot; property=&quot;dc:title&quot;/&gt;&quot; does not work AFAICT",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:18): 1f8387eb43f131d7c309a90a4e36b5cb: Since RDFa designates that dc:title is @content or the concatenation of text nodes.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:18): I thought maybe microdata could do this, but it doesn't look like it.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:18): It seems like the linked use-case is exactly the use-case I described.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:20): 1f8387eb43f131d7c309a90a4e36b5cb: Well if your use-case includes a programmer building a client to use the form, then yes.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:20): Which appears to be the described use-case, yes.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:20): ah ok",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:21): Yeah, it seems to just be aiming for something that makes it easy to both extract the data client-side and server-side.  Presumably there's already a framework server-side to convert the received form data into a more useful format.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:22): I'm not really sure what the value is of making @name and @property be different things.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:22): Well, it allows to use arbitrary @name's.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:23): Yes.  So what's the value of that?",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:23): Well, it allows you to present a consistent interface across different ways of processing name=value pairs.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:24): (For example, in PHP land, people tend to use foo[] for repeated values, but there's nothing baked into CGI about that.)",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:24): How?  There are only two ways I can see here - extracted as Microdata/RDFa on the client side, and received as name/value pairs on the server side.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:24): Those don't seem consistent unless you go to efforts to make them consistent.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:25): 1f8387eb43f131d7c309a90a4e36b5cb: I think the idea is the serverside processing and URLs could completely change, while clientside processing would persist.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:26): So for example you could change the @names and types of form attributes, but the client would persistently look for dc:title",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:26): *of form fields",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:27): Is there any good reason for this, though?  Surely you could add an interpretation layer on the serverside that translates the kv pairs to whatever you needed?",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:28): 1f8387eb43f131d7c309a90a4e36b5cb: Sure. Additional layers of processing doesn't sound more efficient than a persistent client interaction though.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:29): Sure.  I'm just wondering about the utility of that.  Extra indirection (a single piece of data referred to through two names) needs to be justified.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:30): 1f8387eb43f131d7c309a90a4e36b5cb: Well, at least it offers the potential to use a specific name (e.g. dc:title) rather than what's basically an opaque string (@name)",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:30): s/specific/generically understood/",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:31): @property is an opaque string as well.  It has exactly as much meaning as @name, until you add meaning to it.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:31): 1f8387eb43f131d7c309a90a4e36b5cb: You can't reference a specific vocabulary via @name can you?",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:32): Sure.  I can put &lt;input name=&quot;dc:title&quot;&gt; in my page.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:32): No current processor will recognize it as a curie, but I could do it.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:32): 1f8387eb43f131d7c309a90a4e36b5cb: That's still an opaque name in the absence of rules like microdata or RDFa for extracting it.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:32): Sure.  Rules could be added if necessary, of course.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:33): Yes. It /might/ be that at least part of this usage could be addressed by providing such rules.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:34): I'm not sure there any standardizable way to map such vocabularies to a query string though.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:34): Hm?  Of course there is.  ?dc:title=foo",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:35): 1f8387eb43f131d7c309a90a4e36b5cb: How about nested keys?",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:35): You can't express that in forms.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:38): 1f8387eb43f131d7c309a90a4e36b5cb: well, you can ... e.g. name=&quot;book[4]title&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:38): Ah, yeah, sure, you can do server-side processing.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:38): exactly",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:39): providing an independent mapping of the HTML representation to a shared vocabulary allows you to decouple the details of that processing from the client code.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:40): Hm, okay, I see your point.  Trying to automatically express the relationship in the key sent over the wire is probably a harder problem than just letting people express it twice themselves (once explicitly in the @name, once implicitly in the microdata structure).",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:40): I suspect so.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:48): 1f8387eb43f131d7c309a90a4e36b5cb: I think the point about value beginning in an invalid form (e.g. &quot;&quot; for a non-null data type) is a problem though.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:49): 1f8387eb43f131d7c309a90a4e36b5cb: I guess in so far as HTML5 can express data types/validity without script, extraction of data rather than extraction of input points could be premised on validity.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:49): Hm, that's true.",
        "1f8387eb43f131d7c309a90a4e36b5cb (18:50): But that would mean that, for example, non-required inputs would still be included.",
        "ef6f2287bae00ba79475fbf56c2b6fee (18:51): Excluding blank values might be possible; or including blank values might not be damaging - I'm not sure."
    ],
    "person_ids": [
        "3d2d57713d8842b3def3085cbd614f68",
        "ef6f2287bae00ba79475fbf56c2b6fee",
        "1f8387eb43f131d7c309a90a4e36b5cb"
    ]
}