{
    "id": "e8cda38ef5830f1a828a14c011f83bc4",
    "messages": [
        "06cb330920ae58e1614c9145d983b3d6 (23:23): i wonder why opera's reload scrolling behavior is so much better than firefox and chrome's",
        "06cb330920ae58e1614c9145d983b3d6 (23:23): maybe they're waiting until onload or something to scroll and opera does it as soon as possible",
        "5cfdf2d621b2a11df72a2e70bd2ff1a0 (23:24): the problem is that reloading may load images too, which requires several reflows",
        "5cfdf2d621b2a11df72a2e70bd2ff1a0 (23:25): which may change the position of the anchor",
        "06cb330920ae58e1614c9145d983b3d6 (23:25): ff and chrome's behavior is just really bad and annoying and opera's works well",
        "06cb330920ae58e1614c9145d983b3d6 (23:25): i always reload in firefox, it leaves me at the top, I start scrolling down the page, then seconds later it suddenly scrolls to the old position",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:33): Are there tests for the HTML5 serializer anywhere?",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:34): just found a bug in both Gecko and WebKit HTML5 serialization",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:51): annevk, is there any way using CSSOM View or something to tell whether a &lt;br&gt; is collapsed or is actually creating a line break?  I.e., whether it could be removed without affecting layout?",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:51): You could actually remove it, I guess . . . that might work.",
        "7f0403df628d1e021d28f452d20f0290 (23:52): I'm toying around with the history API",
        "7f0403df628d1e021d28f452d20f0290 (23:53): I need to set a stateObj for the initially loading page so I can get back to that state trough the popstate event",
        "7f0403df628d1e021d28f452d20f0290 (23:53): but that where the trouble starts",
        "7f0403df628d1e021d28f452d20f0290 (23:53): I have the following inside a domready event:",
        "7f0403df628d1e021d28f452d20f0290 (23:53): history.replaceState({&quot;page&quot;: page}, null, window.location);",
        "7f0403df628d1e021d28f452d20f0290 (23:53): history.state = {&quot;page&quot;: page};",
        "7f0403df628d1e021d28f452d20f0290 (23:53): but that doesn't work",
        "7f0403df628d1e021d28f452d20f0290 (23:53): (just one of those doesn't either)",
        "7f0403df628d1e021d28f452d20f0290 (23:54): it does work fine if I reload the page once",
        "7f0403df628d1e021d28f452d20f0290 (23:54): am I missing something or could this be a browser bug?",
        "7f0403df628d1e021d28f452d20f0290 (23:54): I tested with Safari 5.1beta and Firefox 4",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:55): Hmm, actually removing it works for me, I guess.  &lt;br&gt;'s behavior doesn't seem very well-defined at all . . .",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:02): Oh, of course -- it messes up ranges.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:03): tries display: none instead",
        "7582b9974a1186715aba1d2adc5eca44 (00:12): I'm not sure how much detail to go into in copying over code for the examples at http://wiki.whatwg.org/wiki/Dialogs - does anyone know will the entire javascript function be needed or just those lines relevant to showing the dialog?",
        "7582b9974a1186715aba1d2adc5eca44 (00:13): I'm new to this so I don't know how much real world example detail is needed :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:16): 7582b9974a1186715aba1d2adc5eca44, I dunno, I guess enough for people to figure out how it works and what it does.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:16): A description might be more useful than copying the code, especially if you can link to the code.",
        "7582b9974a1186715aba1d2adc5eca44 (00:18): Hmm, yeah. It's minified code which doesn't help, but I guess I can say &quot;It displays this element&quot; or somesuch",
        "5cfdf2d621b2a11df72a2e70bd2ff1a0 (00:21): minified code is a crime imo. we already have compression at the protocol level",
        "7582b9974a1186715aba1d2adc5eca44 (00:22): The only thing it seems to be good at is making it harder for other people to read :(",
        "7582b9974a1186715aba1d2adc5eca44 (00:22): It's situations like this I'm thankful for webkit inspector's pretty print :)",
        "5cfdf2d621b2a11df72a2e70bd2ff1a0 (00:23): pretty print can only do so much when variable names get substituted too",
        "7582b9974a1186715aba1d2adc5eca44 (00:25): Yeah. Luckily, this code is pretty simple so it's easy to work out what the variables do, but you're right, I've never used minified code unless it's something like jquery - never seen the point",
        "7f9405da4034bf43083e64b57302a8e6 (00:28): can anyone tell me why this bloats up memory in firefox and opera? http://daten.dieweltistgarnichtso.net/src/wer-kuesst-wen/",
        "7f9405da4034bf43083e64b57302a8e6 (00:29): webkit seems to have no problems.",
        "b25b6b77a0087ff8385941e5545d32ea (00:29): 88d4d34a8064a4ff39fd5e144eea7762: What bug did you find in serialization?",
        "7f9405da4034bf43083e64b57302a8e6 (00:30): i think it may be a problem because i load these images repeatedly.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): b25b6b77a0087ff8385941e5545d32ea, &lt;pre&gt;\\nfoo&lt;/pre&gt; serializes to &lt;pre&gt;\\nfoo&lt;/pre&gt; which parses to &lt;pre&gt;foo&lt;/pre&gt;.",
        "7f9405da4034bf43083e64b57302a8e6 (00:30): but then that would be a serious caching bug, wouldn't it?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): HTML says to add a linebreak after a &lt;pre&gt; start tag always.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): It would probably make more sense to only add one if the first character is a linebreak.",
        "7f9405da4034bf43083e64b57302a8e6 (00:30): lots of small images shouldn't bloat memory.",
        "b25b6b77a0087ff8385941e5545d32ea (00:30): 88d4d34a8064a4ff39fd5e144eea7762: OK, it is the bug I knew about then :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): But anyway it's a browser bug, even if there's also a spec bug.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:30): Also, Gecko serializes &lt;xmp&gt; wrong, it escapes &lt; and &amp; and such.",
        "b25b6b77a0087ff8385941e5545d32ea (00:31): 88d4d34a8064a4ff39fd5e144eea7762: We try to do that right but I am a bit scared it will have some compat impact",
        "b25b6b77a0087ff8385941e5545d32ea (00:31): (with Ragnarok)",
        "06cb330920ae58e1614c9145d983b3d6 (00:32): 7f9405da4034bf43083e64b57302a8e6: havn't looked at that, but oddly, it's WebKit i've always found is really really bad at loading small images (or any images) repeatedly",
        "7f9405da4034bf43083e64b57302a8e6 (00:32): 06cb330920ae58e1614c9145d983b3d6, i am working to fix the issue that the images are loaded repeatedly every frame, but over time, it will still bloat.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:39): Could someone explain why this is 0?  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1032",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:39): scratches his head",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:39): It doesn't make sense to me.  The span creates a box, why should the box have zero height?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:40): Hmm, does clientHeight only work on blocks, maybe?",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:40): Oh, right.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:40): &quot;The clientTop, clientLeft, clientWidth, and clientHeight attributes must return zero if the element does not have any associated CSS layout box or if the CSS layout box is inline.&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:40): I think I want offsetHeight.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:41): Why the difference, I don't know . . .",
        "7f9405da4034bf43083e64b57302a8e6 (00:41): he, still not as bad as inadvertedly triggering a memory leak.",
        "b25b6b77a0087ff8385941e5545d32ea (00:42): 88d4d34a8064a4ff39fd5e144eea7762: All those APIs are weird I think",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:42): Apparently.",
        "b25b6b77a0087ff8385941e5545d32ea (00:42): I meaniirc they are a hotch-potch of things that different browsers invented",
        "b25b6b77a0087ff8385941e5545d32ea (00:43): Whihc doesn't typically lead to great quallity",
        "c9c91d70d978f16fd2146644f2030d54 (00:57): I still would like some input on my idea though",
        "c9c91d70d978f16fd2146644f2030d54 (00:57): about a method for &lt;track&gt; to programatically add cues",
        "c9c91d70d978f16fd2146644f2030d54 (00:58): (add/remove/edit)"
    ],
    "person_ids": [
        "06cb330920ae58e1614c9145d983b3d6",
        "5cfdf2d621b2a11df72a2e70bd2ff1a0",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "7f0403df628d1e021d28f452d20f0290",
        "7582b9974a1186715aba1d2adc5eca44",
        "7f9405da4034bf43083e64b57302a8e6",
        "b25b6b77a0087ff8385941e5545d32ea",
        "c9c91d70d978f16fd2146644f2030d54"
    ]
}