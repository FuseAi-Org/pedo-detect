{
    "id": "e17dc654d2b5dcba29a24801273048e0",
    "messages": [
        "52d6c3d9bac87ece3683eefd396af8f2 (02:01): whats a sandbox loading icon",
        "129a611072603a7fbbc232baf1230bda (02:05): never mind I don't care about that :)",
        "129a611072603a7fbbc232baf1230bda (02:05): i am still having trouble pinvoking some methods",
        "129a611072603a7fbbc232baf1230bda (02:06): HDAPI HDboolean HDAPIENTRY hdWaitForCompletion(HDSchedulerHandle hHandle,HDWaitCode param);",
        "129a611072603a7fbbc232baf1230bda (02:07): unsigned char HDboolean; unsigned long HDSchedulerHandle; unsigned int HDWaitCode;",
        "129a611072603a7fbbc232baf1230bda (02:08): i did this: public static extern bool hdWaitForCompletion(ulong hHandle, uint param);",
        "129a611072603a7fbbc232baf1230bda (02:08): A call to PInvoke function 'Haptic!Haptic.OpenHaptics.HD.HDScheduler::hdWaitForCompletion' has unbalanced the stack. This is likely because the managed PInvoke signature does not match the unmanaged target signature. Check that the calling convention and parameters of the PInvoke signature match the target unmanaged signature.",
        "129a611072603a7fbbc232baf1230bda (02:09): it is complaining at this line: if (!HDScheduler.hdWaitForCompletion(hGravityWell, HDScheduler.HD_WAIT_CHECK_STATUS))",
        "129a611072603a7fbbc232baf1230bda (02:11): I really don't know why it is doing this",
        "129a611072603a7fbbc232baf1230bda (02:14): anyhelp is apprecieated",
        "129a611072603a7fbbc232baf1230bda (02:20): hmm Sytupid pinvoke, I had to use char",
        "129a611072603a7fbbc232baf1230bda (02:20): can't use boolean",
        "129a611072603a7fbbc232baf1230bda (02:24): I still did this: if (HDScheduler.hdWaitForCompletion(hGravityWell, HDScheduler.HD_WAIT_CHECK_STATUS) != '0')",
        "129a611072603a7fbbc232baf1230bda (02:24): where I changed the dllimport to be this: public static extern char hdWaitForCompletion(ulong hHandle, uint param);",
        "129a611072603a7fbbc232baf1230bda (02:25): I still get the PInvokeStackImbalance",
        "63555fd975128fe98068f1677beba44c (02:34): Can I use or reference something written in VB6 in C#.net?",
        "3428cf496526a43f89daf493ae013e1d (02:37): bbtech: how does that make you feel as a person?",
        "63555fd975128fe98068f1677beba44c (02:38): hehe...HAPPY :D",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:39): bbtech: you'll have to use COM interop",
        "3428cf496526a43f89daf493ae013e1d (02:39): bbtech: you should be able to reference a com dll from C# that was created in VB6",
        "63555fd975128fe98068f1677beba44c (02:39): ok, thanks",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:42): if the vb6 component is registered on the machine, you should find it under the COM tab in the Add Reference dialog; if the component is an ActiveX control, you should be able to add it to the toolbox as a ActiveX control and drag it to a design surface (a form, for example)",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:44): how to marshal int * ?",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:45): int  xine_get_pos_length (xine_stream_t *stream,  int *pos_time .... )",
        "129a611072603a7fbbc232baf1230bda (02:47): i-Nz it could be  int[]",
        "129a611072603a7fbbc232baf1230bda (02:47): or IntPtr ?",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:48): it can't be IntPtr",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:48): well it can",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:48): but i wonna read the value after that",
        "129a611072603a7fbbc232baf1230bda (02:48): i am having trouble with double *",
        "129a611072603a7fbbc232baf1230bda (02:48): peterhu may you please loook at this? <a href=\"http://pastebin.ca/84389\">http://pastebin.ca/84389</a>",
        "129a611072603a7fbbc232baf1230bda (02:49): it is saying this: A call to PInvoke function 'Haptic!Haptic.OpenHaptics.HD.HDScheduler::hdWaitForCompletion' has unbalanced the stack. This is likely because the managed PInvoke signature does not match the unmanaged target signature. Check that the calling convention and parameters of the PInvoke signature match the target unmanaged signature.",
        "129a611072603a7fbbc232baf1230bda (02:49): peterhu : could you see anythjing wrong from PInvoke function of hdWaitForCompletion",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:49): you didn't include the DllImport",
        "129a611072603a7fbbc232baf1230bda (02:50): it is included",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:50): in addition, I need to know what HDAPI and HDAPIENTRY are defined to",
        "129a611072603a7fbbc232baf1230bda (02:50): I just coppied and pasted the relevant information",
        "129a611072603a7fbbc232baf1230bda (02:50): [DllImport(&quot;hd&quot;, EntryPoint = &quot;#33&quot;)]",
        "129a611072603a7fbbc232baf1230bda (02:50): public static extern char hdWaitForCompletion(ulong hHandle, uint param);",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:50): in this case, only the C signature and the DllImport are relevant",
        "129a611072603a7fbbc232baf1230bda (02:50): thats how I did it...",
        "69e2e9b6faa43ce63a2ecee941ecc641 (02:50): looks like I's goin to OSCon this yar",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:50): that will default to __stdcall calling convention",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:50): oh",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:50): one error",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:51): unsigned long is a uint in c#",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:51): more than likely your C/C++ long is 32-bit",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:51): what about marshalling int * ?",
        "129a611072603a7fbbc232baf1230bda (02:51): #     define HDAPI __declspec(dllimport)",
        "129a611072603a7fbbc232baf1230bda (02:51): #  define HDAPIENTRY  __stdcall",
        "129a611072603a7fbbc232baf1230bda (02:51): #  define HDCALLBACK  __stdcall",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:51): i-nZ: what do you mean &quot;read the value after that&quot;?",
        "129a611072603a7fbbc232baf1230bda (02:51): Thats the stuff you were looking peterhu",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:52): m0`: ok, try changing the first parameter in hdWaitForCompletion to uint",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:52): (in the C# import)",
        "129a611072603a7fbbc232baf1230bda (02:52): okay",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:53): peterhu: well int  xine_get_pos_length (xine_stream_t *stream,  int *pos_stream) -&gt; that writes the stream position in pos_stream. I wonna get that value in my managed code",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:53): passing the int by ref should marshal it as an int*",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:54): hmm",
        "129a611072603a7fbbc232baf1230bda (02:54): ah it works peterhu",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:54): m0`: cool",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:54): i never really understood what does the &quot;ref&quot; does",
        "129a611072603a7fbbc232baf1230bda (02:54): Your amazing thank you",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:54): as in... in managed everything is a pointer anyway",
        "129a611072603a7fbbc232baf1230bda (02:54): ref as in reference",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:54): so a pointer to a pointer - but where can you use that?",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:54): i-nZ: value types aren't",
        "129a611072603a7fbbc232baf1230bda (02:54): peterhu now to my real problem, similar to i-NZ",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:54): oh right ;)",
        "129a611072603a7fbbc232baf1230bda (02:55): peter;",
        "129a611072603a7fbbc232baf1230bda (02:55): HDAPI void HDAPIENTRY hdGetDoublev(HDenum pname, HDdouble *params);",
        "129a611072603a7fbbc232baf1230bda (02:55): I have been stuck at this for over 2 days",
        "129a611072603a7fbbc232baf1230bda (02:56): i did this: public static extern void hdGetDoublev(uint pname, ref double[] param);",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:56): whare are HDenum and HDdouble typeddef'd to",
        "129a611072603a7fbbc232baf1230bda (02:56): uint double respectively",
        "129a611072603a7fbbc232baf1230bda (02:57): typedef double HDdouble;typedef unsigned int HDenum;",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:57): how is the caller supposed to know how big a buffer to pass them to fill?",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:57): or how is the callee supposed to know how big the buffer is",
        "129a611072603a7fbbc232baf1230bda (02:57): i did a marshal of arraysize",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:57): int xine_get_pos_length (xine_stream_t *stream, int *pos_stream, int *pos_time, int *length_time);",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:57): private static extern int xine_get_pos_length (IntPtr stream, ref int pos_stream, ref int pos_time, ref int length);",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:57): ?",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:57): i mean, just from the C code; is there documentation somewhere that says the size?",
        "129a611072603a7fbbc232baf1230bda (02:58): its a vector of size 3",
        "94f6fe9e8f4c2f6177cb923a730b1759 (02:58): i-nZ: that should work",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (02:58): peterhu: what about the [In,Out] stuff ?",
        "94f6fe9e8f4c2f6177cb923a730b1759 (03:01): i-nZ: on a value type, ref implies [in, out]; if you want in you would pass by value; if you want out, you'd use the out keyword",
        "94f6fe9e8f4c2f6177cb923a730b1759 (03:01): i'm not familiar with that function, so it's up to you for what's best",
        "94f6fe9e8f4c2f6177cb923a730b1759 (03:02): m0`: give me one sec",
        "129a611072603a7fbbc232baf1230bda (03:02): I am really confused",
        "129a611072603a7fbbc232baf1230bda (03:03): this is the C/C++ code: <a href=\"http://pastebin.ca/84402\">http://pastebin.ca/84402</a>",
        "129a611072603a7fbbc232baf1230bda (03:03): this is the C# source: I did: <a href=\"http://pastebin.ca/84403\">http://pastebin.ca/84403</a>",
        "94f6fe9e8f4c2f6177cb923a730b1759 (03:04): what's the typedef for hduVector3Dd?",
        "129a611072603a7fbbc232baf1230bda (03:04): the thing is that hduVector is just a Utility class",
        "129a611072603a7fbbc232baf1230bda (03:05): so I used the C# Vector Library",
        "94f6fe9e8f4c2f6177cb923a730b1759 (03:05): yes, but how is it getting passed to hdGetDoublev? is there a conversion operator?",
        "129a611072603a7fbbc232baf1230bda (03:05): yes",
        "129a611072603a7fbbc232baf1230bda (03:05): there is this:",
        "129a611072603a7fbbc232baf1230bda (03:05): /* Convert to array. */",
        "129a611072603a7fbbc232baf1230bda (03:05): operator const T*() const { return &amp;m_p[0]; }"
    ],
    "person_ids": [
        "52d6c3d9bac87ece3683eefd396af8f2",
        "129a611072603a7fbbc232baf1230bda",
        "63555fd975128fe98068f1677beba44c",
        "3428cf496526a43f89daf493ae013e1d",
        "94f6fe9e8f4c2f6177cb923a730b1759",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a",
        "69e2e9b6faa43ce63a2ecee941ecc641"
    ]
}