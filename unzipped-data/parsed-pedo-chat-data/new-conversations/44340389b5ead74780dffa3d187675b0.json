{
    "id": "44340389b5ead74780dffa3d187675b0",
    "messages": [
        "dbbfec510a725fc27ce06b6dcb0caaa0 (18:47): join #javascript",
        "ea87d7e119a6809c8557c36394e50d7c (19:05): back",
        "ea87d7e119a6809c8557c36394e50d7c (19:08): back",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:08): howdy",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:09): http://sandbox.thewikies.com/caniuse/getBrowserFeatures.php?features=json+canvas ... i use this object to construct all of the data served from our new caniuse api --- but i'm not secure that i've organized it correctly, any feedback?",
        "a5feb63b4be6660b52aba030b7de4da4 (19:30): Should I include LessCSS.js in the Plugins.js of Boilerplate?",
        "c3ea1048aab70f3371563bd7efbdb3aa (19:30): do you use less?",
        "4c681049601b3c374f1d2c0077c99049 (19:31): you shouldnt use less clientside",
        "a5feb63b4be6660b52aba030b7de4da4 (19:32): Ok\u201a\u00c4\u00b6 server side install only? Should I not use less? I haven't in the past, but was going to on this project.",
        "a5feb63b4be6660b52aba030b7de4da4 (19:32): Also looked in to Sass but it looked geared for Ruby / Rails",
        "0de37da1d654c10aed33d7b7347b8e3b (19:32): 70bfd0ae2cfbf2da192bddd569cf6132: interesting, you're not doing it based on 'structs' for each browser?",
        "0de37da1d654c10aed33d7b7347b8e3b (19:32): I suppose this would be lower runtime",
        "a5feb63b4be6660b52aba030b7de4da4 (19:33): Or should I just compile my less files to a static CSS before serving?",
        "f9259f78376053934177e72f9ea0af8e (19:34): never ever a5feb63b4be6660b52aba030b7de4da4",
        "f9259f78376053934177e72f9ea0af8e (19:34): yes",
        "f9259f78376053934177e72f9ea0af8e (19:34): i mean never use less on client side",
        "0de37da1d654c10aed33d7b7347b8e3b (19:34): ask yourself what happens when something blocks a script. if lessCSS.js is never run, will your site still even make sense?",
        "a5feb63b4be6660b52aba030b7de4da4 (19:35): 0de37da1d654c10aed33d7b7347b8e3b, right\u201a\u00c4\u00b6 I was questioning that.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:36): sass is not so much ruby for rails as just &quot;you turn scss into css with ruby&quot;",
        "0de37da1d654c10aed33d7b7347b8e3b (19:36): after compiling, it's just plain .css",
        "a5feb63b4be6660b52aba030b7de4da4 (19:36): Would you guys recommend forgoing Less? Is there a reason something like less and sass hasn't been included as part of Boilerplate?",
        "f9259f78376053934177e72f9ea0af8e (19:37): yes because it requires commitment from entire teams",
        "0de37da1d654c10aed33d7b7347b8e3b (19:37): I hate less, personally. it's such an atrocious syntax &gt;_&gt;",
        "f9259f78376053934177e72f9ea0af8e (19:37): you cant have one person use less and another use pure css",
        "f9259f78376053934177e72f9ea0af8e (19:37): yeah less is so sad as syntax",
        "f9259f78376053934177e72f9ea0af8e (19:37): sass is so much better",
        "c3ea1048aab70f3371563bd7efbdb3aa (19:37): a5feb63b4be6660b52aba030b7de4da4: less and scss are virtually the same thing.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:37): sass makes a lot more sense",
        "f9259f78376053934177e72f9ea0af8e (19:37): but who will write a good JS port?",
        "c3ea1048aab70f3371563bd7efbdb3aa (19:37): they're server side things more than client side things",
        "0de37da1d654c10aed33d7b7347b8e3b (19:37): no need for a css port",
        "0de37da1d654c10aed33d7b7347b8e3b (19:37): *js port",
        "f9259f78376053934177e72f9ea0af8e (19:37): there is",
        "f9259f78376053934177e72f9ea0af8e (19:37): because of node.",
        "f9259f78376053934177e72f9ea0af8e (19:37): we need one.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:37): oh in that sense.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:38): compile ruby to a JS engine using emscripten O_O",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:38): 0de37da1d654c10aed33d7b7347b8e3b: I'm trying to compile for as many scenarios as possible.",
        "f9259f78376053934177e72f9ea0af8e (19:38): bleh",
        "0de37da1d654c10aed33d7b7347b8e3b (19:38): bit of an overkill ;)",
        "f9259f78376053934177e72f9ea0af8e (19:38): we need a good one as awesome as the ruby one",
        "f9259f78376053934177e72f9ea0af8e (19:38): if anyone here wants to write one, PLEASE DO SO",
        "0de37da1d654c10aed33d7b7347b8e3b (19:38): 70bfd0ae2cfbf2da192bddd569cf6132, makes sense. but adding a new browser will be adjusting a lot of tables, rather than one thing",
        "f9259f78376053934177e72f9ea0af8e (19:38): the SASS COMMUNITY WILL OWE YOU BEER FOR LYFE",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:38): well, if you want to use caniuse for feature support, then &quot;by_feature&quot; would be your cup of tea.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:39): If you wanted to know, of the features you requested, how each browser stacked up, then &quot;by_agent&quot; would be your cup of tea.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:39): I'd just consider it derived data.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:39): fire up the script, create the derived data based on the browser structs, then consult that.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:39): 0de37da1d654c10aed33d7b7347b8e3b: all of this data is derived from one table which is &quot;by_feature&quot; based.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:39): I see",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:40): 0de37da1d654c10aed33d7b7347b8e3b: the idea is json encoding the smallest payload based on how you want to retrieve the data.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:40): If you wanted to know how all of the features combined stacked up, regardless of each browsers support, then &quot;by_all_features&quot; would be your cup of tea.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:41): &quot;by_useragent_*&quot; does the same thing, but for your sniffed user agent.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:41): if you're going for smallest payload, can I suggest numerical browser ids?",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:41): well, not all of this data will be delivered, this is what i have to work with on the php side.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:41): (same for categories)",
        "0de37da1d654c10aed33d7b7347b8e3b (19:42): it looks good enough from what I can tell.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:42): the payload will only contain one subset of this combined data.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:42): and we'll want it to be small in the amount of objects but verbose as far as property names go.",
        "0de37da1d654c10aed33d7b7347b8e3b (19:42): not sure about version ranges being a single string, but if it's just for labeling a cell, not much use in turning it into something else.",
        "4c681049601b3c374f1d2c0077c99049 (19:42): 70bfd0ae2cfbf2da192bddd569cf6132: btw https://plus.google.com/113127438179392830442/posts/Rh17MhQrnud",
        "0de37da1d654c10aed33d7b7347b8e3b (19:43): (and there's always .split in pretty much every single language)",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:43): 4c681049601b3c374f1d2c0077c99049: thank you thank you thank you",
        "0de37da1d654c10aed33d7b7347b8e3b (19:43): &quot;what browser's they'll need&quot;",
        "0de37da1d654c10aed33d7b7347b8e3b (19:44): rogue apostrophe snuck into your post",
        "4c681049601b3c374f1d2c0077c99049 (19:44): ruh roh",
        "0de37da1d654c10aed33d7b7347b8e3b (19:45): I'm out again for a bit. half my face is still numb from the dentist, and it's surprisingly hard to focus on things",
        "78aa56fb6b82bfe5b27301fa67735e97 (19:47): take it easy 0de37da1d654c10aed33d7b7347b8e3b",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:47): 0de37da1d654c10aed33d7b7347b8e3b: take care of yourself :) thank you for contributing.",
        "70bfd0ae2cfbf2da192bddd569cf6132 (19:47): I need all the feedback I can get."
    ],
    "person_ids": [
        "dbbfec510a725fc27ce06b6dcb0caaa0",
        "ea87d7e119a6809c8557c36394e50d7c",
        "70bfd0ae2cfbf2da192bddd569cf6132",
        "a5feb63b4be6660b52aba030b7de4da4",
        "c3ea1048aab70f3371563bd7efbdb3aa",
        "4c681049601b3c374f1d2c0077c99049",
        "0de37da1d654c10aed33d7b7347b8e3b",
        "f9259f78376053934177e72f9ea0af8e",
        "78aa56fb6b82bfe5b27301fa67735e97"
    ]
}