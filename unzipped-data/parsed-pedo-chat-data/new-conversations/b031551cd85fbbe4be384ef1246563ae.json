{
    "id": "b031551cd85fbbe4be384ef1246563ae",
    "messages": [
        "27fa0f96dfc03bb1f2bebd6fee16f716 (19:16): why cant anything with oracle just work? *sigh*",
        "75273e2d05e97198fa881ed7690ca760 (19:36): hi, I have a question",
        "75273e2d05e97198fa881ed7690ca760 (19:37): may I load multiple files by using sql loader",
        "75273e2d05e97198fa881ed7690ca760 (19:37): files name are similar, like 09_01.csv, 09_02.csv, 10_13.csv, sth like that",
        "75273e2d05e97198fa881ed7690ca760 (19:38): but don't know how many files there are",
        "1ab15f3644d1a5e1c282965e97a4603a (19:38): yes but you'll habe to start sql loader several times(once for each file)",
        "75273e2d05e97198fa881ed7690ca760 (19:38): so in sql loader, may I name the file once, like *.csv",
        "37d2de30a27c46d835b1351ae69ab8be (19:39): morning all",
        "75273e2d05e97198fa881ed7690ca760 (19:39): and sqlploader load all files which name is match the *.csv name?",
        "75273e2d05e97198fa881ed7690ca760 (19:39): morning:)",
        "37d2de30a27c46d835b1351ae69ab8be (19:39): cguo: hm not sure on that one, I somehow doubt it",
        "37d2de30a27c46d835b1351ae69ab8be (19:39): you could just do a bash for loop",
        "1ab15f3644d1a5e1c282965e97a4603a (19:40): don't think so, but you can do a for-loop using bash(unix/linux) or batch(windows) files",
        "37d2de30a27c46d835b1351ae69ab8be (19:40): for file in `ls *.csv`; do",
        "37d2de30a27c46d835b1351ae69ab8be (19:40): sqlldr blah blah $file",
        "37d2de30a27c46d835b1351ae69ab8be (19:40): done",
        "37d2de30a27c46d835b1351ae69ab8be (19:40): something like that",
        "abe59155aa41ae19e4ea964e9dd4b200 (19:40): <a href=\"http://www.bagdadsoftware.de&quot;\">http://www.bagdadsoftware.de&quot;</a>)",
        "37d2de30a27c46d835b1351ae69ab8be (19:40): bluebird: jynx",
        "75273e2d05e97198fa881ed7690ca760 (19:41): rizzo, I understand, thank you:)",
        "98539571174600c9ea1e6ab113289c96 (19:41): hi guys",
        "443a9547033ec9d695ae9d29e8df98b1 (19:42): Hello",
        "98539571174600c9ea1e6ab113289c96 (19:42): how can I see raw sql of some package ?",
        "98539571174600c9ea1e6ab113289c96 (19:42): there is some package mypackages",
        "607c4806ca15b47dcc0effd779440d55 (19:42): Sir_J: select from all_source",
        "98539571174600c9ea1e6ab113289c96 (19:42): it contains some functions/procedures etc.",
        "98539571174600c9ea1e6ab113289c96 (19:42): how can I see specifications nad body of this package ?",
        "98539571174600c9ea1e6ab113289c96 (19:42): pravus, I need concret package",
        "3f80d62ed949f29a551f0f7d97ab8089 (19:42): ya",
        "98539571174600c9ea1e6ab113289c96 (19:43): and concret function",
        "607c4806ca15b47dcc0effd779440d55 (19:43): Sir_J: you can select based on the type 'PACKAGE' or 'PACKAGE BODY'",
        "3f80d62ed949f29a551f0f7d97ab8089 (19:43): for example, you can trace an &quot;PL/SQL developer&quot; :-)",
        "98539571174600c9ea1e6ab113289c96 (19:43): hell, I have only sqlplus",
        "3f80d62ed949f29a551f0f7d97ab8089 (19:43): some useful selects are there)",
        "98539571174600c9ea1e6ab113289c96 (19:43): I'd like to see this info in console",
        "98539571174600c9ea1e6ab113289c96 (19:43): without other clients",
        "3f80d62ed949f29a551f0f7d97ab8089 (19:44): all_source",
        "3f80d62ed949f29a551f0f7d97ab8089 (19:44): and parser.",
        "98539571174600c9ea1e6ab113289c96 (19:44): ghm",
        "443a9547033ec9d695ae9d29e8df98b1 (19:45): parser is the keyword here.. it usually looks like rubbish in sqlplus :)",
        "98539571174600c9ea1e6ab113289c96 (19:45): is any way to see body of concret function in package ?",
        "98539571174600c9ea1e6ab113289c96 (19:45): like .... select function_body from ...... ?",
        "75273e2d05e97198fa881ed7690ca760 (19:45): Hi, there is a sql scripts which I need to run every day",
        "75273e2d05e97198fa881ed7690ca760 (19:46): may I put the variable in the sql scripts",
        "75273e2d05e97198fa881ed7690ca760 (19:47): and let a shell scripting connect into it, and let the shell scripting setup the variable",
        "607c4806ca15b47dcc0effd779440d55 (19:47): cguo: i believe if you use &amp;1, &amp;2... in your SQL script, sqlplus will substitute parms from the command line",
        "607c4806ca15b47dcc0effd779440d55 (19:48): sqlplus user@sid foo.sql parm1 parm2  =&gt;  &amp;1 gets set to parm1, etc...",
        "607c4806ca15b47dcc0effd779440d55 (19:48): i think that's how it works... but i can't test it right now",
        "443a9547033ec9d695ae9d29e8df98b1 (19:48): almost right @foo.sql",
        "75273e2d05e97198fa881ed7690ca760 (19:49): thanks a lot:) I will test it now",
        "98539571174600c9ea1e6ab113289c96 (19:52): uff",
        "98539571174600c9ea1e6ab113289c96 (19:52): select text from all_source where type='PACKAGE' and name='SEARCH_MANAGE';",
        "98539571174600c9ea1e6ab113289c96 (19:52): returns me only signatures of functions",
        "98539571174600c9ea1e6ab113289c96 (19:52): how can I see body of functions ?",
        "607c4806ca15b47dcc0effd779440d55 (19:53): Sir_J: type='PACKAGE BODY'",
        "98539571174600c9ea1e6ab113289c96 (19:53): SQL&gt; select text from all_source where type='PACKAGE_BODY' and name='SEARCH_MANAGE';",
        "98539571174600c9ea1e6ab113289c96 (19:53): no rows selected",
        "98539571174600c9ea1e6ab113289c96 (19:53): SQL&gt;",
        "98539571174600c9ea1e6ab113289c96 (19:53): wtf ?",
        "443a9547033ec9d695ae9d29e8df98b1 (19:53): _?",
        "98539571174600c9ea1e6ab113289c96 (19:54): where is body ?",
        "443a9547033ec9d695ae9d29e8df98b1 (19:54): 16:52 &lt; pravus&gt; Sir_J: type='PACKAGE BODY'",
        "98539571174600c9ea1e6ab113289c96 (19:54): ah",
        "98539571174600c9ea1e6ab113289c96 (19:54): thansk",
        "98539571174600c9ea1e6ab113289c96 (19:55): thanks guys"
    ],
    "person_ids": [
        "27fa0f96dfc03bb1f2bebd6fee16f716",
        "75273e2d05e97198fa881ed7690ca760",
        "1ab15f3644d1a5e1c282965e97a4603a",
        "37d2de30a27c46d835b1351ae69ab8be",
        "abe59155aa41ae19e4ea964e9dd4b200",
        "98539571174600c9ea1e6ab113289c96",
        "443a9547033ec9d695ae9d29e8df98b1",
        "607c4806ca15b47dcc0effd779440d55",
        "3f80d62ed949f29a551f0f7d97ab8089"
    ]
}