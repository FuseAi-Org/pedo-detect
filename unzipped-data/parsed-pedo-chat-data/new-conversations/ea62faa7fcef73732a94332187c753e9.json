{
    "id": "ea62faa7fcef73732a94332187c753e9",
    "messages": [
        "7eb8a8faa85063e1e8425968c2a222fe (22:40): hey guys",
        "7eb8a8faa85063e1e8425968c2a222fe (22:40): should i be making my pages in html5",
        "7eb8a8faa85063e1e8425968c2a222fe (22:40): has the net transferred to html5 yet",
        "25e25811b87578fe2fe8126c0de0fe98 (22:40): you can start",
        "25e25811b87578fe2fe8126c0de0fe98 (22:40): it's a slow process",
        "25e25811b87578fe2fe8126c0de0fe98 (22:40): and you can be one more step",
        "7eb8a8faa85063e1e8425968c2a222fe (22:41): i got clients who wants flash like animation but i hate adobe so i refuse to use flash",
        "5a3c2bf9008d20c214f5f11a030491f2 (22:42): lots of good html4 pages will validate well as html5",
        "aa0abd9d7e35cef4b0e2802cc422bd4d (22:42): 7eb8a8faa85063e1e8425968c2a222fe: html5 is not a good idea for flash replacement yet",
        "aa0abd9d7e35cef4b0e2802cc422bd4d (22:42): fyi",
        "aa0abd9d7e35cef4b0e2802cc422bd4d (22:42): but html5 in general go for it!",
        "7eb8a8faa85063e1e8425968c2a222fe (22:42): ok",
        "7eb8a8faa85063e1e8425968c2a222fe (22:42): i guesss its worthwhile to learn it just in case",
        "5a3c2bf9008d20c214f5f11a030491f2 (22:43): if you already know XHTML you don't really have to learn a lot of new stuff",
        "0fe8692be7a494c6561f745b9f3b0d17 (22:43): the semantic tags can work across all browsers with a tiny touch of javascript",
        "7eb8a8faa85063e1e8425968c2a222fe (22:44): yeah the canvas is what i really want to learn for the animations",
        "7eb8a8faa85063e1e8425968c2a222fe (22:44): it seems like it's the same canvas used on the mobile platforms",
        "0fe8692be7a494c6561f745b9f3b0d17 (22:44): you should find pretty good browser support there, but it isn't covered by all",
        "0fe8692be7a494c6561f745b9f3b0d17 (22:45): ?g html5 polyfills",
        "38e5971429bb0f30aa410ac1ae0bb9a9 (22:45): 0fe8692be7a494c6561f745b9f3b0d17, HTML5 Cross Browser Polyfills - GitHub - https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills",
        "0fe8692be7a494c6561f745b9f3b0d17 (22:45): check that link too",
        "7eb8a8faa85063e1e8425968c2a222fe (22:45): thx",
        "3e65db05e37f34bd21c82600a0356298 (22:52): yeah after pacman in 3D, wait for pacman in 3D night life :)",
        "6a8ca7ce228632a45b077b5398962bf2 (23:16): paul_irish: Another 3D demo I found online, so I bundled it with the js gbc emu: http://www 6a8ca7ce228632a45b077b5398962bf2alitz.org/get_the_hell_out/GB_3D_Texture_Test/",
        "3e65db05e37f34bd21c82600a0356298 (23:38): http://yfrog.com/gzygrtp pacmaze at night http://yfrog.com/hsjghbp",
        "c93ee64b7af6348688064aca91cc346d (23:52): Using DrawImage, you can display part of a larger image. Can you store part of an image as an image variable?",
        "8b3687499080633e1898fa1dd209ef81 (23:54): c93ee64b7af6348688064aca91cc346d, what is &quot;an image variable&quot;?",
        "c93ee64b7af6348688064aca91cc346d (23:55): 8b3687499080633e1898fa1dd209ef81: https://developer.mozilla.org/en/Canvas_tutorial/Using_images#Creating_an_image_from_scratch",
        "7cbd522d7fcf593a1e60d52c789b6a7b (23:55): you could store a big hunk of base64 encoded image as a string...",
        "3e65db05e37f34bd21c82600a0356298 (23:56): c93ee64b7af6348688064aca91cc346d: yes you can",
        "c93ee64b7af6348688064aca91cc346d (23:56): All I've been able to find is var img = new Image(); which has src and onload attributes",
        "8b3687499080633e1898fa1dd209ef81 (23:56): new Image() === document.createElement(&quot;img&quot;)",
        "8b3687499080633e1898fa1dd209ef81 (23:57): I'd love to know how 3e65db05e37f34bd21c82600a0356298 would do it",
        "8b3687499080633e1898fa1dd209ef81 (23:58): Maybe by drawing it on a canvas and then extracting a data: URL?",
        "c93ee64b7af6348688064aca91cc346d (23:59): I think this works: img.src = ctx.drawImage(document.getElementById('source'),0,0,104,124,21,20,87,104); where img is the image variable and ctx is the canvas",
        "c93ee64b7af6348688064aca91cc346d (23:59): It looks like it draws right using ctx.drawImage(img);",
        "3e65db05e37f34bd21c82600a0356298 (23:59): http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-getimagedata &lt;- c93ee64b7af6348688064aca91cc346d this is one way to get part of an existing image",
        "8b3687499080633e1898fa1dd209ef81 (00:00): c93ee64b7af6348688064aca91cc346d, drawImage doesn't return anything",
        "3e65db05e37f34bd21c82600a0356298 (00:00): http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-canvas-todataurl this is another, the first being more pixel oriented, the second more url/web",
        "c93ee64b7af6348688064aca91cc346d (00:09): 8b3687499080633e1898fa1dd209ef81, yeah, it displays what I'm looking for, but I think its just referenceing the ctx.drawImage stuff.",
        "c93ee64b7af6348688064aca91cc346d (00:09): Not storing the data as an image"
    ],
    "person_ids": [
        "7eb8a8faa85063e1e8425968c2a222fe",
        "25e25811b87578fe2fe8126c0de0fe98",
        "5a3c2bf9008d20c214f5f11a030491f2",
        "aa0abd9d7e35cef4b0e2802cc422bd4d",
        "0fe8692be7a494c6561f745b9f3b0d17",
        "38e5971429bb0f30aa410ac1ae0bb9a9",
        "3e65db05e37f34bd21c82600a0356298",
        "6a8ca7ce228632a45b077b5398962bf2",
        "c93ee64b7af6348688064aca91cc346d",
        "8b3687499080633e1898fa1dd209ef81",
        "7cbd522d7fcf593a1e60d52c789b6a7b"
    ]
}