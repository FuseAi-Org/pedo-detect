{
    "id": "274d251cb52dd4ba187277ee2b19236f",
    "messages": [
        "6b1b2f5752bf508f0a8682342a9ac638 (14:44): Hi, guys. I wonder is there any reference on Qt-style documenting? I mean those fancy comments starting with /*! found in any Qt source file.",
        "3904974c863a035fbd0381428a76d95c (14:53): that would prolly be doxygen marker ....",
        "6b1b2f5752bf508f0a8682342a9ac638 (14:56): AFAIK /** is a doxygen marker",
        "6b1b2f5752bf508f0a8682342a9ac638 (14:57): BTW, while installing QSA the docs seem to be generated from the sources",
        "6b1b2f5752bf508f0a8682342a9ac638 (14:57): And I've got no doxygen installed on my Win32 PC",
        "6b1b2f5752bf508f0a8682342a9ac638 (14:57): any other ideas?",
        "33b679d516ff137ec89c68cea7159559 (15:00): hi all",
        "33b679d516ff137ec89c68cea7159559 (15:01): What can we do about a Qt app that when it's double-clicked in Windows first opens a console window and then starts the actual app?",
        "3904974c863a035fbd0381428a76d95c (15:02): Quibus, you get a real OS ?",
        "33b679d516ff137ec89c68cea7159559 (15:02): One of the things about Qt is that you can make portable progs",
        "33b679d516ff137ec89c68cea7159559 (15:02): So, we also want it to work on that unreal OS",
        "3904974c863a035fbd0381428a76d95c (15:03): change prog tye from console to gui",
        "3904974c863a035fbd0381428a76d95c (15:03): depedent on ide",
        "33b679d516ff137ec89c68cea7159559 (15:03): we don't use an IDE",
        "33b679d516ff137ec89c68cea7159559 (15:03): there must be some build option",
        "c0c76527fb07e22c734478553b95a623 (15:04): iirc it's -mwindows for mingw",
        "33b679d516ff137ec89c68cea7159559 (15:04): let's try that",
        "33b679d516ff137ec89c68cea7159559 (15:12): elite01: adding that to the build flags of our project doesn't help it seems",
        "c0c76527fb07e22c734478553b95a623 (15:12): you're using qmake?",
        "33b679d516ff137ec89c68cea7159559 (15:13): no",
        "33b679d516ff137ec89c68cea7159559 (15:13): we're using our own nifty build system :-)",
        "c0c76527fb07e22c734478553b95a623 (15:13): scary :D",
        "c0c76527fb07e22c734478553b95a623 (15:14): have you passed -mwindows as a linker flag?",
        "33b679d516ff137ec89c68cea7159559 (15:14): no, as a compile flag",
        "c0c76527fb07e22c734478553b95a623 (15:14): try passing it as a linker flag",
        "33b679d516ff137ec89c68cea7159559 (15:14): Here's the thing: <a href=\"http://openmsx.cvs.sourceforge.net/openmsx/openmsx-debugger/build/main.mk?revision=1.5&amp;view=markup\">http://openmsx.cvs.sourceforge.net/openmsx/openmsx-debugger/build/main.mk?revision=1.5&amp;view=markup</a>",
        "c0c76527fb07e22c734478553b95a623 (15:16): -mwindows doesn't seem to change stuff",
        "33b679d516ff137ec89c68cea7159559 (15:19): elite01: the windows guy reports that adding it as a linker flag works :-)",
        "c0c76527fb07e22c734478553b95a623 (15:19): wait - looks like it does",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): qnetbased.cpp: In constructor `CCMainWin::CCMainWin()':",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): qnetbased.cpp:59: error: cannot call member function `void  MyQNETBASED::listInterfaces()' without object",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): <a href=\"http://www.linbsd.org/qnetbased.cpp\">http://www.linbsd.org/qnetbased.cpp</a>",
        "0397397c4e5cebfb687675430141ab87 (15:19): 404",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): trying to have a seperate method for adding items to a menu",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): oops",
        "ce8a1609cf8d1a408da3cac46365f53e (15:19): <a href=\"http://net.linbsd.org/qnetbased.cpp\">http://net.linbsd.org/qnetbased.cpp</a>",
        "0397397c4e5cebfb687675430141ab87 (15:20): ok",
        "0397397c4e5cebfb687675430141ab87 (15:20): and now read the error message again and again and again ;)",
        "ce8a1609cf8d1a408da3cac46365f53e (15:20): works fine inline to CCMainWin, however it wont work",
        "33b679d516ff137ec89c68cea7159559 (15:20): thanks elite01",
        "c0c76527fb07e22c734478553b95a623 (15:20): np",
        "ce8a1609cf8d1a408da3cac46365f53e (15:20): if it takes no arguments, why would it need an object?",
        "0397397c4e5cebfb687675430141ab87 (15:20): Ober: it needs an object, no argument",
        "c0c76527fb07e22c734478553b95a623 (15:21): actually, it takes this as an implicit argument",
        "0397397c4e5cebfb687675430141ab87 (15:21): Ober: you can only call class methods if you have instantiated an object from this class",
        "0397397c4e5cebfb687675430141ab87 (15:21): elite01: don't confuse him further ;)",
        "ce8a1609cf8d1a408da3cac46365f53e (15:21): haha",
        "c0c76527fb07e22c734478553b95a623 (15:21): *whistles*",
        "ce8a1609cf8d1a408da3cac46365f53e (15:21): that famous C++ word",
        "0397397c4e5cebfb687675430141ab87 (15:21): anyway",
        "ce8a1609cf8d1a408da3cac46365f53e (15:22): so I would have had to add something to it prior to calling a method on it?",
        "0397397c4e5cebfb687675430141ab87 (15:22): if you want your interfacemenu to be filled then you have to call it on an object",
        "0397397c4e5cebfb687675430141ab87 (15:22): no",
        "0397397c4e5cebfb687675430141ab87 (15:22): MyQNETBASED* mywidget = new MyQNETBASED(this); &lt;-",
        "ce8a1609cf8d1a408da3cac46365f53e (15:22): ahh",
        "33b679d516ff137ec89c68cea7159559 (15:22): are we talking basic OO mechanisms? :P",
        "0397397c4e5cebfb687675430141ab87 (15:22): there's an object of that class :P",
        "ce8a1609cf8d1a408da3cac46365f53e (15:22): yes",
        "0397397c4e5cebfb687675430141ab87 (15:22): of course hyou have to call mywidget-&gt;listInterfaces();",
        "ce8a1609cf8d1a408da3cac46365f53e (15:23): ok that makes sense. thanks",
        "0397397c4e5cebfb687675430141ab87 (15:23): Ober: you can call static merthods of a class without having an object created",
        "0397397c4e5cebfb687675430141ab87 (15:23): Ober: but of course static methods can only access/call other static stuff in the same class",
        "ce8a1609cf8d1a408da3cac46365f53e (15:23): makes sense.",
        "0397397c4e5cebfb687675430141ab87 (15:23): Ober: afaics you don't want that in this case",
        "ce8a1609cf8d1a408da3cac46365f53e (15:24): well, I am going to be doing a lot of C in the listInterfaces. OOP is a requirement if I want to do this in QT",
        "0397397c4e5cebfb687675430141ab87 (15:24): btw",
        "0397397c4e5cebfb687675430141ab87 (15:24): that code will crash",
        "0397397c4e5cebfb687675430141ab87 (15:24): interfaceMenu is never set to anything",
        "0397397c4e5cebfb687675430141ab87 (15:24): i.e. it's a null pointer all the time",
        "0397397c4e5cebfb687675430141ab87 (15:24): Ober: and use 0L instead of NULL in C++",
        "0397397c4e5cebfb687675430141ab87 (15:25): Ober: NULL is a C define, not C++",
        "0397397c4e5cebfb687675430141ab87 (15:26): btw, all this looks like reinventing the wheel ;)",
        "ce8a1609cf8d1a408da3cac46365f53e (15:26): never set to anything?",
        "0397397c4e5cebfb687675430141ab87 (15:26): where do you allocate a QPopupMenu?",
        "ce8a1609cf8d1a408da3cac46365f53e (15:26): QPopupMenu * interfaceMenu = new QPopupMenu;",
        "ce8a1609cf8d1a408da3cac46365f53e (15:26): in CCMainWin",
        "0397397c4e5cebfb687675430141ab87 (15:27): eek",
        "0397397c4e5cebfb687675430141ab87 (15:27): somehow all this makes no sense at all",
        "0397397c4e5cebfb687675430141ab87 (15:27): that's not the same as interfaceMenu in MyQNETBASED",
        "ce8a1609cf8d1a408da3cac46365f53e (15:29): how so?&gt;",
        "0397397c4e5cebfb687675430141ab87 (15:30): better read a book about OOP and C++ first =)",
        "ce8a1609cf8d1a408da3cac46365f53e (15:31): yeah sort in the process of that",
        "ce8a1609cf8d1a408da3cac46365f53e (15:31): the real bugger is that only about 10% of the code will be QT/c++ specific...",
        "ce8a1609cf8d1a408da3cac46365f53e (15:32): well thanks for the help"
    ],
    "person_ids": [
        "6b1b2f5752bf508f0a8682342a9ac638",
        "3904974c863a035fbd0381428a76d95c",
        "33b679d516ff137ec89c68cea7159559",
        "c0c76527fb07e22c734478553b95a623",
        "ce8a1609cf8d1a408da3cac46365f53e",
        "0397397c4e5cebfb687675430141ab87"
    ]
}