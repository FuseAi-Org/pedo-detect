{
    "id": "49d2ff3868522e592ebbf454af2aae25",
    "messages": [
        "73c8ec97fe210f482d81a5f04e5e6642 (11:29): some of the imperative pseudo-code/prose in the HTML5 spec is rather difficult to follow",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:37): you have to be a native en-GB-x-Hixie speaker",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:38): that could be awkward",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:39): it's rather frustrating, as you can almost represent all this stuff with regular expressions",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:39): which would be a lot easier to check that you've got it right",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:40): I'm stuck on the &quot;get an attribute&quot; step",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:40): if you read carefully it shouldn't be a problem",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:40): the code gets rather long and fiddly",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): you don't have to follow the specification",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): you just have to ensure that A &gt; algorithm &gt; B is identicala",
        "b25b6b77a0087ff8385941e5545d32ea (11:45): 73c8ec97fe210f482d81a5f04e5e6642: Charset sniffing? Yeah, I didn't like doing that either",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): actually, A &gt; B &gt; C",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): where B can be English prose or C",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): or Python, etc.",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:46): right",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:53): the charset sniffer seems to parse attributes on close tags, eg. &lt;/foo bar=&quot;baz&quot;&gt;",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:53): yeah",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:53): tokenizer does that too",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:54): does the tokenizer parse them then throw them away?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:54): yes",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:54): phew :)",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:57): what I meant about the spec is that the description is actually lower level than the code",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:57): it's easier to implement a high level spec with low level code than the reverse.",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:57): hmm",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:57): isn't the spec at the same level?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:58): charset sniffing needs to be done at the byte level",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:59): I mean it's very imperative",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:59): the spec is longer than your python implementation, for example",
        "73c8ec97fe210f482d81a5f04e5e6642 (11:59): and much harder to understand",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:01): so how can it be done in the same way being as exact as it is now?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:01): if it can be improved I suppose it should be done",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:02): that's what I'm trying to figure out",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:02): using regular expressions would be an obvious place to start",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:02): and it's easy to see how that could be done for most of it",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:03): for example: &lt;![^&gt;]*&gt;",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:03): that's the regular expression to match &lt;!DOCTYPE...&gt; and similar junk and skip over it",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:04): similarly for comments: &lt;!--([^-]|-[^-]|--[^&gt;])*--&gt;",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:04): defining it using a regular expression means that there is no ambiguity about &lt;!--&gt; vs. &lt;!---&gt; vs. &lt;!----&gt;",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:05): start tags and get attribute are a little trickier, but I think can still be done",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:06): to match the beginning of a start tag: &lt;/?[A-Za-z][^\\s&gt;&lt;]*",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:07): (or end tag, as it has an optional slash)",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:08): the resulting regular expressions could just about be pasted straight into lex or perl or whatever",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:09): however, it makes it harder to introduce &lt;!--&gt; as comment",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:10): very easy, just change the regular expression",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:10): much easier than editing the prose",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:11): actually, the expression I pasted before is a little bit too strict",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:11): if you're going down that route you have to define what subset of regular expressions and such...",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:11): &lt;!--([^-]|-+[^&gt;])*--&gt; would be better",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:11): prefers the prose actually",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:12): that's not a problem, many many specifications use standard subset of regular expressions or BNF",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:12): oh well :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:13): regular expressions also encourages a particular implementation",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:13): which isn't necessarily good",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:14): meeting",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:14): hmm, I think the current prose is more biased towards a particular implementation",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:14): whereas regular expressions can be implemented directly, or used as specification for hand written parser",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:20): ahah, regular expression for attributes: [\\s/]*([^&lt;&gt;][^=\\s/&lt;&gt;]*)[\\s]*=[\\s]*('[^']*'|&quot;[^&quot;]*&quot;|[^\\s&lt;&gt;]*)",
        "73c8ec97fe210f482d81a5f04e5e6642 (12:21): it may look like line noise, but you don't have to be an en-GB-x-Hixie speaker to understand it :)"
    ],
    "person_ids": [
        "73c8ec97fe210f482d81a5f04e5e6642",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b25b6b77a0087ff8385941e5545d32ea"
    ]
}