{
    "id": "23c79f2fe9aeb7d29d98885c52a752e0",
    "messages": [
        "4a795987147ea8cfee6e57e484a140d7 (15:50): is there a script available to test strength of passwords?",
        "d867161373eecd125704106edd78a5c8 (15:53): simmerz: ask #perl; this is #javascript",
        "4a795987147ea8cfee6e57e484a140d7 (15:56): i know, i asked because I want it to be front end",
        "d867161373eecd125704106edd78a5c8 (15:56): simmerz: just kidding :P",
        "4a795987147ea8cfee6e57e484a140d7 (15:56): as a user types a new password into a password field, for the js to test its strength",
        "d867161373eecd125704106edd78a5c8 (15:56): simmerz: anyway, i have no idea. why don't you ask someone else on this channel?",
        "d867161373eecd125704106edd78a5c8 (15:57): simmerz: (kidding again) :P",
        "4a795987147ea8cfee6e57e484a140d7 (15:57): rather you didn't",
        "d867161373eecd125704106edd78a5c8 (15:57): simmerz: sorry. i have my own frustrations. i can't find answers to a burning question.",
        "4a795987147ea8cfee6e57e484a140d7 (15:58): normally, the answer to burning is toast",
        "d867161373eecd125704106edd78a5c8 (15:59): i wish it were that easy",
        "4a795987147ea8cfee6e57e484a140d7 (16:01): is it a js question?",
        "d867161373eecd125704106edd78a5c8 (16:01): not necessarily, but mainly",
        "4a795987147ea8cfee6e57e484a140d7 (16:01): or is it an IE question? ;-)",
        "d867161373eecd125704106edd78a5c8 (16:01): i mean i have no hopes css3 is that smart",
        "d867161373eecd125704106edd78a5c8 (16:01): no way",
        "d867161373eecd125704106edd78a5c8 (16:01): ;)",
        "d867161373eecd125704106edd78a5c8 (16:03): i will post it again",
        "d867161373eecd125704106edd78a5c8 (16:03): is there any smart way (css3? javascript?) to implement newspaper-like columns in a page by supporting dynamic adjustment of column spacing, number, and size (both width AND HEIGHT)? you know, i want the browser to always display full columns ONLY in the visible area (as determined by the browser window size) and to require ONLY horizontal scroll (to the next columns) for viewing the rest of the page.",
        "d867161373eecd125704106edd78a5c8 (16:03): besides, i want it to instantly recalculate ALL of these on any page/font resize. more specifically, i want text to be instantly moved from one column to the next/previous, whenever the browser window is reduced/increased size or whenever font is increased/reduced size.",
        "d867161373eecd125704106edd78a5c8 (16:03): for instance, whenever font is enlarged (or window is resized smaller), i want it to calculate the new number of lines visible on each column (also, probably a new column width, according to some ratio), and then move all the extra text (which otherwise wouldn't be visible anymore) to next column(s).",
        "d867161373eecd125704106edd78a5c8 (16:03): this is it.",
        "bc075c41a4d2dbb1abbdf399c9738994 (03:11): can you clarify?",
        "d3c43cdfd618935d601322f674335a46 (03:12): insin: yeah, there's something weird about extending Form, im able to extend Element just fine",
        "d3c43cdfd618935d601322f674335a46 (03:12): Form a keyword or something, textmate highlights it as a different color",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:12): correct, the third argument should be a function - you're passing in whatever the result of calling the display function is, not the function itself",
        "bc075c41a4d2dbb1abbdf399c9738994 (03:13): oh, i see",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:13): display(i) is a call",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:14): this is still just Javascript basics, not prototype specific :)",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:23): hihi all",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:24): ahoy",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:26): hihi insin",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:26): how're you",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:27): not bad, not bad at all. How's The Jan` Experience treating you?",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:28): The Jan experience is mixed.",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:29): But what of Comic Sans?",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:30): When someone justifies it with &quot;it matches our logo&quot;, I think the correct response should be &quot;get a new logo!&quot; ;)",
        "7efe5427f56b600139555cafae928ce5 (03:30): pstickne, json is great. thanks.",
        "7efe5427f56b600139555cafae928ce5 (03:30): how do I iterate on an object field names?",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:31): insin: My knowlege of Comic Sans is small. Perhaps happily. But I feel your pain.",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:32): Hi Jan`",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:32): insin: There will be no other font in use by 2010, apparently.",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:33): omry: if you only want to iterate over names you've defined yourself, here's an interesting alternative to straight out &quot;for property in object&quot;: <a href=\"http://dean.edwards.name/weblog/2006/07/enum/\">http://dean.edwards.name/weblog/2006/07/enum/</a>",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:33): Will someone please explain to me what is so bad about Comic Sas",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:33): Twey_: nooooooo",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:34): insin: Sorry, 2030",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:34): insin: <a href=\"http://bancomicsans.com/statistics.html\">http://bancomicsans.com/statistics.html</a>",
        "7efe5427f56b600139555cafae928ce5 (03:35): insin, before I go improving on the 'for proerty in object', how do I do that one?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:35): And Jan`",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:35): yes?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:35): Jan`: Sorry, I meant that applies to you too",
        "7efe5427f56b600139555cafae928ce5 (03:35): insin, I need both property name and proprty value.",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:35): Jan`: But I only addressed it to insin :-P",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:36): omry: look at the first section of code in the link I posted",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:36): hah, brilliant",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:36): Okay, so they've taken the NASDAQ ticker and replaced all the fonts with Comic Sans?",
        "7efe5427f56b600139555cafae928ce5 (03:37): insin,  dont think it apply to what I am doing.",
        "7efe5427f56b600139555cafae928ce5 (03:38): I hava a javascript object which represents an associated array in json. I need to iterate its key=value pairs.",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:38): Jan`: Comic Sans is *everywhere* o.@",
        "77ced1ee87ecfc1b9804b6eca00679de (03:38): hi",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:38): Twey_, haha",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:39): Jan`: And it's Microsoft, which is even worse.",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:39): Twey_, I love the one dollar-bill. They made George's nose fat for added measure.",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (03:39): omry: for (var key in yourObject) { alert(key + &quot;=&quot; + yourObject[key]); }",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:39): pstickne: Rofl!",
        "7efe5427f56b600139555cafae928ce5 (03:40): insin, thanks. :)",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:45): Twey_: Is comic sans in my lunch?",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:45): Is it on my underwear labels?",
        "1418091152ccd1dc64db38125b8b4dd2 (03:45): could be",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:45): Do I have a blob of Comic Sans stuck on the end of my nose?",
        "1418091152ccd1dc64db38125b8b4dd2 (03:45): I think sears uses it",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:45): Jan`, dude, look at the statistics O.o",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:46): ohh the freedom of the internet :x",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:46): pstickne: I can't.",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:46): I presume they are made up anyway :)",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:47): Jan`, hehe, most likely. But the pictures are amusing.",
        "7bebb59053e1c5110a6e6a9eaa806b99 (03:48): &quot;*inormation based on research by the Foundation of National Typographers in association with the Corporation for Public Misinformation.&quot;",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:48): Jan`: Quite likely. :-P",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:48): pstickne: Lol :-D",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:51): I wish :-P",
        "7efe5427f56b600139555cafae928ce5 (03:51): I have a problem when assigning the innerHTML of a td element. the text changes, but I loose the style information (css). any idea ?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:52): omry: innerHTML will do that.",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:52): Twey_: You don't wish.",
        "cec208d5283bd23c9a4a3e102b6813e2 (03:52): I'm not joking.",
        "7efe5427f56b600139555cafae928ce5 (03:52): Twey_, it will? anything I can do about it?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:53): omry: Use the DOM methods instead.",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:53): :-)",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:53): Only solution, really.",
        "7efe5427f56b600139555cafae928ce5 (03:53): Twey_, what dom methods?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:53): omry: Ssssh!  Not with frb in the channel!",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:54): omry: Lol",
        "7efe5427f56b600139555cafae928ce5 (03:54): frb is away",
        "7efe5427f56b600139555cafae928ce5 (03:54): you can talk freely :)",
        "233ca1f467e8dabcd3aa31cbb31694d9 (03:55): omry: <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/domstructure\">http://www.howtocreate.co.uk/tutorials/javascript/domstructure</a>",
        "7efe5427f56b600139555cafae928ce5 (03:58): Twey_, so I guess its removeChild and then appendChild..",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:02): what's meant by &quot;inlining an assignment&quot;",
        "233ca1f467e8dabcd3aa31cbb31694d9 (04:02): Jan`: Context?",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:02): <a href=\"http://dhtmlkitchen.com/learn/js/perf/objects.jsp\">http://dhtmlkitchen.com/learn/js/perf/objects.jsp</a>",
        "3c26b6648764f1ab4360aa71da5d760b (04:03): You don't have to remove before you append",
        "3c26b6648764f1ab4360aa71da5d760b (04:03): Appending a node elsewhere will automatically remove it from where it used to be",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:04): ...huh?",
        "233ca1f467e8dabcd3aa31cbb31694d9 (04:04): Jan`: He was talking to omry",
        "7bebb59053e1c5110a6e6a9eaa806b99 (04:04): Jan`,   x = y = z",
        "233ca1f467e8dabcd3aa31cbb31694d9 (04:04): Jan`: An assignment statement returns its right-hand side",
        "7bebb59053e1c5110a6e6a9eaa806b99 (04:04): I think that is what they mean",
        "233ca1f467e8dabcd3aa31cbb31694d9 (04:05): Jan`: So you can use it as part of another statement",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:06): Oh yeah OK I'm doing that anyhoo.",
        "7bebb59053e1c5110a6e6a9eaa806b99 (04:07): I really doubt it is much/any faster though.",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:08): one problem I do have is repeatedly referencing CSS properties",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:08): I should store it in a variable, modify it as need be, then assign it once at the end.",
        "233ca1f467e8dabcd3aa31cbb31694d9 (04:09): Does anyone know (probably Woosta :-)) if a with() block is as efficient as assigning the result of a long chain of property lookups to a variable?",
        "3c26b6648764f1ab4360aa71da5d760b (04:10): Jan`: it's already a variable .. the only thing you'll be saving is the keystrokes to get there",
        "3c26b6648764f1ab4360aa71da5d760b (04:11): So rather than copying a pile of attributes to separate vars, just use with",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:11): It certainly is slower to keep going foo.bar.wibble than just go myvar=foo.bar.wibble",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:11): then refere to myvar",
        "3c26b6648764f1ab4360aa71da5d760b (04:11): Twey_: I think that answers you too .. ?",
        "3c26b6648764f1ab4360aa71da5d760b (04:12): slower .. to type?",
        "2bdd04d0ec117ac0f48fb417f4542ad8 (04:12): <a href=\"http://yuiblog.com/blog/2006/04/11/with-statement-considered-harmful/\">http://yuiblog.com/blog/2006/04/11/with-statement-considered-harmful/</a>",
        "cec208d5283bd23c9a4a3e102b6813e2 (04:12): Woosta: Slower to interpret, especilly in Firefox",
        "3c26b6648764f1ab4360aa71da5d760b (04:12): Eh? Prove that",
        "3c26b6648764f1ab4360aa71da5d760b (04:14): insin: I'd agree with that article .. though someone had mentioned with() already :)"
    ],
    "person_ids": [
        "4a795987147ea8cfee6e57e484a140d7",
        "d867161373eecd125704106edd78a5c8",
        "bc075c41a4d2dbb1abbdf399c9738994",
        "d3c43cdfd618935d601322f674335a46",
        "2bdd04d0ec117ac0f48fb417f4542ad8",
        "cec208d5283bd23c9a4a3e102b6813e2",
        "7efe5427f56b600139555cafae928ce5",
        "233ca1f467e8dabcd3aa31cbb31694d9",
        "77ced1ee87ecfc1b9804b6eca00679de",
        "7bebb59053e1c5110a6e6a9eaa806b99",
        "1418091152ccd1dc64db38125b8b4dd2",
        "3c26b6648764f1ab4360aa71da5d760b"
    ]
}