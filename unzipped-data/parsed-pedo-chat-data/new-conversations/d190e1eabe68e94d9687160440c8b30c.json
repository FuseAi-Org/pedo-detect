{
    "id": "d190e1eabe68e94d9687160440c8b30c",
    "messages": [
        "2c801963ac4e96f503bacd185b18a79c (12:50): hi",
        "2c801963ac4e96f503bacd185b18a79c (12:58): anyone here uses websockets?",
        "3e65db05e37f34bd21c82600a0356298 (12:58): not anymore :)",
        "3e65db05e37f34bd21c82600a0356298 (12:58): 2c801963ac4e96f503bacd185b18a79c: yes",
        "2c801963ac4e96f503bacd185b18a79c (12:58): 3e65db05e37f34bd21c82600a0356298: what kind of messaging protocol do you use?",
        "3e65db05e37f34bd21c82600a0356298 (12:58): 2c801963ac4e96f503bacd185b18a79c: but huge security issue appears 3 days ago. so browser support is going down",
        "3e65db05e37f34bd21c82600a0356298 (12:59): 2c801963ac4e96f503bacd185b18a79c: ? well i send string in json",
        "2c801963ac4e96f503bacd185b18a79c (12:59): 3e65db05e37f34bd21c82600a0356298: thats only until the handshake is fixed i think",
        "3e65db05e37f34bd21c82600a0356298 (12:59): 2c801963ac4e96f503bacd185b18a79c: me too. but then you need to get all browser to update, and socket io node to update too",
        "3e65db05e37f34bd21c82600a0356298 (12:59): i think it will be several months at best",
        "2c801963ac4e96f503bacd185b18a79c (13:00): im using a twisted python implementation, which shouldnt be hard to adapt",
        "2c801963ac4e96f503bacd185b18a79c (13:00): im studying a way how to make routing over websockets most effective. did you think of a way how to handle function routing?",
        "2c801963ac4e96f503bacd185b18a79c (13:00): im currently using something like https://github.com 2c801963ac4e96f503bacd185b18a79c/hwios/wiki/Hwm",
        "2c801963ac4e96f503bacd185b18a79c (13:01): for server=&gt;client function calls, im thinking of making urls as well",
        "2c801963ac4e96f503bacd185b18a79c (13:01): like client_uuid/path/to/resource/",
        "3e65db05e37f34bd21c82600a0356298 (13:01): 2c801963ac4e96f503bacd185b18a79c: what you want to add routing on the server side ?",
        "3e65db05e37f34bd21c82600a0356298 (13:02): good idea. even in the client side thinking abou tit",
        "2c801963ac4e96f503bacd185b18a79c (13:02): im a bit in doubt whether i should add a queue to process websocket messages",
        "2c801963ac4e96f503bacd185b18a79c (13:02): having a unique uri to the client, would make it possible to deliver messages after the client reconnects later",
        "2c801963ac4e96f503bacd185b18a79c (13:03): currently im using only a reference to the transport object",
        "3e65db05e37f34bd21c82600a0356298 (13:03): 2c801963ac4e96f503bacd185b18a79c: keep it simple",
        "3e65db05e37f34bd21c82600a0356298 (13:03): 2c801963ac4e96f503bacd185b18a79c: all the reconnection and backlog seems a lot.",
        "3e65db05e37f34bd21c82600a0356298 (13:03): 2c801963ac4e96f503bacd185b18a79c: i havent thought about this",
        "2c801963ac4e96f503bacd185b18a79c (13:03): yea, ill try to make it simple",
        "2c801963ac4e96f503bacd185b18a79c (13:04): urls are really nice to simulate get/post parameters in a websocket message",
        "3e65db05e37f34bd21c82600a0356298 (13:04): 2c801963ac4e96f503bacd185b18a79c: personnaly i send event like message. then you push the message received from the websocket into a event dispatcher, and up to the implementation to know what to do with those message/event",
        "2c801963ac4e96f503bacd185b18a79c (13:04): yea, im using the same kinda system",
        "2c801963ac4e96f503bacd185b18a79c (13:05): i added a simple jquery plugin to handle the websocket events and to add methods",
        "2c801963ac4e96f503bacd185b18a79c (13:05): but maybe i better combine that with jquery's bind event later",
        "2c801963ac4e96f503bacd185b18a79c (13:05): currently only one function can subscribe to an event",
        "2c801963ac4e96f503bacd185b18a79c (13:06): it used jsonrpc as protocol at first, but the stuff in the protocol didnt seem to make sense",
        "2c801963ac4e96f503bacd185b18a79c (13:07): it doesnt need to know its jsonrpc v2 on each call, or have an id i think",
        "2c801963ac4e96f503bacd185b18a79c (13:08): did you see the collaborative processing.js environment?",
        "2c801963ac4e96f503bacd185b18a79c (13:08): it would be cool to add a collaborative processing editor for students",
        "3e65db05e37f34bd21c82600a0356298 (13:08): 2c801963ac4e96f503bacd185b18a79c: nope i dunno it.",
        "3e65db05e37f34bd21c82600a0356298 (13:09): my reflex would be to be as standard as possible and as webby as possible",
        "2c801963ac4e96f503bacd185b18a79c (13:09): http://www.hascanvas.com/",
        "2c801963ac4e96f503bacd185b18a79c (13:09): yea",
        "2c801963ac4e96f503bacd185b18a79c (13:10): its based on a javascript port of processing: http://processingjs.org/",
        "3e65db05e37f34bd21c82600a0356298 (13:10): 2c801963ac4e96f503bacd185b18a79c: is hadcanvas your stuff ?",
        "2c801963ac4e96f503bacd185b18a79c (13:11): 3e65db05e37f34bd21c82600a0356298: nope, i just saw it when looking for a collaborative code editor",
        "2c801963ac4e96f503bacd185b18a79c (13:11): im developing an opensource websocket cms called hwios",
        "3e65db05e37f34bd21c82600a0356298 (13:11): 2c801963ac4e96f503bacd185b18a79c: the one from mozilla made a lot of buzz, dunno how good it is in practice",
        "2c801963ac4e96f503bacd185b18a79c (13:12): yea, respin or something",
        "2c801963ac4e96f503bacd185b18a79c (13:12): im focussing on http://www.jinfinote.com/",
        "2c801963ac4e96f503bacd185b18a79c (13:12): that guy ported the infinote protocol to a clientside implementation",
        "2c801963ac4e96f503bacd185b18a79c (13:13): its pretty cool. allows you to collaboratively edit a textbox",
        "3e65db05e37f34bd21c82600a0356298 (13:13): nice indeed",
        "2c801963ac4e96f503bacd185b18a79c (13:13): all it needs is a serverside implementation to keep the logs sane.",
        "3e65db05e37f34bd21c82600a0356298 (13:14): 2c801963ac4e96f503bacd185b18a79c: would it be suitable to plug that into gist/github kinda",
        "2c801963ac4e96f503bacd185b18a79c (13:14): the source?",
        "3e65db05e37f34bd21c82600a0356298 (13:15): 2c801963ac4e96f503bacd185b18a79c: out of the blue, i was thinking &quot;you edit the stuff with many people, but keep track of the modification with git&quot;",
        "3e65db05e37f34bd21c82600a0356298 (13:15): and git on the web, may be gist",
        "2c801963ac4e96f503bacd185b18a79c (13:16): ah, well im not sure whether that works. i havent come up with a history system in the first place",
        "2c801963ac4e96f503bacd185b18a79c (13:16): my first thought was that the history will be based on the same infinote protocol that the client uses",
        "3e65db05e37f34bd21c82600a0356298 (13:16): 2c801963ac4e96f503bacd185b18a79c: nice too",
        "2c801963ac4e96f503bacd185b18a79c (13:17): there are multiple options i guess, but i want it to have a time-slider just like gwave",
        "2c801963ac4e96f503bacd185b18a79c (13:18): not sure if that can be mixed with git then",
        "3e65db05e37f34bd21c82600a0356298 (13:19): 2c801963ac4e96f503bacd185b18a79c: git can do that. i was thinking about git because this currently is the natural choise for version control",
        "3e65db05e37f34bd21c82600a0356298 (13:19): 2c801963ac4e96f503bacd185b18a79c: and with github, websupport is good",
        "2c801963ac4e96f503bacd185b18a79c (13:22): are there some git libraries for python?",
        "2c801963ac4e96f503bacd185b18a79c (13:23): hm http://gitorious.org/git-python",
        "2c801963ac4e96f503bacd185b18a79c (13:23): but having a git repository to store a wiki's content...i dont know",
        "3e65db05e37f34bd21c82600a0356298 (13:30): 2c801963ac4e96f503bacd185b18a79c: github is doing it why not you :)",
        "3e65db05e37f34bd21c82600a0356298 (13:30): https://github.com/blog/699-making-github-more-open-git-backed-wikis",
        "2c801963ac4e96f503bacd185b18a79c (13:30): well, github has git as their core service",
        "2c801963ac4e96f503bacd185b18a79c (13:30): thanks, ill read up",
        "3e65db05e37f34bd21c82600a0356298 (13:31): 2c801963ac4e96f503bacd185b18a79c: btw just suggesting here",
        "2c801963ac4e96f503bacd185b18a79c (13:31): yea, ill try to understand the pro's and cons",
        "2c801963ac4e96f503bacd185b18a79c (13:33): yea thats something really useful, being able to easily show the changes between versions",
        "2c801963ac4e96f503bacd185b18a79c (13:35): so accessing a repo can be as easy as creating it with git init, and then use gitpython to read from it?",
        "2c801963ac4e96f503bacd185b18a79c (13:37): hm, this could work :)",
        "3e65db05e37f34bd21c82600a0356298 (13:38): 2c801963ac4e96f503bacd185b18a79c: depends on your goal here",
        "2c801963ac4e96f503bacd185b18a79c (13:38): thanks for bringing it up",
        "2c801963ac4e96f503bacd185b18a79c (13:39): well, it should be integrated with the cms",
        "3e65db05e37f34bd21c82600a0356298 (13:39): 2c801963ac4e96f503bacd185b18a79c: but my best advice would be &quot;keep it simple&quot; :)",
        "2c801963ac4e96f503bacd185b18a79c (13:39): well, using git as backend history storage makes sense",
        "3e65db05e37f34bd21c82600a0356298 (13:39): 2c801963ac4e96f503bacd185b18a79c: keep it atomic. aka do one thing but do it well",
        "2c801963ac4e96f503bacd185b18a79c (13:39): yea, im not trying to reinvent the wheel :)",
        "2c801963ac4e96f503bacd185b18a79c (13:40): i only need some way to reconstruct the whole article on the serverside, and save versions once in a while or after a save button is pressed",
        "2c801963ac4e96f503bacd185b18a79c (13:42): one problem i can see is that its hard to search through articles when using git",
        "2c801963ac4e96f503bacd185b18a79c (13:42): databases have these nice querying mechanisms",
        "3e65db05e37f34bd21c82600a0356298 (13:45): 2c801963ac4e96f503bacd185b18a79c: yep dunno if git is suitable",
        "3e65db05e37f34bd21c82600a0356298 (13:45): 2c801963ac4e96f503bacd185b18a79c: going for lunch, have fun and good luck ;)",
        "2c801963ac4e96f503bacd185b18a79c (13:45): thanks! bon appetit",
        "2c801963ac4e96f503bacd185b18a79c (13:46): will be posting a wiki-demo soon hopefully :-)\\"
    ],
    "person_ids": [
        "2c801963ac4e96f503bacd185b18a79c",
        "3e65db05e37f34bd21c82600a0356298"
    ]
}