{
    "id": "29514e224c33c2d6bf62ddcbd49bbfb4",
    "messages": [
        "4dd217ba7542bb00a127f682e2c3ad27 (14:58): dfefdb66581190514404f57cdf74a8eb, what is the security risk in http://lists.w3.org/Archives/Public/public-webapps/2009AprJun/0018.html ?",
        "dfefdb66581190514404f57cdf74a8eb (14:59): Artb, &quot;The problem in a nutshell is that by allowing multiple signatures,",
        "dfefdb66581190514404f57cdf74a8eb (14:59): &gt;&gt; which is something we want to do, we create a situation in which not",
        "dfefdb66581190514404f57cdf74a8eb (14:59): &gt;&gt; all of a signed widget's files are covered by the signature&quot;",
        "dfefdb66581190514404f57cdf74a8eb (15:01): This might be ok, so long as you cannot sneak additional XML elements into the top signature",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:01): how could that be done in practice?",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:01): that is, how can someone tamper with the sig files?",
        "dfefdb66581190514404f57cdf74a8eb (15:02): e.g., (not itself signed) &lt;signature&gt; .... &lt;script&gt; evil = xhr()...&lt;/script&gt; &lt;/signature&gt;",
        "dfefdb66581190514404f57cdf74a8eb (15:02): then, at runtime, you use XHR to read the signature",
        "dfefdb66581190514404f57cdf74a8eb (15:02): extract the script",
        "dfefdb66581190514404f57cdf74a8eb (15:02): I know, it's all a bit silly",
        "dfefdb66581190514404f57cdf74a8eb (15:03): One can effectively change the top level signature because it is not itself signed",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:04): When I see &quot;It's not a big hole and the attacks require some &quot;assistance&quot; fromdevelopers, but unless there's a reason not to it should be pretty easyto close. &quot;",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:04): I don't get the sense this is critical to address",
        "dfefdb66581190514404f57cdf74a8eb (15:05): I agree. I think we need to push Mark a bit more on it.",
        "dfefdb66581190514404f57cdf74a8eb (15:05): I'm not too phased by it, which is why I did not put the text into the spec.",
        "dfefdb66581190514404f57cdf74a8eb (15:06): However, if we can see it's a pretty easy security hole to close, then we should close it",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:06): do you have any feedback from the people that would need to implement the requirement you proposed?",
        "dfefdb66581190514404f57cdf74a8eb (15:06): no",
        "dfefdb66581190514404f57cdf74a8eb (15:07): apart from Arve, saying, &quot;WTF is this?&quot; :)",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:07): I wonder about an impl where things get unpacked such that this would not be an easy req to address",
        "dfefdb66581190514404f57cdf74a8eb (15:07): I don't follow",
        "dfefdb66581190514404f57cdf74a8eb (15:08): ok, I kinda do follow",
        "dfefdb66581190514404f57cdf74a8eb (15:08): visualizing where such a thing could be a prob",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:08): doesn't this say that at runtime, the UA must make sure the app never opens a sig file?",
        "dfefdb66581190514404f57cdf74a8eb (15:08): exactly",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:09): Yet the sig files may have been unpacked and placed in the FS somewhere outside of the zip",
        "dfefdb66581190514404f57cdf74a8eb (15:09): that is also correct",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:09): what if an impl wanted to delete the sig files after the zip is installed",
        "dfefdb66581190514404f57cdf74a8eb (15:10): why would it want to do that?",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:10): s/is installed/is verified/",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:10): space",
        "dfefdb66581190514404f57cdf74a8eb (15:11): seems like a strange thing to do. the imp would have to be pretty sure that another app could not then go in and modify the files",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:11): but I guess if the sig files were deleted after initial verification this wouldn't be a prob :)",
        "dfefdb66581190514404f57cdf74a8eb (15:12): that's true, but does not seem like a very smart thing to do. Seems better that if the UA detects that files have been changed or modified, it should revalidate",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:12): is it your expectaion that a signed widget must be verified every time the widget is run?",
        "dfefdb66581190514404f57cdf74a8eb (15:12): no, but it's probably a good idea to verify then every so often",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:12): why?",
        "dfefdb66581190514404f57cdf74a8eb (15:13): s/then/them.... in case they were changed via other means",
        "dfefdb66581190514404f57cdf74a8eb (15:13): e.g., a widget somehow found another security hole",
        "dfefdb66581190514404f57cdf74a8eb (15:13): and changed bank.wgt's content by adding a script",
        "dfefdb66581190514404f57cdf74a8eb (15:14): engines should protect their widgets. it would be like one web page changing the cookies of another web page... or worst",
        "dfefdb66581190514404f57cdf74a8eb (15:15): i don't think sigs should be seen as one offs",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:15): so you expect the UA to allow widgets to share file space with other widgets?",
        "dfefdb66581190514404f57cdf74a8eb (15:15): yes, so long as they are careful to not allow those widgets to be tempered with",
        "dfefdb66581190514404f57cdf74a8eb (15:15): s/those widgets/the content of those widgets/",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:16): seems like a UA should effectively create a separate sandbox for each widget",
        "dfefdb66581190514404f57cdf74a8eb (15:17): right",
        "dfefdb66581190514404f57cdf74a8eb (15:18): and the UA could use the sig as the way of sandboxing",
        "dfefdb66581190514404f57cdf74a8eb (15:19): I gotta go.. can we pick this up tomorrow",
        "dfefdb66581190514404f57cdf74a8eb (15:19): ?",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:20): l8r",
        "dfefdb66581190514404f57cdf74a8eb (15:22): I need to read Frederick's responses again",
        "dfefdb66581190514404f57cdf74a8eb (15:22): lets put in on the agenda for this week for discussion",
        "dfefdb66581190514404f57cdf74a8eb (15:22): is that ok?",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:22): I'll responde to your latest email; would prefer to close this before the meeting",
        "4dd217ba7542bb00a127f682e2c3ad27 (15:22): we got a *ton* of other higher priority things for this week's call",
        "dfefdb66581190514404f57cdf74a8eb (15:23): ok",
        "dfefdb66581190514404f57cdf74a8eb (15:23): sounds good"
    ],
    "person_ids": [
        "4dd217ba7542bb00a127f682e2c3ad27",
        "dfefdb66581190514404f57cdf74a8eb"
    ]
}