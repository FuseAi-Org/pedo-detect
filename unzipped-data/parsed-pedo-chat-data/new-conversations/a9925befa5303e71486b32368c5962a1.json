{
    "id": "a9925befa5303e71486b32368c5962a1",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (11:46): c53ce266132145423a95034f111ad7dd, yeah, it's a new feature",
        "b25b6b77a0087ff8385941e5545d32ea (11:50): edb259c0e0038f38bb200bc20c8cbf7e: Is your nextNode stuff intended to be correct if the filter function manipulates theDOM?",
        "c53ce266132145423a95034f111ad7dd (11:54): edb259c0e0038f38bb200bc20c8cbf7e: is there an open Opera bug ticket for document.innerHTML or should I file one?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:01): b25b6b77a0087ff8385941e5545d32ea, when &quot;iterator collection&quot; is mutated referenceNode and pointerBeforeReferenceNode need to be updated, that is not defined yet",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:01): b25b6b77a0087ff8385941e5545d32ea, however, once that is defined it should be alright",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:02): c53ce266132145423a95034f111ad7dd, I can't find one so fast, feel free",
        "c53ce266132145423a95034f111ad7dd (12:05): edb259c0e0038f38bb200bc20c8cbf7e: done",
        "c53ce266132145423a95034f111ad7dd (12:05): Mozilla: http://bugzil.la/563320 WebKit: http://webk.it/60316 IE: https://connect.microsoft.com/IE/feedback/details/680040/implement-document-innerhtml",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): edb259c0e0038f38bb200bc20c8cbf7e: Yes, I suppose that would work. And the detached flag. Although if I understand your intent correctly, it doesn't seem to match existing browsers  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1080",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): In particular it seems they stop if they encounter a node they have seen before, but don't set pointerBeforeReferenceNode",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:16): b25b6b77a0087ff8385941e5545d32ea, what about the detached flag?",
        "b25b6b77a0087ff8385941e5545d32ea (12:16): edb259c0e0038f38bb200bc20c8cbf7e: Maybe I don't understand what it is for",
        "b25b6b77a0087ff8385941e5545d32ea (12:17): Why do you check it after the filter function? What causes it to be set?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:18): b25b6b77a0087ff8385941e5545d32ea, the filter could set it by invoking detach()",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:18): b25b6b77a0087ff8385941e5545d32ea, which reminds me, the current algorithm does not handle recursive invocation either",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:19): b25b6b77a0087ff8385941e5545d32ea, I don't really understand the results from your NodeIterator btw",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:19): b25b6b77a0087ff8385941e5545d32ea, it has SHOW_ELEMENT set yet Gecko and WebKit (not Opera) are happily returning Text nodes",
        "b25b6b77a0087ff8385941e5545d32ea (12:21): The text node never gets returned, but it does get set as the referenceNode",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:21): doh, I should read better",
        "b25b6b77a0087ff8385941e5545d32ea (12:22): (which also doesn't match the spec I guess)",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:24): Can that situation only occur at the end of the collection and during modifications?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:25): I could modify step 3.1 to account for it",
        "b25b6b77a0087ff8385941e5545d32ea (12:27): I imagine that internally they update the referenceNode irrespective of whether the node matches the filter",
        "b25b6b77a0087ff8385941e5545d32ea (12:27): So you would just need to move that inside the loop",
        "b25b6b77a0087ff8385941e5545d32ea (12:28): I think it is only observable after modification or at the end though",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:28): that does not work if something throws an exception",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:30): if you update referenceNode all the time and filter throws an exception or sets detach() it will have the wrong value",
        "b25b6b77a0087ff8385941e5545d32ea (12:32): It seems to get set to null in that case",
        "b25b6b77a0087ff8385941e5545d32ea (12:33): Oh, only in gecko",
        "b25b6b77a0087ff8385941e5545d32ea (12:33): In WebKit it seems to be the node that you were trying to filter",
        "b25b6b77a0087ff8385941e5545d32ea (12:34): So you could set referenceNode to node at the start of the loop",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:36): And set it to null if an exception was raised or detach() was called? And that makes the whole thing no longer function?",
        "b25b6b77a0087ff8385941e5545d32ea (12:36): http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1081 is what I looked at",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:38): It does not even throw an exception in Gecko?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:39): oh it does",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:39): you were not printing that",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:40): if you just do throw &quot;x&quot; referenceNode does not become null",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:41): it is only null when things are detached",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:42): so invoking detach() just initializes referenceNode to null",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:43): so you can clear up resources",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:43): silly legacy thing",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:46): thanks for helping out btw",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:46): Hi",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:46): I'm trying to implement CSS parser, but it's rather hard for me to understand some of the regular expressions used in specification",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:46): e.g.: \\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:47): is there somewhere a document written in human language that would explain which strings are allowed for a given token?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:48): other than the CSS specification and its dependencies? I do not think so",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:48): so I will have to read a book on regular expressions in order to understand the specification? :/",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:50): no",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:50): something on yacc",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:51): I have to implement this with javascript",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:51): afaik there is no such tool like yacc that would generate js code",
        "b25b6b77a0087ff8385941e5545d32ea (12:51): Well you will likely need to understand regexp, yes",
        "b25b6b77a0087ff8385941e5545d32ea (12:53): And there are some parser-generators avaliable that will create javascript",
        "b25b6b77a0087ff8385941e5545d32ea (12:53): But your chances of success if you don't understand the input seem rather small",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:54): there is peg.js, but it genarates the whole parser (I just need tokenizer)",
        "b25b6b77a0087ff8385941e5545d32ea (12:56): Well I would read http://flex.sourceforge.net/manual/Patterns.html#Patterns and convert to javascript regexp",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:56): also, CSS2 and CSS3 specifications seem to be using slightly different tokens",
        "c63a5cfce0a1819ebbe4a19e074356b6 (12:56): e.g. there is BAD_STRING token in CSS2, but I can't find it in CSS3 specs",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:57): CSS3 is out of date",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:57): ironically enough",
        "c63a5cfce0a1819ebbe4a19e074356b6 (13:00): edb259c0e0038f38bb200bc20c8cbf7e: should I implement the tokenizer according to CSS2 specification and later update it when there is new revision of http://www.w3.org/TR/css3-syntax/?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (13:00): or perhaps I should use http://www.w3.org/TR/css3-syntax/ as the only reference?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:01): b25b6b77a0087ff8385941e5545d32ea, so I tested again and I think referenceNode only becomes an &quot;invisible&quot; node due to modification",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): c63a5cfce0a1819ebbe4a19e074356b6, you should use CSS2 with modifications",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): c63a5cfce0a1819ebbe4a19e074356b6, css3-syntax is hopelessly out of date",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:16): ah",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:16): recursive calls throw an exception as well",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:16): in WebKit some kind of callstack exception",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:16): in Gecko INVALID_STATE_ERR",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:17): in Opera the same as in Gecko",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:18): in WebKit invoking a different method (e.g. previousNode) does work, it does not in Opera/Gecko",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:19): I guess I'll side with Opera/Gecko",
        "b25b6b77a0087ff8385941e5545d32ea (13:19): simplicity ++",
        "8b3687499080633e1898fa1dd209ef81 (13:20): specs++",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:21): name for this flag?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:21): &quot;locked flag&quot;?",
        "8b3687499080633e1898fa1dd209ef81 (13:22): wfm",
        "b25b6b77a0087ff8385941e5545d32ea (13:22): yeah, whatever",
        "8b3687499080633e1898fa1dd209ef81 (13:23): For detach(), s/initialize/set/?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:27): I use initialize for readonly attributes",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:27): because they cannot really be set",
        "b25b6b77a0087ff8385941e5545d32ea (13:28): I'm not sure that is better",
        "b25b6b77a0087ff8385941e5545d32ea (13:29): Initialise implies that it is being set at the point it is created",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:33): better term?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:33): set just seems wrong",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:33): but maybe we should use it anyway",
        "f69d55844584e567962289a5226442b4 (13:33): lol http://xkcd.com/927/",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:33): for now: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-nodeiterator-nextnode",
        "b25b6b77a0087ff8385941e5545d32ea (13:34): edb259c0e0038f38bb200bc20c8cbf7e: Better than initialise. I think it is understood that the redonlyness of attributes from the external point of view doesn't matter to internal algorithms",
        "3edc453fd6118c0b816f25b91c5aec0c (13:38): hi all, does anyone know of a browser that supports the scoped attribute on the style element?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:53): b25b6b77a0087ff8385941e5545d32ea, done",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:53): Anyone an idea how to generalize 3.1 and 3.2 so we can have one algorithm for nextNode() and previousNode()?",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:08): WebKit allows arguments to be omitted when creating a NodeIterator but defaults whatToShow to 0",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:08): oops",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:08): Guess that is because it is the same as undefined for them"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b25b6b77a0087ff8385941e5545d32ea",
        "c53ce266132145423a95034f111ad7dd",
        "c63a5cfce0a1819ebbe4a19e074356b6",
        "8b3687499080633e1898fa1dd209ef81",
        "f69d55844584e567962289a5226442b4",
        "3edc453fd6118c0b816f25b91c5aec0c"
    ]
}