{
    "id": "bc3e6aebe1ae837c39bfe9d238c482ae",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (10:23): accidentally takes his server down",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:23): can't blame dreamhost this time",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:24): though of course as soon as i do this the tools i need to fix it get flaky",
        "fc66ba34aee2cd21909e4871759470e8 (10:32): Hey peeps, I can ask questions concerning html5 here right? =P",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:33): you can certainly try",
        "fc66ba34aee2cd21909e4871759470e8 (10:34): I'm currently writing a document about semantic html for our developers and am looking at the W3C specs and fail to spot good semantic guidelines for elements (for example Tables)",
        "fc66ba34aee2cd21909e4871759470e8 (10:35): Should semantic guidelines be present in the W3C spec for HTML5?",
        "fc66ba34aee2cd21909e4871759470e8 (10:36): Like in a dictionary, context of a word",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:36): what exactly is missing under the definition of the table element?",
        "fc66ba34aee2cd21909e4871759470e8 (10:36): Usage context",
        "fc66ba34aee2cd21909e4871759470e8 (10:37): My description of a table for my newbie document is:",
        "fc66ba34aee2cd21909e4871759470e8 (10:37): Tables are used for tabular data where columns and rows have meaning and more important, each iteration of a column has the same meaning as the next/previous and the same for each iteration of a row.",
        "fc66ba34aee2cd21909e4871759470e8 (10:38): Was checking specs to see if that description is actually right and am seeing it can still be interpeted for wrong usage",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:38): it doesn't seem correct",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:39): b25b6b77a0087ff8385941e5545d32ea: I'm here now",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:39): on balance, using tables for layout is less bad that authors trying to use non-&lt;table&gt; markup for stuff that should be a table",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:40): 69b0d3dfe919a6b860a9fac82de52a7e, tables seem to have the issue of author content pointing into UA content",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:41): 69b0d3dfe919a6b860a9fac82de52a7e, e.g. the definition of &quot;table&quot; is in an impl-marked section",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:41): 6d05f0c2942adc25946a4b02b37ffa00: yeah, what should i do about it?",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:42): presumably the first part of the processing model be for both authors and implementors",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:42): just like writing and parsing html you could have writing and parsing a table",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:42): I suppose",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:44): file a bug",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:44): 69b0d3dfe919a6b860a9fac82de52a7e: You need to go back to fixing bugs though :P",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:44): next week i'm on vacation",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:44): we'll see after that :-)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:45): Going anywhere nice?",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:45): staying at home",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:45): just not dealing with all the process BS of standards",
        "6d05f0c2942adc25946a4b02b37ffa00 (10:46): nice :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:46): goes back to reading the BS",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:46): 69b0d3dfe919a6b860a9fac82de52a7e: are you going to be working but without Process? :-)",
        "fc66ba34aee2cd21909e4871759470e8 (10:47): appologies, just found http://www.w3.org/TR/html4/appendix/notes.html#notes-tables &gt;.&lt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:50): b8810fee2f4a71f849f3f7409546d1d9: nah, probably gonna be working on a game",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:50): either writing or playing",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:50): probably writing",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): maybe i'll see if i can write a websocket server in pascal for fun",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): i've never written pascal code on unix",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:51): heck i haven't written any pascal in about a decade",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:52): why would you write pascal for fun?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:53): (sorry if that was offensive. pascal just doesn't strike me as a &quot;for fun&quot; language)",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:53): object pascal",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:54): not the stuff of olde days",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:54): is still bitter at textbook authors who used 1-based indeces",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:54): pascal in any sane environment is always 0-based",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:56): object pascal (the stuff borland used to ship, and now the stuff of the FreePascal project) bears about the same resemblance to the &quot;textbook pascal&quot; as visual basic does to basic",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:57): except the starting point is about six orders of magnitude better",
        "b25b6b77a0087ff8385941e5545d32ea (10:59): injects the tangentially related fact that many &quot;famous&quot; scientific codes written in C use deliberately 1 based indexing for arrays simply by leaving index 0 empty",
        "d8cc952a670b1063df4c205ef5e920ca (11:02): b25b6b77a0087ff8385941e5545d32ea: that's mostly because many formulas work only with 1-based indexing",
        "d8cc952a670b1063df4c205ef5e920ca (11:03): b25b6b77a0087ff8385941e5545d32ea: (for example, index of parent node in binary heaps stored in array)",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:04): so if we get a local sandboxed file system per origin why should localStorage support File too?",
        "ab7faae5d7b250ea8606486575f8f79c (11:04): injects the note that Perl lets you dynamically change between 0-based and 1-based and n-based array indexing",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:05): Perl sounds awesome",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:05): gun, meet foot",
        "b25b6b77a0087ff8385941e5545d32ea (11:06): d8cc952a670b1063df4c205ef5e920ca: I have no idea how a formula could only work with 1 based indexing. You just need to subtract 1 to get a zero based index",
        "b25b6b77a0087ff8385941e5545d32ea (11:06): d8cc952a670b1063df4c205ef5e920ca: I was under the impression that people did this because a) fortran uses 1 based indexing",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:06): http://krijnhoetmer.nl/irc-logs/html-wg/20071219#l-609",
        "b25b6b77a0087ff8385941e5545d32ea (11:07): and b) most textbooks use 1 based indexing for vectors",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:07): ab7faae5d7b250ea8606486575f8f79c: even the perl documentation says &quot;we don't talk about that&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (11:07): So the formulae look more familar",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:07): But I guess they're stuck with it for compat",
        "b25b6b77a0087ff8385941e5545d32ea (11:09): d8cc952a670b1063df4c205ef5e920ca: Also I wasn't suggesting that there actually was a HTML5 parser written in Go, only that there could be",
        "b25b6b77a0087ff8385941e5545d32ea (11:11): (I guess I have no evidence that there isn't except that it seems unlikely; for all I know each google employee was given a party bag when they left work on Friday containing a small black book entitled &quot;How to be evil&quot; and a 5.25&quot; floppy disk containing a conforming HTML5 parser implemented in Go)",
        "d8cc952a670b1063df4c205ef5e920ca (11:14): b25b6b77a0087ff8385941e5545d32ea: i was only pointing out, that the reason for using 1-based indeces is not only matter of habit",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:14): http://www.schleef.org/blog/2009/11/11/theora-on-ti-c64x-dsp-and-omap3/",
        "d8cc952a670b1063df4c205ef5e920ca (11:15): b25b6b77a0087ff8385941e5545d32ea: 0-based indeces are natural to computer because of pointer arithmetic, but some algorithms for computing positions in array work only with 1-based indeces because of various properties of number one",
        "d8cc952a670b1063df4c205ef5e920ca (11:16): b25b6b77a0087ff8385941e5545d32ea: one example is the heap (you need 3x more arithmetic operation for computing parent with 0-based indeces), i have dozen more examples in combinatorical algorithms textbook",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:32): what's the situation of data: URIs working with XHR?",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:34): not same-origin so won't work",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:34): ah.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:34): thanks",
        "0da07476c4bd14079ce4032a6f280e17 (11:34): fairly absurd, though",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:35): yet another case of specs making it harder to write test cases",
        "65325d50b2e25aca54bc871b89758c9c (11:37): data: URIs are surprisingly complex in terms of their security implications",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:37): we could make them work",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:37): but the idea was rejected iirc",
        "65325d50b2e25aca54bc871b89758c9c (11:37): in XHR? or in general?",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:37): in XHR",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:37): by also allowing URLs whose scheme is data",
        "65325d50b2e25aca54bc871b89758c9c (11:38): it would be sad (and only really useful for test cases I think) for XHR to be different from the rest of the Web platform on this",
        "0da07476c4bd14079ce4032a6f280e17 (11:38): is the situation any different from in canvas?",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:38): yes",
        "65325d50b2e25aca54bc871b89758c9c (11:38): I think it might be possible to make data: URIs same-origin with their opener/parent, like about:blank, but then you have to forbid anyone but the opener or parent frame navigating a window to a data: URI",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:38): images with data URLs are considered same-origin",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:39): (forgot how that worked again in detail)",
        "65325d50b2e25aca54bc871b89758c9c (11:39): or track whether the data: load was initiated by something that is same-origin as the current parent or whatever",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:39): I believe we special case data URLs currently in XSLT to allow for easy tests...",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:39): though what's next, special casing E4X too?",
        "65325d50b2e25aca54bc871b89758c9c (11:40): in &lt;img&gt; it's clearly not a security hole, though I think that is also true for XHR",
        "65325d50b2e25aca54bc871b89758c9c (11:40): for frames, the security risk if you treat it like about:blank is that an attacker will navigate one of your subframes to an evil data: URI",
        "65325d50b2e25aca54bc871b89758c9c (11:41): there are ways to fix it up, but so far no one has decided data: URIs are useful enough",
        "65325d50b2e25aca54bc871b89758c9c (11:41): javascript: URIs have to be handled the way data: URIs would be sorta",
        "65325d50b2e25aca54bc871b89758c9c (11:41): you can't navigate a frame you don't own to a javascript: URI",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:41): yeah, nobody liked handling javascript: for XHR",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:41): so I dropped the idea",
        "65325d50b2e25aca54bc871b89758c9c (11:42): I don't think handling data: for XHR would require handling javascript:, I'm just saying if you wanted data: &lt;iframes&gt; to be same-origin with their parent (so you could use it as a replacement for src=&quot;about:blank&quot; / document.write or src=&quot;javascript:'contents here'&quot;)",
        "65325d50b2e25aca54bc871b89758c9c (11:43): then you would have to handle data: sort of the same as javascript:"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "fc66ba34aee2cd21909e4871759470e8",
        "6d05f0c2942adc25946a4b02b37ffa00",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "b25b6b77a0087ff8385941e5545d32ea",
        "d8cc952a670b1063df4c205ef5e920ca",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "0da07476c4bd14079ce4032a6f280e17",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}