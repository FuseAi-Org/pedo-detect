{
    "id": "bb7603a7f5573080f0e525ec52466286",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (23:50): whoa! the Apple docs say they implement &lt;layer&gt;!",
        "139513027e8e90b5582cbc68fc733884 (23:50): the docs are incorrect if they say that",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:51): 139513027e8e90b5582cbc68fc733884: &quot;not well supported&quot; implies some support: http://developer.apple.com/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/HTMLExtensions.html#//apple_ref/doc/uid/TP40002066-SW1",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:52): well, they're supported in that they end up in the dom",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:52): that's _some_ support ;-)",
        "139513027e8e90b5582cbc68fc733884 (23:52): b8810fee2f4a71f849f3f7409546d1d9: hmm, we recognize the layer tag but I  think we just make a generic element",
        "139513027e8e90b5582cbc68fc733884 (23:52): b8810fee2f4a71f849f3f7409546d1d9: we handle it as a block-level tag for parsing",
        "139513027e8e90b5582cbc68fc733884 (23:53): b8810fee2f4a71f849f3f7409546d1d9: that's it",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:53): 139513027e8e90b5582cbc68fc733884: OK. reading the doc made me expect more",
        "139513027e8e90b5582cbc68fc733884 (23:53): b8810fee2f4a71f849f3f7409546d1d9: khtml has some sort of half-assed support, we might have had it once but it's long-since removed",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:55): safari does indeed terminate &lt;p&gt;s with &lt;layer&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:55): reminisces the Mozilla &lt;layer&gt; killing evangelism effort",
        "139513027e8e90b5582cbc68fc733884 (23:56): die, &lt;layer&gt;, die",
        "139513027e8e90b5582cbc68fc733884 (23:56): anyway I'm not sure if our parsing hacks for it are actually useful for anything or just a relic",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:57): ie doesn't terminate &lt;p&gt; with &lt;layer&gt;",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:58): nor firefox or opera",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:59): nor the spec :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): 69b0d3dfe919a6b860a9fac82de52a7e: suppose input is labeled text/html; charset=UTF-16LE and the first three code units are: BOM, BOM, letter A. What's the first token?",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): doh. that's an obvious case",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:59): b8810fee2f4a71f849f3f7409546d1d9: character 'BOM'",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:59): I meant",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:59): b8810fee2f4a71f849f3f7409546d1d9: character 'A' to your next question",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:59): (BOM, letter A)",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:00): 69b0d3dfe919a6b860a9fac82de52a7e: suppose input is labeled text/html; charset=UTF-16 and the first six bytes are: BOM, BOM, letter A. What's the first token?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:00): character 'BOM'",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:00): 69b0d3dfe919a6b860a9fac82de52a7e: thanks. can I read this in the spec?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:00): doesn't make any difference what the encoding is, HTML5 requires the encoding layer to not eat the first BOM",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:01): hm",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:02): 8.2.2.3 is the section that is supposed to cover this",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:02): i assume the argument is that the first paragraph eats a BOM",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:02): I could make that explicit",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:02): I'd appreciate that",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:03): adds void dontSwallowBom()",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:04): can you point me to the relevant part of UTF-16's definition that swallows the BOM? I want to make sure my prose is compatible.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:09): b8810fee2f4a71f849f3f7409546d1d9: ok, committed the update",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:14): 69b0d3dfe919a6b860a9fac82de52a7e: I can't find a de jure definition. My thinking is based on common-sense implementations",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:17): I wonder if point 4. at http://unicode.org/faq/utf_bom.html#28 is in a spec somewhere",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:17): &quot;In particular, whenever a data stream is declared to be UTF-16BE, UTF-16LE, UTF-32BE or UTF-32LE a BOM must not be used.&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): i wounder what the rationale was",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:19): the byte order is declared in the encoding label so the first code unit is part of the logical data",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): that seems to be the same thinking that suggests that if you have higher-level encoding declarations, you shouldn't have &lt;meta charset&gt;, which everyone seems to think is a bad requirement",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:22): I think the existence of the *LE and *BE labels is a bad idea",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:24): implements the &quot;permitted slash&quot; nonsense",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:25): one day i'm gonna make my own version of HTML that doesn't have to make anyone happy but me",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:25): and that version of HTML will be so great it'll take over the world",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:27): wonders what 69b0d3dfe919a6b860a9fac82de52a7e is on about",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:27): just whining that &lt;img/&gt; is allowed :-)",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:28): oh",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:28): well, from a practical POV i think it's good :)",
        "41ed7adb8d78696bb2258daa6004c2ac (00:29): I would really like to see &lt;img&gt;replacement text&lt;/img&gt; but alas I can\u00ac\u00a5t have my druthers",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:29): the &quot;permitted slash&quot; nonsense is the poster child of how you don't have to make me agree with you for me to be convinced by the strength of your arguments",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:29): i wonder if i should raise a formal objection over it :-P",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:30): :P",
        "41ed7adb8d78696bb2258daa6004c2ac (00:32): Time to go to class. Ciao.",
        "d114be1698421a7cec050e2207d29631 (00:36): finishes reading the backlog",
        "d114be1698421a7cec050e2207d29631 (00:37): i'm not ever getting those 15 minutes back",
        "0c2de4934c6d7fc96160344dec846df3 (00:38): hopes someone was paying you for them. :)",
        "d114be1698421a7cec050e2207d29631 (00:38): 'fraid not",
        "a924fb58d2c25874322f4e5126f608b9 (00:38): If you can't get paid for doing something, do it while being paid to do something else :)",
        "d114be1698421a7cec050e2207d29631 (00:39): i really want a 5 &gt; 2 tee now",
        "0c2de4934c6d7fc96160344dec846df3 (00:40): goes trademark &quot;web 5.0&quot; and &quot;web 1.5&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:41): d114be1698421a7cec050e2207d29631: we could start proudly wearing 1.5 &lt; 2 tees",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:41): 1.5 &gt; 2",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:41): :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:41): :-)",
        "d114be1698421a7cec050e2207d29631 (00:42): i was reading and wondering what other name you'd suggest for xhtml5?",
        "d114be1698421a7cec050e2207d29631 (00:42): &quot;bert&quot;",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:42): i proposed &quot;Bob&quot;",
        "d114be1698421a7cec050e2207d29631 (00:42): it seemed to be hinted it sholdn't contain x,h,t,m &amp; l and all...",
        "d114be1698421a7cec050e2207d29631 (00:42): Bob is good",
        "d114be1698421a7cec050e2207d29631 (00:43): shorter",
        "d114be1698421a7cec050e2207d29631 (00:43): &lt;!DOCTYPE bob&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:43): I don't like courting it with 5 &gt; 2, but if we are really required to use 1.5, I might get a 1.5 &gt; 2 shirt",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:43): nope, that would trigger quirks mode :(",
        "d114be1698421a7cec050e2207d29631 (00:43): boo!",
        "d114be1698421a7cec050e2207d29631 (00:44): in the real world, no-one will use the version number anyway",
        "d114be1698421a7cec050e2207d29631 (00:44): except the people who might possibly be using XHTML2 I suppose",
        "d114be1698421a7cec050e2207d29631 (00:45): that's my guess",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:45): perhaps we should say that html uses levels, just like css",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:45): HTML Level 5",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:45): Version 1, Level 5",
        "d114be1698421a7cec050e2207d29631 (00:45): HTML Level 5 with fireball attack!",
        "d114be1698421a7cec050e2207d29631 (00:45): quirks mode again?",
        "73eaf221abca1b8244e34b0b9e76ac46 (00:46): that's Version 1, Level 5 with Quirks",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:46): ouch. the JDK UTF-8 decoder is not &quot;safe&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:46): that is, it accepts non-shortest-form",
        "d114be1698421a7cec050e2207d29631 (00:49): actually we can't have 1.5",
        "d114be1698421a7cec050e2207d29631 (00:49): i can't make a window 1.5 in irssi...",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:52): ouch times two. the JDK UTF-8 decoder silently accepts CESU-8",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:54): nice",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:55): i wonder how many sites are vulnerable as a result",
        "b8810fee2f4a71f849f3f7409546d1d9 (00:55): let's see if IBM has got it right",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:56): ok i think i fixed my parser to be up to date",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:56): it doesn't support entities and noscript, but that's ok",
        "139513027e8e90b5582cbc68fc733884 (00:57): what is CESU-8?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:58): an abomination the likes of which rarely grace this earth",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:58): it's UTF-8 except any characters not in the basic multilingual plane get encoded as their surrogate pairs, encoded as UTF-8",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:01): the IBM distro is broken",
        "b8810fee2f4a71f849f3f7409546d1d9 (01:01): sigh"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "139513027e8e90b5582cbc68fc733884",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "41ed7adb8d78696bb2258daa6004c2ac",
        "d114be1698421a7cec050e2207d29631",
        "0c2de4934c6d7fc96160344dec846df3",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}