{
    "id": "c17f494c3aaf5081f1a20a5eae6a85cb",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (19:01): so what is the plan e9fe2a8ed6a64844a5c024b6f688d024?",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:01): is Ian going to edit the specification?",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:01): or you?",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:03): It's going to be me and Dominic Cooney, for starters.",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:03): &quot;for starters&quot; is here, btw: http:/ e9fe2a8ed6a64844a5c024b6f688d024.github.com/component-model/",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:04): the only section that's more or less spec'd is events: http:/ e9fe2a8ed6a64844a5c024b6f688d024.github.com/component-model/events.html",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:04): I essentially took 69b0d3dfe919a6b860a9fac82de52a7e's events section from XBL2 and wrote it down in algorithms.",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:05): unfortunately, I need to work on something different this quarter (WebKit hygiene related stuff)",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:06): so I am 20%-ing on the use cases/spec work at the moment",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:07): but I'll be back with the vengeance in October!! :)",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:08): edb259c0e0038f38bb200bc20c8cbf7e: does this make any sense? :)",
        "8b3687499080633e1898fa1dd209ef81 (19:09): The web? None",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:09): 8b3687499080633e1898fa1dd209ef81: all we have to do is slightly adjust the definition of &quot;sense&quot;",
        "8b3687499080633e1898fa1dd209ef81 (19:10): Apply a binding to the word, if you will",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:10): 8b3687499080633e1898fa1dd209ef81: you know me, I would much rather sub-class it",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:10): class WebSense : Sense",
        "8b3687499080633e1898fa1dd209ef81 (19:10): {",
        "8b3687499080633e1898fa1dd209ef81 (19:11): // Reimplement everything",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:11): / override all methods",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:11): :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:13): sounds good e9fe2a8ed6a64844a5c024b6f688d024",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:13): you should probably announce that spec on WebApps",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:14): edb259c0e0038f38bb200bc20c8cbf7e: yes.",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:21): 8b3687499080633e1898fa1dd209ef81, I had the idea of not &lt;dfn&gt;'ing historical constants",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:22): 8b3687499080633e1898fa1dd209ef81, Web IDL already requires everything there is to need to know about them",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:22): 8b3687499080633e1898fa1dd209ef81, and they do not need to be referenced",
        "8b3687499080633e1898fa1dd209ef81 (19:22): That works",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:24): (and make it possible to xref them, etc.)",
        "8b3687499080633e1898fa1dd209ef81 (19:24): You mean, turn it into ReSpec? :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:26): ReSpec didn't exist when I started talking about implementing that :)",
        "8b3687499080633e1898fa1dd209ef81 (19:26): Also, patches welcome",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:27): semantically how?",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:28): haven't changed exceptions because of the outstanding bug",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:29): edb259c0e0038f38bb200bc20c8cbf7e: basically making it possible to just type a pre/code block of WebIDL with no elements within it",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:30): edb259c0e0038f38bb200bc20c8cbf7e: And getting the same output as today",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:30): yeah that would be kind of cool",
        "8b3687499080633e1898fa1dd209ef81 (19:31): Someone (who isn't me) should write a python WebIDL parser",
        "a11aabeeceeae6b8cb5d12ea06b56554 (19:32): 8b3687499080633e1898fa1dd209ef81: This was what I concluded. :)",
        "8b3687499080633e1898fa1dd209ef81 (19:32): So, is the DOM Tree a tree?",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:35): oh good lord",
        "8b3687499080633e1898fa1dd209ef81 (19:35): gal*",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:35): pesone",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:36): ^^ person that is",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:36): 8b3687499080633e1898fa1dd209ef81, can http://dev.w3.org/2009/webidl-checker/webidl-check be reused in some way",
        "8b3687499080633e1898fa1dd209ef81 (19:37): Wait, that's python?",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:37): combined with XSLT",
        "e9fe2a8ed6a64844a5c024b6f688d024 (19:37): PYTHON IS AWESOME",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:38): oh it looks more like a nice hack",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:38): a3f19f90edf0a0893c7847d08016abe3, is there some Python parser for Web IDL that you know of?",
        "a3f19f90edf0a0893c7847d08016abe3 (19:39): edb259c0e0038f38bb200bc20c8cbf7e, not that I know of",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:39): also hi",
        "a3f19f90edf0a0893c7847d08016abe3 (19:39): hi :)",
        "a3f19f90edf0a0893c7847d08016abe3 (19:39): you might like to look at that es-operating-system project? to see what parser they're using",
        "06cb330920ae58e1614c9145d983b3d6 (19:40): well that's lovely",
        "06cb330920ae58e1614c9145d983b3d6 (19:40): &quot;wait 30 seconds to download&quot; sites that stop the countdown if you change tabs",
        "06cb330920ae58e1614c9145d983b3d6 (19:41): three cheers for degenerate scripting abuses",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:43): http://code.google.com/p/es-operating-system/source/browse/#svn%2Ftrunk%2Fesidl",
        "06cb330920ae58e1614c9145d983b3d6 (19:47): heh www-dom",
        "06cb330920ae58e1614c9145d983b3d6 (19:47): should have suggested that a tree refers to the roots",
        "06cb330920ae58e1614c9145d983b3d6 (19:49): i'd have assumed it was a troll if it wasn't from a named domain",
        "ab7faae5d7b250ea8606486575f8f79c (19:52): DOM Tree doesn't make any sense because it doesn't photosynthesise",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:01): so i'm thinking &lt;dialog&gt; should also have a &lt;form&gt; feature: &lt;form method=dialog&gt; which causes form submission to just look for the nearest ancestor dialog and set its return value accordingly",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:01): so you could do: &lt;dialog&gt; &lt;form method=dialog&gt; &lt;button type=submit value=1&gt;Ok&lt;/button&gt; &lt;button type=submit value=0&gt;Cancel&lt;/button&gt; &lt;/form&gt; &lt;/dialog&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:02): and then: dialog.showModal(); dialog.onclose = function () { if (dialog.returnValue == '1') { ... } };",
        "e9fe2a8ed6a64844a5c024b6f688d024 (20:02): 69b0d3dfe919a6b860a9fac82de52a7e: &lt;dialog&gt; sounds pretty cool",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:02): for some reason I read &lt;details&gt; and got confused",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:02): (instead of having to hook each button up to the &lt;dialog&gt;, etc)",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:02): this also gets you form validation for free",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:02): so you can use &lt;input required&gt;, etc",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:02): and it all magically works",
        "e9fe2a8ed6a64844a5c024b6f688d024 (20:03): so returnValue is what?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:03): the value of the button the user used to submit the form",
        "e9fe2a8ed6a64844a5c024b6f688d024 (20:03): what if I have a dialog to ask for a new label name?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:04): you can get the value from the form by just grabbing the form control and picking the input element and getting its value",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:04): dialog.getElementsByTagName('form')[0].newLabelName.value",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:05): (with &lt;input name=newLabelName&gt;)",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:05): will these dialogs be written in markup though?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:05): haven't really done the research yet but i'm guessing yes",
        "06cb330920ae58e1614c9145d983b3d6 (20:05): is there a reason to do this in a surrounding dialog element, instead of just using events on the form?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:05): (still need to see if it's what people want by studying how it's done today)",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:06): 06cb330920ae58e1614c9145d983b3d6: how would that look?",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:06): 06cb330920ae58e1614c9145d983b3d6, you need a container that will be the dialog",
        "06cb330920ae58e1614c9145d983b3d6 (20:06): akin to onsubmit, i imagine",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:07): how would you write the example above?",
        "06cb330920ae58e1614c9145d983b3d6 (20:08): something like form.method = &quot;none&quot;; /* submitting triggers events but doesn't submit to the server */ form.onaftersubmit = function(e) { form.returnValue ... }",
        "ab7faae5d7b250ea8606486575f8f79c (20:09): Should OK/Cancel buttons get automatically hooked up to keys like Enter/Escape and other UI like 'X' buttons, rather than just being arbitrary submit buttons?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:09): 06cb330920ae58e1614c9145d983b3d6: how do you get the dialog to show up in this model?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:10): ab7faae5d7b250ea8606486575f8f79c: ok/cancel are an antipattern in dialog design, i don't think we should be encouraging their use. I was just lazy in my example.",
        "06cb330920ae58e1614c9145d983b3d6 (20:10): i don't know anything about &lt;dialog&gt;, i'm looking at it from the javascript-form perspective",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:10): 06cb330920ae58e1614c9145d983b3d6: ah well if all you want is a form, you can already do that using action=&quot;javascript:...&quot;",
        "06cb330920ae58e1614c9145d983b3d6 (20:10): where it seems like you sort-of want f.onsubmit = function(e) { e.preventDefault(); }, but you don't want to actually stop the submission entirely--still go through validation and so on, just don't send it to the server",
        "171db427cee236fc04af9e5de94e7c39 (20:10): Not for much longer, if at all anymore.",
        "06cb330920ae58e1614c9145d983b3d6 (20:10): ew",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): 69b0d3dfe919a6b860a9fac82de52a7e: Keyboard shortcuts and default choices seem important regardless of what the buttons are labelled with",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:11): ab7faae5d7b250ea8606486575f8f79c: ah if you mean should it be possible to mark a button as the default button, that's already on the list of features for a future version",
        "06cb330920ae58e1614c9145d983b3d6 (20:12): can you do form.action = function in JS? code in a javascript: url is evil",
        "a5218d2a72481c137ed6383d3526a093 (20:13): not afaik. but why not add an event listener?",
        "06cb330920ae58e1614c9145d983b3d6 (20:13): listener on what?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:13): 06cb330920ae58e1614c9145d983b3d6: why is it evil?",
        "06cb330920ae58e1614c9145d983b3d6 (20:14): how is it not evil? heh",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:14): what's the difference between onclick=&quot;foo()&quot; and action=&quot;javascript:foo()&quot; ??",
        "8b3687499080633e1898fa1dd209ef81 (20:14): That the latter is evil :)",
        "06cb330920ae58e1614c9145d983b3d6 (20:15): i can say x.click = function() in JS; x.action = &quot;foo()&quot; in JS is nasty",
        "06cb330920ae58e1614c9145d983b3d6 (20:15): onclick",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:15): oh well if you're talking about scripted stuff sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:15): i assumed you were talking about markup",
        "a5218d2a72481c137ed6383d3526a093 (20:15): 06cb330920ae58e1614c9145d983b3d6: submit listener on the form",
        "06cb330920ae58e1614c9145d983b3d6 (20:15): whether prefixed with javascript: or not (that just makes it worse)",
        "ab7faae5d7b250ea8606486575f8f79c (20:16): Scripts in attribute strings are effectively executed using eval, and eval is inherently evil",
        "06cb330920ae58e1614c9145d983b3d6 (20:16): a5218d2a72481c137ed6383d3526a093: being able to trigger validation without performing a server submit",
        "a5218d2a72481c137ed6383d3526a093 (20:16): 06cb330920ae58e1614c9145d983b3d6: you can prevent the default action",
        "a5218d2a72481c137ed6383d3526a093 (20:17): form.addEventListener(&quot;submit&quot;, function(e) { e.preventDefault(); do some stuff; }, false)",
        "06cb330920ae58e1614c9145d983b3d6 (20:18): i assumed that would prevent form validation as well (havn't used form validation yet)",
        "a5218d2a72481c137ed6383d3526a093 (20:19): i think an invalid form is not possible to submit anyway.. but only used it once and forgot",
        "a5218d2a72481c137ed6383d3526a093 (20:19): &gt;_&gt;",
        "06cb330920ae58e1614c9145d983b3d6 (20:19): too tired at the moment to think much harder about it",
        "06cb330920ae58e1614c9145d983b3d6 (20:19): two hours of sleep is fun",
        "7f9405da4034bf43083e64b57302a8e6 (20:28): i am of sleepy as well.",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:36): I wonder how we should organize the Nodes section",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:36): the current order makes little sense",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:36): maybe they should be in nodeType order",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:37): with the exception of comment",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:37): that should just come after Text and not ProcessingInstruction",
        "8b3687499080633e1898fa1dd209ef81 (20:38): Tree order? Doc/PI/doctype/Element/CharData/Text/Comment/DocFrag",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:39): that seems kind of nice actually, again with Comment out of order",
        "8b3687499080633e1898fa1dd209ef81 (20:40): I just want (CharData/Text/Comment) together",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:44): yeah"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "e9fe2a8ed6a64844a5c024b6f688d024",
        "8b3687499080633e1898fa1dd209ef81",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a3f19f90edf0a0893c7847d08016abe3",
        "06cb330920ae58e1614c9145d983b3d6",
        "ab7faae5d7b250ea8606486575f8f79c",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "171db427cee236fc04af9e5de94e7c39",
        "a5218d2a72481c137ed6383d3526a093",
        "7f9405da4034bf43083e64b57302a8e6"
    ]
}