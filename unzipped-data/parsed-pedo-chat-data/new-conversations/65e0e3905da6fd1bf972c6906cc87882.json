{
    "id": "65e0e3905da6fd1bf972c6906cc87882",
    "messages": [
        "60659cfda992013e610f285c46692d28 (16:51): Henri, yt?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:52): the difference between &lt;embed&gt; and &lt;object&gt; is that &lt;object&gt; does handle images and &lt;embed&gt; solely handles images",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:52): some browsers handle images for &lt;embed&gt; too, which makes them &quot;plugins&quot; as far as &lt;embed&gt; is concerned",
        "60659cfda992013e610f285c46692d28 (16:53): ?",
        "60659cfda992013e610f285c46692d28 (16:53): I thought &lt;embed&gt; used to invoke plugins in the past...?",
        "60659cfda992013e610f285c46692d28 (16:53): and why does it matter how a content handler is invoked?",
        "60659cfda992013e610f285c46692d28 (16:54): right now, the plugin definition doesn't mention that",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:54): sorry, &lt;embed&gt; solely handles plugins, doh",
        "60659cfda992013e610f285c46692d28 (16:55): ok",
        "60659cfda992013e610f285c46692d28 (16:55): so if I &lt;embedded&gt; a JPG, and didn't have a *plugin* registered for that mime type, it wouldn't display, while it would with &lt;object&gt;?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:56): it might still display, but then the UA is considered the plugin handler",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:57): if you explicitly override that (if the UA allows it) it might not display",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:57): but would with &lt;object&gt;",
        "60659cfda992013e610f285c46692d28 (16:57): ok, so let's leave &lt;embed&gt; aside for now",
        "60659cfda992013e610f285c46692d28 (16:57): ...",
        "60659cfda992013e610f285c46692d28 (16:58): the new definition still makes the builtin code that handles JPGs a &quot;plugin&quot;, right?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:59): seems so",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:59): not sure if that's good",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:59): but plugins are sort of magic so i guess it doesn't matter much",
        "60659cfda992013e610f285c46692d28 (17:00): it's amazingly hard to define, I think, but without a definition it's tricky to discuss the impact of sandboxed iframes",
        "60659cfda992013e610f285c46692d28 (17:00): it didn't matter back when there were no normative requirements on plugin handling",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:01): seems pretty clear what should happen there",
        "60659cfda992013e610f285c46692d28 (17:02): if it is, please follow up on the mailing list; it would be good to make progress with this",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:02): well, no idea how to define it",
        "60659cfda992013e610f285c46692d28 (17:02): for instance",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:03): just that it's clear that Flash / Java / etc. ought not to work",
        "60659cfda992013e610f285c46692d28 (17:03): - will JPG embedded with &lt;object&gt; display? will SVG?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:03): of course",
        "60659cfda992013e610f285c46692d28 (17:04): - how about quicktime in &lt;video&gt; (not sure about that)",
        "60659cfda992013e610f285c46692d28 (17:04): - what about FLV in &lt;video&gt;",
        "60659cfda992013e610f285c46692d28 (17:04): it's not what the spec currently says, as far as I can tell",
        "60659cfda992013e610f285c46692d28 (17:04): it's probably what people do expect, sure",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:05): is FLV a video format?",
        "8d5c0dd1af8dbfd69120fd4882cb3a68 (17:05): regarding flv in video, I would think that's a codec issue. whehther it's ogv, mp4, or flv is the same",
        "8d5c0dd1af8dbfd69120fd4882cb3a68 (17:05): e3fb62ebfa4f36acf5cbff6a6ed0f2e0, I believe so",
        "60659cfda992013e610f285c46692d28 (17:05): I believe so: http://en.wikipedia.org/wiki/Flash_Video",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:06): those would prolly be ok then, if the UA decides to support them",
        "8d5c0dd1af8dbfd69120fd4882cb3a68 (17:06): yep",
        "60659cfda992013e610f285c46692d28 (17:06): so what I'm really looking for is a precise definition of what a &quot;content handler&quot; inside a sandboxed iframe is supposed to allow and forbid",
        "60659cfda992013e610f285c46692d28 (17:07): we then can define a plugin API expressing that",
        "8d5c0dd1af8dbfd69120fd4882cb3a68 (17:07): for quicktime, it's a player so it doesn't make sense to associate with &lt;video&gt;. quicktime uses mp4 (and a few others).",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:07): well, safari uses quicktime for &lt;video&gt;",
        "60659cfda992013e610f285c46692d28 (17:09): I'm looking for a precise definition of what content handlers may or may not do in sandboxed iframes. Absent that, that feature is underspecified and probably needs to be removed.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:21): I thought your favorite was to leave it undefined?",
        "60659cfda992013e610f285c46692d28 (17:23): I like &quot;undefined&quot; for broken content.",
        "60659cfda992013e610f285c46692d28 (17:23): This is not about broken content.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:23): plugins are broken :)",
        "8d5c0dd1af8dbfd69120fd4882cb3a68 (17:36): it depends on your definition of broken I guess :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:37): not being cross-platform would be one particle of my definition",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:38): but sure",
        "60659cfda992013e610f285c46692d28 (17:38): browsers aren't inherently cross-platform, either",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (17:39): nope, but that doesn't matter",
        "60659cfda992013e610f285c46692d28 (17:39): what's broken are closed formats"
    ],
    "person_ids": [
        "60659cfda992013e610f285c46692d28",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "8d5c0dd1af8dbfd69120fd4882cb3a68"
    ]
}