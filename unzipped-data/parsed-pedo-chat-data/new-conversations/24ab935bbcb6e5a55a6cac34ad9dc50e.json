{
    "id": "24ab935bbcb6e5a55a6cac34ad9dc50e",
    "messages": [
        "6b57ea7f33069df5914663ba9e59afdf (11:33): b8810fee2f4a71f849f3f7409546d1d9: curious, how stable is outerHTML, or how well do browsers implement it",
        "6b57ea7f33069df5914663ba9e59afdf (11:33): in other words, should I read the spec and file spec bugs :)",
        "6b57ea7f33069df5914663ba9e59afdf (11:34): Where is Ms2ger",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:39): hober: good news, the beer survived!",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:57): 6b57ea7f33069df5914663ba9e59afdf: I implemented the spec. Chrome and Opera 12 alpha seemed to implement the spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:57): 6b57ea7f33069df5914663ba9e59afdf: IE has implemented it for ages, but in IE, edge cases are weird",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:58): 6b57ea7f33069df5914663ba9e59afdf: edge cases being cases where the context node is something particularly special",
        "6b57ea7f33069df5914663ba9e59afdf (11:58): b8810fee2f4a71f849f3f7409546d1d9: you mentioned something about body context yesterday",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:59): 6b57ea7f33069df5914663ba9e59afdf: no, I mentioned setting outerHTML on body, which makes html the context node for the fragment parsing algorithm",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:59): 6b57ea7f33069df5914663ba9e59afdf: that case works the same in Chrome, Opera 12 and (with the patch) Firefox",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:59): 6b57ea7f33069df5914663ba9e59afdf: the result is even logical in its own way even if counter-intuitive",
        "6b57ea7f33069df5914663ba9e59afdf (12:00): yeah, I meant using outerHTML on body",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:00): 6b57ea7f33069df5914663ba9e59afdf: it fails enough in IE that I don't expect anyone to assign to outerHTML on body anyway",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:01): 6b57ea7f33069df5914663ba9e59afdf: I think we shouldn't worry about the counter-intuitiveness and we should just do what the spec already says and what Opera 12 and Chrome already do",
        "b25b6b77a0087ff8385941e5545d32ea (12:01): b8810fee2f4a71f849f3f7409546d1d9: We had a bug where people were assigning outerHTML on &lt;html&gt;",
        "6b57ea7f33069df5914663ba9e59afdf (12:01): b8810fee2f4a71f849f3f7409546d1d9: what about DocumentFragment",
        "b25b6b77a0087ff8385941e5545d32ea (12:01): (it was dark-matterish though)",
        "6b57ea7f33069df5914663ba9e59afdf (12:01): it is *very* surprising to see &lt;body&gt; created automatically",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:01): 6b57ea7f33069df5914663ba9e59afdf: I made it work per spec",
        "b25b6b77a0087ff8385941e5545d32ea (12:02): 6b57ea7f33069df5914663ba9e59afdf: You mean &lt;head&gt;?",
        "6b57ea7f33069df5914663ba9e59afdf (12:02): I mean &lt;body&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:02): 6b57ea7f33069df5914663ba9e59afdf: in the document fragment case, the body node is only a fictional context node. it doesn't show up in the output",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:02): 6b57ea7f33069df5914663ba9e59afdf: you need to read the spec sentence very carefully",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:03): 6b57ea7f33069df5914663ba9e59afdf: italic parent and upright parent are different nodes",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:03): b25b6b77a0087ff8385941e5545d32ea: does setting outerHTML on html do something reasonable in IE?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:04): which reminds me that I should participate in the public-webapps thread and explain why tweaking fragment parsing is harder than it seems",
        "b25b6b77a0087ff8385941e5545d32ea (12:05): b8810fee2f4a71f849f3f7409546d1d9: I don't think so",
        "b25b6b77a0087ff8385941e5545d32ea (12:05): It used to in Opera",
        "b25b6b77a0087ff8385941e5545d32ea (12:05): b8810fee2f4a71f849f3f7409546d1d9: What is hard?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:06): b25b6b77a0087ff8385941e5545d32ea: DWIM without a context node so that *everything* works intuitively",
        "6b57ea7f33069df5914663ba9e59afdf (12:06): b8810fee2f4a71f849f3f7409546d1d9: yes, please, comment something in the webapps",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:06): 6b57ea7f33069df5914663ba9e59afdf: oh, in the patch, I didn't try to make the optimization for parsing directly into the context node",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:07): 6b57ea7f33069df5914663ba9e59afdf: I figured that there are enough ways for the circumstances to prevent the optimization from working",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:07): 6b57ea7f33069df5914663ba9e59afdf: so it would be a premature optimization",
        "b25b6b77a0087ff8385941e5545d32ea (12:07): b8810fee2f4a71f849f3f7409546d1d9: Any particular subset of everything you have in mind as being hard?",
        "6b57ea7f33069df5914663ba9e59afdf (12:08): b8810fee2f4a71f849f3f7409546d1d9: yeah, we can optimize later",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:08): 6b57ea7f33069df5914663ba9e59afdf: I think we shouldn't optimize unless we later see a lot of perf-critical outerHTML use that would benefit from parsing directly to the context node",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:08): 6b57ea7f33069df5914663ba9e59afdf: ok",
        "6b57ea7f33069df5914663ba9e59afdf (12:08): b8810fee2f4a71f849f3f7409546d1d9: I'll do some profiling later",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:10): b25b6b77a0087ff8385941e5545d32ea: suppose you want a DWIM mode where &lt;html&gt;, &lt;head&gt;, &lt;body&gt;, &lt;tbody&gt;, &lt;tr&gt;, &lt;td&gt;, &lt;g&gt;, &lt;mi&gt;, etc. all do whatever the person invoking the parser intended",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:11): b25b6b77a0087ff8385941e5545d32ea: in that case, you'd have to support &lt;html&gt; creating an node and enforcing the usual rules for its children *except* after &lt;/html&gt;, it would have to allow siblings",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:11): b25b6b77a0087ff8385941e5545d32ea: for no use cases--just for logic and completeness",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:11): goes read the public-webapps thread",
        "b25b6b77a0087ff8385941e5545d32ea (12:11): Why woulod it have to?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): b25b6b77a0087ff8385941e5545d32ea: for completeness",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): b25b6b77a0087ff8385941e5545d32ea: otherwise, we'd end up cherry-picking magic modes for some hard tags but not others",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): b25b6b77a0087ff8385941e5545d32ea: maybe we'll end up making a partially magic mode",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): I mean if you do &lt;html&gt;{stuff}&lt;/html&gt;{more stuff} in the contextless mode I would expect it to be like passing that to the HTML parser",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:13): b25b6b77a0087ff8385941e5545d32ea: that's because you've done QA on an HTML parser!",
        "b25b6b77a0087ff8385941e5545d32ea (12:14): Well maybe :) But it doesn't seem particularly illogical",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:14): b25b6b77a0087ff8385941e5545d32ea: btw, any word on the &quot;Mobi&quot; string?",
        "b25b6b77a0087ff8385941e5545d32ea (12:14): Much less than outerHTML",
        "b25b6b77a0087ff8385941e5545d32ea (12:15): b8810fee2f4a71f849f3f7409546d1d9: Nothing definitive, there were suggestions that many combinations of the words &quot;Opera&quot; and &quot;Mobile&quot; including them individualy had been problematic on at least some sites",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:16): b25b6b77a0087ff8385941e5545d32ea: thanks",
        "cdbb606c9c8ad1363d48e1e9262bba09 (12:16): 6b57ea7f33069df5914663ba9e59afdf: at your service",
        "b25b6b77a0087ff8385941e5545d32ea (12:16): Argh it's the evil twin",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:20): 1.5 times as evil",
        "6b57ea7f33069df5914663ba9e59afdf (12:21): cdbb606c9c8ad1363d48e1e9262bba09: b8810fee2f4a71f849f3f7409546d1d9 already answered",
        "cc097e0d7183ae8436e7df709553c8c0 (12:33): edb259c0e0038f38bb200bc20c8cbf7e: why doesn't https://bitbucket.org edb259c0e0038f38bb200bc20c8cbf7e/webvtt/issues/query have issue tracking enabled?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:34): prolly default",
        "cc097e0d7183ae8436e7df709553c8c0 (12:38): can you flip a switch?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:40): flips and succeeds",
        "cc097e0d7183ae8436e7df709553c8c0 (12:40): thanks",
        "6b57ea7f33069df5914663ba9e59afdf (12:40): edb259c0e0038f38bb200bc20c8cbf7e: which all callbacks use handleEvent?  EventListener, some GeoLocation stuff, but what else?",
        "6b57ea7f33069df5914663ba9e59afdf (12:41): Apparently FunctionStringCallback, but that can and should be changed",
        "6b57ea7f33069df5914663ba9e59afdf (12:41): and so should NavigatorUserMediaSuccessCallback",
        "6b57ea7f33069df5914663ba9e59afdf (12:41): aha",
        "6b57ea7f33069df5914663ba9e59afdf (12:41): files spec bugs",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:41): BlobCallback",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:41): there's quite a few",
        "6b57ea7f33069df5914663ba9e59afdf (12:42): all the ones in HTML spec can be changed",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:42): there were some more according to people working on Chromium",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:42): still seems like a pretty silly idea to me",
        "6b57ea7f33069df5914663ba9e59afdf (12:42): what?",
        "6b57ea7f33069df5914663ba9e59afdf (12:43): to not use handleEvent everywhere?",
        "6b57ea7f33069df5914663ba9e59afdf (12:43): it is silly to have badly named methods in interfaces",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:43): just having function seems fine to me actually",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:44): these are a lot of extra methods you would have to learn in theory and they will likely almost never end up getting used",
        "6b57ea7f33069df5914663ba9e59afdf (12:44): &quot;you would have to learn&quot; ?",
        "6b57ea7f33069df5914663ba9e59afdf (12:44): who would have to learn",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:45): authors",
        "6b57ea7f33069df5914663ba9e59afdf (12:45): if web dev doesn't use {} syntax, he doesn't need to care about the method names",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:45): if they care about the non-function model at all",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:45): which seems unlikely",
        "6b57ea7f33069df5914663ba9e59afdf (12:45): {} is used pretty often for event listeners",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:46): I never encountered it",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:46): but I haven't done any research",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:54): 6b57ea7f33069df5914663ba9e59afdf: ok. I responded to the public-webapps thread",
        "b25b6b77a0087ff8385941e5545d32ea (12:59): b8810fee2f4a71f849f3f7409546d1d9: Agreed that svg and mathml fragments might be problematic",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): fwiw",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): yehuda submitted a patch to the bug ms2ger filed for the HTML parsing algorithm",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:02): I guess that outlines his expectations",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:02): edb259c0e0038f38bb200bc20c8cbf7e: URL?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:04): tries to find it",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:06): b8810fee2f4a71f849f3f7409546d1d9: http://www.w3.org/Bugs/Public/show_bug.cgi?id=14694",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:07): edb259c0e0038f38bb200bc20c8cbf7e: thanks",
        "b25b6b77a0087ff8385941e5545d32ea (13:12): That patch doesn't actually work does it?",
        "b25b6b77a0087ff8385941e5545d32ea (13:12): e.g. &lt;tr&gt;&lt;caption&gt;",
        "b25b6b77a0087ff8385941e5545d32ea (13:12): Uh, bad example",
        "6b57ea7f33069df5914663ba9e59afdf (13:13): b8810fee2f4a71f849f3f7409546d1d9: would it make sense to have some kind of innerHTML like method which had context node as a parameter",
        "cc097e0d7183ae8436e7df709553c8c0 (13:14): like createContextualFragment?",
        "6b57ea7f33069df5914663ba9e59afdf (13:14): that way svg/mathml could be handled somewhat sane way,",
        "6b57ea7f33069df5914663ba9e59afdf (13:14): cc097e0d7183ae8436e7df709553c8c0: something like that, but createContextualFragment is insane",
        "6b57ea7f33069df5914663ba9e59afdf (13:14): :)",
        "6b57ea7f33069df5914663ba9e59afdf (13:15): it is really silly that one needs to create and initialize a range object to get right context node",
        "b25b6b77a0087ff8385941e5545d32ea (13:15): (well actually not that bad an example, since that would crash I think)",
        "b25b6b77a0087ff8385941e5545d32ea (13:20): Umm, ignore me, I am being silly",
        "6b57ea7f33069df5914663ba9e59afdf (13:28): DocumentFragment parseHTML(DOMString aData, [optional] Element aContext)",
        "6b57ea7f33069df5914663ba9e59afdf (13:28): in Document",
        "6b57ea7f33069df5914663ba9e59afdf (13:28): or, in each element, but without optional parameter",
        "cc097e0d7183ae8436e7df709553c8c0 (13:30): innerHTML already has context",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:31): 6b57ea7f33069df5914663ba9e59afdf: the API that takes a DOM node as a context is innerHTML",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:32): 6b57ea7f33069df5914663ba9e59afdf: except the result holder is the same node, not a separate DocementFragment",
        "6b57ea7f33069df5914663ba9e59afdf (13:32): right",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:32): I think we should add innerHTML, outerHTML and insertAdjacentHTML to SVG and MathML nodes, too.",
        "6b57ea7f33069df5914663ba9e59afdf (13:33): b8810fee2f4a71f849f3f7409546d1d9: I'm thinking about sane replacement to createContextualFragment.",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:33): 6b57ea7f33069df5914663ba9e59afdf: would it mark scripts as &quot;already started&quot; or not?",
        "6b57ea7f33069df5914663ba9e59afdf (13:34): bah. Why do you need to ask difficult questions",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:34): 6b57ea7f33069df5914663ba9e59afdf: I suppose we could have document.createContextualFragment(markup, contextLocal, contextNS)",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:35): 6b57ea7f33069df5914663ba9e59afdf: where omitting contextNS would default to the XHTML namespace",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:35): 6b57ea7f33069df5914663ba9e59afdf: and omitting both contextLocal and contextNS would do Yehuda's DWIM",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:36): or document.parseFragment to have a shorter name",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:36): and to avoid using the same name as a crazy feature",
        "b25b6b77a0087ff8385941e5545d32ea (13:43): document.parse would be a better name",
        "b25b6b77a0087ff8385941e5545d32ea (13:44): Nameing in the DOM was one of the things that all the js people were complaining about",
        "6b57ea7f33069df5914663ba9e59afdf (13:45): js or jQuery or who ;)",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:49): 6b57ea7f33069df5914663ba9e59afdf: Alex Russell in particular."
    ],
    "person_ids": [
        "6b57ea7f33069df5914663ba9e59afdf",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "b25b6b77a0087ff8385941e5545d32ea",
        "cdbb606c9c8ad1363d48e1e9262bba09",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}