{
    "id": "85cab9ffcf3040aa7a2fc58c674bdb28",
    "messages": [
        "4bef48592155dfcdb58625a06707f169 (23:28): 69b0d3dfe919a6b860a9fac82de52a7e: nice",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:28): also dramatically reduced the indexing frequency :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:29): not much point indexing tests every 5 seconds",
        "4bef48592155dfcdb58625a06707f169 (23:29): 69b0d3dfe919a6b860a9fac82de52a7e: apparently opera does send PARAM:&quot;&quot;, but only since last week :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:29): i wish i had a way to test IE",
        "ab7faae5d7b250ea8606486575f8f79c (23:30): Isn't there some existing plugin you could use and modify for testing?",
        "ab7faae5d7b250ea8606486575f8f79c (23:30): (assuming that's what the problem was)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:31): well on mac i just wrote my own plugin to dump the data out",
        "4bef48592155dfcdb58625a06707f169 (23:31): do you have that plugin around somewhere?",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:31): sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:31): source or binary?",
        "4bef48592155dfcdb58625a06707f169 (23:32): can i has both? :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:32): sure",
        "4bef48592155dfcdb58625a06707f169 (23:32): awesome",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:42): http://junkyard.damowmow.com/408",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:43): 4bef48592155dfcdb58625a06707f169: ^",
        "4bef48592155dfcdb58625a06707f169 (23:43): 69b0d3dfe919a6b860a9fac82de52a7e: thanks!",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:44): let me know if you find anything in there that i shouldn't have put in public :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:44): i didn't look closley",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:44): closely",
        "4bef48592155dfcdb58625a06707f169 (23:45): still loading...",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:45): also, that code is a mess. It has memory leaks and the like. I didn't do anything to fix it because all I wanted was the data, and once I had it I was done and threw it out",
        "4bef48592155dfcdb58625a06707f169 (23:45): connection timed out",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:45): (i wouldn't be surprised if it had security bugs and stuff)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:45): (so don't install it on a production machine)",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:46): wfm",
        "4bef48592155dfcdb58625a06707f169 (23:49): i can't reach it from here for some reason. i'll try at the office tomorrow",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:49): can you get to hixie.ch?",
        "4bef48592155dfcdb58625a06707f169 (23:49): no",
        "b25b6b77a0087ff8385941e5545d32ea (23:49): 4bef48592155dfcdb58625a06707f169: wfm",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:49): I can reach it, fwiw.",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:50): 4bef48592155dfcdb58625a06707f169: odd",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:50): 4bef48592155dfcdb58625a06707f169: can you ping hixie.ch?",
        "4bef48592155dfcdb58625a06707f169 (23:50): ping times out too",
        "4bef48592155dfcdb58625a06707f169 (23:51): maybe park hotel has blocked hixie.ch",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:51): can you ping 69.163.222.251 ?",
        "b25b6b77a0087ff8385941e5545d32ea (23:51): Too many Opera employees trying to reach it :)",
        "4bef48592155dfcdb58625a06707f169 (23:53): 69b0d3dfe919a6b860a9fac82de52a7e: times out",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:53): weird",
        "4bef48592155dfcdb58625a06707f169 (23:53): dns lookup for hixie.ch is successful",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:53): if you traceroute it, where does the route fail?",
        "4bef48592155dfcdb58625a06707f169 (23:56): 3  sar-l1.se.thecloud.net (10.5.24.134)  97.385 ms  28.379 ms  26.584 ms",
        "4bef48592155dfcdb58625a06707f169 (23:57): all others say * * * *",
        "4bef48592155dfcdb58625a06707f169 (23:57): er",
        "4bef48592155dfcdb58625a06707f169 (23:57): * * *",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:57): then the problem is definitely at your ewnd",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:57): end",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:57): because i doubt very much dreamhost peer with thecloud.net :-)",
        "4bef48592155dfcdb58625a06707f169 (23:57): yeah",
        "57d876083caf517f49e8cf5e03307450 (23:58): dump a bgp route advertisement and check the ASN path?",
        "4bef48592155dfcdb58625a06707f169 (23:58): time to sleep",
        "4bef48592155dfcdb58625a06707f169 (23:58): dump eyelocks",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:58): would have no idea how to dump route advertisements or check ASN paths :-)",
        "1e10d84b3917ae58049be95b0071cf7f (00:01): Microdata q: wondering why this doesn\u201a\u00c4\u00f4t work in microdatajs; &lt;li itemprop=&quot;location&quot; itemscope itemtype=&quot;http://microformats.org/profile/hcard&quot;&gt;",
        "1e10d84b3917ae58049be95b0071cf7f (00:02): but this does &lt;li itemprop=&quot;location&quot;&gt;&lt;span itemscope itemtype=&quot;http://microformats.org/profile/hcard&quot;&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:02): when you say &quot;Work&quot;, what are you looking for?",
        "1e10d84b3917ae58049be95b0071cf7f (00:03): 69b0d3dfe919a6b860a9fac82de52a7e: atm \u201a\u00c4\u00fawork\u201a\u00c4\u00f9 = card data in http://foolip.org/microdatajs/live/",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:04): what's the complete document?",
        "1e10d84b3917ae58049be95b0071cf7f (00:04): so I realise it might be a problem there. just sanity-checking I\u201a\u00c4\u00f4m not making a mistake",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:04): I'm not 100% sure I understand what you're trying to do",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:04): (in particular, I'm curious what the itemprop=&quot;location&quot; is intended to be part of)",
        "1e10d84b3917ae58049be95b0071cf7f (00:05): 69b0d3dfe919a6b860a9fac82de52a7e: converting uF to Microdata. this is an hcard embedded in hcalendar",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:05): in microdata, &lt;li itemprop=&quot;location&quot;&gt;&lt;span itemscope itemtype=&quot;http://microformats.org/profile/hcard&quot;&gt; means the same as &lt;li itemprop=&quot;location&quot;&gt;&lt;/li&gt; ... &lt;span itemscope itemtype=&quot;http://microformats.org/profile/hcard&quot;&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:05): that is, there's no link between the itemprop=location and the vcard in that case",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:06): if you have an hCalendar and it contains a vCard, then I don't think foolip's tool will show you the nested vCard",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:06): (the spec only says to extract the top-level vCards)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:06): (e.g. it won't exact Agents either)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:07): technically the vEvent vocabulary doesn't allow nested vCards currently iirc",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:07): http://www.whatwg.org/specs/web-apps/current-work/complete.html#md-vevent-location says &quot;The value must be text.&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:08): (as opposed to &quot;The value must be either an item with the type http://microformats.org/profile/hcard, or an absolute URL, or text.&quot; which is what the spec for vCard &quot;agent&quot; says)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:08): hth",
        "1e10d84b3917ae58049be95b0071cf7f (00:10): 69b0d3dfe919a6b860a9fac82de52a7e: sorry, uploaded code http://oli-studio.com/temp/uf/microdata.html",
        "1e10d84b3917ae58049be95b0071cf7f (00:10): and that \u201a\u00c4\u00favalue must be text\u201a\u00c4\u00f9 part is a bit limiting if it means no contained elements",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:11): the &quot;value&quot; there is the value of the itemprop=&quot;&quot; property",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:11): which can generally be either text, or a URL, or a datetime, or a nested itemscope=&quot;&quot; item,",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:11): s/,$//",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:12): it doesn't preclude nested markup, but nested markup doesn't affect microdata",
        "1e10d84b3917ae58049be95b0071cf7f (00:13): by that do you mean any text in nested markup isn\u201a\u00c4\u00f4t included, eg as the location value in this case?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:13): it's flattened",
        "1e10d84b3917ae58049be95b0071cf7f (00:14): or that the markup is ignored but the contained text is used?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): in:",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): &lt;div itemscope&gt;&lt;span itemprop=&quot;a&quot;&gt;hello &lt;em&gt;world&lt;/em&gt; how &lt;em&gt;are&lt;/em&gt; you&lt;/span&gt;&lt;/div&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): ...there is a singel item, and it has a single property named &quot;a&quot;, and its value os &quot;hello world how are you&quot; with no markup.",
        "1e10d84b3917ae58049be95b0071cf7f (00:14): ok, that\u201a\u00c4\u00f4s what I hoped",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:15): in:",
        "1e10d84b3917ae58049be95b0071cf7f (00:16): so when you say \u201a\u00c4\u00fatechnically the vEvent vocabulary doesn't allow nested vCards currently\u201a\u00c4\u00f9 is that in Microdata or uF?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:16): &lt;div itemscope&gt;&lt;span itemprop=&quot;a&quot;&gt;&lt;em itemscope&gt;&lt;span itemprop=&quot;b&quot;&gt;B&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/div&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:16): ...tehre are two _top-level_ microdata items",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): one has a property &quot;a&quot; with the value &quot;B&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): the other has the property &quot;b&quot; with the value &quot;B&quot;",
        "1e10d84b3917ae58049be95b0071cf7f (00:17): (I kinda thought that each itemtype instance wouldn\u201a\u00c4\u00f4t affect the others)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): they are not related items -- there's no link between them in the microdata model",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): however, in:",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): &lt;div itemscope&gt;&lt;span itemprop=&quot;a&quot; itemscope&gt;&lt;span itemprop=&quot;b&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): there is _one_ top-level microdata item, and it has a property &quot;a&quot; whose value is a nested item, which itself has one property &quot;b&quot; whose value is &quot;B&quot;.",
        "1e10d84b3917ae58049be95b0071cf7f (00:18): aaah",
        "1e10d84b3917ae58049be95b0071cf7f (00:18): a bit more rigor than uF classes",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): yeah, that was one of the main goals of microdata",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): the above and itemref=&quot;&quot; are basically the two complicated parts of microdata",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): (i recommend ignoring itemref=&quot;&quot; for now)",
        "1e10d84b3917ae58049be95b0071cf7f (00:19): am ignoring itemref=&quot;&quot; for now :)",
        "1e10d84b3917ae58049be95b0071cf7f (00:19): snap",
        "1e10d84b3917ae58049be95b0071cf7f (00:20): have yet to make the slides, but will post here when I\u201a\u00c4\u00f4m done for feedback (hopefully before the event :| )",
        "1e10d84b3917ae58049be95b0071cf7f (00:20): thanks for explaining",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:30): is playing with a rough first-cut javascript library implementing @onlyreplace.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:30): 1e10d84b3917ae58049be95b0071cf7f: my pleasure. I'd be happy to review any slides.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:31): 1f8387eb43f131d7c309a90a4e36b5cb: for &lt;form&gt;?",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:31): &lt;form&gt;, &lt;a&gt;, and &lt;base&gt;.",
        "1e10d84b3917ae58049be95b0071cf7f (00:31): 69b0d3dfe919a6b860a9fac82de52a7e: thank you. much appreciated",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:31): 1f8387eb43f131d7c309a90a4e36b5cb: we had something like that in a previous version, if it's what I think you mean",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:32): There was a thread about it a while back that ended up as &quot;well, it should be easy to implement in JS, especially once XHR2 is out, so no change to the spec&quot;.",
        "1e10d84b3917ae58049be95b0071cf7f (00:32): damn you foolip, swanning off to China to get married when I want to ask you questions! sheesh",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:38): Is this an error or expected?  I'm trying to replace an element with another element I've cloned from an &lt;iframe&gt;.  It works fine for normal elements, but fails for &lt;style&gt;.",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:38): (I can, however, wrap the &lt;style&gt; in a &lt;div&gt; and replace *that* instead.)",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:39): Specifically, this is in Chrome 4 for windows.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:40): &quot;error&quot; and &quot;expected&quot; are not mutually exclusive",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:40): do you have a minimised test case?",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:40): No, but I could produce one.  (Right now it's me testing it on a copy of my production site.)",
        "042dd99eb0ff8653814e445ca0093427 (00:41): that sounds like a bug to me",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:41): it's almost certainly a bug, yes",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:49): 042dd99eb0ff8653814e445ca0093427: Does Firefox not obey dynamic changes to &lt;base target&gt;?",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:49): (That appears to be what's stopping this from working in FF.)",
        "042dd99eb0ff8653814e445ca0093427 (00:49): I think we do, but there could be a bug",
        "042dd99eb0ff8653814e445ca0093427 (00:49): (it's a huge pain)",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:50): Heh, kk.",
        "042dd99eb0ff8653814e445ca0093427 (00:50): oh hmm",
        "042dd99eb0ff8653814e445ca0093427 (00:50): &lt;base target&gt;",
        "042dd99eb0ff8653814e445ca0093427 (00:50): I dunno",
        "042dd99eb0ff8653814e445ca0093427 (00:50): I've never even heard of that, so I dunno :-)",
        "042dd99eb0ff8653814e445ca0093427 (00:50): if it doesn't, it's probably easy to fix",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:51): iirc html5 defines &lt;base target&gt; not quite how firefox does it anyway",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:51): so at some point we should file bugs and have that fixed",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:51): Haha.  Well, this @onlyreplace impl works in Chrome.  It fails in Firefox, but if I manually add the appropriate @target to &lt;base&gt;, it works.  So that suggests &lt;base target&gt; isn't being honored when changed dynamically by script.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:51): it's not a high priority though",
        "a1fbe72f47651e50181e743dc550aeee (01:10): Are IDs allowed to start with numbers now?",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:10): Yes.",
        "88d4d34a8064a4ff39fd5e144eea7762 (01:11): They can be arbitrary nonempty strings that don't contain whitespace.",
        "a1fbe72f47651e50181e743dc550aeee (01:15): k"
    ],
    "person_ids": [
        "4bef48592155dfcdb58625a06707f169",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b25b6b77a0087ff8385941e5545d32ea",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "57d876083caf517f49e8cf5e03307450",
        "1e10d84b3917ae58049be95b0071cf7f",
        "042dd99eb0ff8653814e445ca0093427",
        "a1fbe72f47651e50181e743dc550aeee",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}