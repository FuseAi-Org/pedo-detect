{
    "id": "511fed25e325c41d44ebac2048c2a0b1",
    "messages": [
        "1f8387eb43f131d7c309a90a4e36b5cb (01:08): Yay, done. http://code.google.com/p/chromium/issues/detail?id=67629",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (01:12): prz to file in bugs.webkit.org kthxbai",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:15): Goddammit.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:15): hah",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:19): bdf7d7409da19264fa0c4bf6b4f2d0cc: https://bugs.webkit.org/show_bug.cgi?id=51362",
        "1e10d84b3917ae58049be95b0071cf7f (01:21): member 69b0d3dfe919a6b860a9fac82de52a7e: when using &lt;time datetime=&quot;&quot;&gt; is it ok to use a datetime without a timezone (floating time), or is a timezone (or Z) required?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:21): looks",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:22): 1e10d84b3917ae58049be95b0071cf7f: does the element have a pubdate attribute?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:22): (not that i think it matters in this case)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:22): (but it'll simplify my answer)",
        "1e10d84b3917ae58049be95b0071cf7f (01:22): possibly :) this was an enquiry on html5doctor",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:23): hm actually it does matter",
        "1e10d84b3917ae58049be95b0071cf7f (01:23): spec says requires \u201a\u00c4\u00favalid date string with optional time\u201a\u00c4\u00f9 which to me would make timezone optional, but links to 2.5.5.7 (timezone required)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:23): why would &quot;valid date string with optional time&quot; mean the timezone was optional?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:24): a valid date string with optional time is a string that is either a valid date string, or a valid global date and time string",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:25): i.e. it's the time that's optional, not the time zone",
        "1e10d84b3917ae58049be95b0071cf7f (01:25): hixie: aah ok. I initially read it as any of the datetime microsyntaxes would be ok",
        "1e10d84b3917ae58049be95b0071cf7f (01:25): but the link indicated I was wrong",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:25): no, only the ones it says are ok are ok :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:26): that's why it says which one is ok :-)",
        "1e10d84b3917ae58049be95b0071cf7f (01:26): hehehe",
        "fd9ef1223e855714294498ebfde79f98 (01:26): so, for instance, it can be 2010-12-20, or 2010-12-20T16:24:00-08:00",
        "1e10d84b3917ae58049be95b0071cf7f (01:27): does that include non-pubdate uses of &lt;time&gt;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:27): to answer your original question, the answer is &quot;it depends&quot; -- if it has a pubdate attribute, then datetime must be a date or a date+time+timezone; if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:27): this is all defined here: http://www.whatwg.org/specs/web-apps/current-work/#attr-time-datetime",
        "1e10d84b3917ae58049be95b0071cf7f (01:27): oh! so when would a non-timezone datetime (local datetime) be used?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:28): &lt;p&gt;I usually have a snack at &lt;time&gt;16:00&lt;/time&gt;.&lt;/p&gt;",
        "1e10d84b3917ae58049be95b0071cf7f (01:29): 2.5.5.4 Local dates and times specs a date + time with no timezone",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:29): (so you can style it to be &quot;I usually have a snack at 4pm.&quot;)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:30): yes",
        "1e10d84b3917ae58049be95b0071cf7f (01:30): is it possible to use 2.5.5.4-style datetimes with &lt;time&gt;?",
        "fd9ef1223e855714294498ebfde79f98 (01:31): &lt;p&gt;I had a snack &lt;time datetime=&quot;2010-12-20T16:00:00&quot;&gt;this afternoon&lt;/time&gt;.&lt;/p&gt;",
        "fd9ef1223e855714294498ebfde79f98 (01:32): not sure if that's OK per spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): 1e10d84b3917ae58049be95b0071cf7f: not currently, no",
        "1e10d84b3917ae58049be95b0071cf7f (01:32): fd9ef1223e855714294498ebfde79f98: that conflicts with what 69b0d3dfe919a6b860a9fac82de52a7e wrote above (\u201a\u00c4\u00fa if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.\u201a\u00c4\u00f9)",
        "fd9ef1223e855714294498ebfde79f98 (01:32): 1e10d84b3917ae58049be95b0071cf7f: yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): the spec seems pretty clear cut on all this to me :-)",
        "1e10d84b3917ae58049be95b0071cf7f (01:32): 69b0d3dfe919a6b860a9fac82de52a7e: ok thanks. Appreciate you clearing that up",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): what is it about the spec that makes this confusing?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): i really should make the spec clearer if all this can't be determined straight from following th elinks in the spec",
        "1e10d84b3917ae58049be95b0071cf7f (01:33): yeah, I didn\u201a\u00c4\u00f4t write the article, so I don\u201a\u00c4\u00f4t know if it was a misreading or if the spec changed to make local datetimes invalid for @datetime",
        "1e10d84b3917ae58049be95b0071cf7f (01:33): could also be that microformat datetimes are generally local (no-timezone) oners",
        "1e10d84b3917ae58049be95b0071cf7f (01:34): will update our article",
        "fd9ef1223e855714294498ebfde79f98 (01:36): I don't think that assertion makes sense re: microformat datetimes",
        "fd9ef1223e855714294498ebfde79f98 (01:36): Most hAtom I've seen in the wild uses Atom-like RFC3339 productions, including tz",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:38): I know that I just use date('c') for my stuff, which produces a tz.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:39): (From PHP.)",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:39): there aren't really that many use cases for timezone-less datetimes in output, from what i can tell",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:40): but it's not clear that &lt;time&gt; has enough use cases to really justify it anyway",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:40): and it might end up being dropped",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:40): &quot;The ball starts to drop at &lt;time datetime=2010-12-31T23:59:50&gt;10 seconds before midnight!&lt;/time&gt;.&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:40): that's not really right",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:41): it's 10 seconds before midnight EST :-)",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:41): I think &lt;time&gt; is useful enough just for being a carrier of datetime information for microformats/microdata.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:41): All of the balls drop at the same local time.",
        "1e10d84b3917ae58049be95b0071cf7f (01:41): fd9ef1223e855714294498ebfde79f98: any hand-authored hEvent probably won\u201a\u00c4\u00f4t contain tiemzone, because like all i18n no one thinks of if",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:41): there are multiple balls?",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:42): Lots of places do a ball drop, not just Times Square.",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:42): And everyone likes to count down from 10, so...",
        "fd9ef1223e855714294498ebfde79f98 (01:46): 1e10d84b3917ae58049be95b0071cf7f: maybe. I hand-author hevents surprisingly frequently, so I have an Emacs command that inserts the correctly-formatted now timestamp for me",
        "fd9ef1223e855714294498ebfde79f98 (01:46): I freely acknowledge I'm an outlier. :)",
        "1e10d84b3917ae58049be95b0071cf7f (01:47): fd9ef1223e855714294498ebfde79f98: yeah, I agree anyone hand-authoring should be using snippets (I do the same), but a surprising number of microformatters think that the brevity allowed is a good thing (eg implied n optimisation and the resulting i18n problems it has)",
        "1e10d84b3917ae58049be95b0071cf7f (01:48): snippets ftw!",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:57): the instructions for this lighter i am using say &quot;do not use near fire, flame, or sparks&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:57): how the heck else am i supposed to use it",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:57): The flame is part of use, so it doesn't count as something the lighter is used *near*.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:59): ok but once i've lit what i'm lighting... then it's on fire",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:59): Yeah, so stop using it near that then.",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:59): but it explicitly has a feature for lighting multiple things in a row",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:59): like a bunch of candles",
        "1f8387eb43f131d7c309a90a4e36b5cb (01:59): Then I guess the definition of &quot;near&quot; comes into question.",
        "ab7faae5d7b250ea8606486575f8f79c (02:08): The idea is presumably that you're meant to disregard their instructions",
        "ab7faae5d7b250ea8606486575f8f79c (02:08): but that if you e.g. carry it into a burning building and it explodes then you can't sue them since they warned you in advance",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:12): 1f8387eb43f131d7c309a90a4e36b5cb: why would a hash function be slower in JS than in native code?",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:12): Because most hashes are designed for a hardware implementation.",
        "ab7faae5d7b250ea8606486575f8f79c (02:13): JS runs on hardware",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:13): Sigh.",
        "ab7faae5d7b250ea8606486575f8f79c (02:14): Maybe you mean most hashes are designed for implementation in languages that have 32-bit integer operations, or something?",
        "ab7faae5d7b250ea8606486575f8f79c (02:15): (That seems like the main pain with JS)",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:15): Yeah.",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:15): Ones that can actually sit next to the hardware if necessary.",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:23): JS has 32-bit integer operations, no? (i thought most bitwise ops truncate to 32 bits)",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:24): 1f8387eb43f131d7c309a90a4e36b5cb: why couldn't a JS compiler be as efficient with hashing code as a C++ compiler?",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:24): I assume it's more difficult, given that you don't have direct binary access.",
        "ab7faae5d7b250ea8606486575f8f79c (02:26): I suppose implementations might be clever enough to realise that &quot;(a + b) &amp; 0xffffffff&quot; could do a 32-bit addition rather than storing intermediate values as doubles, but I don't know if any currently do that",
        "ab7faae5d7b250ea8606486575f8f79c (02:27): and it's a bit inelegant to rely on pattern-matching optimisations to make your code not terrible",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:29): 1f8387eb43f131d7c309a90a4e36b5cb: i don't understand what &quot;direct binary access&quot; means",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:30): Doing JS math involves using JS numbers.  That abstraction is slower than just doing bit-munging like you can do in C and other languages.",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:31): compilers can totally recognise that there's a function that only does math operations on its arguments and have a &quot;fast version&quot; compiled that they use when the input is in range",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:32): isn't that a lot of what V8 actually does?",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:35): optimizing JS engines spend a lot of effort knowing when they can just bit-munge",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:36): and optimizing something like (a + b) &amp; 0xff is not done using pattern matching",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:37): I'd be happy to be shown wrong, that it's expected that we do fast hashing in js.",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:37): try it",
        "1f8387eb43f131d7c309a90a4e36b5cb (02:37): Aw, I wasn't wanting to implement one myself.  &gt;_&lt;",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:39): generating a hash for a Blob's contents might make sense as a provided AP",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:39): I",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc (02:39): or something of that nature"
    ],
    "person_ids": [
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "bdf7d7409da19264fa0c4bf6b4f2d0cc",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "1e10d84b3917ae58049be95b0071cf7f",
        "fd9ef1223e855714294498ebfde79f98",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}