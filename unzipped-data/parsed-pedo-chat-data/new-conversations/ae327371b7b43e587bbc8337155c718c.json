{
    "id": "ae327371b7b43e587bbc8337155c718c",
    "messages": [
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:15): has proved once again on public-html he's an idiot",
        "a54363de192f24cc2f5c8c7810d914f0 (12:27): Hixie: ok, thank you",
        "a54363de192f24cc2f5c8c7810d914f0 (12:32): Hixie: so does that mean that from HTML 5 point of view, it is just ill-formed mark-up?",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): a54363de192f24cc2f5c8c7810d914f0: Yes - it's treated as a (bogus) comment, and the parser just reads up until the next &quot;&gt;&quot; character after the &quot;&lt;!&quot;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:38): ab7faae5d7b250ea8606486575f8f79c: thank you",
        "ab7faae5d7b250ea8606486575f8f79c (12:39): so it should be parsed the same as &lt;!--[CDATA[&lt;sender--&gt;John Smith&lt;/sender&gt;]]&gt;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:42): ab7faae5d7b250ea8606486575f8f79c: ok, but I'm using your lib to parse any HTML/XHTML not just HTML 5, so I'm just going to translate all CDATA to text beforehand",
        "a54363de192f24cc2f5c8c7810d914f0 (12:43): :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:45): a54363de192f24cc2f5c8c7810d914f0: any HTML should be parsed per the HTML 5 rules",
        "ab7faae5d7b250ea8606486575f8f79c (12:45): a54363de192f24cc2f5c8c7810d914f0: If it's actually really proper XHTML, you should probably use an XML parser instead; otherwise you should probably just use html5lib without any special translations, since it ought to match how browsers parse pages",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:46): (where proper XHTML is served as application/xhtml+xml, application/xml, or text/xml, NOT text/html)",
        "a54363de192f24cc2f5c8c7810d914f0 (12:47): well, I'm then using a regex to match any &lt;!-- &lt;rdf:RDF ... comments, which are the deprecated way to embedded RDF/XML in the code",
        "a54363de192f24cc2f5c8c7810d914f0 (12:47): if it's valid, I'm doing try: dom = minidom.parseString(code)",
        "a54363de192f24cc2f5c8c7810d914f0 (12:47): first",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:47): a54363de192f24cc2f5c8c7810d914f0: Where's the data coming from?",
        "a54363de192f24cc2f5c8c7810d914f0 (12:47): if it fails, I'm doing html5lib",
        "a54363de192f24cc2f5c8c7810d914f0 (12:47): direct input, file upload, remote URI",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:48): a54363de192f24cc2f5c8c7810d914f0: For the first two, I'd make it user selectable. For the third, it should be done from Content-Type, optionally with content-type sniffing",
        "a54363de192f24cc2f5c8c7810d914f0 (12:48): so, because I'm using regex to match this commented &lt;rdf:RDF, I do need to take care of CDATA, because if this appears in CDATA, it should not be parsed at all",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:49): a54363de192f24cc2f5c8c7810d914f0: de-facto CDATA doesn't exist in any HTML version, so that's irrelevant. What you need to know is whether the input is HTML or XML, nothing else.",
        "a54363de192f24cc2f5c8c7810d914f0 (12:49): a11aabeeceeae6b8cb5d12ea06b56554: I understand, but IMHO the content-type really does not matter for this particular application",
        "a54363de192f24cc2f5c8c7810d914f0 (12:49): I'm not doing a general purpose parser, but use it for extracting very specific information",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:50): notes that feeds got to the stage at one point where you absolutely had to completely ignore any content-type header because someone thought that",
        "a54363de192f24cc2f5c8c7810d914f0 (12:50): I know about Content-Type, Content-Location, XHTML 1.1 required MIME, &lt;?xml version=&quot;&quot; encoding=&quot;&quot;, &lt;meta content-type, xml:base, &lt;base href=&quot;&quot;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:51): I just do not think it does matter at all for this particular application",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:51): possible issue of ignoring it: what if I send Content-Type: text/html; charset=gb2312?",
        "a54363de192f24cc2f5c8c7810d914f0 (12:51): I'll probably add content selection (HTML, XHTML, RSS) once I introduce RSS parsing",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:51): mumbles something about Trackback autodiscovery being so, so wrong",
        "a54363de192f24cc2f5c8c7810d914f0 (12:52): a11aabeeceeae6b8cb5d12ea06b56554: does html5lib not return utf-8?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:52): a54363de192f24cc2f5c8c7810d914f0: You _really_ don't want to touch RSS parsing. Srsly.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:52): a54363de192f24cc2f5c8c7810d914f0: It wouldn't know what the input character encoding is.",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:52): I can imagine someone go &quot;this is kinda like metadata. if you have metadata, you MUST use RDF. RDF won't validate. Let's comment it out&quot;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:53): so it fails even for proper iso-8859-2 or something?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:53): can't remember the details",
        "a54363de192f24cc2f5c8c7810d914f0 (12:53): b8810fee2f4a71f849f3f7409546d1d9: yes, but now they should use RDFa",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:53): Hixie, &quot;requiring browsers to implementing rendering engines&quot;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:53): does html5lib not try to guess the encoding?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:54): a54363de192f24cc2f5c8c7810d914f0: no, the point were the thinking goes wrong is at &quot;if you have metadata, you MUST use RDF&quot;",
        "a54363de192f24cc2f5c8c7810d914f0 (12:54): like encutils or chardet?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:54): a54363de192f24cc2f5c8c7810d914f0: All it does is use meta@charset.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:54): a54363de192f24cc2f5c8c7810d914f0: and falls back to Windows-1252",
        "a54363de192f24cc2f5c8c7810d914f0 (12:54): huh...",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:54): a54363de192f24cc2f5c8c7810d914f0: Oh, it does also use chardet",
        "a54363de192f24cc2f5c8c7810d914f0 (12:54): so that's fine for the time being",
        "a54363de192f24cc2f5c8c7810d914f0 (12:55): in the next versions I'll add content-type and encoding selection (aside of autodetection)",
        "a54363de192f24cc2f5c8c7810d914f0 (12:55): like W3C Validator does",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:55): in retrospect, both Trackback and Pingback are more complex and bogus than they'd need to be",
        "a54363de192f24cc2f5c8c7810d914f0 (12:55): but really, the first release does not have to be bulletproof",
        "a54363de192f24cc2f5c8c7810d914f0 (12:55): pls understand",
        "ab7faae5d7b250ea8606486575f8f79c (12:55): To anyone who cares: http://wiki.whatwg.org/wiki/User_talk:Highhi and http://wiki.whatwg.org/wiki/User_talk:Hijing are spam",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:56): ab7faae5d7b250ea8606486575f8f79c: I'll deal with those",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:56): b8810fee2f4a71f849f3f7409546d1d9: Trackback needs more complexity insofar as to give a character encoding, really",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:56): a54363de192f24cc2f5c8c7810d914f0: Plenty of things have become broken forever because the first release of a reader was broken (e.g., the web)",
        "a54363de192f24cc2f5c8c7810d914f0 (12:57): :)",
        "a54363de192f24cc2f5c8c7810d914f0 (12:57): I think this is going a bit too far",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:57): a11aabeeceeae6b8cb5d12ea06b56554: I think the right way to implement blong pinging would be to collect the link relation from Referer and for the pinged site to dereference the Referer URI and find the relevant &lt;a href&gt; element and take an extract around that",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:57): b8810fee2f4a71f849f3f7409546d1d9: Yeah, that's Hixie's own opinion :)",
        "ab7faae5d7b250ea8606486575f8f79c (12:57): a11aabeeceeae6b8cb5d12ea06b56554: Plenty of things have failed even more badly because the first release of a reader was written too carefully and correctly and took too long to write and didn't have enough exciting features (e.g., the web's competitors) :-p",
        "a54363de192f24cc2f5c8c7810d914f0 (12:58): thank you for your time for answering my questions, I do appreciate that, great channel",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:58): ab7faae5d7b250ea8606486575f8f79c: Like me! I'm broken!",
        "ab7faae5d7b250ea8606486575f8f79c (12:58): (Those competitors have failed so badly that I can't even think of any specific examples, so I'm just assuming some must have existed)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:59): ab7faae5d7b250ea8606486575f8f79c: XHTML?",
        "ab7faae5d7b250ea8606486575f8f79c (12:59): a11aabeeceeae6b8cb5d12ea06b56554: XHTML isn't competing with the web",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:00): ab7faae5d7b250ea8606486575f8f79c: True. But it's competing for the web.",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:00): ab7faae5d7b250ea8606486575f8f79c: done",
        "ab7faae5d7b250ea8606486575f8f79c (13:08): finds a shop receipt that says &quot;DVDs Coming Soon: ... Nim?\u00dcs Island ...&quot;, and wonders where the character encoding issue got introduced",
        "ab7faae5d7b250ea8606486575f8f79c (13:10): b8810fee2f4a71f849f3f7409546d1d9: Thanks",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:11): b8810fee2f4a71f849f3f7409546d1d9: you can mumble about trackback autodiscovery being wrong",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:12): I'll just mumble about trackbacks being so wrong",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:12): I had to turn support for them off globally on my sites, due to the insane amounts of spam that got through",
        "ab7faae5d7b250ea8606486575f8f79c (13:13): Is it the whole concept of bidirectional links that is wrong?",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:14): no, rather the concept of untrusted bidirectional links",
        "ab7faae5d7b250ea8606486575f8f79c (13:16): isn't sure about the concept of trust either",
        "a54363de192f24cc2f5c8c7810d914f0 (13:16): bye",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:20): ab7faae5d7b250ea8606486575f8f79c: there usually is none",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:20): unless the trust is between two endpoints both controlled by the same entity",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:21): or all approval of trust is manual, or (cryptographically) secure",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa (13:21): trackback fails in all such respects",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:21): man, Flickr Uploadr for the Mac sucks",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:21): keeps failing after a few images",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:33): uses his own upload script",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:34): edb259c0e0038f38bb200bc20c8cbf7e: do you want a copy?"
    ],
    "person_ids": [
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a54363de192f24cc2f5c8c7810d914f0",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "c3fb53c6c6b7a0afb097cd0b6f6d06aa"
    ]
}