{
    "id": "a6b6cf02b52b87e938b4d060c8c8b9fa",
    "messages": [
        "dfefdb66581190514404f57cdf74a8eb (14:20): Anne, 56ef338f9fcf9452fc833a005325025e is saying things about you. I mean, we want to talk about URI scheme for widgets\\",
        "dfefdb66581190514404f57cdf74a8eb (14:20): :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:20): is getting the feeling he was bribed with delicious food",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:20): is not too upset about it",
        "dfefdb66581190514404f57cdf74a8eb (14:20): hehe, our current proposal is widget-URI      = &quot;widget:&quot; &quot;//&quot; UUID &quot;/&quot; zip-rel-path",
        "dfefdb66581190514404f57cdf74a8eb (14:21): but we are wondering if we really need the UUID bit",
        "dfefdb66581190514404f57cdf74a8eb (14:21): so, the use case for the URI scheme is obviously html5 and origin",
        "dfefdb66581190514404f57cdf74a8eb (14:22): 56ef338f9fcf9452fc833a005325025e: put together a proposal for the URI scheme at http://dev.w3.org/2006/waf/widgets-uri/",
        "dfefdb66581190514404f57cdf74a8eb (14:22): would not bribe ;)",
        "dfefdb66581190514404f57cdf74a8eb (14:23): Use case, we have two widgets running at the same time. The UA needs to distinguish between them (like two tabs, but stricter, no shared cookies, no shared storage)",
        "56ef338f9fcf9452fc833a005325025e (14:24): Other important point: it is necessary that a widget that is stopped and restarted should get the same origin",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:25): For origin you do not need a URI in principel",
        "56ef338f9fcf9452fc833a005325025e (14:25): so basically we can rely on HTML5 section 5.4 step 3 of the URL algo, with the addition that once an opaque unique identifier is attributed then it needs to stick",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:25): You can just say it's a UUID or some such",
        "56ef338f9fcf9452fc833a005325025e (14:25): yeah but we need URIs to resolve relative URLs anyway",
        "56ef338f9fcf9452fc833a005325025e (14:25): that's what we say :)",
        "dfefdb66581190514404f57cdf74a8eb (14:26): But do we _really_ need the UUID?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:26): For a widget URI you probably do not need a UUID",
        "56ef338f9fcf9452fc833a005325025e (14:26): we're wondering if it's best to say UUID (as in the current draft) or to say that the UA does something in every respect like a UUID, but doesn't expose it",
        "56ef338f9fcf9452fc833a005325025e (14:26): the UUID could perhaps be useful down the line for inter-widget communication, but that's not for v1",
        "dfefdb66581190514404f57cdf74a8eb (14:26): UUID makes the uri really ugly. Can't the UA handle that identification internally?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:27): HTML5 says &quot;globally unique identifier&quot; for when an origin cannot be determined",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:27): It is currently never exposed to the outside world",
        "dfefdb66581190514404f57cdf74a8eb (14:27): right.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:28): afaict you only need widget:// or some such to define what &lt;a&gt;.href returns and how resources are resolved within the widget so following from that you do not need a UUID there",
        "56ef338f9fcf9452fc833a005325025e (14:28): yeah we know that",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:28): ok",
        "56ef338f9fcf9452fc833a005325025e (14:28): we're just wondering if there's any value in exposing the &quot;globally unique identifier&quot;",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:29): it doesn't seem you have use cases yet :)",
        "56ef338f9fcf9452fc833a005325025e (14:29): or any problem in doing it",
        "56ef338f9fcf9452fc833a005325025e (14:29): right, that's what we thought",
        "dfefdb66581190514404f57cdf74a8eb (14:29): exactly",
        "56ef338f9fcf9452fc833a005325025e (14:29): but since it's just the two of us, we also thought it could be useful to ask others :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:29): i agree with you guys it seems",
        "56ef338f9fcf9452fc833a005325025e (14:29): I think the only UC is inter-widget comm, but that's for later",
        "56ef338f9fcf9452fc833a005325025e (14:30): all that consensus \u201a\u00c4\u00ee it's annoying",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:30): yeah, though comm requires a bit more I think",
        "dfefdb66581190514404f57cdf74a8eb (14:30): we want to add widget comm at some later point, but we don't know yet how to do that. Will our current proposal work with iframes?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:30): e.g. discovery; dealing with multiple instances; etc.",
        "dfefdb66581190514404f57cdf74a8eb (14:31): we want the widget uri to simply be widget://path",
        "dfefdb66581190514404f57cdf74a8eb (14:31): I mean, widget:///path",
        "56ef338f9fcf9452fc833a005325025e (14:31): multiple instances is a bitch",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:31): dfefdb66581190514404f57cdf74a8eb, if you say that all widget resources share the same globally unique origin it should work with &lt;iframe&gt; I think",
        "56ef338f9fcf9452fc833a005325025e (14:31): no you were right with the first one marcos, it just so happens that &quot;path&quot; starts with / :)",
        "dfefdb66581190514404f57cdf74a8eb (14:31): yeah",
        "56ef338f9fcf9452fc833a005325025e (14:31): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: you mean all the resources in ONE widget share the same yada yada",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:32): yeah, maybe even ONE widget instance",
        "56ef338f9fcf9452fc833a005325025e (14:32): multiple instances is, as I've noted, a bitch",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:32): :)",
        "56ef338f9fcf9452fc833a005325025e (14:32): you also want to have the same origin when a widget is restarted",
        "dfefdb66581190514404f57cdf74a8eb (14:32): yes, they are a bitch. I agree. But should be supported",
        "56ef338f9fcf9452fc833a005325025e (14:32): which, given multiple instances, requires magic to work",
        "dfefdb66581190514404f57cdf74a8eb (14:32): It can't be more of a bitch than having multiple tabs",
        "dfefdb66581190514404f57cdf74a8eb (14:33): or multiple windows",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:33): 56ef338f9fcf9452fc833a005325025e, if the origin is transparent, I'm not sure that matters",
        "56ef338f9fcf9452fc833a005325025e (14:33): multiple tabs is a bitch, I'm still waiting for different cookies per tab",
        "56ef338f9fcf9452fc833a005325025e (14:33): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: you mean opaque?",
        "dfefdb66581190514404f57cdf74a8eb (14:33): 56ef338f9fcf9452fc833a005325025e: but we specify that shared cookies is not allowed.",
        "56ef338f9fcf9452fc833a005325025e (14:34): marcos: yeah \u201a\u00c4\u00ee for widgets",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:34): i.e. it's never exposed and a widget would thus never know the difference if it used origin FOO the first time and origin BAR the second",
        "56ef338f9fcf9452fc833a005325025e (14:34): needs coffee and cigarettes",
        "dfefdb66581190514404f57cdf74a8eb (14:34): 56ef338f9fcf9452fc833a005325025e: hang in there buddy, we are almost done",
        "56ef338f9fcf9452fc833a005325025e (14:34): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: sure, so long as the widget still has access to the storage it put stuff into last time it was running",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:35): ah, I see what you mean",
        "56ef338f9fcf9452fc833a005325025e (14:35): I think the conclusion is: we don't need UUID, but we need to specify that a given widget needs to have the same origin (or the effects of the same origin) across invocations",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:35): so maybe you do want 1 origin per widget (not widget instance) and use sessionStorage for a widget instance",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:36): then you have a somewhat clean mapping to localStorage / sessionStorage",
        "56ef338f9fcf9452fc833a005325025e (14:36): yes, I think we want 1 origin per widget, and if there are multiple instances they have to handle it themselves",
        "dfefdb66581190514404f57cdf74a8eb (14:36): right",
        "56ef338f9fcf9452fc833a005325025e (14:37): ok, ta for the brainstorming, we'll give you more food",
        "dfefdb66581190514404f57cdf74a8eb (14:37): starts flippin through recipe books",
        "56ef338f9fcf9452fc833a005325025e (14:37): I have some swell recipes too",
        "dfefdb66581190514404f57cdf74a8eb (14:38): really! them's fighting words 56ef338f9fcf9452fc833a005325025e! this calls for a cook-off!!!",
        "56ef338f9fcf9452fc833a005325025e (14:38): so long as it's not a cock-off!",
        "dfefdb66581190514404f57cdf74a8eb (14:38): hehehe",
        "56ef338f9fcf9452fc833a005325025e (14:38): but yeah, let's having a cooking competition when you come to Paris and I go to Oslo",
        "dfefdb66581190514404f57cdf74a8eb (14:41): I've been reading about bread making in France... new techniques being created there.",
        "4dd217ba7542bb00a127f682e2c3ad27 (14:42): down boys :)",
        "dfefdb66581190514404f57cdf74a8eb (14:42): you want some too Barstow!!! hu?!",
        "dfefdb66581190514404f57cdf74a8eb (14:42): :)",
        "dfefdb66581190514404f57cdf74a8eb (14:43): stops picking food fights",
        "4dd217ba7542bb00a127f682e2c3ad27 (14:43): wonders if Shepazu is going to whip out a can of his Whup-Ass",
        "56ef338f9fcf9452fc833a005325025e (14:44): marcos: I've been focusing on recipes that involve Marmite recently \u201a\u00c4\u00ee but you probably didn't want to know that",
        "dfefdb66581190514404f57cdf74a8eb (14:44): 56ef338f9fcf9452fc833a005325025e, that's so wrong on so many levels.",
        "56ef338f9fcf9452fc833a005325025e (14:45): I'd rather not get into a fight with shepazu, once a year is enough :)",
        "56ef338f9fcf9452fc833a005325025e (14:45): marcos: I know it's so wrong, BUT IT FEELS SO RIGHT!",
        "56ef338f9fcf9452fc833a005325025e (14:45): anyway, smokes and coffee it is",
        "dfefdb66581190514404f57cdf74a8eb (14:47): :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (14:55): heycam, where is Web IDL on dev.w3.org again?",
        "56ef338f9fcf9452fc833a005325025e (14:57): http://dev.w3.org/2006/webapi/WebIDL/",
        "56ef338f9fcf9452fc833a005325025e (14:57): why man, don't you know it's obviously a 2006 thing?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (15:00): I thought it had to be either a 2008 or 2006, but forgot it was webapi and not webapps or waf :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (15:01): ta",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:08): we really should create a http://dev.w3.org/webapps directory and put all new stuff there",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:09): and I think I could probably even move all of the existing cvs stuff in /2006/webapi and /2006/api to /webapps on the server side",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:09): the cvs server side",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:11): and just symlink both /2006/webapi and /2006/api to /webapps",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (15:11): and 301 stuff too?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:12): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: well, I meant actual symlinks on the filesystem",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:13): move the cvs directories, complete with the whole change history",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:13): it's all totally do-able, just frowned upon",
        "a9b326df4e6da61c5b6f5e1058be83a2 (15:13): I've done it before"
    ],
    "person_ids": [
        "dfefdb66581190514404f57cdf74a8eb",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "56ef338f9fcf9452fc833a005325025e",
        "4dd217ba7542bb00a127f682e2c3ad27",
        "a9b326df4e6da61c5b6f5e1058be83a2"
    ]
}