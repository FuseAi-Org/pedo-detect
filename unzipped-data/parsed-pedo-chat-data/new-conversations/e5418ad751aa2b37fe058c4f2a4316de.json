{
    "id": "e5418ad751aa2b37fe058c4f2a4316de",
    "messages": [
        "fd9ef1223e855714294498ebfde79f98 (20:27): I've always emulated &lt;figure&gt; with &lt;div&gt;, not &lt;span&gt;",
        "fd9ef1223e855714294498ebfde79f98 (20:27): so it seems weird to me to want &lt;figure&gt; as a child of &lt;p&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:27): I know that I've written plain-text where I have figures inside of paragraphs.",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:28): In fact, I do it regularly in technical emails, where I'll have a sample of code in the middle of a sentence.",
        "73eaf221abca1b8244e34b0b9e76ac46 (20:33): 1f8387eb43f131d7c309a90a4e36b5cb: maybe you sometimes also have a list or a table in the middle of a sentence?",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:34): 73eaf221abca1b8244e34b0b9e76ac46: Yes, but less commonly.  Presumably those have legacy constraints, though.",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:35): it gets icky when you do &lt;p&gt;&lt;figure&gt;&lt;ol&gt; though",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:35): or &lt;p&gt;&lt;figure&gt;&lt;table&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:35): Icky in precisely which way?  From a spec-writing standpoint, an implemention standpoint, or an authoring standpoint?",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:35): b8810fee2f4a71f849f3f7409546d1d9, so would those have to be disallowed? or do you want to make &lt;figure&gt; scoping which seems kind of hackish...",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:35): all",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:36): apart from the first, prolly",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:36): and the second does not matter much either",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:36): I don't know about authoring.  I mean, the fact that &lt;p&gt;&lt;ol&gt; wouldn't work but &lt;p&gt;&lt;figure&gt;&lt;ol&gt; might is *dumb*, but not a *problem*, per se.  It's just a stupid platform quirk.",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:38): it's not dumb, it's confusing as hell",
        "fd9ef1223e855714294498ebfde79f98 (20:40): the way &lt;p&gt; auto-closes is weird, but it's not going away. given that, it seems like new elements should behave like their closest-analog old elements. so &lt;section&gt; auto-closes &lt;p&gt; because &lt;div&gt; does, etc.",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:41): I prefer, when legacy behavior is retarded, to instead fix the behavior going forward rather than trying to remain consistent with the retarded behavior.  Foolish consistency, hobgoblin, little minds, etc.",
        "fd9ef1223e855714294498ebfde79f98 (20:42): we at least want the language to cohere. given that &lt;div&gt; and the other old &quot;block&quot; elements auto-close &lt;p&gt;, as an author I expect &lt;article&gt; to, and would be (even more) weirded out if it didn't.",
        "fd9ef1223e855714294498ebfde79f98 (20:43): I mean, I can at least sort-of make sense of the legacy auto-closing. If &lt;article&gt; didn't auto-close &lt;p&gt;, suddenly the weird-but-kinda-makes-sense auto-closing rules are even less predictable",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:47): I would not say it is &quot;retarded&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:48): and I also do not think that having half the features work one way and half the features work another way is a win",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:50): On the other hand, neither is having all of the features work the wrong way.",
        "4c681049601b3c374f1d2c0077c99049 (20:53): edb259c0e0038f38bb200bc20c8cbf7e: is window.media.matchMedium gone from the spec?",
        "4c681049601b3c374f1d2c0077c99049 (20:54): gone forever? :'(",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:57): euh no?",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:57): we just redesigned the feature",
        "4c681049601b3c374f1d2c0077c99049 (21:03): edb259c0e0038f38bb200bc20c8cbf7e: good good. where can i find the latest ?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:10): same draft?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:10): it's called matchMedia and lives on window now",
        "4c681049601b3c374f1d2c0077c99049 (21:10): thx",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:10): http://dev.w3.org/csswg/cssom-view/#dom-window-matchmedia",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:27): does someone have an example at hand of a utf-8 byte sequence of a 3 or 4-byte overlong form?",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:27): What's an &quot;overlong form&quot;?  Anything that's 3 or 4 bytes in utf-8?",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:27): &quot;a sequence that decodes to a value that should use a shorter sequence&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:28): Oh, gotcha.  So called because there are boundary conditions where a value could be validly written with or without the extra byte.  Ok.",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:28): 73eaf221abca1b8244e34b0b9e76ac46, they're easy to construct from http://en.wikipedia.org/wiki/UTF-8",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:29): Just look at the end of the ranges for any given byte-length.  Anything sufficiently close to the end should be capable of being rewritten as an overlong form, though I'd have to do some work to actually determine what &quot;sufficiently close&quot; is.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:29): Probably just the last one or two of each range.",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:30): e.g. E0 80 80 80",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:30): Or, no, you can construct an overlong from from any character, right?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:30): that latest 80 is out of range",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:31): there's also start of 5 and 6 byte sequences but in theory they ought to be treated as a single invalid byte now, I think",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:31): edb259c0e0038f38bb200bc20c8cbf7e: E0 is a 3-byte sequence. you gave a 4-byte sequence...",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:32): oh sorry",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:33): so there are 3/4 byte overlong forms?",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:34): i'm not sure",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:34): Would, say, F0 80 80 60 work?  (A space, expanded out to 4 bytes.)",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:34): 1f8387eb43f131d7c309a90a4e36b5cb: 60 isn't a continuation byte",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:35): Urgh, right.  Sorry.  I meant A0",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:36): thanks",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:36): seems webkit and gecko turn that into a u+fffd but opera doesn't",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): None",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): 0xC0 0x8A",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): 0xE0 0x80 0x8A",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): 0xF0 0x80 0x80 0x8A",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): 0xF8 0x80 0x80 0x80 0x8A",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): 0xFC 0x80 0x80 0x80 0x80 0x8A",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:37): via http://www.cl.cam.ac.uk/~mgk25/unicode.html",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:40): edb259c0e0038f38bb200bc20c8cbf7e: I'd prefer to make &lt;figure&gt; scoping, yes.",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:46): 73eaf221abca1b8244e34b0b9e76ac46, I think what you wrote there should be part of the &quot;web UTF-8&quot; spec (or just the UTF-8 spec if everyone can agree on decoding worldwide)",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:46): doesn't really make sense to me to handle UTF-8 decoding specifics as part of HTML5",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:46): edb259c0e0038f38bb200bc20c8cbf7e: sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:47): that would make my life so much easier",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:48): btw i'm officially on vacation for the next two weeks -- i'll be online some of the time but not always",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:48): it's also a problem for instance for responseText",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:49): ooh, have fun",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:49): starting today?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (21:54): so... Philip J?\u00a7genstedt has said in the past that he finds the volume of automated bug notifications on the public-html list and the a11y-tf list to be excessive",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:55): 69b0d3dfe919a6b860a9fac82de52a7e: have a good vacation",
        "a9b326df4e6da61c5b6f5e1058be83a2 (21:55): 69b0d3dfe919a6b860a9fac82de52a7e: yeah, enjoy your break",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:55): +1",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:56): I guess this means I'll have to file my pending mailing list questions as bugs in order to have them on file by the cutoff",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:57): a9b326df4e6da61c5b6f5e1058be83a2, maybe email should go to public-html once a bug is resolved/reopened?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:57): a9b326df4e6da61c5b6f5e1058be83a2, though then I guess spam that gets closed as INVALID will be emailed too...",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:57): hmm",
        "73eaf221abca1b8244e34b0b9e76ac46 (21:58): some bugs are resolved and reopened lots of times",
        "a9b326df4e6da61c5b6f5e1058be83a2 (21:59): edb259c0e0038f38bb200bc20c8cbf7e: I'm redirecting it to the issue-tracking list",
        "a9b326df4e6da61c5b6f5e1058be83a2 (21:59): which is where we should have had it going to begin with",
        "a9b326df4e6da61c5b6f5e1058be83a2 (22:00): having bug notifications going to a technical discussion list is an anti-pattern",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:00): ah, I'm not on that list",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:00): would prefer to have no bugmail on public-html",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:00): I think it's great that bugmail goes to public-webapps",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:01): but it's a very different kind of bugmail",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:01): much like it's a very different kind of email that goes to public-webapps",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:01): you know, technical debate :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:06): 8b3687499080633e1898fa1dd209ef81, 73eaf221abca1b8244e34b0b9e76ac46, gsnedders, for DOM Core you may not get listed as editor unless you somehow join the WG",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:06): I thought of adding something like this to the acknowledgments instead",
        "8b3687499080633e1898fa1dd209ef81 (22:07): Fine with me",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:07): me too",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:07): &quot;Many thanks to ms2ger, Simon Pieters, and Geoffrey Sneddon for editing the initial 80% of this specification.&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:08): s/ms2ger 8b3687499080633e1898fa1dd209ef81/ I guess",
        "8b3687499080633e1898fa1dd209ef81 (22:08): Please :)",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:24): wonder how i missed http://www.w3.org/Bugs/Public/show_bug.cgi?id=10343 in opera's impl",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:37): wonder how many people will file a bug about &quot;outlinee&quot;",
        "8b3687499080633e1898fa1dd209ef81 (22:39): Half a dozen so far?",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:40): there were probably half a dozen before bugzilla also",
        "a9b326df4e6da61c5b6f5e1058be83a2 (22:42): about http://hg.diveintohtml5.org/hgweb.cgi/rev/6067cc62b7016825817aa047cef52bc8ee8d7d5f",
        "a9b326df4e6da61c5b6f5e1058be83a2 (22:42): I thought that some versions of IE would go into quirks mode if you had anything before the doctype",
        "a9b326df4e6da61c5b6f5e1058be83a2 (22:42): is that not that case?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:43): comments, including bogus one like XML decl, are bad in IE6",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:44): I just discovered http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#script-processing-for",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:44): comments, including bogus one except the XML decl (if it's on one line, iirc), are bad in IE7-8 (dunno about 9)",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:44): that's kind of weird to only allow one value for this",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:45): 4d05dc3c4352ebe7593b536f2078cfe9: allow? &lt;script for&gt; is invalid",
        "8b3687499080633e1898fa1dd209ef81 (22:45): It's the only value that matters for compat",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:45): 73eaf221abca1b8244e34b0b9e76ac46: I mean you can only use it for window.onload",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:46): except it's not equivalent to window.onload at all",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:47): it's just a &quot;check&quot; to abort if those attributes use a different value ?",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:47): yeah",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:48): what's the point ?",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:48): compat",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:48): which browsers does that ?",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:49): gecko and webkit match the spec, i think, and ie ... i don't know what ie does exactly",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:49): opera ignores these currently",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:49): Webkit just added it (http://peter.sh/2010/09/last-week-asynchronous-script-execution-and-gpu-acceleration-by-default/)",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:49): the attributes that is",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:50): yeah, webkit found they needed it for compat a few months ago",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:50): which is why it's in the spec now",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:50): who did invented this ?",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:51): that's completely weird",
        "d3c9ec5d23498bc66cc43bac6408ab4d (22:51): apparently comedycentral.com was depending on it",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:51): i think ie invented it (but with real events), mozilla implemented a hack for compat with something that was ie-only",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:51): and now webkit copied mozilla and that's what's in hte spec",
        "d3c9ec5d23498bc66cc43bac6408ab4d (22:52): https://bugs.webkit.org/show_bug.cgi?id=45310#c8",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:52): that's a great exemple of how web content is fucked up",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:53): you'll get used to it :)",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:53): well, I think that's the weirdest one I've seen",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:54): you don't think &lt;table&gt;test -&gt; test&lt;table&gt; is weird?",
        "edb259c0e0038f38bb200bc20c8cbf7e (22:54): or &lt;image&gt; -&gt; &lt;img&gt;",
        "4d05dc3c4352ebe7593b536f2078cfe9 (22:54): not that much",
        "73eaf221abca1b8244e34b0b9e76ac46 (22:56): should we replace 'This section is non-normative' with 'This section has no conformance requirements'?",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:05): yeah maybe",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:05): conformance requirements is somewhat clearer than non-normative",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:06): i remember at first when i read specs, i didn't understand what normative/informative/non-normative meant",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:07): same, i recall being somewhat proud when I got it :)",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:27): i remember thinking it was stupid terminology :P",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:28): heh",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:29): I guess DOM Core does not need to say much about baseURI",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:29): hmm, it's on Node again o_O",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:29): oh, and it's even readonly...",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:36): iirc baseURI needs to be on Node, or at least Element",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:37): Element/Document would make sense to me",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:39): I guess they should be set at the markup language level",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:39): so DOM Core just needs to provide some hooks somehow",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:44): DOM3Core doesn't even define baseURI in detail for the various node types... I guess it could just inherit, but what about DocumentFragment?",
        "73eaf221abca1b8244e34b0b9e76ac46 (23:44): edb259c0e0038f38bb200bc20c8cbf7e: i didn't realize DOMException inherited from Error when i added name and message to the spec",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:45): k",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:46): I filed the relevant bugs on Web IDL to redo the way we do exceptions",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:01): Hmm, as of last update http://aryeh.name/tests/reflection.html gives a sad tab in Chrome dev.  :("
    ],
    "person_ids": [
        "fd9ef1223e855714294498ebfde79f98",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "4c681049601b3c374f1d2c0077c99049",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "8b3687499080633e1898fa1dd209ef81",
        "4d05dc3c4352ebe7593b536f2078cfe9",
        "d3c9ec5d23498bc66cc43bac6408ab4d",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}