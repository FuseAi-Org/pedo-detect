{
    "id": "f3d2006432ddb0474cea9decdb887da4",
    "messages": [
        "a3f19f90edf0a0893c7847d08016abe3 (10:48): 227a9a17d1db3f8e5c71a150345fb2a6, were load, error, abort, etc. UIEvents before?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:50): a3f19f90edf0a0893c7847d08016abe3: they all used UIEvent or Event before, yes... I didn't change the definitions, just the location in the spec",
        "a3f19f90edf0a0893c7847d08016abe3 (10:51): ok",
        "a3f19f90edf0a0893c7847d08016abe3 (10:51): i wouldn't have guessed that load would be a UIEvent",
        "a3f19f90edf0a0893c7847d08016abe3 (10:51): s/would/could/",
        "a3f19f90edf0a0893c7847d08016abe3 (10:51): when would that happen?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:53): not sure, actually...",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:53): I could just as happily move it to Event interface",
        "a3f19f90edf0a0893c7847d08016abe3 (10:53): it would be good to define exactly when the view attribute is in use, for those that say &quot;may be in use&quot;",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:54): they were in this weird non-interface category before",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:54): yeah, I was trying to figure that out yesterday... what does that mean?",
        "a3f19f90edf0a0893c7847d08016abe3 (10:55): they weren't in the Basic Events category?",
        "a3f19f90edf0a0893c7847d08016abe3 (10:55): (which uses Event?)",
        "a3f19f90edf0a0893c7847d08016abe3 (10:55): s/category/module/, or whatever",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:59): http://dev.w3.org/cvsweb/~checkout~/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html?rev=1.93&amp;content-type=text/html;%20charset=iso-8859-1",
        "227a9a17d1db3f8e5c71a150345fb2a6 (10:59): that's the version before I changed it",
        "a3f19f90edf0a0893c7847d08016abe3 (11:00): not sure what you mean by non-interface category",
        "a3f19f90edf0a0893c7847d08016abe3 (11:00): is it that &quot;load&quot; was in the Basic Events module, but sometimes used Event and other times UIEvent?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:01): look at the TOC",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:02): all the other events were organized under their interface... the Basic Events module was just free-floating",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:02): it offended my sense of architectural purity!",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:03): also, all this &quot;module&quot; stuff seems to simply be overhead",
        "a3f19f90edf0a0893c7847d08016abe3 (11:03): you mean the Event interface wasn't defined in the 5.2.2 Basic Event Types?",
        "a3f19f90edf0a0893c7847d08016abe3 (11:03): (i can't see a TOC entry for the event interfaces in section 5)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:03): I'm trying to simplify the spec, reduce the number of extraneous concepts",
        "a3f19f90edf0a0893c7847d08016abe3 (11:04): sure",
        "a3f19f90edf0a0893c7847d08016abe3 (11:04): though note the module stuff implies feature string stuff",
        "a3f19f90edf0a0893c7847d08016abe3 (11:04): hasFeature(&quot;UIEvents&quot;, &quot;3.0&quot;), etc.",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:04): no, Event interface is defined in 4. Basic Event Interfaces",
        "a3f19f90edf0a0893c7847d08016abe3 (11:05): 227a9a17d1db3f8e5c71a150345fb2a6, ok",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:05): yeah, but we all know that's useless at that level of detail",
        "a3f19f90edf0a0893c7847d08016abe3 (11:05): though as i see it Event needs to be defined early on because other interfaces reference it",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:05): I'm really tempted to define a feature string for each event type",
        "a3f19f90edf0a0893c7847d08016abe3 (11:05): (for ease of reading)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:05): yes",
        "a3f19f90edf0a0893c7847d08016abe3 (11:06): feature string for event type =&gt; canDispatch?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:06): I want to jettison canDispatch",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:06): it's not implemented",
        "a3f19f90edf0a0893c7847d08016abe3 (11:06): yes i notice it is red",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:06): whereas hasFeature is",
        "a3f19f90edf0a0893c7847d08016abe3 (11:07): just saying that feature strings for event types would be equivalent functionality to canDispatch",
        "a3f19f90edf0a0893c7847d08016abe3 (11:07): i assume",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:07): right, same sort of thing... just as useless",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:07): well... of limited use",
        "a3f19f90edf0a0893c7847d08016abe3 (11:07): heh",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:07): it is somewhat useful",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:08): but... well, lots of false positives and false negatives",
        "a3f19f90edf0a0893c7847d08016abe3 (11:08): anyway if you want to drop the concept of modules, go ahead :)",
        "a3f19f90edf0a0893c7847d08016abe3 (11:08): (underlying specs like DOM Core still use them... but...)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:09): I could simply say that each event interface is a module",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:09): which includes all the events that use that interface",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:09): easy to understand",
        "a3f19f90edf0a0893c7847d08016abe3 (11:09): except for &quot;load&quot; which uses either Event or UIEvent, i suppose :)",
        "a3f19f90edf0a0893c7847d08016abe3 (11:10): still i'm unsure about when load would use UIEvent",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:10): a few of those, actually",
        "a3f19f90edf0a0893c7847d08016abe3 (11:10): that doesn't concord with the table in 5.1.1 anyway",
        "a3f19f90edf0a0893c7847d08016abe3 (11:10): which just says Event",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:10): yeah",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:11): I meant to change that, but first I want to figure out why some use both/either",
        "a3f19f90edf0a0893c7847d08016abe3 (11:11): yeah so if you can define exactly what it means for a context attribute to be &quot;in use&quot;, that'd be good",
        "a3f19f90edf0a0893c7847d08016abe3 (11:11): i've always found that phrase to be a bit wishy washy",
        "a3f19f90edf0a0893c7847d08016abe3 (11:11): i'll review the spec on the plane on friday btw",
        "a3f19f90edf0a0893c7847d08016abe3 (11:12): oh, and some of the images' arrowheads have gone wonky",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:13): reload the page... the PNG has wonky arrowheads",
        "dd988cfd769c9f7fbd795a0f5da8e751 (11:14): wonders if anyone knows if marcos is around somewhere",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:14): but the SVG is lovely",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:14): hi, dd988cfd769c9f7fbd795a0f5da8e751",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:14): haven't seen him",
        "dd988cfd769c9f7fbd795a0f5da8e751 (11:14): didn't mean to interrupt :)",
        "dd988cfd769c9f7fbd795a0f5da8e751 (11:14): ok, thx",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:15): a3f19f90edf0a0893c7847d08016abe3: that UIEvent/Event thing seems to be something that Bj??rn might have put into the spec",
        "a3f19f90edf0a0893c7847d08016abe3 (11:15): ah the arrowheads are in place now",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:15): but I can't blame him for &quot;is in use&quot;",
        "a3f19f90edf0a0893c7847d08016abe3 (11:15): though... they look like shoe horns :)",
        "a3f19f90edf0a0893c7847d08016abe3 (11:15): right",
        "a3f19f90edf0a0893c7847d08016abe3 (11:16): maybe in the definition for, e.g. UIEvent.view, it would say &quot;If defined to be in use, has the value blah.  Otherwise, has the value null.&quot;",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:16): they are from the symbol for CONTAINS AS MEMBER",
        "a3f19f90edf0a0893c7847d08016abe3 (11:16): ah i see",
        "a3f19f90edf0a0893c7847d08016abe3 (11:16): and i meant horse shoe, not shoe horn =P",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:16): I was being clever",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:17): yeah, I wondered what kind of shoes aussies wear...",
        "a3f19f90edf0a0893c7847d08016abe3 (11:17): thongs of course",
        "a3f19f90edf0a0893c7847d08016abe3 (11:17): you know that",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:17): ah, naturally!",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:18): wonders if aussie shoes ever ride up the crack of their toes...",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:19): Bj??rn made a good start at reorganizing the spec into some semblance of order... the W3C Note version is rubbish",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:19): very poorly organized",
        "a3f19f90edf0a0893c7847d08016abe3 (11:20): and i like the style used for the event descriptions",
        "a3f19f90edf0a0893c7847d08016abe3 (11:20): with the gold",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:20): http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:20): yes",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:20): you're going to help me with the Web Idolizing, right?",
        "a3f19f90edf0a0893c7847d08016abe3 (11:20): yeah",
        "a3f19f90edf0a0893c7847d08016abe3 (11:21): bow down before me?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:21): erm...",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:22): so, Garrett successfully drew attention away from your proposal to deprecate the interface-specific Init*Event methods",
        "a3f19f90edf0a0893c7847d08016abe3 (11:22): although it seems he did also suggest it",
        "a3f19f90edf0a0893c7847d08016abe3 (11:22): well, i didn't get a url out of him",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:22): not really, actually",
        "a3f19f90edf0a0893c7847d08016abe3 (11:22): but i suppose he did",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:22): his proposal was rather different",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:23): same motivation, different mechanism",
        "a3f19f90edf0a0893c7847d08016abe3 (11:23): oh with the object literal syntax, yeah",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:23): right",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:23): and the diversion into discussion of feature detection... sigh",
        "a3f19f90edf0a0893c7847d08016abe3 (11:24): i don't really see the problem with making the attributes writable, and leaving the existing init methods in",
        "a3f19f90edf0a0893c7847d08016abe3 (11:24): existing content will continue to work",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:25): so, maybe I simply need to make good on the threat of creating a generic event initializer and saying you can write to the attributes until you dispatch the event... then somebody will have to comment",
        "a3f19f90edf0a0893c7847d08016abe3 (11:25): new content can either use the init methods that are still there, or if they need to initialize a new attribute on an event, then by then the implementation will support writable attributes",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:25): yup",
        "a3f19f90edf0a0893c7847d08016abe3 (11:25): why do we need a generic one?",
        "a3f19f90edf0a0893c7847d08016abe3 (11:25): instead of just assigning to attributes?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:27): sorry, I just meant use initEvent http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html?rev=1.94#events-event-type-initEvent",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:27): it's late here",
        "a3f19f90edf0a0893c7847d08016abe3 (11:28): that's fine by me",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:28): maybe I should just do that... say events attributes are writable until dispatch...",
        "a3f19f90edf0a0893c7847d08016abe3 (11:28): i reckon createEvent() should explain how it initializes the attributes on the object it creates",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:29): oh, right!",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:29): brain is fuzzy...",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:29): yes, quite right",
        "a3f19f90edf0a0893c7847d08016abe3 (11:30): &quot;NNBSP&quot; in the keyboard diagram",
        "a3f19f90edf0a0893c7847d08016abe3 (11:30): or is that deliberate?",
        "a3f19f90edf0a0893c7847d08016abe3 (11:33): gtg out for dinner, later",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:33): U+202F narrow no-break space",
        "227a9a17d1db3f8e5c71a150345fb2a6 (11:33): later"
    ],
    "person_ids": [
        "a3f19f90edf0a0893c7847d08016abe3",
        "227a9a17d1db3f8e5c71a150345fb2a6",
        "dd988cfd769c9f7fbd795a0f5da8e751"
    ]
}