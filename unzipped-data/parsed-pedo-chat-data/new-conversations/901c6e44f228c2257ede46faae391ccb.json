{
    "id": "901c6e44f228c2257ede46faae391ccb",
    "messages": [
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:00): lo silver",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:00): are there any common practices for creating a multi-dimensional array out of a one-dimensional (with parent-ids)?",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:00): timcn: Umm huh?",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:00): R -&gt; R^2 ?",
        "5c3b04b8e52b58b75f238b41de1f4a4c (02:01): it's a carrot.  you feed them to horses.",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:01): uhm",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:01): I don't know how to describe it easier",
        "fbd47b82ca24de7c14f5ee00799a034b (02:01): timcn, I don't understand exactly your question",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:01): okay, I'll try to explain further",
        "a04a8ae2fda2893ccde3b7c6a1c9aea8 (02:02): timcn: Before and after examples would help.",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:02): we at Drupal have a forms API where array indices beginning with # are properties, the rest are children of the 09c2a312ca0311b5e24340fe8f827077ent item",
        "fbd47b82ca24de7c14f5ee00799a034b (02:02): aha",
        "fbd47b82ca24de7c14f5ee00799a034b (02:02): okay this is possible",
        "ea819a076e185d182d2fa84862d2dbe5 (02:02): hm, '/&lt;style&gt;([.\\n]*)&lt;\\/style&gt;/' doesn't seem to work.... preg_replace('/&lt;style&gt;([.\\n]*)&lt;\\/style&gt;/','',$html); should work I think",
        "fbd47b82ca24de7c14f5ee00799a034b (02:03): timcn, you have to travel through your array...",
        "fbd47b82ca24de7c14f5ee00799a034b (02:03): timcn, and always keep the parent item stored",
        "fbd47b82ca24de7c14f5ee00799a034b (02:03): timcn, foreach ($array as $item) {",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:03): I know what a foreach loop is",
        "b8a6115af063ca6ca11bb622b8658213 (02:03): or do you?",
        "fbd47b82ca24de7c14f5ee00799a034b (02:03): timcn, if (substr($item, 0, 1) == '#') { ... set parent item here ... } else { $targetarray[ $parentitem ][ $property ] = $value }",
        "fbd47b82ca24de7c14f5ee00799a034b (02:03): timcn, }",
        "ea819a076e185d182d2fa84862d2dbe5 (02:04): dionyziz: were you and/are you involved with Node IRC?",
        "fbd47b82ca24de7c14f5ee00799a034b (02:04): timcn, never doubted that you did :)",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:04): I have for example an array like that: array(1 =&gt; array('#title' =&gt; 'foo', '#parent =&gt; 2), 2 =&gt; array('#title' =&gt; 'bar",
        "fbd47b82ca24de7c14f5ee00799a034b (02:04): Ktron|work, yes hey :)",
        "fbd47b82ca24de7c14f5ee00799a034b (02:04): Ktron|work, this is funny",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:04): its more complicated than that, dionyziz",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:04): now, 1 is a child of 2",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:04): hi.",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:04): Does PHP have a function similar to the tool 'dig'?",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:05): it should result in that: array(2 =&gt; array('#title' =&gt; 'bar', 1 =&gt; array('#title' =&gt; 'foo', '#parent =&gt; 2));",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:05): dan__t: sort of, dig does a lot, what specifically are you looking for",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:05): thus, 1 being inside the 2-array",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:05): Er, I want to be able to pull the nameservers for a given domain.",
        "a04a8ae2fda2893ccde3b7c6a1c9aea8 (02:05): dan__t: <a href=\"http://us2.php.net/manual/en/ref.network.php\">http://us2.php.net/manual/en/ref.network.php</a>",
        "fbd47b82ca24de7c14f5ee00799a034b (02:05): timcn, I see...",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:06): dan__t: dns_get_record",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:06): omfg.",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:06): amazing.",
        "fbd47b82ca24de7c14f5ee00799a034b (02:06): timcn, I think the best way to do that would be using an OOP approach",
        "fbd47b82ca24de7c14f5ee00799a034b (02:06): timcn, have a class where you can -&gt;AttachChild",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:06): Thank you very much.",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:06): dionyziz: unfortunately, that's impossible as I'm tied to arrays",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): timcn, you can use the classes as an intermediate step...",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): timcn, arrays --&gt; classes --&gt; arrays",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): timcn, so the input and output are arrays",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:07): hmm",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): timcn, my suggestion would be to have an array of class instances...",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:07): that's pretty ineffective",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): $allitems[ $yourindex ] = $yourinstance",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:07): oop is murder",
        "fbd47b82ca24de7c14f5ee00799a034b (02:07): then you can do $allitems[ $yourindex ]-&gt;AttachChild( $someotherinstance )",
        "fbd47b82ca24de7c14f5ee00799a034b (02:08): timcn, well, as a first idea it works :P",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:08): dionyziz: also, I don't see the advantage over arrays",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:08): with arrays, I can use array_merge()",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:08): or just +=",
        "fbd47b82ca24de7c14f5ee00799a034b (02:08): timcn, do you have a WORKING way do to it with arrays?",
        "fbd47b82ca24de7c14f5ee00799a034b (02:08): to have infinite depth?",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:08): currently not",
        "fbd47b82ca24de7c14f5ee00799a034b (02:08): let's say that item #1 has more children",
        "fbd47b82ca24de7c14f5ee00799a034b (02:08): ;P",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:09): converting a nested tree into a multidimensional array is pretty similar to my problem",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:10): timcn: In which language?",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:10): An implmentation of a nested tree in php can be a multidimensional array",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:10): err, what do you mean, Touqen?",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:11): So you wouldn't really be converting anything",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:11): I mean the SQL storage model of a nested tree",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:11): Regardless, So what you want to do is take your relatively flat tree and give it some volume.",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:11): yes",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:12): Okay, so why not just iterate over your flat tree, check each nodes parent and add it to an array which is associated with that parent.",
        "fbd47b82ca24de7c14f5ee00799a034b (02:12): Touqen, good approach",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca (02:20): I think I'll better sleep a night over it",
        "4a9e085bf2065dd14593d55e577d3184 (02:21): php suxx ! get J2EE or ASP.NET",
        "6e106481d598b8d005acff1cf2594ce8 (02:22): Zickos: err ok...",
        "09c2a312ca0311b5e24340fe8f827077 (02:24): J2EE maybe, but no ASP for me... well he did say .NET though :P",
        "ef56bf5216266bd67f77415aa6603cd2 (02:25): Someone explain to me _WHY_ when i have error_reporting(E_ALL); as the 1st line in my program does it still just parse a blank white screen?",
        "f99141a8f476bd3d435598f1f4f4e778 (02:25): I wanted to make a download.php script, so you I can download things from &quot;non-web&quot; folders (and this isn't as unsecure as it sounds).  However, I am unsure where I should start googling.  If someone has a pointer it would be appriciated.",
        "5aff3ec8f077733c534713f9206a68e7 (02:25): Can you call an class with an array ?",
        "ef56bf5216266bd67f77415aa6603cd2 (02:25): cypherus: no",
        "0036855f13c7d14a42181d35bd2c398a (02:25): hello",
        "ef56bf5216266bd67f77415aa6603cd2 (02:26): cypherus: wait... what do you mean?",
        "5aff3ec8f077733c534713f9206a68e7 (02:26): $this-&gt;test['something'] = &quot;;",
        "ef56bf5216266bd67f77415aa6603cd2 (02:26): cypherus: definatly if $this-&gt;test is an array...",
        "0036855f13c7d14a42181d35bd2c398a (02:26): how can i get xslt support in php 5.1?",
        "09c2a312ca0311b5e24340fe8f827077 (02:27): dudes: Take a look at the source code of existing ones.",
        "8467bec5a51c2b24f7d97a6882fb0452 (02:27): ./configure --help will show you, no?",
        "ef56bf5216266bd67f77415aa6603cd2 (02:27): cypherus: you can do public $array = array('one' =&gt; 1 ,'two' =&gt; 2 ,'three' =&gt; 3); function __construct(){ print $this-&gt;array-&gt;one; }",
        "f99141a8f476bd3d435598f1f4f4e778 (02:27): kuja - I'm not sure where I would start looking =[",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:27): crap, i could do it but I've got to go home :/",
        "09c2a312ca0311b5e24340fe8f827077 (02:27): dudes: Then you're probably not ready to make it.",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:27): timcn: Try a stack based approach though.",
        "ef56bf5216266bd67f77415aa6603cd2 (02:28): I'm spending more time debugging this stupid white screen then it is worth my frickin time!",
        "f99141a8f476bd3d435598f1f4f4e778 (02:28): kuja - I can write php, I just read stuff off  the net and put the pieces together.  (I normally write in C++).",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:28): Don't hodgepodge.",
        "82653c61d3ae4fa4bb624e7b24bfdb1a (02:29): Especially if you don't understand it.",
        "5aff3ec8f077733c534713f9206a68e7 (02:29): lith, ok.. thanks!",
        "09c2a312ca0311b5e24340fe8f827077 (02:29): Any 6 year old can write PHP, but that doesn't mean you know it.",
        "ef56bf5216266bd67f77415aa6603cd2 (02:29): hodgebodge?? ;) I've never heard that used in a practical sense",
        "09c2a312ca0311b5e24340fe8f827077 (02:29): If you don't even know where to start looking for such a simple script as that, then you're obviously not ready to make it.",
        "0036855f13c7d14a42181d35bd2c398a (02:29): well, i got libxml2 though :/ only no xslt listed in phpifno"
    ],
    "person_ids": [
        "82653c61d3ae4fa4bb624e7b24bfdb1a",
        "8cdc5a6cc2fdf8fa0a77f92032acf6ca",
        "5c3b04b8e52b58b75f238b41de1f4a4c",
        "fbd47b82ca24de7c14f5ee00799a034b",
        "a04a8ae2fda2893ccde3b7c6a1c9aea8",
        "ea819a076e185d182d2fa84862d2dbe5",
        "b8a6115af063ca6ca11bb622b8658213",
        "8467bec5a51c2b24f7d97a6882fb0452",
        "4a9e085bf2065dd14593d55e577d3184",
        "6e106481d598b8d005acff1cf2594ce8",
        "09c2a312ca0311b5e24340fe8f827077",
        "ef56bf5216266bd67f77415aa6603cd2",
        "f99141a8f476bd3d435598f1f4f4e778",
        "5aff3ec8f077733c534713f9206a68e7",
        "0036855f13c7d14a42181d35bd2c398a"
    ]
}