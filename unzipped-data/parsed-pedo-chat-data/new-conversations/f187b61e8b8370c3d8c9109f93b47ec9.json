{
    "id": "f187b61e8b8370c3d8c9109f93b47ec9",
    "messages": [
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:03): b8810fee2f4a71f849f3f7409546d1d9: dunno if you're around but I wanted to ask if there's a reason why for the V.nu site you aren't serving the static files from jetty",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:04): I mean the style.css and script.js files",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:04): a9b326df4e6da61c5b6f5e1058be83a2: this way, I have less need to track Jetty security updates and less need to figure out how to make Jetty serve static files when V.nu has its own main()",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:04): I've forgotten to update script.js, haven't I?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:05): b8810fee2f4a71f849f3f7409546d1d9: no no",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:05): I haven't landed the new code yet so you don't need to update yet",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:05): so I know how to make jetty serve static files",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:05): a9b326df4e6da61c5b6f5e1058be83a2: I've considered reading style.css and script.js to RAM and serving them from the servlet, though. I just haven't gotten around to it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:05): I have the code working in my workspace",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:06): OK",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:06): that would be a better solution I guess",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:06): a9b326df4e6da61c5b6f5e1058be83a2: I'm most worried about Jetty's generic file serving serving other files accidentally",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:07): yeah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:07): well, the reason I'm looking into this is that for the w3c instance I would really like to have everything in one place",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:07): a9b326df4e6da61c5b6f5e1058be83a2: I'm OK with having the code in the repo",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:08): a9b326df4e6da61c5b6f5e1058be83a2: not sure if I want it enabled on the V.nu instance without seeing the code",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:08): yeah, sure, understood",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:08): and I can put it under the w3c flag I think",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:08): a9b326df4e6da61c5b6f5e1058be83a2: ok.",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:08): all of it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:08): I'll get you a patch",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:09): or more to the point, I don't want it enabled on V.nu without seeing the Jetty guts it calls",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:09): yup",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:09): understood",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:10): but now I'm wondering if it's better just to pursue what you mentioned about reading style.css and script.js to RAM and serving them from the servlet",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:15): b8810fee2f4a71f849f3f7409546d1d9: btw, is there a way I can detect within the code what path jetty is running under?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:15): so that I don't have to use absolute paths",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:16): right now I'm just feeding it the path through a system property",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:19): a9b326df4e6da61c5b6f5e1058be83a2: I don't know. There might be a magic system property for it, but I don't see a dedicated JDK API call for it",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:20): ok",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:23): b8810fee2f4a71f849f3f7409546d1d9: what code would I need to touch if I wanted to implement reading style.css and script.js to RAM and serving them from the servlet?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:25): a9b326df4e6da61c5b6f5e1058be83a2: nu.validator.servlet.VerifierServlet",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:25): OK",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:27): ah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:27): b8810fee2f4a71f849f3f7409546d1d9: doGet?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:28): a9b326df4e6da61c5b6f5e1058be83a2: yeah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:28): OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:28): a9b326df4e6da61c5b6f5e1058be83a2: you could read the files to RAM from the static initializer",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:29): a9b326df4e6da61c5b6f5e1058be83a2: it's dirty, but there's already IO from static initializer in the app",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): I see",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:33): b8810fee2f4a71f849f3f7409546d1d9: so the code is doing this already for serving /robots.txt right?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:33): a9b326df4e6da61c5b6f5e1058be83a2: yeah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:34): could this be done for serving image files as well?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:34): a9b326df4e6da61c5b6f5e1058be83a2: sure",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:36): b8810fee2f4a71f849f3f7409546d1d9: OK, well, if you prefer I can write a patch that does it this way instead of using the jetty static-file serving stuff",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:36): a9b326df4e6da61c5b6f5e1058be83a2: that would be awesome",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:36): will do then",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:36): thanks",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:38): b8810fee2f4a71f849f3f7409546d1d9: to be clear, we still need to files in the repo and the code reads them in from the filesystem, right?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:38): if so, my next question is, how do I get the path to the directory they're in?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:39): a9b326df4e6da61c5b6f5e1058be83a2: I'd read them from the file system to a byte[] from static {} and then serve them from RAM the way robots.txt is served from RAM",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:39): yup, OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:39): a9b326df4e6da61c5b6f5e1058be83a2: hmm. how are the local entities located...",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:39): ah yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:39): oh. they come from within a JAR",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:39): yup",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:39): I could do the same for these I guess",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): so one option would be moving the files so that they get baked in a JAR",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): yeah",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:40): I mean, just use that same mechnaism",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:40): OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): makes sense",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:40): yup",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:40): OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): hmm. though a JAR *might* make the length of the file unknown",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): oh",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:41): which will result in some reallocation and copying of byte[] if you can't allocate the right-sized byte[] in advance",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): oh",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): why is that not also a problem for the existing files that get JARed up?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:41): oh",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:42): I see what you mean",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:42): yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:42): they don't get read into a file-length byte[]",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:42): right"
    ],
    "person_ids": [
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "b8810fee2f4a71f849f3f7409546d1d9"
    ]
}