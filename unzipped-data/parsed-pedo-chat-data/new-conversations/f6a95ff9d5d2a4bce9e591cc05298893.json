{
    "id": "f6a95ff9d5d2a4bce9e591cc05298893",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (03:19): http://canvex.lazyilluminati.com/tests/tests/results.html - now hopefully updated to match the spec again (though not checked very carefully so there may be bugs), plus WebKit data",
        "ab7faae5d7b250ea8606486575f8f79c (03:20): (which was quite painful to collect - I need a much better way of gathering results when the browser doesn't provide getImageData to do it automatically...)",
        "73eaf221abca1b8244e34b0b9e76ac46 (03:22): ab7faae5d7b250ea8606486575f8f79c: wow, nice work",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): ab7faae5d7b250ea8606486575f8f79c: that's why you want tests that you can determine the pass/fail result for in 200ms or less",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:23): ab7faae5d7b250ea8606486575f8f79c: that way collecting results is just a matter of having a page load every test in a row, with you hitting &quot;y&quot; or &quot;n&quot; for each one",
        "ab7faae5d7b250ea8606486575f8f79c (03:24): 69b0d3dfe919a6b860a9fac82de52a7e: Determining the results is easy - the problem is I've currently just got little checkboxes for each one, and clicking all those is annoying when a computer should be able to do the job much faster :-)",
        "ab7faae5d7b250ea8606486575f8f79c (03:25): although actually the biggest problem was that after the first 180 or so, Safari stopped responding to any interaction with the form, so I had to select the rest of the checkboxes via javascript: in the address bar",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:27): heh",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:27): thinks it takes more than 200ms to determine if those tests have passed or not, though",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:27): e.g. http://canvex.lazyilluminati.com/tests/tests/initial.reset.security.html",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:28): it has loads of text",
        "ab7faae5d7b250ea8606486575f8f79c (03:28): Oh, those ones are easy because it does it automatically and colours the background",
        "ab7faae5d7b250ea8606486575f8f79c (03:28): so the text can just be ignored",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:28): yeah but you have to know that",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:28): QA people go through tens of thousands of tests, they can't know them all :-)",
        "ab7faae5d7b250ea8606486575f8f79c (03:29): For the ones where the outcome can be determined automatically, the QA people shouldn't even see them since it's not a good use of their time",
        "ab7faae5d7b250ea8606486575f8f79c (03:29): ...but that means I need a better way of reporting the results and asking for human confirmation when necessary",
        "73eaf221abca1b8244e34b0b9e76ac46 (03:49): would love to have elastomania implemented in &lt;canvas&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (03:52): http://canvex.lazyilluminati.com/tests/tests/minimal.initial.reset.security.html - is that version bare enough now? :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:52): still has three links :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:53): see http://www.w3.org/Style/CSS/Test/guidelines.html",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:53): though ignore the filename crap",
        "ab7faae5d7b250ea8606486575f8f79c (03:54): (http://canvex.lazyilluminati.com/tests/tests/minimal.toDataURL.complexcolours.html when it can't determine the result by itself)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:54): those are a bit complex",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:54): the general colour scheme that test cases use is described somewhere, too, hold on",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): oh it's in that same file http://www.w3.org/Style/CSS/Test/guidelines.html#color",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): you never want to use a green colour when it's not a pass",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): never red when it's not a fail",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): (red trumps green if both are there)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): you want blue when the tester has to look closer",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:55): navy, specifically",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): also, the colours should geenerally be #008000 #ff0000 #00ff00 and #000080",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): many qa people in browser dev are basically hardwired to act to those colours now",
        "ab7faae5d7b250ea8606486575f8f79c (03:56): It's sometimes hard to be specific about colours when the test is intentionally trying to test multiple colours, though",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): even something slightly outside that range causes them untold amount of time confused :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:56): there are tests where that doesn't apply",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:57): but they're rare",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:57): see e.g. http://www.hixie.ch/tests/adhoc/html/canvas/",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:57): anyway gotta go",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:57): ttyl"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "69b0d3dfe919a6b860a9fac82de52a7e"
    ]
}