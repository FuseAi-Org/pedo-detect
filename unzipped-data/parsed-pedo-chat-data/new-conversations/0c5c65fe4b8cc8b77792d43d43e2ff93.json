{
    "id": "0c5c65fe4b8cc8b77792d43d43e2ff93",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): hahaha http://ishtml5readyyet.com/ has been updated to use new HTML elements",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): and has a very pretty countdown clock",
        "d6e292711389fc8c3d399cd640fc8a40 (09:11): 69b0d3dfe919a6b860a9fac82de52a7e: I have another change request :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:13): d6e292711389fc8c3d399cd640fc8a40: shoot",
        "d6e292711389fc8c3d399cd640fc8a40 (09:13): 69b0d3dfe919a6b860a9fac82de52a7e: can we rename the &quot;web developer edition&quot; text to read &quot;A technical specification for web developers&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:14): you betcha",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:14): lowercase &quot;w&quot; in &quot;web&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:14): not &quot;Web&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:14): I always think of Web as the proper noun name for the Web",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:14): like the Internet as opposed to one of the many possible internets",
        "d6e292711389fc8c3d399cd640fc8a40 (09:15): 69b0d3dfe919a6b860a9fac82de52a7e: we can do upper case :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:16): regenning",
        "d6e292711389fc8c3d399cd640fc8a40 (09:16): 69b0d3dfe919a6b860a9fac82de52a7e: &lt;3's floating towards you",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:17): it's up",
        "d6e292711389fc8c3d399cd640fc8a40 (09:17): legend",
        "d6e292711389fc8c3d399cd640fc8a40 (09:17): did you make the chrome frame change?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:20): d6e292711389fc8c3d399cd640fc8a40: not yet, will do that momentarily",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:21): holy cow, someone actually used &lt;canvas&gt; to do a fractal. with web workers in the background for the calculation! http://juliamap.googlelabs.com/#ll=29.152261,-81.051636&amp;z=10&amp;p=ffffff,ffffff,ffffff,ffffff,ff0000,ffff00,ffff00,ff00,ff&amp;f=mandelbrot",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:21): sweet",
        "d6e292711389fc8c3d399cd640fc8a40 (09:22): 69b0d3dfe919a6b860a9fac82de52a7e: see your secret messages?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:29): can someone explain to me why the rows on http://www.whatwg.org/specs/web-apps/current-work/complete/webappapis.html#base64-table are not lined up?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:30): chrome",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:30): using -webkit-column-stuff",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:38): AryehGregor: atob is in",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:39): AryehGregor: i made a number of minor editorial changes to your text to make it fit the spec's style, you may be interested in comparing the two for your edification :-)",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:02): ISSUE-151 o_O",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:02): Maybe we should recharter too to cut all cooperation",
        "a924fb58d2c25874322f4e5126f608b9 (10:04): So issues are still being created without any kind of filtering?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:04): Anything goes it seems",
        "d6e292711389fc8c3d399cd640fc8a40 (10:04): 69b0d3dfe919a6b860a9fac82de52a7e: what do you think about a applicationCache.canceUpdate() method?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:08): 69b0d3dfe919a6b860a9fac82de52a7e: the DOM isn't a Unicode-clean environment",
        "b25b6b77a0087ff8385941e5545d32ea (10:25): b8810fee2f4a71f849f3f7409546d1d9: What do you think about innerHTML? I presume you think the same?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:25): b25b6b77a0087ff8385941e5545d32ea: yes",
        "b25b6b77a0087ff8385941e5545d32ea (10:25): Conceptually I don't think the innerHTML case is so cleancut",
        "b25b6b77a0087ff8385941e5545d32ea (10:26): I mean, document.write just adds bytes to the input stream, so it isn't surprising if you get the bytes out that you put in",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:26): conceptually, I think the DOM and JavaScript form a system of UTF-16 code units and layout has to deal with unpaired surrogates",
        "b25b6b77a0087ff8385941e5545d32ea (10:27): But conceptually innerHTML runs the HTML parser on the input and if you want to reuse the full parser pipeline you naturally get the unpaired surrogate handling",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:27): b25b6b77a0087ff8385941e5545d32ea: existing browsers don't seem to use the full pipeline",
        "b25b6b77a0087ff8385941e5545d32ea (10:29): That might be a winning argument. Nevertheless it is unclear to me that the behaviour makes sense",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:29): points to topic",
        "b25b6b77a0087ff8385941e5545d32ea (10:29): Well yes",
        "b25b6b77a0087ff8385941e5545d32ea (10:30): It is less stupiod than, say, innerText, I will give you that",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:30): topic really is a good one :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:30): I don't look forward to explaining to smaug and others who've spent time optimizing innerHTML that I landed something that makes it slower so that we can be theoretically cleaner in the Unicode sense",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:30): especially when we can't make JS strings enforce UTF-16 well-formedness, because people use JS strings for binary data",
        "b25b6b77a0087ff8385941e5545d32ea (10:31): Right, I agree that the Unicode-hygiene argument doesn't make any sense given that you can already add unpaired surrogates via DOM",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): 0da07476c4bd14079ce4032a6f280e17: why's maxf giving you congrats?",
        "b25b6b77a0087ff8385941e5545d32ea (10:31): (I assume?)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:31): (well, actually, they don't tend to use the code points that are surrogates for binary data)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:31): b25b6b77a0087ff8385941e5545d32ea: right",
        "b25b6b77a0087ff8385941e5545d32ea (10:33): wonders what SteveF would expect an implemenation of &lt;hgroup&gt; to look like",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:33): b25b6b77a0087ff8385941e5545d32ea: I believe the parts of the pipeline I used for Firefox 4 innerHTML and document.write are exactly the right ones considering compat",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:33): and perf",
        "b25b6b77a0087ff8385941e5545d32ea (10:35): b8810fee2f4a71f849f3f7409546d1d9: I don't really disagree. I just want to be sure that we have covered all the cases",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:46): oh, 151 is a Last Call issue...",
        "cc097e0d7183ae8436e7df709553c8c0 (10:48): 69b0d3dfe919a6b860a9fac82de52a7e: could you run the fixBrokenLink() script earlier than onload to speed up loading?",
        "cc097e0d7183ae8436e7df709553c8c0 (10:52): d6e292711389fc8c3d399cd640fc8a40: same with you ^ :)",
        "d6e292711389fc8c3d399cd640fc8a40 (10:53): cc097e0d7183ae8436e7df709553c8c0: other than the obvious factor of it &quot;fixing the links&quot;",
        "d6e292711389fc8c3d399cd640fc8a40 (10:53): what does it actually do?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:54): https://lists.webkit.org/pipermail/webkit-dev/2011-January/015797.html yay Maciej",
        "0da07476c4bd14079ce4032a6f280e17 (10:55): a9b326df4e6da61c5b6f5e1058be83a2: it was meant for @opvard who's been with Opera for ten years this year",
        "cc097e0d7183ae8436e7df709553c8c0 (10:55): d6e292711389fc8c3d399cd640fc8a40: it redirects to the right page if the fragment is not found on the current page",
        "d6e292711389fc8c3d399cd640fc8a40 (10:56): cc097e0d7183ae8436e7df709553c8c0: so its important for the pages that are split?",
        "d6e292711389fc8c3d399cd640fc8a40 (10:56): (multipage specs)?",
        "cc097e0d7183ae8436e7df709553c8c0 (10:56): yeah",
        "cc097e0d7183ae8436e7df709553c8c0 (10:57): but hmm, i guess it needs to be run after the content has been loaded after all",
        "cc097e0d7183ae8436e7df709553c8c0 (10:57): so ignore me",
        "d6e292711389fc8c3d399cd640fc8a40 (10:57): cc097e0d7183ae8436e7df709553c8c0: perhaps I could re-write it in ruby postprocessors",
        "d6e292711389fc8c3d399cd640fc8a40 (10:57): and remove the script altogether",
        "cc097e0d7183ae8436e7df709553c8c0 (10:59): d6e292711389fc8c3d399cd640fc8a40: that wouldn't work, it needs to be in javascript",
        "cc097e0d7183ae8436e7df709553c8c0 (11:01): but link-fixup.js logic could be put in fragment-links.js and instead of checking getElementById() just check if the current fragment is in the table and if so, if the current page matches what the table says it should be",
        "cc097e0d7183ae8436e7df709553c8c0 (11:02): then you could run it ASAP and get faster redirects",
        "d6e292711389fc8c3d399cd640fc8a40 (11:02): cc097e0d7183ae8436e7df709553c8c0: I'll look into it",
        "d6e292711389fc8c3d399cd640fc8a40 (11:02): can you add an issue for me to track?",
        "cc097e0d7183ae8436e7df709553c8c0 (11:02): sure",
        "d6e292711389fc8c3d399cd640fc8a40 (11:03): thanks ;)",
        "ab7faae5d7b250ea8606486575f8f79c (11:10): cc097e0d7183ae8436e7df709553c8c0: I split link-fixup.js from fragment-links.js because I didn't really want it loading a quarter of a megabyte of scripts every time you visit a page",
        "ab7faae5d7b250ea8606486575f8f79c (11:11): since that doesn't seem good for bandwidth or performance in the common case where you're not visiting an obsolete fragment address",
        "cc097e0d7183ae8436e7df709553c8c0 (11:29): ab7faae5d7b250ea8606486575f8f79c: is it a quarter of a megabyte gzipped?",
        "ab7faae5d7b250ea8606486575f8f79c (11:32): cc097e0d7183ae8436e7df709553c8c0: More like 50KB to download",
        "ab7faae5d7b250ea8606486575f8f79c (11:33): wonder how long parsing takes",
        "cc097e0d7183ae8436e7df709553c8c0 (11:33): 50KB doesn't sound so bad to waste in normal cases to speed up shortlink fixups",
        "cc097e0d7183ae8436e7df709553c8c0 (11:34): developers.whatwg.org already does that anyway"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "d6e292711389fc8c3d399cd640fc8a40",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "b25b6b77a0087ff8385941e5545d32ea",
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "cc097e0d7183ae8436e7df709553c8c0",
        "0da07476c4bd14079ce4032a6f280e17",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}