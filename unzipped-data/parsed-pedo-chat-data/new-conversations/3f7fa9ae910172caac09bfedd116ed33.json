{
    "id": "3f7fa9ae910172caac09bfedd116ed33",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (09:29): b8810fee2f4a71f849f3f7409546d1d9: Yes, I think that was me :-(",
        "ab7faae5d7b250ea8606486575f8f79c (09:30): (I didn't intend to break the internalsearches page, since I didn't even known it existed until after I'd been trying to break the search results page)",
        "ab7faae5d7b250ea8606486575f8f79c (09:48): &quot;I think it is fair to say that I have complained too much without doing enough work. I plan to change that.&quot; - I wish the HTML WG had more of that attitude :-)",
        "ab7faae5d7b250ea8606486575f8f79c (09:48): Well, more of the second sentence of that",
        "8c8837db54a2907cacd8633547977e33 (10:07): cleverly done, regardless :-)",
        "ab7faae5d7b250ea8606486575f8f79c (10:09): You don't need to be at all clever to break XML, you just have to shove U+FFFE into every text box and query string you can find",
        "ab7faae5d7b250ea8606486575f8f79c (10:09): It's like XSS, where you just have to shove &lt; and &quot; and ' into everywhere, but it's even easier because you get immediate feedback on success",
        "8c8837db54a2907cacd8633547977e33 (10:22): perhaps",
        "8c8837db54a2907cacd8633547977e33 (10:22): maybe it's a small victory given text-processing standards being as they are",
        "b25b6b77a0087ff8385941e5545d32ea (10:23): a11aabeeceeae6b8cb5d12ea06b56554: Don't use gnuplot",
        "ab7faae5d7b250ea8606486575f8f79c (10:25): wonders how something like XOM (as opposed to appending strings and passing them to 'print') would solve the problem of the internalsearches page being broken by characters that are (presumably) scraped from an Apache log file",
        "ab7faae5d7b250ea8606486575f8f79c (10:26): I assume you'd just get a server-side error message instead of a client-side error message, which isn't much of an improvement",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:35): so did the former Youtube guy just say Chrome is implementing &lt;video&gt;?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:35): sounds nice",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): ab7faae5d7b250ea8606486575f8f79c: at least you could drop stuff on a per-entry basis by catching XOM exceptions very near the point where they are thrown",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:40): ab7faae5d7b250ea8606486575f8f79c: as opposed to letting them propagate far enough to crash your server app",
        "ab7faae5d7b250ea8606486575f8f79c (10:41): b8810fee2f4a71f849f3f7409546d1d9: Hmm, I suppose that could work",
        "ab7faae5d7b250ea8606486575f8f79c (10:41): Oh no, &lt;canvas&gt; spec changes, now my test scripts will be outdated and broken :-(",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:53): b25b6b77a0087ff8385941e5545d32ea: Sorry Master. What should I use instead Master?",
        "47223c0fa41aa7e167a2d1fd2740cbb8 (10:53): edb259c0e0038f38bb200bc20c8cbf7e: well given webkit already supports &lt;video&gt; and chrome had disabled it i refuse to believe it would be significant work for them",
        "b25b6b77a0087ff8385941e5545d32ea (10:53): a11aabeeceeae6b8cb5d12ea06b56554: Almost anything. Veusz is pretty nice",
        "b25b6b77a0087ff8385941e5545d32ea (10:54): disclaimer: Veusz was written by a postdoc I worked with and I have contributed a little",
        "47223c0fa41aa7e167a2d1fd2740cbb8 (10:54): edb259c0e0038f38bb200bc20c8cbf7e: the gtk people got &lt;video&gt; running with gstreamer in just a few days once we'd got it all implemented",
        "a11aabeeceeae6b8cb5d12ea06b56554 (10:54): b25b6b77a0087ff8385941e5545d32ea: So it's probably buggy?",
        "b25b6b77a0087ff8385941e5545d32ea (10:54): a11aabeeceeae6b8cb5d12ea06b56554: At least I know the wavelengths of ligt",
        "b25b6b77a0087ff8385941e5545d32ea (10:55): *light",
        "47223c0fa41aa7e167a2d1fd2740cbb8 (10:56): waits for chrome to nonetheless talk about how awesome they are for implementing a stunning new spec that was already implemented more than a year ago in the engine they use for their browser",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:56): 47223c0fa41aa7e167a2d1fd2740cbb8, interesting",
        "47223c0fa41aa7e167a2d1fd2740cbb8 (10:56): edb259c0e0038f38bb200bc20c8cbf7e: safari3.1 shipped with video in march last year, we had the basics implemented at the end of the previous year iirc",
        "ab7faae5d7b250ea8606486575f8f79c (10:57): had &lt;video&gt; with rotations and reflections in WebKitGTK embedded in an OpenGL application, and it even mixed the audio with the applicaton's OpenAL stuff properly, which was quite impressive",
        "47223c0fa41aa7e167a2d1fd2740cbb8 (10:57): edb259c0e0038f38bb200bc20c8cbf7e: it's reasons like that i get irritated by the quantity of standards chrome explicitly disabled in webkit",
        "b25b6b77a0087ff8385941e5545d32ea (10:58): a11aabeeceeae6b8cb5d12ea06b56554: https://gna.org/projects/veusz/",
        "28a6d36d2fd2e2e987a704be0c3f7b0e (11:00): Am I still connected?",
        "b25b6b77a0087ff8385941e5545d32ea (11:00): 28a6d36d2fd2e2e987a704be0c3f7b0e: You seem to be",
        "28a6d36d2fd2e2e987a704be0c3f7b0e (11:00): yes, but with wrong nick",
        "f139aba52f9fa1394b4034a7954b2220 (11:01): What is Rob's draft that rubys is referring to at the end of this? http://lists.w3.org/Archives/Public/www-archive/2009Feb/0085.html  (I hope he's not referring to that stuff Rob Burns produced on the HTML4all wiki)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:01): from Rob Sayre",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:02): f139aba52f9fa1394b4034a7954b2220: http://people.mozilla.com/~sayrer/2009/02/15/html5.html",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:02): There's no TOC :(",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:02): pimps that spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:02): f139aba52f9fa1394b4034a7954b2220: context at http://groups.google.com/group/mozilla.dev.platform/browse_thread/thread/0c2bbb6ed726800b",
        "f139aba52f9fa1394b4034a7954b2220 (11:08): I don't understand the point of it. From the description sayrer gave, it seems to include only features that already existed in HTML4, making it little more than just a redefinition of HTML4 in better terms. But what's the point of having that?!",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:09): f139aba52f9fa1394b4034a7954b2220: also &lt;canvas&gt;",
        "b25b6b77a0087ff8385941e5545d32ea (11:11): AFAICT the point seems to be that sayrer wants to get a W3C approved document out that has detailed implementation requirements compared to HTML4 for the same (roughly) featureset in the belief that this will cause implementors to prioritise those features (e.g. the new parser) above features in the HTML 5 draft",
        "b25b6b77a0087ff8385941e5545d32ea (11:12): This seems to me to be a misunderstanding of the way that browser vendors set their priorities",
        "b25b6b77a0087ff8385941e5545d32ea (11:13): I guess he might be particularly interested in the case of MS who have been known to use &quot;only a draft&quot; as an excuse before for e.g. CSS 2.1",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:16): I suppose it might be useful",
        "ab7faae5d7b250ea8606486575f8f79c (11:16): And when MS implements bits of the HTML5 draft, the draft then changes underneath them and their implementation is no longer correct",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:16): if it actually works out in the time frame he wants to",
        "ab7faae5d7b250ea8606486575f8f79c (11:16): so they can't win :-)",
        "b25b6b77a0087ff8385941e5545d32ea (11:18): ab7faae5d7b250ea8606486575f8f79c: That is a fundamental problem of implementing standards. Someone has to move first. (Well the other opion is to have a reference implementation I guess but good luck with that on HTML5)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): man, the summary=&quot;&quot; discussion is actually getting real data now",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): from the &quot;keep it&quot; camp",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): i'm impressed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:19): there's actually reason to reopen the discussion now",
        "f139aba52f9fa1394b4034a7954b2220 (11:19): I don't see it as useful at all. Sayrer's draft can't reach REC before HTML5 does because if it does, then it won't reflect any subsequent changes in HTML5",
        "f139aba52f9fa1394b4034a7954b2220 (11:20): so at best, it can be published in sync with HTML5, but in that case, it's nothing but HTML5 with sections defining most new features hidden",
        "ab7faae5d7b250ea8606486575f8f79c (11:20): f139aba52f9fa1394b4034a7954b2220: Why would it have to reflect any subsequent changes in HTML5?",
        "f139aba52f9fa1394b4034a7954b2220 (11:20): because then we'd have 2 normative documents defining HTML5 with conflicting requirements",
        "b25b6b77a0087ff8385941e5545d32ea (11:21): In principle it can define HTML4.5 or whatever",
        "ab7faae5d7b250ea8606486575f8f79c (11:21): Just change its name to &quot;HTML4.1&quot; and then it won't be a problem",
        "b25b6b77a0087ff8385941e5545d32ea (11:21): There is a problem is the parser algorithms don't remain exactly in sync for example",
        "f139aba52f9fa1394b4034a7954b2220 (11:21): but the whole idea of doing that is just pointless",
        "ab7faae5d7b250ea8606486575f8f79c (11:21): (or at least no more of a problem than having HTML4 and HTML5 both normative with conflicting requirements)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:22): i think it'd be pretty cool to have a 4.1 that was in between 4 and 5 (4's features with 5's detail)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:22): yup",
        "f139aba52f9fa1394b4034a7954b2220 (11:22): but why?",
        "f139aba52f9fa1394b4034a7954b2220 (11:22): what difference does it make?",
        "ab7faae5d7b250ea8606486575f8f79c (11:23): f139aba52f9fa1394b4034a7954b2220: It seems there's a point in getting a complete stable tested implemented version of HTML4 even if it doesn't have all the features that HTML5 adds, because it'll make the platform core more solid",
        "ab7faae5d7b250ea8606486575f8f79c (11:23): s/HTML4/HTML/",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:23): f139aba52f9fa1394b4034a7954b2220: oh it would be purely a PR stunt, i don't think it would affect implementations at all",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:23): if he can manage to take it to REC in &lt;2 years as he proposes I think that would be very cool",
        "f139aba52f9fa1394b4034a7954b2220 (11:24): so just look at the requirments in HTML5 to implement the stuff that was included in HTML4. At most, that requires a stylesheet to hide the sections of the new features. Not a new potentially conflicting spec",
        "f139aba52f9fa1394b4034a7954b2220 (11:24): well, I'm opposed to doing stupid PR stunts",
        "ab7faae5d7b250ea8606486575f8f79c (11:24): What about clever PR stunts? ;-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:24): i don't think it would get to REC and earlier than HTML5",
        "f139aba52f9fa1394b4034a7954b2220 (11:24): ab7faae5d7b250ea8606486575f8f79c, sure. But this clearly isn't one",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): gets annoyed at 69b0d3dfe919a6b860a9fac82de52a7e using &quot;several messages&quot; as a subject line",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): It isn't overly useful to say what it's about",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): several messages about what?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): meh.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): /rant",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): pine automatically sets it to that when i reply to multiple messages that have differnet subject liens",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:47): pine--",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): i usually fix it, occasionally i don't notice that teh thread changes subject line",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:48): the real -- in my book is for the user agents that keep screwing up the subject lines",
        "f139aba52f9fa1394b4034a7954b2220 (11:50): wtf? I thought we had pointless discussions on public-html. But now I've seen the 'Why &quot;color&quot;?' thread on www-style!",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:50): what is the use case for videoHeight/videoWidth btw? why doesn't it apply to &lt;img&gt;?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:52): dares to look at the thread he's heard so much about on www-style",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:52): (I haven't looked at it since the Armenian reference)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:53): since then there was a klingon reference",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:53): I'm glad tantek called the troll. I wish something were done about the trolling on public-html, too.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:54): edb259c0e0038f38bb200bc20c8cbf7e: Yeah, I've seen that now",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:54): and a certain Philip TAYLOR was seriously upset that glazou did not want localized property names",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:54): stuff like that cracks me up",
        "ab7faae5d7b250ea8606486575f8f79c (11:54): (Not me!)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:54): ab7faae5d7b250ea8606486575f8f79c: Lies.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:55): edb259c0e0038f38bb200bc20c8cbf7e: it's not funny when you've seen similar things proposed seriously for XML vocabularies",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:56): it's the reason for XML 1.1",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): not precisely, but close",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:56): and supposedly XML 1.0 5th",
        "ab7faae5d7b250ea8606486575f8f79c (11:57): I'm not sure Bjoern Hoehrmann's reference to Lingua::Romana::Perligata is an entirely great example of language localisation that is not an utter waste of time",
        "a11aabeeceeae6b8cb5d12ea06b56554 (11:57): ab7faae5d7b250ea8606486575f8f79c: No spoilers, man!",
        "ab7faae5d7b250ea8606486575f8f79c (11:58): (Well, it's not a waste of time to the extent that it looks like a pretty clever hack, but it's not exactly intended for practical usage)",
        "ab7faae5d7b250ea8606486575f8f79c (12:00): http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html - &quot;inserto stringum tum unum tum duo excerpementum da. # $insert = substr($string,1,2);&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (12:00): &quot;You tum entered inquementum tum wordum tum novumversum oraculo scribe.&quot; - that's not real Latin :-(",
        "ab7faae5d7b250ea8606486575f8f79c (12:02): notes that the same author wrote the Quantum::Superpositions module, which allows Perl variables to store a superposition of values",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:04): notes Perl is crazy anyway",
        "ab7faae5d7b250ea8606486575f8f79c (12:04): Yes, but not usually *that* crazy",
        "b25b6b77a0087ff8385941e5545d32ea (12:06): Hmm. How does it work? It just allows variables to hold multiple values and return one at random? Or something more clever?",
        "ab7faae5d7b250ea8606486575f8f79c (12:09): A variable can hold multiple values, and can be combined with other variables (e.g. any(1,2,3) + any(10,20) == any(11,12,13,21,22,23))",
        "ab7faae5d7b250ea8606486575f8f79c (12:09): and any(1,2,3) &lt; 2 is true, but all(1,2,3) &lt; 2 is false",
        "ab7faae5d7b250ea8606486575f8f79c (12:10): and if you convert a superposition to a scalar number then it picks one eigenstate at random",
        "b25b6b77a0087ff8385941e5545d32ea (12:10): Yeah, I just looked at the docs. It doesn't seem too clever but I could be missing something",
        "ab7faae5d7b250ea8606486575f8f79c (12:11): It's actually kind of a useful feature, and not very quantumy",
        "ab7faae5d7b250ea8606486575f8f79c (12:11): I think Perl 6 has the any/all thing",
        "ab7faae5d7b250ea8606486575f8f79c (12:11): (though not the random selection)",
        "ab7faae5d7b250ea8606486575f8f79c (12:12): The Quantum::Entanglement module is much more quantumy, since it does complex probabilities and all that fun stuff",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): It don't say it wasn't _useful_ just not that _clever_",
        "ab7faae5d7b250ea8606486575f8f79c (12:15): b25b6b77a0087ff8385941e5545d32ea: I wasn't disagreeing with you, just commenting that it seems to be erring on the left of the usefulness vs cleverness tradeoff scale :-)",
        "ab7faae5d7b250ea8606486575f8f79c (12:15): whereas Quantum::Entanglement is distinctly less useful",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:20): I think the problem here is you want code to be useful",
        "ab7faae5d7b250ea8606486575f8f79c (12:22): I don't believe I ever made such a claim"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "8c8837db54a2907cacd8633547977e33",
        "b25b6b77a0087ff8385941e5545d32ea",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "47223c0fa41aa7e167a2d1fd2740cbb8",
        "28a6d36d2fd2e2e987a704be0c3f7b0e",
        "f139aba52f9fa1394b4034a7954b2220",
        "69b0d3dfe919a6b860a9fac82de52a7e"
    ]
}