{
    "id": "7ba95a5e2d49dcfd51ffe463b52a8fe0",
    "messages": [
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:38): what would be the most optimal audio format if I'm targeting latest version of Chrome, Safari 5 and IE10?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:38): MP3, right?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:40): or perhaps WAV would be more suitable for clips that are shorter than 1s?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:40): it's important for me that the playback is instant",
        "4c681049601b3c374f1d2c0077c99049 (22:41): mp3 with vorbis fallback :p",
        "4c681049601b3c374f1d2c0077c99049 (22:41): i dont think codec has an effect on playback latency.",
        "4c681049601b3c374f1d2c0077c99049 (22:41): shouldn't, for sure",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:44): Opera and Firefox still don't support MP3?",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:44): I have found some codec support tables on html5doctor, but they are outdated",
        "eb4fd75d7c504913a3dfa2895fbaeb18 (22:45): firequery is cool",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:48): eb4fd75d7c504913a3dfa2895fbaeb18: I can't stand Firebug since I learned Chrome Dev Tools",
        "eb4fd75d7c504913a3dfa2895fbaeb18 (22:48): c63a5cfce0a1819ebbe4a19e074356b6: i see",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:49): eb4fd75d7c504913a3dfa2895fbaeb18: with the introduction of chrome.experimental.devtools API, it should be possible to create simillar extension for Chrome",
        "c63a5cfce0a1819ebbe4a19e074356b6 (22:49): unfortunately no one seems to be interested...",
        "eb4fd75d7c504913a3dfa2895fbaeb18 (22:50): i don't use chrome much.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:02): I'm told this is the best place to ask canvas questions",
        "4c681049601b3c374f1d2c0077c99049 (23:03): c63a5cfce0a1819ebbe4a19e074356b6: codec support hasnt changed in a year :/",
        "4c681049601b3c374f1d2c0077c99049 (23:03): 36998b421e7044b3c94d4ea2e0cdd1e0: ya",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:03): 4c681049601b3c374f1d2c0077c99049: I have this poorly written example",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:03): http://jsfiddle.net/B5MFQ/2/",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:04): and I was wondering why when dragged the boxes are taking off like a bat out of hell exponentially",
        "4c681049601b3c374f1d2c0077c99049 (23:04): hahah wow",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:04): yeah",
        "7cbd522d7fcf593a1e60d52c789b6a7b (23:04): c63a5cfce0a1819ebbe4a19e074356b6: you shouldn't hold your breath for opera to support .mp3 either ;)",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:04): not the desired effect lol",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:05): 4c681049601b3c374f1d2c0077c99049: any insight would be appreciated",
        "4c681049601b3c374f1d2c0077c99049 (23:06): 36998b421e7044b3c94d4ea2e0cdd1e0: first..",
        "4c681049601b3c374f1d2c0077c99049 (23:06): console.log('x: ', positionX, ', y: ', positionY);",
        "4c681049601b3c374f1d2c0077c99049 (23:08): 36998b421e7044b3c94d4ea2e0cdd1e0: its simple arithmetic, really",
        "4c681049601b3c374f1d2c0077c99049 (23:08): always wanted to say that. :p",
        "4c681049601b3c374f1d2c0077c99049 (23:08): you're calculating newmousepos - initialmousepos",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:09): right",
        "4c681049601b3c374f1d2c0077c99049 (23:09): but you want to move box from newboxpos - lastboxpos",
        "4c681049601b3c374f1d2c0077c99049 (23:09): initial vs last",
        "4c681049601b3c374f1d2c0077c99049 (23:09): cuz translate is kinda funny",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:10): sorry I have a tiny little brain",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:10): like a dinosaur",
        "0de37da1d654c10aed33d7b7347b8e3b (23:10): &quot;translate and scale don't reset&quot; =)",
        "0de37da1d654c10aed33d7b7347b8e3b (23:10): you're adding translations onto translations",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:10): hence the exponential",
        "0de37da1d654c10aed33d7b7347b8e3b (23:10): exactly",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:11): i need to add translations to box position",
        "0de37da1d654c10aed33d7b7347b8e3b (23:11): stick this at the end, and it'll be fine:",
        "0de37da1d654c10aed33d7b7347b8e3b (23:11): context.scale(1/scaleX,1/scaleY);",
        "0de37da1d654c10aed33d7b7347b8e3b (23:11): context.translate(-positionX,-positionY);",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:11): at the end of my draw function?",
        "0de37da1d654c10aed33d7b7347b8e3b (23:11): or record the &quot;current&quot; scale and translation at the start of draw() and then restore ot that after you're done drawing.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:12): or the mouse move function",
        "0de37da1d654c10aed33d7b7347b8e3b (23:12): at the end of your draw function",
        "0de37da1d654c10aed33d7b7347b8e3b (23:12): make them the last two lines to undo the translate and scale you issue at the start of your draw function",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:12): you fixed it",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:12): you sir are amazing",
        "0de37da1d654c10aed33d7b7347b8e3b (23:12): paul's advice is still valid too, though",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:13): yes he is smart too",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:13): new problem though",
        "0de37da1d654c10aed33d7b7347b8e3b (23:13): your code will now not remember the last active mouse coordinates, so if you try to move something after moving it, it will teleport",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:13): now it resets to the original position",
        "0de37da1d654c10aed33d7b7347b8e3b (23:14): si. I usually write these things as translations based on some start offset, plus the delta.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:14): so I need to save the state after every draw function?",
        "0de37da1d654c10aed33d7b7347b8e3b (23:14): mousedown -&gt; startx/starty = mouse, mousemoved -&gt; if(down) { delta = mousex/y - startx/y), draw() -&gt; translate(startx+deltax, starty+deltay);",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:14): so i remembers",
        "0de37da1d654c10aed33d7b7347b8e3b (23:15): sorry, mousedown -&gt; startx/y = mouse x/y; deltax/y = 0;",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:15): ok im going to work on this some more",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:15): thank you for your help",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:15): you are both gentlemen and scholars",
        "4c681049601b3c374f1d2c0077c99049 (23:16): 0de37da1d654c10aed33d7b7347b8e3b++",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:17): i found a tutorial",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:17): im going to try and read through that a few times too",
        "991eeb6f14101aa1373dbb04fd51b329 (23:18): 4c681049601b3c374f1d2c0077c99049, congrats on the jquery standards, very nice initiative",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:28): 0de37da1d654c10aed33d7b7347b8e3b:  context.restore would do the same thing?",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:32): as context.scale(1/scaleX,1/scaleY);",
        "0de37da1d654c10aed33d7b7347b8e3b (23:37): 36998b421e7044b3c94d4ea2e0cdd1e0, http://jsfiddle.net/B5MFQ/8/",
        "0de37da1d654c10aed33d7b7347b8e3b (23:37): context.restore will reset translation and scale to whatever it was when you called context.save()",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:38): gotcha",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:38): examines your code",
        "0de37da1d654c10aed33d7b7347b8e3b (23:39): (note that committing your delta between mouse interactions is fairly important =)",
        "4c681049601b3c374f1d2c0077c99049 (23:39): ^",
        "eb4fd75d7c504913a3dfa2895fbaeb18 (23:49): hates working with mousemove",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:52): ugh the enigneer who originally did this used 0,0 as the flipped of canvas",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:54): wow I just made the flying solitaire card effect by mistake",
        "0de37da1d654c10aed33d7b7347b8e3b (23:56): =D",
        "0de37da1d654c10aed33d7b7347b8e3b (23:56): clearly that is not a mistake, you made it by chance.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:56): i can't do what I wanted yet, but I can take microsoft down!",
        "0de37da1d654c10aed33d7b7347b8e3b (23:56): going to be honest, I've not played solitair on a computer since windows 3.11",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:57): it did it in that too :-p",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:57): when you beat it",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (23:59): 0de37da1d654c10aed33d7b7347b8e3b: is there a matrix translate in canvas?",
        "0de37da1d654c10aed33d7b7347b8e3b (00:00): you mean matrix transform?",
        "0de37da1d654c10aed33d7b7347b8e3b (00:00): (translate is only translate)",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:00): yes, yes I do",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:00): like in -webkit",
        "0de37da1d654c10aed33d7b7347b8e3b (00:00): there is",
        "0de37da1d654c10aed33d7b7347b8e3b (00:00): transform(m11, m12, m21, m22, dx, dy)",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:01): ugh this might actually work lol",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:01): one more question",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:01): mobile browsers and canvas?",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:01): yeah ney",
        "0de37da1d654c10aed33d7b7347b8e3b (00:01): so for RT it's your standanrd (cos(t), -sin(t), sin(t), cos(t), tx, ty)",
        "0de37da1d654c10aed33d7b7347b8e3b (00:01): mobile browsers without canvas are the past.",
        "0de37da1d654c10aed33d7b7347b8e3b (00:01): wbegl is still iffy, but they better have canvas, or they're obsolete",
        "0de37da1d654c10aed33d7b7347b8e3b (00:02): *webgl",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:02): doing maps in canvas totally absurd?",
        "0de37da1d654c10aed33d7b7347b8e3b (00:02): oops, sorry, transform order is different.",
        "0de37da1d654c10aed33d7b7347b8e3b (00:03): standard RT is (cos(t), sin(t), -sin(t), cos(t), tx, ty)",
        "0de37da1d654c10aed33d7b7347b8e3b (00:03): depends on what kind of maps you're doing.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:03): well I did them with static images, but in the long run im thinking the time i put into this may be trumped by making the images",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:03): 0de37da1d654c10aed33d7b7347b8e3b: realtime",
        "0de37da1d654c10aed33d7b7347b8e3b (00:04): yes but what are you thinking of. real time geolocation on a map?",
        "0de37da1d654c10aed33d7b7347b8e3b (00:04): canvas should be fine for that.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:05): yeah we do asset tracking",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:05): i make lots of ajax calls",
        "0de37da1d654c10aed33d7b7347b8e3b (00:08): as long as you make the transport data required small, you should be fine.",
        "36998b421e7044b3c94d4ea2e0cdd1e0 (00:12): ty for your help guys"
    ],
    "person_ids": [
        "c63a5cfce0a1819ebbe4a19e074356b6",
        "4c681049601b3c374f1d2c0077c99049",
        "eb4fd75d7c504913a3dfa2895fbaeb18",
        "36998b421e7044b3c94d4ea2e0cdd1e0",
        "7cbd522d7fcf593a1e60d52c789b6a7b",
        "0de37da1d654c10aed33d7b7347b8e3b",
        "991eeb6f14101aa1373dbb04fd51b329"
    ]
}