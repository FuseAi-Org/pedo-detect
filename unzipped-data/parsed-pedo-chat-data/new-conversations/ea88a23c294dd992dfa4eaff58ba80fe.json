{
    "id": "ea88a23c294dd992dfa4eaff58ba80fe",
    "messages": [
        "b25b6b77a0087ff8385941e5545d32ea (19:55): In which we learn that most people who can afford to go to a week-long meeting are paid by someone to go",
        "8b3687499080633e1898fa1dd209ef81 (19:56): Orly?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:57): 's fianc?\u00a9e has a friend named Orly",
        "b25b6b77a0087ff8385941e5545d32ea (19:57): Orly?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:59): needs friends named Yarly and Nowai",
        "b25b6b77a0087ff8385941e5545d32ea (20:02): You could have children named that",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:03): I'll be sure to suggest it.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:03): I'm sure she won't mind.  It's only fair that I get to name half the kids, right?",
        "1f58faf0d058f303f30239a369808167 (20:08): http://www.businessinsider.com/gm-is-about-to-move-100000-employees-to-google-apps-2011-11",
        "3d2d57713d8842b3def3085cbd614f68 (20:09): can i critique this api http://wiki.whatwg.org/wiki/StringEncoding",
        "8b3687499080633e1898fa1dd209ef81 (20:11): 3d2d57713d8842b3def3085cbd614f68, I'd suggest asking for use cases",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:11): gotta love #htmlwg. &quot;W3C through its process guarantees stability&quot; o_O",
        "71bd9426656c7068876f52fb7934af7f (20:14): 3d2d57713d8842b3def3085cbd614f68, 8b3687499080633e1898fa1dd209ef81: that proposal looks very useful to me",
        "3d2d57713d8842b3def3085cbd614f68 (20:16): 8b3687499080633e1898fa1dd209ef81 1) move it to ArrayBuffer and rename to _encodeFrom, _decodeTo 2) remove byteOffset and byteLen to prefer .slice (its virtual, not copy anything) 3) this API too C'sh, like strcopy or something, immutable api is better, ie ._decodeTo(charset) -&gt; ArrayBuffer, but _encodeFrom(string) is mutable",
        "8b3687499080633e1898fa1dd209ef81 (20:16): Anyway, find the guy who invented it and send your comments to him",
        "3d2d57713d8842b3def3085cbd614f68 (20:17): i hoped he here",
        "3d2d57713d8842b3def3085cbd614f68 (20:17): ok",
        "71bd9426656c7068876f52fb7934af7f (20:18): 3d2d57713d8842b3def3085cbd614f68: are you saying it is better to create a new ArrayBuffer than write bytes into an existing buffer (mutating it)?",
        "3d2d57713d8842b3def3085cbd614f68 (20:18): yeah",
        "3d2d57713d8842b3def3085cbd614f68 (20:19): immutable api is better for ppl",
        "71bd9426656c7068876f52fb7934af7f (20:19): worse for performance",
        "3d2d57713d8842b3def3085cbd614f68 (20:19): less chanse make error",
        "3d2d57713d8842b3def3085cbd614f68 (20:19): i know",
        "71bd9426656c7068876f52fb7934af7f (20:19): which many users of typed arrays care about, i think",
        "71bd9426656c7068876f52fb7934af7f (20:19): since the likely uses of this are going to be mixed binary/text formats and protocols",
        "71bd9426656c7068876f52fb7934af7f (20:19): is there any fast path for copying one array buffer into another?",
        "71bd9426656c7068876f52fb7934af7f (20:21): because if i have to have a javascript inner loop to copy bytes, doing the utf8 codec in javascript would probably be faster than creating a temporary buffer",
        "71bd9426656c7068876f52fb7934af7f (20:22): (there may be a fast path for copying, i just haven't seen it in my reading of the Typed Array spec. if there is, what should i look for?)",
        "3d2d57713d8842b3def3085cbd614f68 (20:24): 71bd9426656c7068876f52fb7934af7f compiler can analize that you make something like a = a._decodeTo('utf8') or return a._decodeTo('utf8') i.e. you completely forget about old {a} and do translation inplace but i guess malloc is not bottleneck in buffer convertation",
        "3d2d57713d8842b3def3085cbd614f68 (20:27): 71bd9426656c7068876f52fb7934af7f var a = new Int16Array([10]), b = new Int16Array(a); a[0] = 1; b[0]",
        "71bd9426656c7068876f52fb7934af7f (20:29): 3d2d57713d8842b3def3085cbd614f68: i'm not sure i understand the point of that code",
        "71bd9426656c7068876f52fb7934af7f (20:29): constructing a new Int16Array is not the same as copying from one existing buffer into another existing buffer",
        "3d2d57713d8842b3def3085cbd614f68 (20:30): if you pass a.buffer instead a, b will have same buffer as a, but by passing a you copy a.buffer to b.buffer",
        "3d2d57713d8842b3def3085cbd614f68 (20:31): b[0] == 10 prove it",
        "71bd9426656c7068876f52fb7934af7f (20:31): if i have an existing buffer b, perhaps with some binary header data, and i want to write in additional bytes (perhaps that were encoding a string)",
        "71bd9426656c7068876f52fb7934af7f (20:31): *were the result of encoding a string",
        "71bd9426656c7068876f52fb7934af7f (20:32): i can't do that in place without a javascript inner loop, i believe",
        "71bd9426656c7068876f52fb7934af7f (20:32): so it is desirable to be able to write that string out as bytes directly into my existing buffer, in my opinion",
        "3d2d57713d8842b3def3085cbd614f68 (20:33): hm",
        "3d2d57713d8842b3def3085cbd614f68 (20:34): [].push.apply() does not work",
        "3d2d57713d8842b3def3085cbd614f68 (20:34): heh",
        "06cb330920ae58e1614c9145d983b3d6 (20:34): . o ( dreaming of python's method binding )",
        "3d2d57713d8842b3def3085cbd614f68 (20:36): bad that typed arrays hasnt realloc"
    ],
    "person_ids": [
        "b25b6b77a0087ff8385941e5545d32ea",
        "8b3687499080633e1898fa1dd209ef81",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "1f58faf0d058f303f30239a369808167",
        "3d2d57713d8842b3def3085cbd614f68",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "71bd9426656c7068876f52fb7934af7f",
        "06cb330920ae58e1614c9145d983b3d6"
    ]
}