{
    "id": "7514c503f3aa20762daf40150af51928",
    "messages": [
        "c0fa970a435d18d97bb52cb57780927d (20:42): so, i open a bunch of files by doing vim file1 file2 file3... how do i switch between them?",
        "fb2c4f3e688db2a676f292cd15961a59 (20:42): pioto: :he ctrl-6   :he :bn   :he :ls",
        "c0fa970a435d18d97bb52cb57780927d (20:42): i thought it was some ^W stuff, but that doesn't work",
        "c0fa970a435d18d97bb52cb57780927d (20:43): oh, hmm",
        "fb2c4f3e688db2a676f292cd15961a59 (20:43): pioto: amongst many, many other commands.",
        "c0fa970a435d18d97bb52cb57780927d (20:43): thanks",
        "fb2c4f3e688db2a676f292cd15961a59 (20:43): pioto: ^W stuff is for windows",
        "c0fa970a435d18d97bb52cb57780927d (20:43): ah, ok",
        "19a2a340e287d7c9507bca860a287861 (20:43): pioto, i have these mappings in my .vimrc:",
        "fb2c4f3e688db2a676f292cd15961a59 (20:43): you could have them all open in their own window, but I doubt you want to.",
        "4c002476425f2c87dbc7d5383704d9d7 (20:43): how do I set tags=/lib/modules/`uname -r`/build/tags",
        "19a2a340e287d7c9507bca860a287861 (20:43): map &lt;C-N&gt; :bnext&lt;CR&gt;",
        "19a2a340e287d7c9507bca860a287861 (20:43): map &lt;C-P&gt; :bprev&lt;CR&gt;",
        "19a2a340e287d7c9507bca860a287861 (20:43): pioto, makes switching easier",
        "4c002476425f2c87dbc7d5383704d9d7 (20:44): I know I cannot do ``... but I am not sure how to eval something inside the set tags= line",
        "fb2c4f3e688db2a676f292cd15961a59 (20:44): slaq: you've just trashed some of the most useful mappings in vim...",
        "19a2a340e287d7c9507bca860a287861 (20:44): Zathrus, hm what do they normally do?",
        "fb2c4f3e688db2a676f292cd15961a59 (20:44): slaq: :he i_ctrl-n   :he i_ctrl-p   -- and they do stuff in the other modes too.",
        "19a2a340e287d7c9507bca860a287861 (20:45): hmmm",
        "19a2a340e287d7c9507bca860a287861 (20:45): i see",
        "19a2a340e287d7c9507bca860a287861 (20:45): never used that",
        "fb2c4f3e688db2a676f292cd15961a59 (20:46): it's rather useful, to understate it.",
        "4c002476425f2c87dbc7d5383704d9d7 (20:56): :exec &quot;:set tags=...&quot;.system(uname -r).&quot;...&quot;",
        "4c002476425f2c87dbc7d5383704d9d7 (20:56): ... maybe?",
        "fb2c4f3e688db2a676f292cd15961a59 (20:57): bartman: why don't you put uname -r into an env var and save yourself a great deal of pain?",
        "c0fa970a435d18d97bb52cb57780927d (20:57): hmm, is there some way to disable the standard gvim behavior of forking upon launch via vimrc?",
        "c0fa970a435d18d97bb52cb57780927d (20:57): or do i need to patch the source code?",
        "fb2c4f3e688db2a676f292cd15961a59 (20:58): pioto: well, if there is a way then the source will probably tell you too ;)",
        "4c002476425f2c87dbc7d5383704d9d7 (20:58): Zathrus: from inside my vimrc or before I launch vim?",
        "fb2c4f3e688db2a676f292cd15961a59 (20:58): bartman: before",
        "c0fa970a435d18d97bb52cb57780927d (20:59): ya, i couldn't find anything in :help about it",
        "fb2c4f3e688db2a676f292cd15961a59 (20:59): bartman: I have &quot;set path+=$SOMEVAR/../**&quot; in my vimrc",
        "4c002476425f2c87dbc7d5383704d9d7 (20:59): thanks for the hint",
        "4c002476425f2c87dbc7d5383704d9d7 (20:59): let $kernel_version=system('uname -r')",
        "4c002476425f2c87dbc7d5383704d9d7 (20:59): :set tags=/lib/modules/$kernel_version/build/tags",
        "878b627b013f0c465ec2be26325ce80d (21:00): pioto: vim --help shows that the -f option prevents forking.  &quot;:he -f&quot; says that including 'f' in 'guioptions' will cause gvim nont to fork",
        "c0fa970a435d18d97bb52cb57780927d (21:00): yes, but i want it by default, w/o that option",
        "c0fa970a435d18d97bb52cb57780927d (21:00): w/o having to create a wrapper",
        "c0fa970a435d18d97bb52cb57780927d (21:01): seems like something that should be doable in vimrc or gvimrc, but i can't find anything",
        "fb2c4f3e688db2a676f292cd15961a59 (21:01): pioto: so put it in guioptions in your vimrc.",
        "878b627b013f0c465ec2be26325ce80d (21:01): I told you how",
        "c0fa970a435d18d97bb52cb57780927d (21:01): jamessan: oh, sorry, i didn't see that part [cropped on end of screen]",
        "c0fa970a435d18d97bb52cb57780927d (21:01): thanks",
        "24463ff15358037b19101862bfa2b5fa (21:17): if there a vim feature or macro that lets you highlight changes you've made to a file since it's been open, or else hit a toggle key to revert between current and unedited file?  (sort of the functions of a visual diff tool)?",
        "fb2c4f3e688db2a676f292cd15961a59 (21:18): trby: you can save it to a different file and then vimdiff them",
        "878b627b013f0c465ec2be26325ce80d (21:18): I use the following commands (stuffed into a function and mapped to a keycombo)",
        "878b627b013f0c465ec2be26325ce80d (21:19): :diffthis | vsplit | enew | set buftype=nofile | read # | 1delete | diffthis",
        "24463ff15358037b19101862bfa2b5fa (21:22): jamesan - that looks interesting, thanks.  and thanks zathrus, too",
        "fb2c4f3e688db2a676f292cd15961a59 (21:23): as usual, jamessan has the better solution",
        "24463ff15358037b19101862bfa2b5fa (21:24): jamessan, is it possible to search from change to change?",
        "878b627b013f0c465ec2be26325ce80d (21:25): trby: those set of commands will show all the differences between the current state of the file and the currently written out file on disk",
        "24463ff15358037b19101862bfa2b5fa (21:25): yes.",
        "24463ff15358037b19101862bfa2b5fa (21:26): js - but can i use a vim command to jump to the next marked change?",
        "878b627b013f0c465ec2be26325ce80d (21:26): ah",
        "878b627b013f0c465ec2be26325ce80d (21:26): yes",
        "878b627b013f0c465ec2be26325ce80d (21:26): :he jumpto-diffs",
        "24463ff15358037b19101862bfa2b5fa (21:26): thanks",
        "878b627b013f0c465ec2be26325ce80d (21:26): below that also shows how you can pull/push diffs between the two buffers",
        "d195ce1b2170a100a804ab391541225d (21:27): hi, i'm trying to find/replace strings of text (that contain quotes, symbols, etc). what is the best way to accomplish this?",
        "24463ff15358037b19101862bfa2b5fa (21:27): i'm just going to have to read diff.txt in general",
        "a0ad718406c783c9ef0aa61873ba7bee (21:27): rusa: :help find-replace",
        "878b627b013f0c465ec2be26325ce80d (21:28): trby: yeah. it's one of the shorter help files and is quite useful :)",
        "d195ce1b2170a100a804ab391541225d (21:30): i'm looking at :help find-replace and i am confused about how i would apply substitution to text with symbols or punctuation. would i escape these somehow?",
        "fb2c4f3e688db2a676f292cd15961a59 (21:30): rusa: :he magic",
        "24463ff15358037b19101862bfa2b5fa (21:31): jamessan - i'm on old-school unix hacker (used ed before vi) - haven't kept up with all the vim technology",
        "d58eb57e8485abedb5b04c6548cc81e1 (21:36): are there corresponding : commands for m and '?",
        "24463ff15358037b19101862bfa2b5fa (21:40): eulex: :help mark",
        "d58eb57e8485abedb5b04c6548cc81e1 (21:41): trby, oh, ty :)",
        "24463ff15358037b19101862bfa2b5fa (21:42): eulex - i don't use the : commands, but i know there's :mark, and maybe a :jump one",
        "d195ce1b2170a100a804ab391541225d (21:44): Zathrus, thank you",
        "d58eb57e8485abedb5b04c6548cc81e1 (21:46): after thinking a bit more I don't think that will help me. I'm searching for a way of creating imaps for jumping to and creating named marks. so, I'd preferably need to define an imap that takes an 'argument'.",
        "4797d6c9a384b9d252cb39a172693d14 (22:07): is there any way to edit a directory structure in vim? Ie rename folders, files and such in vim",
        "fb2c4f3e688db2a676f292cd15961a59 (22:09): sek: :he Explore",
        "fb2c4f3e688db2a676f292cd15961a59 (22:09): may also be doable w/ :he browse -- dunno",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:09): you would probably like vifm - &quot;Vifm is a ncurses based file manager with vi like keybindings....&quot; vifm.sourceforge.net/",
        "2259f65ded2b02851864d15ede8b4eff (22:10): <a href=\"http://vifm.sourceforge.net/\">http://vifm.sourceforge.net/</a>",
        "4797d6c9a384b9d252cb39a172693d14 (22:14): ah, nice. thanks",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:14): Zathrus: thx, didn't know about that",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:14): sek, thx for asking, I think I'm going to like vifm",
        "4797d6c9a384b9d252cb39a172693d14 (22:17): :Explore seems to be quite good, need to figure out how to enable modifying",
        "fca2fab4a7479513eb5b2990a79704d3 (22:17): moin",
        "4797d6c9a384b9d252cb39a172693d14 (22:21): Zathrus, wwalker this :Explorer doesnt really seem to work how i want though. Id like to rename files like one was making changes to a normal file",
        "4797d6c9a384b9d252cb39a172693d14 (22:21): with R you can rename, but its just like using mv really",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:22): ??  mv is essentially how one renames a normal file.",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:23): sek: what do you want it to do?",
        "738a97ad2084aecd3dbffe284d09c3b8 (22:23): help, how to fix this? <a href=\"http://tinyurl.com/cx7h8\">http://tinyurl.com/cx7h8</a>",
        "4797d6c9a384b9d252cb39a172693d14 (22:23): yeah, well all :Explore does using R is ask for the second argument of an mv call",
        "4797d6c9a384b9d252cb39a172693d14 (22:23): wwalker, like to edit the file/directory names like they were text in a vim file",
        "fb2c4f3e688db2a676f292cd15961a59 (22:23): wwalker: he doesn't want to type the whole name I'm guessing",
        "4797d6c9a384b9d252cb39a172693d14 (22:23): and perform regular expressions and all that jazz",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:24): someone kickban FreeBugs",
        "ded01cf47cdca62f9adcfd25cb1b3127 (22:24): any particular reason?",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:24): posting porn to the channel",
        "fb2c4f3e688db2a676f292cd15961a59 (22:25): wwalker: the proper thing to do is have him k-lined.",
        "4797d6c9a384b9d252cb39a172693d14 (22:25): heh, i've been conned into seeing that website before",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:26): Zathrus: I'm an amatuer at IRC.  Do I contact a freenode admin for that?",
        "fb2c4f3e688db2a676f292cd15961a59 (22:26): wwalker: yes",
        "ded01cf47cdca62f9adcfd25cb1b3127 (22:26): k-lines don't work on tor",
        "5dcabe11e7d82c368aacf626a66bbb77 (22:27): for everyone else DON'T go to FreeBugs TINYURL above at work!!!!",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (22:37): Hey. I am having troubles with VIM not displaying the ' character in opened files",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (22:38): I do have unicode support and the files are saved by another editor in utf-8 and are loaded by vim again in utf-8",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (22:38): i just get random chars whit random behaviour on cursor movement over them",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a (22:38): vim7 is what I use",
        "1ed63740b62505736586b09814ca7ea9 (22:40): I've been using vimspell.vim for some time - does that conflict with builtin spellcheck in vim7?",
        "fca2fab4a7479513eb5b2990a79704d3 (22:43): nemo_work:  i have moved from vimspell to the spellcheck in vim7. its much faster",
        "1ed63740b62505736586b09814ca7ea9 (22:44): not as familiar with their spellcheck.  guess I'll have to dig around for the help page",
        "fca2fab4a7479513eb5b2990a79704d3 (22:44): really easy"
    ],
    "person_ids": [
        "c0fa970a435d18d97bb52cb57780927d",
        "fb2c4f3e688db2a676f292cd15961a59",
        "19a2a340e287d7c9507bca860a287861",
        "4c002476425f2c87dbc7d5383704d9d7",
        "878b627b013f0c465ec2be26325ce80d",
        "24463ff15358037b19101862bfa2b5fa",
        "d195ce1b2170a100a804ab391541225d",
        "a0ad718406c783c9ef0aa61873ba7bee",
        "d58eb57e8485abedb5b04c6548cc81e1",
        "4797d6c9a384b9d252cb39a172693d14",
        "5dcabe11e7d82c368aacf626a66bbb77",
        "2259f65ded2b02851864d15ede8b4eff",
        "fca2fab4a7479513eb5b2990a79704d3",
        "738a97ad2084aecd3dbffe284d09c3b8",
        "ded01cf47cdca62f9adcfd25cb1b3127",
        "0ded3c5d7daaf36aa8c2e1d8479a0c5a",
        "1ed63740b62505736586b09814ca7ea9"
    ]
}