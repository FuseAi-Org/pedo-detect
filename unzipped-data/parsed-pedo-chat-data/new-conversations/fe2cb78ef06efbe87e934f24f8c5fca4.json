{
    "id": "fe2cb78ef06efbe87e934f24f8c5fca4",
    "messages": [
        "d54811fb5732a2f78abf6dcfc54ce898 (23:13): I know there's a way to search for the text currently highlighted..but I've forgotten the hotky.",
        "4969e383a78d3407b54160eb0de4b90b (23:13): n  ?",
        "4969e383a78d3407b54160eb0de4b90b (23:13): Run the search again",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:14): n goes to next match",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:16): Shift+8 or *",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:17): search for word nearest the cursor",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:17): that's close",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:24): hmm got this vmap / y/&lt;C-R&gt;&quot;&lt;CR&gt; to map / to a search on highlighted text...but seems to only work for strings without any special chars",
        "298a07a2ed4800b42ea82a506714e120 (23:27): krunk-: <a href=\"http://vim.sf.net/tips/tip.php?tip_id=780\">http://vim.sf.net/tips/tip.php?tip_id=780</a>",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:43): ipkiss: holy sweetness",
        "d54811fb5732a2f78abf6dcfc54ce898 (23:43): ipkiss: you rock",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:05): I just downloaded perl programming support (perl.vim) how do I execute this script?",
        "828997d3329f6368569d69d0d2baa3e6 (00:10): signuts: put it in ~/.vim/plugin/",
        "828997d3329f6368569d69d0d2baa3e6 (00:11): err.. assuming it's a plugin, and not a syntax file that is",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:11): goflyapig, I have no idea",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:11): is there an easy way to tell?",
        "828997d3329f6368569d69d0d2baa3e6 (00:12): where did you download it?  scripts on vim.org usually have install instructions",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:12): it tells me to put it in $RUNTIME/compiler and run make . I found that path in usr/share/vim/7/compiler but hae no makefile",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:13): looking at the scripts It doesn't appear to do much I was just more curious to try it then keep the damn thing installed",
        "828997d3329f6368569d69d0d2baa3e6 (00:14): you can use :source to run a script once, :help :source",
        "efa521abd0dcb30ad45f52bf45a87f3d (00:14): goflyapig, gotcha.",
        "abe59155aa41ae19e4ea964e9dd4b200 (00:24): <a href=\"http://www.bagdadsoftware.de&quot;\">http://www.bagdadsoftware.de&quot;</a>)",
        "1ed63740b62505736586b09814ca7ea9 (00:25): Hey, is there some way to make gvim automatically load a folding definition?",
        "1ed63740b62505736586b09814ca7ea9 (00:25): just like a syntax highlighting?",
        "1ed63740b62505736586b09814ca7ea9 (00:25): in this case, for an xml file",
        "828997d3329f6368569d69d0d2baa3e6 (00:27): folding is defined in syntax files, so yeah.  put it in your ~/.vim/after/syntax directory",
        "1ed63740b62505736586b09814ca7ea9 (00:28): ah. that was what I was hoping to avoid.",
        "1ed63740b62505736586b09814ca7ea9 (00:28): the lazy person in me wants to be able to open an arbitrary file and have a syntax already defined",
        "828997d3329f6368569d69d0d2baa3e6 (00:29): hm?",
        "9d30e576ef22dcdb282ab9f5d6fb0c69 (00:29): you'll just need a time machine and a syntax expert",
        "1ed63740b62505736586b09814ca7ea9 (00:29): goflyapig: just like vim comes with a bunch of syntax highlighting",
        "828997d3329f6368569d69d0d2baa3e6 (00:30): yes... ?  files in after/syntax are loaded in addition to the standard syntax files",
        "1ed63740b62505736586b09814ca7ea9 (00:31): yeah, I mean while I *am* looking around on vim.org for definitions for java, C, xml etc",
        "1ed63740b62505736586b09814ca7ea9 (00:31): I was kinda hoping they might already exist in vim",
        "1ed63740b62505736586b09814ca7ea9 (00:31): and I just wasn't seeing them",
        "1ed63740b62505736586b09814ca7ea9 (00:32): <a href=\"http://www.vim.org/scripts/script.php?script_id=1438\">http://www.vim.org/scripts/script.php?script_id=1438</a>",
        "1ed63740b62505736586b09814ca7ea9 (00:32): guess that'll do for XML",
        "fb2c4f3e688db2a676f292cd15961a59 (00:43): nemo_work: vim already has all of that; if you want it to default to a certain folding level it can do that too.",
        "1ed63740b62505736586b09814ca7ea9 (00:45): Zathrus: really? odd.  I opened an XML file and tried various folding options.",
        "1ed63740b62505736586b09814ca7ea9 (00:45): couldn't get a fold all to trigger",
        "1ed63740b62505736586b09814ca7ea9 (00:45): (well, didn't do indent, since vim didn't want to autoindent the xml, it seemed)",
        "fb2c4f3e688db2a676f292cd15961a59 (00:45): nemo_work: :he 'foldlevel",
        "1ed63740b62505736586b09814ca7ea9 (00:45): ... if I say collapse all, shouldn't that just, well, collapse all?",
        "fb2c4f3e688db2a676f292cd15961a59 (00:46): yes. If it doesn't, then either vim doesn't recognize the filetype (:set ft?), or you don't have plugins enabled, or the file is just screwed.",
        "1ed63740b62505736586b09814ca7ea9 (00:47): filetype=xml",
        "fb2c4f3e688db2a676f292cd15961a59 (00:47): and what does :filetype   say?",
        "1ed63740b62505736586b09814ca7ea9 (00:47): file I'm testing on is a short one",
        "1ed63740b62505736586b09814ca7ea9 (00:47): type on, plugin on, indent off",
        "fb2c4f3e688db2a676f292cd15961a59 (00:48): well there's your answer on why it won't indent.",
        "1ed63740b62505736586b09814ca7ea9 (00:48): ah",
        "1ed63740b62505736586b09814ca7ea9 (00:48): yeah",
        "1ed63740b62505736586b09814ca7ea9 (00:48): that is true",
        "1ed63740b62505736586b09814ca7ea9 (00:48): but unrelated to second issue",
        "1ed63740b62505736586b09814ca7ea9 (00:48): anyway, I had already exited gvim once :)",
        "1ed63740b62505736586b09814ca7ea9 (00:48): er. unrelated to main issue",
        "fb2c4f3e688db2a676f292cd15961a59 (00:48): depends on how the xml syntax/folding works.",
        "fb2c4f3e688db2a676f292cd15961a59 (00:48): and what you have foldtype set to",
        "1ed63740b62505736586b09814ca7ea9 (00:48): set foldtype to syntax",
        "1ed63740b62505736586b09814ca7ea9 (00:48): then zM",
        "fb2c4f3e688db2a676f292cd15961a59 (00:48): did you :set foldenable   ?",
        "1ed63740b62505736586b09814ca7ea9 (00:49): yes",
        "fb2c4f3e688db2a676f292cd15961a59 (00:50): dunno then.",
        "1ed63740b62505736586b09814ca7ea9 (00:50): Zathrus: <a href=\"http://m8y.org/yahooloc.xml\">http://m8y.org/yahooloc.xml</a>",
        "1ed63740b62505736586b09814ca7ea9 (00:50): file I am testing on",
        "1ed63740b62505736586b09814ca7ea9 (00:50): can you get that one to fold?",
        "1ed63740b62505736586b09814ca7ea9 (00:50): and yes, broke it up over multiple lines :)",
        "1ed63740b62505736586b09814ca7ea9 (00:50): %s/&gt;/&gt;",
        "1ed63740b62505736586b09814ca7ea9 (00:50): ^M/g",
        "828997d3329f6368569d69d0d2baa3e6 (00:54): nemo_work: a lot of syntax files make you set a variable to enable syntax",
        "828997d3329f6368569d69d0d2baa3e6 (00:54): looking at xml.vim, you need to :let xml_syntax_folding = 1",
        "828997d3329f6368569d69d0d2baa3e6 (00:54): s/enable syntax/enable folding",
        "fb2c4f3e688db2a676f292cd15961a59 (00:54): I can make it fold w/ foldmethod=indent; but not syntax. I don't do xml much though.",
        "1ed63740b62505736586b09814ca7ea9 (00:58): did the let",
        "1ed63740b62505736586b09814ca7ea9 (00:58): still didn't fold on syntax",
        "1ed63740b62505736586b09814ca7ea9 (00:58): oh well.",
        "1ed63740b62505736586b09814ca7ea9 (00:59): I'll give that script I found a try, sometime.",
        "828997d3329f6368569d69d0d2baa3e6 (00:59): hm. worked for me.",
        "1ed63740b62505736586b09814ca7ea9 (00:59): on the file I'm testing on?",
        "828997d3329f6368569d69d0d2baa3e6 (00:59): yes",
        "1ed63740b62505736586b09814ca7ea9 (00:59): hm",
        "1ed63740b62505736586b09814ca7ea9 (00:59): running 6.4 here",
        "1ed63740b62505736586b09814ca7ea9 (00:59): maybe xml.vim is new",
        "828997d3329f6368569d69d0d2baa3e6 (00:59): try doing :syntax enable to reload the syntax file",
        "828997d3329f6368569d69d0d2baa3e6 (01:02): :e $VIMRUNTIME/syntax/xml.vim",
        "1ed63740b62505736586b09814ca7ea9 (01:09): woot",
        "1ed63740b62505736586b09814ca7ea9 (01:09): that did it",
        "1ed63740b62505736586b09814ca7ea9 (01:09): the :syntax enable that is",
        "1ed63740b62505736586b09814ca7ea9 (01:10): odd.",
        "d79855d3d04d133df841ed0791c75d8f (01:17): After the code is folded I use '' l '' to unfold it. Can I fold it somehow again with a key comand?",
        "828997d3329f6368569d69d0d2baa3e6 (01:18): zc to close a fold, za to toggle.  :help fold-commands",
        "cec385179d1101e29be91f3cb6aeb31d (01:20): What is the command to hide all lines except those found in a search?  And the corresponding command to show everything again?",
        "1b2f1832ad0292cbbb51d26c44b6ff0a (01:22): this is hacky, but: &quot;:v:pattern:norm dd&quot; to hide them  and u to restore them",
        "cec385179d1101e29be91f3cb6aeb31d (01:23): boggy-, OK, I'll try that, thanks alot.  Doesn't look like there's any &quot;shortcut&quot; then - but that's alright, VIM does so much other stuff.",
        "1b2f1832ad0292cbbb51d26c44b6ff0a (01:24): i sometimes use &quot;:g:pattern&quot; to show the found lines in the message window",
        "d79855d3d04d133df841ed0791c75d8f (01:25): golfypig: thanks.",
        "cec385179d1101e29be91f3cb6aeb31d (01:26): boggy-, Both of your suggestions work great, I'll put them in my notebook - thanks again.",
        "1b2f1832ad0292cbbb51d26c44b6ff0a (01:27): np"
    ],
    "person_ids": [
        "d54811fb5732a2f78abf6dcfc54ce898",
        "4969e383a78d3407b54160eb0de4b90b",
        "298a07a2ed4800b42ea82a506714e120",
        "efa521abd0dcb30ad45f52bf45a87f3d",
        "828997d3329f6368569d69d0d2baa3e6",
        "abe59155aa41ae19e4ea964e9dd4b200",
        "1ed63740b62505736586b09814ca7ea9",
        "9d30e576ef22dcdb282ab9f5d6fb0c69",
        "fb2c4f3e688db2a676f292cd15961a59",
        "d79855d3d04d133df841ed0791c75d8f",
        "cec385179d1101e29be91f3cb6aeb31d",
        "1b2f1832ad0292cbbb51d26c44b6ff0a"
    ]
}