{
    "id": "6a0d03d692fbc4032892f740a085516e",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (21:35): to be fair",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:35): browsers are implementing WebSocket as is",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:35): though I sort of think that's also because it wasn't really worth the fight",
        "06cb330920ae58e1614c9145d983b3d6 (21:39): heh",
        "06cb330920ae58e1614c9145d983b3d6 (21:40): posts saying &quot;no, big waste of time&quot; are, ironically, the biggest wastes of time",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:40): I meant more fighting for an alternative simpler version",
        "3e06fa3927cbdf4e9d93ba4541acce86 (21:40): Is there a rest api anywhere to query the HTML specs?",
        "14b77d951d54898766bd96fd3102e536 (21:41): ad5d040f5ad92761503984edda9ae1c5 - latest (regular) Safari is Version 5.1 (6534.50) ... so they may well have already fixed the issue you hit earlier",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:42): 3e06fa3927cbdf4e9d93ba4541acce86, nope",
        "ad5d040f5ad92761503984edda9ae1c5 (21:42): 14b77d951d54898766bd96fd3102e536, that's right, that's what b8810fee2f4a71f849f3f7409546d1d9 told me as well. looks like 5.1 is the first version that actually includes an HTML5 parser.",
        "3e06fa3927cbdf4e9d93ba4541acce86 (21:42): darn.",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:45): Safari 5.1 usage share is growing more slowly than I had expected",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:45): apparently not",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:46): partly the fault of Leopard and 5.1 not being available for Leopard",
        "c480405f460f7a61964569640a6cd059 (21:59): 69b0d3dfe919a6b860a9fac82de52a7e: (i think i asked elsewhere, but I can't find the message now, appologies if it's a repeat) is there a reason why websockets doesn't set .origin on the message events",
        "fd9ef1223e855714294498ebfde79f98 (22:02): b8810fee2f4a71f849f3f7409546d1d9: check 5.0.6 for leopard",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:07): fd9ef1223e855714294498ebfde79f98: that e-mail doesn't suggest they're going to use the same text, just fork the functionality",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:07): c480405f460f7a61964569640a6cd059: what would the origin be?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:08): c480405f460f7a61964569640a6cd059: by definition if you can connect to a websocket, it's treated as same-origin",
        "a11aabeeceeae6b8cb5d12ea06b56554 (22:09): b8810fee2f4a71f849f3f7409546d1d9: Yeah, Apple seem to be having a harder time getting people upgrading now.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (22:09): b8810fee2f4a71f849f3f7409546d1d9: I wonder if Leopard will still get security updates.",
        "e29be37c2febc43a0d21a1f8efa351af (22:10): 88d4d34a8064a4ff39fd5e144eea7762: hey",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:10): e29be37c2febc43a0d21a1f8efa351af, hey.",
        "e29be37c2febc43a0d21a1f8efa351af (22:10): what kind of caching headers are you using on http://aryeh.name/spec/editing/editing.html",
        "e29be37c2febc43a0d21a1f8efa351af (22:10): my browser restarted today",
        "e29be37c2febc43a0d21a1f8efa351af (22:11): but it showed me the july 26 version of the doc",
        "e29be37c2febc43a0d21a1f8efa351af (22:11): a reload got me the july 29 version",
        "e29be37c2febc43a0d21a1f8efa351af (22:11): s/the/a/g",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:11): July 29 is the most recent published one.",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:11): if i wanted to add a warning about clickjacking attacks to the html spec, anyone have any suggestions on where i should put it?",
        "e29be37c2febc43a0d21a1f8efa351af (22:11): i guess that tabcandy doesn't honor that",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:11): The WIP one is http://aryeh.name/tmp/editing/editing.html, but that's changing as I work on it in real time.",
        "e29be37c2febc43a0d21a1f8efa351af (22:11): 69b0d3dfe919a6b860a9fac82de52a7e: near &lt;iframe&gt;s?",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:12): I'm moving zillions of &lt;!-- comments --&gt; to be viewable without looking at the source, which is taking a while.",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:14): e29be37c2febc43a0d21a1f8efa351af: why near iframes? that's just one way to do clickjacking, it's not where an author would look for how to avoid getting p0wned, surely",
        "8b3687499080633e1898fa1dd209ef81 (22:15): Rendering :)",
        "e29be37c2febc43a0d21a1f8efa351af (22:15): http://www.whatwg.org/specs/web-apps/current-work/multipage/dom.html#security-document ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:15): hmm",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:15): i'm thinking maybe the intro section",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): maybe under &quot;A quick introduction to HTML&quot;",
        "e29be37c2febc43a0d21a1f8efa351af (22:16): i'd search for it under a security section",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:16): Do you have some kind of general security advice section?",
        "e29be37c2febc43a0d21a1f8efa351af (22:16): http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#security-nav",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:16): Why provide only this security advice and not other security advice too?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): 88d4d34a8064a4ff39fd5e144eea7762: this is basically what this will become, i thikn",
        "e29be37c2febc43a0d21a1f8efa351af (22:16): 88d4d34a8064a4ff39fd5e144eea7762: he has 5 or so",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): 88d4d34a8064a4ff39fd5e144eea7762: i was going to mention a few other things too",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): if i put it in the intro section",
        "e29be37c2febc43a0d21a1f8efa351af (22:17): maybe 20",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:17): It makes sense to include advice about XSS, CSRF, etc. before you start on weird stuff like clickjacking.",
        "e29be37c2febc43a0d21a1f8efa351af (22:17): yeah, clickjacking should not be the first thing to draft",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): yeah",
        "e29be37c2febc43a0d21a1f8efa351af (22:17): start w/ XSS",
        "e29be37c2febc43a0d21a1f8efa351af (22:18): since the version of clickjacking that you seem to mean is actually a derivation from XSS",
        "e29be37c2febc43a0d21a1f8efa351af (22:19): I guess after quick introduction wouldn't be a bad place",
        "e29be37c2febc43a0d21a1f8efa351af (22:19): `Security Concerns`",
        "e29be37c2febc43a0d21a1f8efa351af (22:22): &gt; DOM trees contain several kinds of nodes, in particular a DOCTYPE node, elements, text nodes, and comment nodes.",
        "e29be37c2febc43a0d21a1f8efa351af (22:22): 69b0d3dfe919a6b860a9fac82de52a7e: s/elements/element nodes/ ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:22): *shrug*",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:22): it's right either way",
        "e29be37c2febc43a0d21a1f8efa351af (22:23): the change makes the sentence more consistent..",
        "8b3687499080633e1898fa1dd209ef81 (22:24): I'd file a tracker issue",
        "e29be37c2febc43a0d21a1f8efa351af (22:24): does that require a bugzilla account?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:25): let's focus on actual bugs and not on whether sentences might be slightly more polished please :-P",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:25): typos are one thing, i don't mind fixing those",
        "8b3687499080633e1898fa1dd209ef81 (22:25): 69b0d3dfe919a6b860a9fac82de52a7e, the pedants must win!",
        "e29be37c2febc43a0d21a1f8efa351af (22:25): your document is too long! and you're making it longer! ignore the fact that i wanted to make it a word longer ;-)",
        "8b3687499080633e1898fa1dd209ef81 (22:26): Like me",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:26): but when the sentence is accurate, correct, precise, grammatically sound, spelt correctly, scans well, and merely suffers from a slight inconsistency, let's just let it slide",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:26): e29be37c2febc43a0d21a1f8efa351af, I consistently use all node types as standalone nouns, like &quot;Comment&quot; or &quot;Element&quot;, except &quot;Text&quot;, where I say &quot;Text node&quot;.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:27): Like &quot;If node is a Comment, do X.  If node is a Text node, do Y.&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:27): Or &quot;If node is a Text, Comment, or ProcessingInstruction node, do Z.&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:27): Because &quot;If node is a Text&quot; sounds silly.",
        "e29be37c2febc43a0d21a1f8efa351af (22:27): 88d4d34a8064a4ff39fd5e144eea7762: that would be a reasonable strategy, but from context, it isn't the one 69b0d3dfe919a6b860a9fac82de52a7e is using :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:27): yeah if a bug does get filed on that particular thing, i'm just removing the last &quot;node&quot;, not adding one after &quot;elements&quot;",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:27): Evidently not.",
        "e29be37c2febc43a0d21a1f8efa351af (22:27): 69b0d3dfe919a6b860a9fac82de52a7e: i'm fine w/ that fix :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:28): cross-site scripting is essentially when you don't escape user input in html; sql injection is the same with sql; what do you call the similar thing where you don't validate user input on the server and so allow out-of-bounds input to be stored in the db?",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:28): 69b0d3dfe919a6b860a9fac82de52a7e, &quot;not a vulnerability by itself",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:28): &quot;",
        "e29be37c2febc43a0d21a1f8efa351af (22:29): lol",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:29): MediaWiki, for instance, doesn't escape anything before storing in the DB, as a rule.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:29): It trusts text content in the DB as untrusted.",
        "e29be37c2febc43a0d21a1f8efa351af (22:29): 69b0d3dfe919a6b860a9fac82de52a7e: failure to enforce boundary constraints",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:29): All escaping is done as close to output time as possible, so it's easy to audit.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:29): It's much harder to escape at input time, since input can come from a zillion different places that you have varying degrees of control over.",
        "e29be37c2febc43a0d21a1f8efa351af (22:29): 88d4d34a8064a4ff39fd5e144eea7762: what if there isn't `output` in the normal sense?",
        "e29be37c2febc43a0d21a1f8efa351af (22:29): such as a join?",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:30): Then what vulnerability is there?",
        "8b3687499080633e1898fa1dd209ef81 (22:30): /nick Robert'); DROP TABLE Students;--",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:30): i mean like checking that an &quot;age&quot; field is &gt;=0",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:30): By &quot;output&quot; I mean &quot;use&quot;.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:30): 69b0d3dfe919a6b860a9fac82de52a7e, store it in the database as an unsigned integer?  :)",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:30): But okay.",
        "e29be37c2febc43a0d21a1f8efa351af (22:30): s/0/18/",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:30): sure there's lots of solutions but what is the vulnerability called?",
        "e29be37c2febc43a0d21a1f8efa351af (22:30): or 21 if you agree w/ Nancy Reagan..",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:30): &quot;not validating user input&quot;",
        "e29be37c2febc43a0d21a1f8efa351af (22:31): failure to enforce boundary constraints ...",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:31): yeah that's all i could come up with too",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:31): i was hoping there was a buzzword like &quot;sql injection&quot; or &quot;xss&quot;",
        "e29be37c2febc43a0d21a1f8efa351af (22:31): not everything is cool enough to get a buzzword",
        "e29be37c2febc43a0d21a1f8efa351af (22:33): i think `failure to santize &lt;whatever&gt;` is probably the closest to a buzzword, but i'm not sure that matches what you want",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:33): I don't know of a way to phrase it positively (without &quot;failing&quot;, &quot;not&quot;, etc.)",
        "e29be37c2febc43a0d21a1f8efa351af (22:33): you can review cwe to see `failure to santize` appearing a bunch of times",
        "e29be37c2febc43a0d21a1f8efa351af (22:33): `improper input validation`",
        "e29be37c2febc43a0d21a1f8efa351af (22:33): doesn't technically have a negative :)",
        "e29be37c2febc43a0d21a1f8efa351af (22:33): that's from CWE-74",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:34): &quot;Input validation&quot; is definitely the term for the thing you should be doing.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:34): For the thing you shouldn't be doing, &quot;improper input validation&quot; sounds like as good a term as any.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:34): It's not an exploit by itself, so it doesn't get a buzzword.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:34): Well, I guess it can be a minor exploit by itself.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:35): Like if you have maxlength and users can just remove it in their favorite web development tool and submit stuff that's whatever length they want, that might be classified as a security vulnerability, insofar as it involves users doing something with your site that they aren't supposed to be able to.",
        "ab7faae5d7b250ea8606486575f8f79c (22:35): One occasional problem is storing a user's IP address in a database, when you get it from some function that understands X-Forwarded-For, when not running behind a proxy that sets X-Forwarded-For, so malicious users can set it to whatever they want and trick you into storing the wrong IP address",
        "8b3687499080633e1898fa1dd209ef81 (22:36): So, Bert thinks newline normalization in attributes is the biggest problem when parsing HTML with an SGML parser?",
        "ab7faae5d7b250ea8606486575f8f79c (22:36): which is sort of related to storing wrong information in a database, but separate from constraint validation (which any self-respecting SQL database ought to be enforcing automatically)",
        "e29be37c2febc43a0d21a1f8efa351af (22:37): ab7faae5d7b250ea8606486575f8f79c: in theory you're supposed to validate the source against a list of trusted proxies",
        "e29be37c2febc43a0d21a1f8efa351af (22:38): 8b3687499080633e1898fa1dd209ef81: that means bert doesn't think html as sgml has many problems?",
        "e29be37c2febc43a0d21a1f8efa351af (22:38): (like Comments or NetTags ?)",
        "ab7faae5d7b250ea8606486575f8f79c (22:38): In practice people forget to do that",
        "8b3687499080633e1898fa1dd209ef81 (22:38): I wouldn't dare to claim I understand Bert",
        "e29be37c2febc43a0d21a1f8efa351af (22:38): heh",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:39): ab7faae5d7b250ea8606486575f8f79c, Wikipedia was actually hit by a subtle version of that once.",
        "e29be37c2febc43a0d21a1f8efa351af (22:39): 88d4d34a8064a4ff39fd5e144eea7762: nice",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:39): Squid did understand X-Forwarded-For and sanitized it, but the PHP variables used to access it treated X_Forwarded_For the same as X-Forwarded-For, and Squid didn't.",
        "e29be37c2febc43a0d21a1f8efa351af (22:39): nice",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:40): MediaWiki has a whitelist of trusted XFF providers that it uses, including various major ISPs in addition to its own internal Squids and Varnishes.",
        "e29be37c2febc43a0d21a1f8efa351af (22:40): &gt; Each element in the DOM tree is represented by an object, and these objects have APIs so that they can be manipulated.",
        "e29be37c2febc43a0d21a1f8efa351af (22:40): 8b3687499080633e1898fa1dd209ef81, 88d4d34a8064a4ff39fd5e144eea7762 : what does `manipulated` mean to you?",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:41): It's kind of vague.",
        "e29be37c2febc43a0d21a1f8efa351af (22:41): to me, i think `modified`, but perhaps my dictionary is flawed",
        "8b3687499080633e1898fa1dd209ef81 (22:41): Change any kind of internal state, I guess",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:41): Basically &quot;modified&quot;, yeah.",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:41): Very general.",
        "8b3687499080633e1898fa1dd209ef81 (22:42): :)",
        "e29be37c2febc43a0d21a1f8efa351af (22:42): but we all selected a word meaning `modify`",
        "e29be37c2febc43a0d21a1f8efa351af (22:42): which to me is somewhat exclusive of the concept `to inspect`",
        "8b3687499080633e1898fa1dd209ef81 (22:42): Mm",
        "88d4d34a8064a4ff39fd5e144eea7762 (22:44): I guess.",
        "e29be37c2febc43a0d21a1f8efa351af (22:45): i'll take an Mm and an I guess :)",
        "e29be37c2febc43a0d21a1f8efa351af (22:58): edb259c0e0038f38bb200bc20c8cbf7e: you around?",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:05): not really",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:07): but",
        "edb259c0e0038f38bb200bc20c8cbf7e (23:07): DOM Core defines &quot;element&quot; to mean &quot;Element node&quot;",
        "e29be37c2febc43a0d21a1f8efa351af (23:14): edb259c0e0038f38bb200bc20c8cbf7e: my question to you was different",
        "e29be37c2febc43a0d21a1f8efa351af (23:14): (but it seems my irc connect is too flaky for such purposes)"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "06cb330920ae58e1614c9145d983b3d6",
        "3e06fa3927cbdf4e9d93ba4541acce86",
        "14b77d951d54898766bd96fd3102e536",
        "ad5d040f5ad92761503984edda9ae1c5",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "c480405f460f7a61964569640a6cd059",
        "fd9ef1223e855714294498ebfde79f98",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "e29be37c2febc43a0d21a1f8efa351af",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "8b3687499080633e1898fa1dd209ef81",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}