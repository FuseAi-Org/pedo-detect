{
    "id": "cdccbee0ceed381f27f9fedfc46a7df0",
    "messages": [
        "b5139826f2e50e3e718411eb2b70c526 (15:36): was canvas influenced by postscript?",
        "2c39bccd623947fa6224ea57d2a727de (15:36): ask Apple :)",
        "2c39bccd623947fa6224ea57d2a727de (15:37): but I think that might be the case",
        "ab7faae5d7b250ea8606486575f8f79c (15:38): b5139826f2e50e3e718411eb2b70c526: I'd guess PDF is part of the chain that led to the canvas API",
        "b5139826f2e50e3e718411eb2b70c526 (15:38): it's because function names are similar :-)",
        "ab7faae5d7b250ea8606486575f8f79c (15:39): b5139826f2e50e3e718411eb2b70c526: like maybe PS -&gt; PDF -&gt; Quartz -&gt; canvas, or something, though I know very little about anything but the last of those stages, so maybe I'm totally wrong",
        "b5139826f2e50e3e718411eb2b70c526 (15:39): ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:00): ab7faae5d7b250ea8606486575f8f79c: yes, it counts as a bug. I was relying on the XML parser enforcing input XML 1.0-compliance. I guess one can't trust any third-party code.",
        "2c39bccd623947fa6224ea57d2a727de (16:01): to wit, that is XML 1.0 compliant",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:02): umm. XML 1.0 plus Namespaces in XML 1.0",
        "2c39bccd623947fa6224ea57d2a727de (16:02): that's not what I meant, but I'm wrong",
        "2c39bccd623947fa6224ea57d2a727de (16:02): even in 5th edition xmlns:x=&quot;&quot; is incorrect",
        "ab7faae5d7b250ea8606486575f8f79c (16:03): b8810fee2f4a71f849f3f7409546d1d9: Does the parser ever claim to be an XML 1.0 parser?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:04): ab7faae5d7b250ea8606486575f8f79c: in my defense, my serializer meets its spec. but my choice of SAX event generator doesn't. So you win.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:04): good question",
        "ab7faae5d7b250ea8606486575f8f79c (16:04): b8810fee2f4a71f849f3f7409546d1d9: But your serialiser's spec seems to be &quot;if you give it input that won't result in ill-formed output, then it will serialise to well-formed output&quot; :-p",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:06): Yay! Now building index of RFCs from XML index in less than two seconds.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:06): ab7faae5d7b250ea8606486575f8f79c: the spec is that text content, attribute values and PI data are considered untrusted but namespace mappings, element names, attribute names and PI targets are considered trusted",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:06): (from a local copy of the XML index \u201a\u00c4\u00ee doing it with urllib2 and getting the index takes around five minutes :P)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:06): ab7faae5d7b250ea8606486575f8f79c: also, namespace mappings are not required",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:06): ab7faae5d7b250ea8606486575f8f79c: so in this case, a namespace mapping is fed to the serializer and the mapping is trusted",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:08): ab7faae5d7b250ea8606486575f8f79c: it seems that SAXParserFactory is silent on XML version",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:10): let this be evidence that XML 1.1 is Trouble",
        "a924fb58d2c25874322f4e5126f608b9 (16:14): Who is the picture of in the latest lastweek?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:14): ab7faae5d7b250ea8606486575f8f79c: it turns out that SAX makes detecting the situation pretty annoying, too.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:15): a924fb58d2c25874322f4e5126f608b9: Hixie",
        "b5139826f2e50e3e718411eb2b70c526 (16:19): thanks for all, bye",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:21): Ah, without glasses.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:25): what does the following sentence mean? &quot;That the world has been doing evil while processing XML as a browser format (MSIE and Mozilla being potentially the biggest actors) is not debatable anymore and justifies fully the lack of widespreadness.&quot;",
        "2c39bccd623947fa6224ea57d2a727de (16:26): I have no idea; I was also wondering how we obscure prossing models in browsers",
        "ab7faae5d7b250ea8606486575f8f79c (16:26): didn't understand it when he first read",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:26): Where is that from?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:27): a11aabeeceeae6b8cb5d12ea06b56554: www-tag",
        "ab7faae5d7b250ea8606486575f8f79c (16:27): (nor any subsequent times I read it)",
        "2c39bccd623947fa6224ea57d2a727de (16:28): s/prossing/processing/ (maybe this is how)",
        "57d876083caf517f49e8cf5e03307450 (16:30): lemme try to understand it",
        "57d876083caf517f49e8cf5e03307450 (16:31): a. The world has been doing evil",
        "57d876083caf517f49e8cf5e03307450 (16:31): a.1 This evil is processing XML as a browse format",
        "57d876083caf517f49e8cf5e03307450 (16:31): a.2 MSIE and Mozilla are potentially the biggest actors",
        "57d876083caf517f49e8cf5e03307450 (16:31): b. This fact is not debatable anymore",
        "57d876083caf517f49e8cf5e03307450 (16:32): c. This fact also justifies why it has failed to become widespread",
        "57d876083caf517f49e8cf5e03307450 (16:32): although the antecedent of the last it eludes me",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:32): 57d876083caf517f49e8cf5e03307450: so is &quot;the world&quot; or &quot;MSIE and Mozilla&quot; doing evil?",
        "2c39bccd623947fa6224ea57d2a727de (16:32): I'm guessing he meant that XML did not became widespread because browsers processed it as HTML and not as XML and the fault lies with Mozilla/MSIE",
        "57d876083caf517f49e8cf5e03307450 (16:33): I'm guessing &quot;the world&quot; == browser vendors, primarily &quot;MSIE and Mozilla&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:33): but Mozilla does process XML as XML",
        "2c39bccd623947fa6224ea57d2a727de (16:33): I'm taking several leaps here of course",
        "2c39bccd623947fa6224ea57d2a727de (16:34): b8810fee2f4a71f849f3f7409546d1d9, I'm guessing he wanted XHTML as text/html to be processed as XML too",
        "2c39bccd623947fa6224ea57d2a727de (16:34): (if anyone really wants to know they should ask the person who wrote it, to be clear)",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:36): 2c39bccd623947fa6224ea57d2a727de: I think the blame for text/html handling lies largely on the W3C itself and O'Reilly",
        "2c39bccd623947fa6224ea57d2a727de (16:37): yeah, the old HTML WG decided that",
        "2c39bccd623947fa6224ea57d2a727de (16:37): I'm glad they did",
        "a9b326df4e6da61c5b6f5e1058be83a2 (16:39): b8810fee2f4a71f849f3f7409546d1d9: why O'Reilly?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:41): a9b326df4e6da61c5b6f5e1058be83a2: when Netscape/Mozilla made the decision, O'Reilly xml.com was already serving ill-formed XHTML as text/html",
        "a9b326df4e6da61c5b6f5e1058be83a2 (16:41): ah",
        "a924fb58d2c25874322f4e5126f608b9 (16:42): Which side of the draconian debate was O'Reilly on?"
    ],
    "person_ids": [
        "b5139826f2e50e3e718411eb2b70c526",
        "2c39bccd623947fa6224ea57d2a727de",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a924fb58d2c25874322f4e5126f608b9",
        "57d876083caf517f49e8cf5e03307450",
        "a9b326df4e6da61c5b6f5e1058be83a2"
    ]
}