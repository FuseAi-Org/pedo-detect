{
    "id": "fd239c9cafdc3a5050650c9926ce94a3",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (07:15): I wonder which one of jd's posts has resonated http://twitter.com/jbowtie/status/1691112133",
        "57551cb51d38c51417f5abfeacfb9b13 (07:27): 69b0d3dfe919a6b860a9fac82de52a7e: ping",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:28): here",
        "57551cb51d38c51417f5abfeacfb9b13 (07:29): 69b0d3dfe919a6b860a9fac82de52a7e: i'm trying to see if it's worth trying to add undo/redo events to webkit...",
        "57551cb51d38c51417f5abfeacfb9b13 (07:29): 69b0d3dfe919a6b860a9fac82de52a7e: seems like they are tied to the UndoManager though...so we'd need to hash all that stuff out before moving forward?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:29): pretty much",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:29): though nobody has suggested a better solution yet",
        "57551cb51d38c51417f5abfeacfb9b13 (07:32): 69b0d3dfe919a6b860a9fac82de52a7e: to be sure i'm understanding the intent, onundo/onredo would fire when the user picks undo/redo from a menu, fires the undo/redo execCommands or hits the appropriate key-command, right?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:32): yup",
        "57551cb51d38c51417f5abfeacfb9b13 (07:42): 69b0d3dfe919a6b860a9fac82de52a7e: i don't quite follow some bits here...",
        "57551cb51d38c51417f5abfeacfb9b13 (07:42): in 6.11.4",
        "57551cb51d38c51417f5abfeacfb9b13 (07:42): &quot;If the entry immediately before the undo position is an undo object entry&quot;",
        "57551cb51d38c51417f5abfeacfb9b13 (07:43): what else could it be?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:43): The entries are of two type: DOM changes and undo objects.",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:43): click &quot;undo transaction history&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:43): for more details",
        "57551cb51d38c51417f5abfeacfb9b13 (07:44): right, i saw that...so, undo/redo events don't fire for DOM changes?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:45): the undo/redo events are there just to let scripts perform the changes that need doing for the relevant objects they put on the list",
        "57551cb51d38c51417f5abfeacfb9b13 (07:45): ah",
        "57551cb51d38c51417f5abfeacfb9b13 (07:45): that's what i wasn't understanding",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:45): the whole section is a mess imho",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:45): i don't really like it",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:46): (i don't have anything better to suggest though)",
        "57551cb51d38c51417f5abfeacfb9b13 (07:46): so, the thing you pass in to the add method is any arbitrary JS object of your choosing?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:46): right",
        "57551cb51d38c51417f5abfeacfb9b13 (07:46): i see",
        "57551cb51d38c51417f5abfeacfb9b13 (07:46): i'm starting to get the intention here now at least :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:47): hehe",
        "57551cb51d38c51417f5abfeacfb9b13 (07:47): 69b0d3dfe919a6b860a9fac82de52a7e: i feel like it would be a ton simple to just have the object you pass in be required to have undo/redo methods",
        "57551cb51d38c51417f5abfeacfb9b13 (07:48): 69b0d3dfe919a6b860a9fac82de52a7e: gives more flexibility to the web developer in terms of when they setup the undo/redo state",
        "57551cb51d38c51417f5abfeacfb9b13 (07:48): (i.e. they can do it at the time of the change or at the time of the undo)",
        "57551cb51d38c51417f5abfeacfb9b13 (07:48): I guess you can do that already with the current API",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:48): how would you handle the case where an undo operation has no matching redo?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:49): i recommend sending a more concrete proposal to the list",
        "57551cb51d38c51417f5abfeacfb9b13 (07:49): sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:49): it really wouldn't take much to convince me to change the spec",
        "57551cb51d38c51417f5abfeacfb9b13 (07:49): have you considered undo/redo events for DOM changes?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:49): anything even semi-coherent would probably be convincing enough :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:50): i don't think i had use cases for those",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:50): so probably not",
        "57551cb51d38c51417f5abfeacfb9b13 (07:50): ok, i'll try and draft an email then...",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:50): (i'm not opposed though)",
        "57551cb51d38c51417f5abfeacfb9b13 (07:50): the use-case is for apps that want to capture the undo/redo and handle it themselves",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:51): that's not a use case, that's a description of what it can do :-)",
        "57551cb51d38c51417f5abfeacfb9b13 (07:53): 69b0d3dfe919a6b860a9fac82de52a7e: as an example, the google rich text editor keeps its own undo stack. right now it doesn't do the right thing if you undo/redo from the menu because the JS code doesn't know that an undo happened. it can't catch and cancel the event.",
        "57551cb51d38c51417f5abfeacfb9b13 (07:53): 69b0d3dfe919a6b860a9fac82de52a7e: anyways, I'll put this stuff in an email",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:54): k",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:55): (why would an editor _want_ to do things itself, assuming an ideal implementation?)",
        "57551cb51d38c51417f5abfeacfb9b13 (07:58): 69b0d3dfe919a6b860a9fac82de52a7e: yeah, that's true, the google editor would use the browser's undo if it didn't suck so much",
        "57551cb51d38c51417f5abfeacfb9b13 (08:01): 69b0d3dfe919a6b860a9fac82de52a7e: if you have an editor where the backing store is not HTML, you want to be able to update your sense of the state when an undo/redo happens",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:02): if you have an editor where the backing store is not HTML, surely you just want to catch any DOM changes",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:02): not necessarily undo/redo ones in particular",
        "57551cb51d38c51417f5abfeacfb9b13 (08:10): yes, but you want to be able to know what happened, and in most cases, be able to cancel the event",
        "57551cb51d38c51417f5abfeacfb9b13 (08:11): in practice, mutation events are far too noisy and hard to work with",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:11): it's possible that we need to fix mutation events",
        "b8810fee2f4a71f849f3f7409546d1d9 (08:13): 69b0d3dfe919a6b860a9fac82de52a7e: posting them on the event loop or something more drastic?",
        "57551cb51d38c51417f5abfeacfb9b13 (08:13): 69b0d3dfe919a6b860a9fac82de52a7e: in practice, mutation events are useless for anything other than a high level sense that something changed",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:14): b8810fee2f4a71f849f3f7409546d1d9: i haven't studied the problem, so i don't know",
        "57551cb51d38c51417f5abfeacfb9b13 (08:14): 69b0d3dfe919a6b860a9fac82de52a7e: maybe that's a bit harsh, but i've never heard of them actually being used for anything else",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:14): 57551cb51d38c51417f5abfeacfb9b13: it would be good to tell <email/> this, as that is where the DOM3 Events spec is being discussed",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:14): and mutation events are on the table",
        "57551cb51d38c51417f5abfeacfb9b13 (08:15): goes to join yet another mailing list",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:15): yeah not sure why that's not on public-webapps",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:16): (in particular, not sure why that's elsewhere but widgets are on public-webapps)"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "57551cb51d38c51417f5abfeacfb9b13",
        "69b0d3dfe919a6b860a9fac82de52a7e"
    ]
}