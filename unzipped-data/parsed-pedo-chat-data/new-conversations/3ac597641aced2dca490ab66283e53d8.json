{
    "id": "3ac597641aced2dca490ab66283e53d8",
    "messages": [
        "d29f7858616789349f2e17f17eaa3395 (16:07): anyone used a silicon image 3114 sata with opensolaris?",
        "631e53f91030c509ce45bb16bd235cdd (16:19): perhaps the universe *does* revolve around Joerg.",
        "d29f7858616789349f2e17f17eaa3395 (16:19): lol",
        "d29f7858616789349f2e17f17eaa3395 (16:19): I'm sad that schillix isn't updated anymore :/",
        "aa939d032327c8399cf2851d5b0201ed (16:19): Debian seem not to think so",
        "631e53f91030c509ce45bb16bd235cdd (16:20): Doc: then Debian does not understand the Universe properly like Joerg does. ;)",
        "d29f7858616789349f2e17f17eaa3395 (16:20): lol",
        "aa939d032327c8399cf2851d5b0201ed (16:20): the bit about it revolving around him?",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (16:20): who is this joerg fulla that people keep bitching about?",
        "aa939d032327c8399cf2851d5b0201ed (16:21): schillix had the honour of being the first non-sun opensolaris distribution, as well as being the first one that was not fully compatible with solaris/opensolaris",
        "aa939d032327c8399cf2851d5b0201ed (16:22): for some reason most ppl chose to ignore this fact",
        "d29f7858616789349f2e17f17eaa3395 (16:22): Doc: anyway 0.5.2 is like still at b36? I'd like to have it updated to b46 :/",
        "13d302032f9ecb786adfb94061757afc (16:22): actually it's an issue of parallel universes, theories about them abound, but I don't think any had speculated that two distinct universes could overlap in electronic communications, thus allowing both J??rg and Debian to inhabit the same mailing list ;-)",
        "aa939d032327c8399cf2851d5b0201ed (16:22): nfi.. never actually use it myself",
        "75dd2071a30b7c94d9361f05f06d524c (16:23): hrm. does anyone know if there's a way to provide explicit branch prediction hints to sunpro (a la __builtin_expect in gcc)?  i haven't found anything relevant in the docs...",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:39): libkeiser: I don't think there is, really",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:39): libkeiser: anyway ... how well do *you* know the sun4u/sun4v architectures? better than the team that writes the compilers?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:40): just turn on agressive optimisations (-xO5 -native ... there's a VIS option too somewhere) and let it be",
        "246c3b99c9da4707df319c508d66a22a (16:41): Or just '-fast'",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:43): well ... yes, but check the doco on what exactly that turns on.",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:43): in some cases you can end up with -fast negating the effects of -native",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:43): which is somewhat of a p.i.t.a.",
        "246c3b99c9da4707df319c508d66a22a (16:44): That'd be -fns -fsimple=2 -fsingle -ftrap=%none -nofstore -xalias_level=basic -xbuiltin=%all -xdepend -xlibmil -xlibmopt -xO5 -xregs=frameptr -xtarget=native (you're welcome ;-)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:44): well done",
        "246c3b99c9da4707df319c508d66a22a (16:44): I happened to be on that page already, trying to get more performance out of my sudoku-solver ;-)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:44): I've got a few bazillion email threads to get through",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:44): :-)",
        "75dd2071a30b7c94d9361f05f06d524c (16:45): jmcp: this is code that's not necessarily safe to pass aggressive optimization flags to",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:45): libkeiser: ok, what does it do?",
        "75dd2071a30b7c94d9361f05f06d524c (16:45): the evil otherwise known as openafs ;)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:45): but the question remains, why are you so keen to go around what the acknowledged experts in the architecture have designed?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:45): oh :(",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:46): &quot;I just want one&quot;",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:47): andersmo: maybe if we wuz talkin' in 133t",
        "75dd2071a30b7c94d9361f05f06d524c (16:48): well, i can't easily convince customers to recompile several times with profiling feedback, and non-profiling driven branch prediction heuristics sometimes work well, and sometimes don't...",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:50): libkeiser: and DTrace is not an acceptable part of your solution?",
        "3f9e24f372de1c18c3993ee5f9f1adcd (16:50): jmcp: <a href=\"http://funroll-loops.org/#first\">http://funroll-loops.org/#first</a> - creative but not necessarily optimal compiler settings is a hallmark of the gentoo community. =)",
        "3f9e24f372de1c18c3993ee5f9f1adcd (16:50): jmcp: see also <a href=\"http://bugs.gentoo.org/show_bug.cgi?id=74072\">http://bugs.gentoo.org/show_bug.cgi?id=74072</a> , grep for &quot;CFLAGS&quot; =)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:50): andersmo: yeah ... that's really f*ked imnsho",
        "3a798b7a0acf4c11f892253499eaa0ac (16:50): libkeiser: don't most CPUs default to considering branch not taken as more likely?",
        "3a798b7a0acf4c11f892253499eaa0ac (16:51): ie, put the more likely block(s) of code before the less likely.",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:51): libkeiser: can you pastebin an example of the sort of instructions you want used directly?",
        "3a798b7a0acf4c11f892253499eaa0ac (16:52): (K7+ and intel do anyway)",
        "75dd2071a30b7c94d9361f05f06d524c (16:52): paul: that's the big issue is keeping error handling paths out of the main instruction stream, which explicit hinting to the compiler helps you do",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:53): heck ... <a href=\"http://cvs.opensolaris.org/source/xref/on/usr/src/uts/sun4u/ml/mach_locore.s\">http://cvs.opensolaris.org/source/xref/on/usr/src/uts/sun4u/ml/mach_locore.s</a> gives an example ..",
        "3a798b7a0acf4c11f892253499eaa0ac (16:53): libkeiser: can you not achieve it 'manually'?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (16:54): paul: that's what libkeiser kinda wants to do, I'm hassling as to why using the compiler's smarts isn't sufficient",
        "3a798b7a0acf4c11f892253499eaa0ac (16:54): jmcp: ack",
        "3a798b7a0acf4c11f892253499eaa0ac (16:55): jmcp: just saying, often no compiler smarts are needed. :)",
        "631e53f91030c509ce45bb16bd235cdd (16:58): :)",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:05): delewis, are you about?",
        "53303ac79660a60ff15ef2ae2835996f (17:07): Griffous: for a couple of minutes, anyway ;-)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:07): paul: how's the port going?",
        "246c3b99c9da4707df319c508d66a22a (17:07): Stunning idea, thanks, brb.",
        "53303ac79660a60ff15ef2ae2835996f (17:08): hmm, interesting",
        "53303ac79660a60ff15ef2ae2835996f (17:08): never used it before",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:08): I'm finally working my way through your package creation blog, and I've found a mistake :)",
        "75dd2071a30b7c94d9361f05f06d524c (17:08): <a href=\"http://pastebin.ca/163303\">http://pastebin.ca/163303</a>",
        "75dd2071a30b7c94d9361f05f06d524c (17:08): the compiler's &quot;smarts&quot; are still fundamentally a heuristic.  if I explicitly know that a particular code path will almost never be taken, i think there should be a way of notating that in the source.  whether or not the compiler chooses to honor that notation is beyond my control.",
        "53303ac79660a60ff15ef2ae2835996f (17:08): Griffous: oh? well, do tell.",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:09): &quot;# echo &quot;i pkginfo&quot; &gt; prototype&quot; should be &quot;# echo &quot;i pkginfo&quot; &gt;&gt; prototype&quot; I assume?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:09): libkeiser: sure, but what is the effect on performance if that code path is taken and your hand-craftedness isn't up to scratch?",
        "53303ac79660a60ff15ef2ae2835996f (17:09): Griffous: ah, yes :-)",
        "53303ac79660a60ff15ef2ae2835996f (17:09): I'll correct it. Thanks for the tip.",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:09): otherwise, this is great",
        "53303ac79660a60ff15ef2ae2835996f (17:09): great.",
        "53303ac79660a60ff15ef2ae2835996f (17:09): I'm hoping to do another one this weekend.",
        "53303ac79660a60ff15ef2ae2835996f (17:09): probably MPlayer or Emacs",
        "53303ac79660a60ff15ef2ae2835996f (17:10): XChat is one the list, as well",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:10): the sed stuff hurts my eyes, but then I guess I was never brought up with it",
        "53303ac79660a60ff15ef2ae2835996f (17:10): well, I was trying to do everything non-interactively.",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:10): Mplayer would be AWESOME!",
        "d29f7858616789349f2e17f17eaa3395 (17:10): heh",
        "75dd2071a30b7c94d9361f05f06d524c (17:10): jmcp: then i'm not doing my due diligence with a profiler. i'm not sure how the fact that i could adversely affect performance by being an idiot programmer negates the usefulness of notational primitives to improve performance in the hands of a good coder",
        "d29f7858616789349f2e17f17eaa3395 (17:11): fluxbox would be awesome too =)",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:11): in my case, I didn't actually need some of it, or maybe I'm going wrong here. I just CDed to the root of your /var/tmp, and ran the find from there, which meant the paths were already relative, or have I mucked up already?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:11): libkeiser: fair enough. I just don't want you to be going to a lot of effort to hand craft something which might be X% worse than the compiler could do",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:11): libkeiser: don't think for a moment that I'm totally wedded to the compiler over everything else though :)",
        "53303ac79660a60ff15ef2ae2835996f (17:12): Griffous: that should work, too.",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:12): I'm still getting my Devil's Advocate cert of competency",
        "53303ac79660a60ff15ef2ae2835996f (17:12): there's a ton of ways to package properly.",
        "53303ac79660a60ff15ef2ae2835996f (17:12): I was still trying to keep the importance of /var/tmp, though.",
        "75dd2071a30b7c94d9361f05f06d524c (17:12): jmcp: i mostly agree with you. the linux kernel uses the explicit hinting primitives too much, imho",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:12): I'm up to the scary bit now, the pkginfo",
        "75dd2071a30b7c94d9361f05f06d524c (17:12): but i do think they can be helpful when used judiciously",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:12): libkeiser: I totally agree",
        "53303ac79660a60ff15ef2ae2835996f (17:12): cool, well, my morning commute awaits",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:13): good luck!",
        "53303ac79660a60ff15ef2ae2835996f (17:13): drop me a /msg or an email if you have any questions",
        "53303ac79660a60ff15ef2ae2835996f (17:13): or anymore corrections :-)",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:13): will do, thanks again",
        "3a798b7a0acf4c11f892253499eaa0ac (17:21): jmcp: port?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:21): paul: aren't you doing the freebsd port of zfs?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:21): or maybe I'm just confused again",
        "3a798b7a0acf4c11f892253499eaa0ac (17:22): jmcp: no, no, not me :)",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:22): sorry",
        "fa431de24e4af63e92b560fbb4c99d34 (17:24): where can i get dvd-isos with build47?",
        "3a798b7a0acf4c11f892253499eaa0ac (17:24): libkeiser: if you have explicit profiling data, there are perhaps better ways to allow a compiler to take that into account",
        "75dd2071a30b7c94d9361f05f06d524c (17:27): paul: i definitely agree with that",
        "3a798b7a0acf4c11f892253499eaa0ac (17:27): (sadly, those ways, afaik, can not relate profiling data to source code, so can be a bit tedious. :) )",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:28): I believe you can do that translation/mapping with the SS11 profiler",
        "3a798b7a0acf4c11f892253499eaa0ac (17:28): (so manual annotations are a workaround for features that might be better put in toolchain)",
        "3a798b7a0acf4c11f892253499eaa0ac (17:29): jmcp: neat",
        "75dd2071a30b7c94d9361f05f06d524c (17:29): yep.  i've played around with that before.  it seems to do a nice job.",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:29): paul: I'll go searching for the preso ...",
        "75dd2071a30b7c94d9361f05f06d524c (17:30): the issue is in my particular case it's an oss distributed filesystem where most organizations recompile with specific autoconf flags.  it's going to be rather tough to convince them to rebuild several times with profiling feedback",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:30): true, true",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:30): so it'll have to be pretty shit-hot stuff then",
        "d29f7858616789349f2e17f17eaa3395 (17:30): omg oss distributed filesystem? url!",
        "d29f7858616789349f2e17f17eaa3395 (17:30): =)",
        "3a798b7a0acf4c11f892253499eaa0ac (17:31): libkeiser: whats the code 'snippet' of concern?",
        "000d10e6d03eeb8a50a6feed67578cbe (17:31): still looking for good step-by-step on backup using zfs",
        "3a798b7a0acf4c11f892253499eaa0ac (17:32): error paths are, imho, one case where 'goto' is not harmful, if it allows you to consolidate common error and function-return handling to the bottom of a function",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:32): sickness: OpenAFS I assume.",
        "75dd2071a30b7c94d9361f05f06d524c (17:32): paul: unfortunately, this is a huge dev project i'm being paid to work on, and the contract doesn't let me release any of the code until it's done",
        "d29f7858616789349f2e17f17eaa3395 (17:33): oh, so it has no distributed write support, only read if I remember... :/",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:33): there's a couple of multi-writer 'cluster' FSes that are open.",
        "75dd2071a30b7c94d9361f05f06d524c (17:33): right. multiple RW replica support is still a good 18-24 months off",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:33): I think they're linux-specific though.",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:33): (ocfs and... gfs?)",
        "d29f7858616789349f2e17f17eaa3395 (17:33): don't tell me coda...",
        "d29f7858616789349f2e17f17eaa3395 (17:34): and as an added malus, I think they are always all linux-only stuff :/",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:34): sounds like a project for jmcp ;)",
        "d29f7858616789349f2e17f17eaa3395 (17:34): eheh",
        "75dd2071a30b7c94d9361f05f06d524c (17:34): gpfs does linux AND aix :p",
        "d29f7858616789349f2e17f17eaa3395 (17:34): *cough* aix *cough*",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:35): richlowe: ha!",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:36): libkeiser: general protection fault system? what a stoopid name",
        "75dd2071a30b7c94d9361f05f06d524c (17:36): hahaha",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (17:36): libkeiser: have a wander through the articles @ <a href=\"http://developers.sun.com/prodtech/cc/analyzer_index.html\">http://developers.sun.com/prodtech/cc/analyzer_index.html</a>",
        "75dd2071a30b7c94d9361f05f06d524c (17:43): i really need to buy a usiii machine so i can pass -h to collect :)",
        "c7ed1ee25e6c5b617593af5e8181d1d7 (17:56): ofu, it doesn't look like it's available yet",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:59): doesn't seem so, no.",
        "72bac19ca0a2ff15f99326a8f7e02c10 (17:59): Wonder why.",
        "72bac19ca0a2ff15f99326a8f7e02c10 (18:01): whoa, when did opensparc.net start looking nice?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (18:01): richlowe: when they joomla-ised it all",
        "3a798b7a0acf4c11f892253499eaa0ac (18:05): openboot and legion opened?",
        "0e60fa2a21b13bc3d41902ac2acd28e3 (18:15): except that we know from experience and DTrace that context switching sucks performance dry",
        "aac6faa59982955179bb909138afd162 (18:16): excepy that we know AIX is not Solaris",
        "aac6faa59982955179bb909138afd162 (18:16): unless they're talking about linux, in which case yes, it sucks",
        "2942eb98f03204fea7df7dc0d57a6e0e (18:16): twincest, this was in reguards to systemtap on linux",
        "75dd2071a30b7c94d9361f05f06d524c (18:16): the tracing framework on aix is a very different beast"
    ],
    "person_ids": [
        "d29f7858616789349f2e17f17eaa3395",
        "631e53f91030c509ce45bb16bd235cdd",
        "aa939d032327c8399cf2851d5b0201ed",
        "c7ed1ee25e6c5b617593af5e8181d1d7",
        "13d302032f9ecb786adfb94061757afc",
        "75dd2071a30b7c94d9361f05f06d524c",
        "0e60fa2a21b13bc3d41902ac2acd28e3",
        "246c3b99c9da4707df319c508d66a22a",
        "3f9e24f372de1c18c3993ee5f9f1adcd",
        "3a798b7a0acf4c11f892253499eaa0ac",
        "53303ac79660a60ff15ef2ae2835996f",
        "fa431de24e4af63e92b560fbb4c99d34",
        "000d10e6d03eeb8a50a6feed67578cbe",
        "72bac19ca0a2ff15f99326a8f7e02c10",
        "aac6faa59982955179bb909138afd162",
        "2942eb98f03204fea7df7dc0d57a6e0e"
    ]
}