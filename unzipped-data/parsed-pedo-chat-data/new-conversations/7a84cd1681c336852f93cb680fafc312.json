{
    "id": "7a84cd1681c336852f93cb680fafc312",
    "messages": [
        "a59a559d5e93797d3335ccffe1bca7b1 (00:06): Hi. I seem to recall that Google did a survey of webpages to see what constructs were commonly used as part of their HTML5 work. I can't find it though, can anyone give me a pointer? Thanks.",
        "b406b22e31ce6e541c3754a7214cec1c (00:08): a59a559d5e93797d3335ccffe1bca7b1: http://code.google.com/webstats/index.html",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:09): hsivonen: Fantastic. Thanks very much.",
        "b406b22e31ce6e541c3754a7214cec1c (00:10): a59a559d5e93797d3335ccffe1bca7b1: there's also Opera's MAMA for similar stuff: http://dev.opera.com/articles/view/mama/",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:11): b406b22e31ce6e541c3754a7214cec1c: I've already checked that out - didn't have the data I was looking for :(",
        "ab7faae5d7b250ea8606486575f8f79c (00:14): a59a559d5e93797d3335ccffe1bca7b1: http://philip.html5.org/data.html has various bits of data but maybe nothing relevant",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): woohoo!",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:14): elevates his aforementioned mine support structure",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:15): a59a559d5e93797d3335ccffe1bca7b1: what data are you looking for?",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:16): 69b0d3dfe919a6b860a9fac82de52a7e: Proportion of documents with an XHTML Doctype that are valid/invalid and served as each of the acceptable mime types for XHTML.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:16): i don't think i published those numbers",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:17): 69b0d3dfe919a6b860a9fac82de52a7e: It doesn't look like you did :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): but iirc in one study i did application/xhtml was 0.0044%, xhtml as text/xml or application/xml wasn't visible at all, and xhtml was about 15% of all text/html",
        "ab7faae5d7b250ea8606486575f8f79c (00:17): only looked at a hundred thousand pages so he doesn't have enough non-text/html content to get any useful numbers",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:17): (from memory, so those numbers are likely wrong, but they're in the right ballpark)",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:17): 69b0d3dfe919a6b860a9fac82de52a7e: Thanks",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:18): 69b0d3dfe919a6b860a9fac82de52a7e: May I quote you (with your proviso)?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): i used the namespace as the trigger though, not the doctype, iirc",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): for detecting xhtml in text/html, i mean",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:18): Yup",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): sure, quote away",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:18): Thanks",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): but like i said, these numbers are likely somewhat bogus",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): and it was a year or more ago now",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:18): Indeed",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:18): I doubt things will have changed a great deal since then",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:18): so application/xhtml+xml is probably at least 0.0045% now!",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): (might even be 0.2%, which i think i saw in another study i did, now that i think about it)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): (though i don't recall what that study was biased towards, so i'm not sure what that number was)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): either way application/xhtml+xml is far less common than, say, word documents",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:19): at least in the google index",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): of course it might be that the google index is biased against xhtml in some way",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): though i'm not aware of such a bias",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:20): Off the top of your head, do you know what Accept header GoogleBot outputs?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): (e.g. maybe sites that do content negotiation serve text/html to google, not application/xhtml+xml)",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): not sure",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:20): probably */* though",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:21): a59a559d5e93797d3335ccffe1bca7b1: trying to win some argument somewhere? :-)",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:21): That would fail to trip all those content negotiation systems that trigger on an explicit application/xhtml+xml",
        "ab7faae5d7b250ea8606486575f8f79c (00:22): a59a559d5e93797d3335ccffe1bca7b1: http://www.google.com/search?q=cache:www3.wind.ne.jp/hassii/env.cgi - looks like */*",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:22): 69b0d3dfe919a6b860a9fac82de52a7e: Someone using one of the content negotiation systems with missing q support has exploded over www-validator. I'm just trying to address his points. At the moment is he demanding a system for content negotiation that is (a) easy (b) pure Apache conf (c) doesn't involve symlinks and (d) doesn't involve multiple files for each document",
        "a59a559d5e93797d3335ccffe1bca7b1 (00:22): ab7faae5d7b250ea8606486575f8f79c: heh. Thanks.",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:26): content negotiation was such a mistake",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:26): content negotiation and the content-type header both in fact where imho design mistakes of http",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:27): we should have had a 1:1 mapping of resources to representations, and we should have used well-defined magic sequences to recognise types, so there could be no content sniffing or content-type mislabelling",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:27): but oh well",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:27): too late for that i guess",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:27): s/where/were/",
        "ab7faae5d7b250ea8606486575f8f79c (00:38): 69b0d3dfe919a6b860a9fac82de52a7e: How would the use of magic sequences interact with legacy file formats that don't have any unique distinguishing sequences?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:39): like what?",
        "a924fb58d2c25874322f4e5126f608b9 (00:40): plain text?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:41): plain text would be the default fallback format",
        "a924fb58d2c25874322f4e5126f608b9 (00:42): So every time a new format appears, you get binary soup in your face while each web server is updated?",
        "a924fb58d2c25874322f4e5126f608b9 (00:42): *web browser",
        "a924fb58d2c25874322f4e5126f608b9 (00:42): Or maybe either would do",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:42): web servers wouldn't ever have to change to support new types under this model",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:43): web browsers could detect binary data and treat them as we treat unknown binary data now",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:43): (using a well-defined mechanism for detecting binary data -- it would be the fallback detection step before falling back to plain text)",
        "b07211a0c7cb119232799d2119cea90f (00:44): instead of hooking in to support mime types, I guess plugins would hook in for certain binary sequences?",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:45): yup",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:45): similar to what file(1) does on unix, but with a normative specification and a defined detection order"
    ],
    "person_ids": [
        "a59a559d5e93797d3335ccffe1bca7b1",
        "b406b22e31ce6e541c3754a7214cec1c",
        "ab7faae5d7b250ea8606486575f8f79c",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "b07211a0c7cb119232799d2119cea90f"
    ]
}