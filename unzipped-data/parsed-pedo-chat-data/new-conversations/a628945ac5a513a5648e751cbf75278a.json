{
    "id": "a628945ac5a513a5648e751cbf75278a",
    "messages": [
        "002fd66affb058c756926402acf97570 (19:40): hsivonen: yt?",
        "002fd66affb058c756926402acf97570 (19:42): hsivonen: I'm trying to get the parser (in Java) to parse from a string to a DOM",
        "ab7faae5d7b250ea8606486575f8f79c (19:50): 002fd66affb058c756926402acf97570: What problems are you having?",
        "002fd66affb058c756926402acf97570 (19:50): ab7faae5d7b250ea8606486575f8f79c: I have no idea how to start",
        "002fd66affb058c756926402acf97570 (19:52): is trying to use JRuby, but that's starting to seem a bit weird",
        "ab7faae5d7b250ea8606486575f8f79c (19:54): HtmlDocumentBuilder parser = new HtmlDocumentBuilder(XmlViolationPolicy.ALTER_INFOSET);",
        "ab7faae5d7b250ea8606486575f8f79c (19:54): Reader reader = new StringReader(input);",
        "ab7faae5d7b250ea8606486575f8f79c (19:54): I think that might do it",
        "ab7faae5d7b250ea8606486575f8f79c (19:54): Document doc = parser.parse(reader);",
        "ab7faae5d7b250ea8606486575f8f79c (19:55): (Not tested, though)",
        "002fd66affb058c756926402acf97570 (20:00): There's something whacky going on with JRuby",
        "002fd66affb058c756926402acf97570 (20:00): gah",
        "002fd66affb058c756926402acf97570 (20:00): Writing Java for the first time in around five years is starting to look like a good solution",
        "ab7faae5d7b250ea8606486575f8f79c (20:09): Writing Java's not too bad, as long as you've got an autocompleting IDE :-)",
        "002fd66affb058c756926402acf97570 (20:09): And you have a vague clue of the language",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): and it seems likely to cause fewer layers of problems than JRuby",
        "002fd66affb058c756926402acf97570 (20:10): Which I don't really have any more :)",
        "002fd66affb058c756926402acf97570 (20:10): ab7faae5d7b250ea8606486575f8f79c: Indeed",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): It's just like Javascript with types",
        "002fd66affb058c756926402acf97570 (20:10): could also head out to get food, which would be nice",
        "002fd66affb058c756926402acf97570 (20:10): and speed, that's another thing it has on Javascript",
        "ab7faae5d7b250ea8606486575f8f79c (20:10): so you must have a vague clue :-)",
        "ab7faae5d7b250ea8606486575f8f79c (20:11): It only has speed because JS implementations were rubbish",
        "ab7faae5d7b250ea8606486575f8f79c (20:12): All you need to do is write JS very carefully in a restricted subset that looks a lot like Java, and then use V8 and it'll go fast",
        "ab7faae5d7b250ea8606486575f8f79c (20:12): (from what I've heard)",
        "002fd66affb058c756926402acf97570 (20:12): So we can have HTML parsers in Javascript? :P",
        "ab7faae5d7b250ea8606486575f8f79c (20:13): String manipulation probably isn't part of that restricted subset :-p",
        "002fd66affb058c756926402acf97570 (20:16): Wow, yui2's git repo is huge",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:35): &gt;_&lt; ab7faae5d7b250ea8606486575f8f79c, you should know very well that javascript is nothing like Java.  They both share a C-like syntax, that's all.",
        "ab7faae5d7b250ea8606486575f8f79c (20:41): 1f8387eb43f131d7c309a90a4e36b5cb: They have variables and functions and strings and numbers and stuff too",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:42): By that logic, nearly all programming languages are basically Java.",
        "ab7faae5d7b250ea8606486575f8f79c (20:42): Sure",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:42): I challenge your discriminatory abilities, and will not send out for anything without an extremely detailed description of what I want.",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:43): Otherwise I'll end up with a yellow-painted apple instead of the banana I asked for.",
        "ab7faae5d7b250ea8606486575f8f79c (20:46): You're focusing far too much on differences and far too little on similarities",
        "ab7faae5d7b250ea8606486575f8f79c (20:46): You should be glad if I bring you a yellow apple, and not staples or clouds or many other things",
        "d8cc952a670b1063df4c205ef5e920ca (20:55): how would be parsed attributes in this link? &lt;a title= class=link href=http://slashdot.org&gt;",
        "d8cc952a670b1063df4c205ef5e920ca (20:55): &quot;title&quot; =&gt; &quot; class=link&quot;, right?",
        "7f9405da4034bf43083e64b57302a8e6 (21:08): d8cc952a670b1063df4c205ef5e920ca, what are you trying to accomplish?",
        "d8cc952a670b1063df4c205ef5e920ca (21:10): 7f9405da4034bf43083e64b57302a8e6: only checking if it's the right behaviour",
        "7f9405da4034bf43083e64b57302a8e6 (21:13): http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#attribute-name-state",
        "7f9405da4034bf43083e64b57302a8e6 (21:13): so wo go from attribute name state to before attribute value state",
        "7f9405da4034bf43083e64b57302a8e6 (21:13): then we consume a space character",
        "7f9405da4034bf43083e64b57302a8e6 (21:14): and stay in the \u201a\u00c4\u00b6 seems you are right. thats counter-intuitive",
        "d8cc952a670b1063df4c205ef5e920ca (21:14): i know, i've clicked through it too. but i've also seen &lt;a attr= otherattr= href=...&gt; in the &quot;wild&quot;",
        "7f9405da4034bf43083e64b57302a8e6 (21:15): Hixie, can you explain the rationale of handling attributes like this? isn't this more likely to break existing content then the alternative?",
        "7f9405da4034bf43083e64b57302a8e6 (21:16): i would have expected that a space triggers before attribute name state or something",
        "7f9405da4034bf43083e64b57302a8e6 (21:17): d8cc952a670b1063df4c205ef5e920ca, i guess it has something to do with &lt;span class=foo bar baz&gt;",
        "7f9405da4034bf43083e64b57302a8e6 (21:18): but still :(",
        "7f9405da4034bf43083e64b57302a8e6 (21:19): weird, as everything in here",
        "d8cc952a670b1063df4c205ef5e920ca (21:19): class=foo bar baz would get parsed as class=&quot;foo&quot; bar baz",
        "7f9405da4034bf43083e64b57302a8e6 (21:19): just realized it too",
        "7f9405da4034bf43083e64b57302a8e6 (21:19): 9.2.4.40 Attribute value (unquoted) state ends on a space",
        "7f9405da4034bf43083e64b57302a8e6 (21:22): d8cc952a670b1063df4c205ef5e920ca, how about sending that to the list?",
        "d8cc952a670b1063df4c205ef5e920ca (21:24): good idea",
        "002fd66affb058c756926402acf97570 (21:26): http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Ca%20title%3D%20class%3Dlink%20href%3Dhttp%3A%2F%2Fslashdot.org%3E shows all browsers on my system doing the same",
        "002fd66affb058c756926402acf97570 (21:26): (and matching html5)",
        "7f9405da4034bf43083e64b57302a8e6 (21:28): 002fd66affb058c756926402acf97570, so d8cc952a670b1063df4c205ef5e920ca and i are both dumb.",
        "7f9405da4034bf43083e64b57302a8e6 (21:30): 002fd66affb058c756926402acf97570, after the equals sign, are we in before attribute value state ? if so, what is done when encountering a space char? http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#before-attribute-value-state",
        "002fd66affb058c756926402acf97570 (21:30): 7f9405da4034bf43083e64b57302a8e6: Stay in that state",
        "002fd66affb058c756926402acf97570 (21:31): Odd.",
        "002fd66affb058c756926402acf97570 (21:31): What does IE do?",
        "7f9405da4034bf43083e64b57302a8e6 (21:31): well, then i'm confused",
        "002fd66affb058c756926402acf97570 (21:31): Oh, wait",
        "002fd66affb058c756926402acf97570 (21:31): No",
        "002fd66affb058c756926402acf97570 (21:32): That makes complete sense",
        "7f9405da4034bf43083e64b57302a8e6 (21:32): care to elaborate?",
        "002fd66affb058c756926402acf97570 (21:32): consume &quot;=&quot; char in the attribute name state, change to before attribute value state.",
        "002fd66affb058c756926402acf97570 (21:32): consume &quot; &quot; in the before attribute value state, stay in same state.",
        "002fd66affb058c756926402acf97570 (21:33): consume &quot;c&quot; in the before attribute value state, create attribute whose name is &quot;c&quot;, change to attribute value (unquoted) state",
        "002fd66affb058c756926402acf97570 (21:33): (nothing interesting happens\u201a\u00c4\u00b6)",
        "002fd66affb058c756926402acf97570 (21:34): consume &quot;k&quot; in the attribute value (unquoted) state, append &quot;k&quot; to attribute value&quot;",
        "002fd66affb058c756926402acf97570 (21:34): s/create attribute whose name is/set attribute value to/",
        "7f9405da4034bf43083e64b57302a8e6 (21:34): wait",
        "002fd66affb058c756926402acf97570 (21:34): consume &quot; &quot; in attribute value (unquoted) state, switch to before attribute name state",
        "002fd66affb058c756926402acf97570 (21:34): This matches all browsers",
        "7f9405da4034bf43083e64b57302a8e6 (21:36): 002fd66affb058c756926402acf97570, i can't follow you at the &quot;c&quot; consuming process. doesn't it match the &quot;anything else&quot; provision of section 9.2.4.37 ?",
        "002fd66affb058c756926402acf97570 (21:36): Yes",
        "002fd66affb058c756926402acf97570 (21:36): so you consume it, append it to the attribute value, and switch to that state",
        "002fd66affb058c756926402acf97570 (21:36): (make sure you evaluate the substituion I wrote above fixing a fairly major bug in what I wrote)",
        "7f9405da4034bf43083e64b57302a8e6 (21:37): some day i will make a big poster of the HTML5 state machine",
        "7f9405da4034bf43083e64b57302a8e6 (21:37): and put it on my wall",
        "7f9405da4034bf43083e64b57302a8e6 (21:38): to confuse guests",
        "7f9405da4034bf43083e64b57302a8e6 (21:38): right beside the openTTD airport state machine, just to see how simple handling airplanes is compared to this mess",
        "ef6f2287bae00ba79475fbf56c2b6fee (21:38): &quot;a big poster of the HTML5 state machine&quot; *Do Want* ;)",
        "d8cc952a670b1063df4c205ef5e920ca (21:38): hehe",
        "002fd66affb058c756926402acf97570 (21:38): s/big/very big/",
        "002fd66affb058c756926402acf97570 (21:39): Sorry, I want to read it."
    ],
    "person_ids": [
        "002fd66affb058c756926402acf97570",
        "ab7faae5d7b250ea8606486575f8f79c",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "d8cc952a670b1063df4c205ef5e920ca",
        "7f9405da4034bf43083e64b57302a8e6",
        "ef6f2287bae00ba79475fbf56c2b6fee"
    ]
}