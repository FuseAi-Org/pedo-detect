{
    "id": "f20a7a8825c65dc94b8d5ff73db2175a",
    "messages": [
        "b25b6b77a0087ff8385941e5545d32ea (14:27): Is it intentional that CDATA sections no longer trandform U+0000-&gt;U+FFFD?",
        "b25b6b77a0087ff8385941e5545d32ea (14:27): b8810fee2f4a71f849f3f7409546d1d9: ^",
        "b25b6b77a0087ff8385941e5545d32ea (14:27): *transform",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:28): b25b6b77a0087ff8385941e5545d32ea: nope, not at all intentional",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:28): I suck at spec review, it seems.",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:29): b25b6b77a0087ff8385941e5545d32ea: that's what happens with spec writing that tries to avoid spelling out all the states",
        "57d876083caf517f49e8cf5e03307450 (14:40): wonders why people find specs unreadable",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:50): 57d876083caf517f49e8cf5e03307450, because like reading code, it's difficult",
        "ab7faae5d7b250ea8606486575f8f79c (14:53): 57d876083caf517f49e8cf5e03307450: Because they're written with the assumption that the reader already knows how to read them and has a large amount of prior knowledge of the topic",
        "ab7faae5d7b250ea8606486575f8f79c (14:54): (They'd probably be ten times as long if they didn't make those assumptions)",
        "8269fc4aca67c69ef320ddd69881d4cc (15:10): Is there any way at all to do syntax highlighted editing of text in html?",
        "8269fc4aca67c69ef320ddd69881d4cc (15:11): Section &quot;user-editing-actions&quot; of the spec is very imprecise about javascript ways to move the caret",
        "b25b6b77a0087ff8385941e5545d32ea (15:11): 8269fc4aca67c69ef320ddd69881d4cc: Build a text editor using &lt;canvas&gt;?",
        "8269fc4aca67c69ef320ddd69881d4cc (15:12): b25b6b77a0087ff8385941e5545d32ea: Bespin way... but that means the text is not searchable, right?",
        "ab7faae5d7b250ea8606486575f8f79c (15:13): It means you lose all kinds of features that OSes/browsers already provide and users often expect",
        "b25b6b77a0087ff8385941e5545d32ea (15:15): was being ironic",
        "8269fc4aca67c69ef320ddd69881d4cc (15:15): ab7faae5d7b250ea8606486575f8f79c: I think that is unfortunate.",
        "cc097e0d7183ae8436e7df709553c8c0 (15:15): use &lt;textarea&gt; and XBL",
        "b25b6b77a0087ff8385941e5545d32ea (15:15): The irony being that it is an obviously crazy idea, but also the way that seems to work",
        "b25b6b77a0087ff8385941e5545d32ea (15:15): or at least a way",
        "8269fc4aca67c69ef320ddd69881d4cc (15:20): cc097e0d7183ae8436e7df709553c8c0: XBL seems nice, but it's a Mozilla-only api",
        "8269fc4aca67c69ef320ddd69881d4cc (15:20): Am I wrong?",
        "b25b6b77a0087ff8385941e5545d32ea (15:20): It is standard",
        "b25b6b77a0087ff8385941e5545d32ea (15:20): An unimplemented",
        "b25b6b77a0087ff8385941e5545d32ea (15:20): *and",
        "b25b6b77a0087ff8385941e5545d32ea (15:20): (XBL2)",
        "b25b6b77a0087ff8385941e5545d32ea (15:21): ab7faae5d7b250ea8606486575f8f79c: Hmm, this single-character-unget stuff is annoying",
        "b25b6b77a0087ff8385941e5545d32ea (15:22): By which I mean &quot;makes things look confusingly unlike the spec&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (15:26): b25b6b77a0087ff8385941e5545d32ea: How so?",
        "ab7faae5d7b250ea8606486575f8f79c (15:26): I thought ungetting a character then consuming it was just meant to be equivalent to the spec's notion of reconsuming",
        "b25b6b77a0087ff8385941e5545d32ea (15:28): Because when you lookahead you can't unconsume all the characters that you just looked at",
        "b25b6b77a0087ff8385941e5545d32ea (15:28): So you have to add extra modes and extra not-in-the-spec logic",
        "ab7faae5d7b250ea8606486575f8f79c (15:30): I thought that only happened with character references, and in that case the characters will all be (?i)[&amp;0-9a-z] so they won't be handled as anything other than character tokens",
        "ab7faae5d7b250ea8606486575f8f79c (15:30): or something like that",
        "b25b6b77a0087ff8385941e5545d32ea (15:31): Doctypes",
        "ab7faae5d7b250ea8606486575f8f79c (15:32): Oh, that too",
        "8b3687499080633e1898fa1dd209ef81 (15:32): Doctypes add a whole new sense of fun",
        "a11aabeeceeae6b8cb5d12ea06b56554 (15:33): Nah, they're not that fun until you end up on insane amounts of switching like IE",
        "ab7faae5d7b250ea8606486575f8f79c (15:34): The sad thing is that the entire meaningful output of the complex doctype syntax is 1.6 bits of data",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): b25b6b77a0087ff8385941e5545d32ea: I suppose the current implementation of unget means it possibly wouldn't be hard or slow to support ungetting multiple characters",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): b25b6b77a0087ff8385941e5545d32ea: I vaguely remember it was originally an issue due to keeping track of line number, perhaps",
        "1f58faf0d058f303f30239a369808167 (15:40): hmm the number of times in a form when I press Command+S instead of clicking on Save Draft and having the stupid dialog window. :)",
        "ab7faae5d7b250ea8606486575f8f79c (15:40): b25b6b77a0087ff8385941e5545d32ea: The code will never really look like the spec though, since lookahead is incompatible with streaming input",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:46): it's uncool that the spec has lookahead",
        "b25b6b77a0087ff8385941e5545d32ea (15:48): ab7faae5d7b250ea8606486575f8f79c: True, but extra states seem quite bad",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:49): has extra states",
        "b25b6b77a0087ff8385941e5545d32ea (15:50): ab7faae5d7b250ea8606486575f8f79c: I can't see why unget wouldn't worj with &gt; 1 character at the moment",
        "b25b6b77a0087ff8385941e5545d32ea (15:57): This new null handling doesn't seem to maintain the relationship that 1 null character === 1 parse error"
    ],
    "person_ids": [
        "b25b6b77a0087ff8385941e5545d32ea",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "57d876083caf517f49e8cf5e03307450",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "8269fc4aca67c69ef320ddd69881d4cc",
        "cc097e0d7183ae8436e7df709553c8c0",
        "8b3687499080633e1898fa1dd209ef81",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "1f58faf0d058f303f30239a369808167"
    ]
}