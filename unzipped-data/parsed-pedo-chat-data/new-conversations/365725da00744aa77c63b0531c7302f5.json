{
    "id": "365725da00744aa77c63b0531c7302f5",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (09:06): 69b0d3dfe919a6b860a9fac82de52a7e, http://www.w3.org/html/wg/html5/#tag-name is wrong though, it should list 1-6 too",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:07): 69b0d3dfe919a6b860a9fac82de52a7e, it basically forbids writing &lt;h1&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:11): yeah that's what i said :-)",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:12): oh right",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:13): i don't understand how to do what b8810fee2f4a71f849f3f7409546d1d9 wants",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:14): what was that again? :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:17): oh, the insertion mode thingie",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:18): 69b0d3dfe919a6b860a9fac82de52a7e, well, you can suggest that you can implement the &quot;in namespace&quot; as x separate modes",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:18): one for each mode from where you can enter it",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:23): it seems like an implementation detail",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:24): when i finally reply to all this mail",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:25): it's going to be the biggest e-mail ever in the history of mankind",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:25): there are 619 e-mails in the folder",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:25): :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:44): http://www.w3.org/2003/entities/2007/w3centities-f.ent, as a URI, embodies everything that is wrong with W3C URI naming policy",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:45): 618!",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:47): 618?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:47): the entity table in HTML% is going to be one gigantic table once we're done mergin this in, jesus",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:47): 618 e-mails in the folder. i replied to one.",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:48): yeah, like another 2000 entries in that table...",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:48): at least",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:48): i assume we're going to require ; everywhere?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:48): on the new ones, certainly",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:49): gotta grandfather in the old ones though",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:51): hmm, &amp;comma; etc. indeed don't make much sense",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:51): or &amp;dollar;",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:54): yeah i mentioned those in the mail",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:02): 69b0d3dfe919a6b860a9fac82de52a7e: &quot;in namespace&quot; leaks to the tokenizer and needs a secondary mode, so it might as well be boolea &quot;in namespace&quot; if (&quot;in namespace&quot;) { ... } else { do the insertion mode thing }",
        "f139aba52f9fa1394b4034a7954b2220 (10:02): What the...&amp;quest; That&amp;apos;s just totally unnecessay&amp;period;",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:05): it also has doubles, plusmn and PlusMinus",
        "f139aba52f9fa1394b4034a7954b2220 (10:08): edb259c0e0038f38bb200bc20c8cbf7e, blame mathml for that. HTML had plusmn, MathML added the other two http://www.w3.org/TR/2003/REC-MathML2-20031021/bycodes.html",
        "f139aba52f9fa1394b4034a7954b2220 (10:09): oh, MathML had all those unnecessary ASCII entities too",
        "f139aba52f9fa1394b4034a7954b2220 (10:18): What does &quot;underlying, canonically related, SGML document type&quot; mean? http://www.w3.org/mid/<email/>",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:20): I think the idea is that valid HTML documents are SGML-compatible",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:23): b8810fee2f4a71f849f3f7409546d1d9: the stack of open elements leaks to the tokeniser too",
        "69b0d3dfe919a6b860a9fac82de52a7e (10:24): b8810fee2f4a71f849f3f7409546d1d9: i don't see how what you describe is any better in the spec than just another insertion mode with a flag",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:25): 69b0d3dfe919a6b860a9fac82de52a7e: I think a boolean will be more implementable",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:26): doesn't quite see how the boolean would work",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:27): you'd need to reset that boolean everywhere insertion modes are changing because of &lt;b&gt;&lt;math&gt;&lt;mtext&gt;&lt;/b&gt; and such",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:27): iirc",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:28): (but if it can be done as boolean and that's easier, that seems like an impl detail you could just do yourself)",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:29): I wouldn't expect impl code to match the spec closely as the spec is not written with perf, memory usage, etc. in mind necessarily"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "f139aba52f9fa1394b4034a7954b2220"
    ]
}