{
    "id": "5345b9a5cb2696ee22c2b447e3b3132e",
    "messages": [
        "98e5b851bd2fd05b0d06825182bc9a9a (14:55): re: &quot;authors will at least prohibit links directly into those images&quot; I want to say that raising such barriers is against the nature of the web, but I'll just say it here and not mail it :)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:07): Henri, I know the arguments against &lt;h&gt; &lt;l&gt; and &lt;separator&gt; :), think they make sense too, it was just a p.s. of my personal opinion. Imho it's relatively easy to change and still have it work, and the naming would be better, but I don $Bc`QU (B expect it to get in HTML5. Although I would like them as secondary options, but I don $Bc`QU (B think that $Bc`QT (B going to happen.",
        "f139aba52f9fa1394b4034a7954b2220 (15:08): what are the benefits of introducing such new elements?",
        "f139aba52f9fa1394b4034a7954b2220 (15:09): to me, it seems like little more than a theoretical benefit based upon the name, rather than their actual definition",
        "f139aba52f9fa1394b4034a7954b2220 (15:10): in other words, if we a have a &lt;foo&gt; element, what's the benefit of introducing a &lt;bar&gt; element with exactly the same semantics, and less compatibility?",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:10): the benefit of h is that you don't have to match against h1|h2|h3|h4|h5|h6 anymore, plus that it doesn $Bc`QU (B have a rank-indicator in it which doesn $Bc`QU (B apply, the benefit of &lt;l&gt; would be that it contains the line instead of delimiting it so that you can e.g. make line numbers (useful for source code), and the benefit of &lt;separator&gt; would be that the name more clearly reflects its function, and regardless of writing direction",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:10): for &lt;separator&gt; that would be true, yes",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:11): for h also, to some extent",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:11): &lt;l&gt; introduces something new",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:13): you can also more easily put IDs on &lt;l&gt; elements, to link to lines directly",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): &lt;pre&gt;&lt;span&gt;line&lt;/span&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): &lt;span&gt;line&lt;/span&gt;&lt;/pre&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): should handle line numbers",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): it's also possible to get line numbers using &lt;br&gt;",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:14): I would personally use &lt;h&gt;, it $Bc`QM (Bl be CSS-ed anyway so who cares if by default it doesn $Bc`QU (B render like a &lt;h&gt; on current browsers",
        "a924fb58d2c25874322f4e5126f608b9 (15:14): I think not having to match h1|h2 etc is a dead end. Most people (anecdotal) use hx where x gives the right default styling",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:15): &lt;l&gt; is nicer than having those spans or trying to put line numbers on br",
        "f139aba52f9fa1394b4034a7954b2220 (15:15): In the HTML5 model, you don't even have to match against all of h1 to h76.  You're allowed to use &lt;h1&gt; for all headings if you wish, when combined with &lt;section&gt;",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:15): does an id on a br apply to the line before it or after it? etc",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:16): yes, but it is not required",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:16): never mind that last sentence, &lt;h&gt; would not be required either",
        "f139aba52f9fa1394b4034a7954b2220 (15:16): I don't see how &lt;l&gt; is much better.  It's just a little bit shorter",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:17): it indicates it $Bc`QT (B a line",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:17): span indicates nothing",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:17): plus line has supposedly got display:block attached to it",
        "f139aba52f9fa1394b4034a7954b2220 (15:17): &lt;pre&gt; already indicates that white space is preserved and lines are indicated using LF",
        "a924fb58d2c25874322f4e5126f608b9 (15:17): Doesn't that make &lt;l&gt; simply a tiny &lt;p&gt;?",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:18): &lt;pre&gt; is bothersome because it messes up your indenting :)",
        "f139aba52f9fa1394b4034a7954b2220 (15:18): I think a much better way to handle the line number issue would be with a ::line pseudo-element in CSS",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:18): besides not all cases where line breaking is important are also preformatted",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:18): a ::line pseudo-element would mess up if you make the browser window too narrow",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:19): and things would wrap",
        "f139aba52f9fa1394b4034a7954b2220 (15:19): not with white-space: pre;",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:19): what if you want it to wrap",
        "f139aba52f9fa1394b4034a7954b2220 (15:19): perhaps with 'pre-wrap' or other value",
        "f139aba52f9fa1394b4034a7954b2220 (15:20): there's always &lt;span&gt;",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:20): &lt;span&gt; can be the solution to any inline element in HTML :)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:21): a924fb58d2c25874322f4e5126f608b9, the use case of &lt;l&gt; is pretty much the same as the use case for &lt;br&gt;. If you think &lt;br&gt; is a tiny &lt;p&gt;, then yes, &lt;l&gt; is a tiny &lt;p&gt; as well.",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:22): &lt;l&gt; is not a block-level element (I think), it just uses display: block to force a line break",
        "a924fb58d2c25874322f4e5126f608b9 (15:22): Ah, ok",
        "f139aba52f9fa1394b4034a7954b2220 (15:22): since the use cases for &lt;br&gt; and &lt;l&gt; are identical, then &lt;br&gt; already covers most of them.  Are there any more besides the line numbering that &lt;br&gt; can't handle well?",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:22): so you would use it inside a &lt;p&gt;, eg. &lt;p&gt;&lt;l&gt;ld b,255&lt;/l&gt;&lt;l&gt;djnz $&lt;/l&gt;&lt;/p&gt;",
        "083d9a270e6e16b2fbb08d35067aae5f (15:23): &lt;br&gt; doesn't work with CSS :after content: except on Opera",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:23): I would have to think of it, I just mentioned it in passing really :)",
        "a924fb58d2c25874322f4e5126f608b9 (15:23): In that example it looks like subparagraphs, though :)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:23): but generally spoken container elements are better than separator elements",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:24): a924fb58d2c25874322f4e5126f608b9, &lt;p&gt; is maybe a bad choice :)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:25): This then: &lt;blockcode&gt;&lt;l&gt;ld b,255&lt;/l&gt;&lt;l&gt;djnz $&lt;/l&gt;&lt;/blockcode&gt; ;)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:25): (with a smiley face)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:27): a variant of the line numbers would be also stylistic; alternating colours",
        "a924fb58d2c25874322f4e5126f608b9 (15:27): When you say line numbers, I think &lt;ol&gt;. Without line numbers, &lt;ul&gt; or &lt;pre&gt; or white-space:pre on e.g. &lt;blockcode&gt;.",
        "f139aba52f9fa1394b4034a7954b2220 (15:28): 083d9a270e6e16b2fbb08d35067aae5f, that's just a browser limitation, there's nothing in CSS or HTML that prevents it from working",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:28): or styling a specific line number (through ::nth-of-type)",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:29): a924fb58d2c25874322f4e5126f608b9 I don $Bc`QU (B think that a list is the same as lines...",
        "f139aba52f9fa1394b4034a7954b2220 (15:29): so what about handling backwards compatibility without relying on stylesheets?  Would authors be allowed to use a combination of &lt;l&gt; and &lt;br&gt;?",
        "a924fb58d2c25874322f4e5126f608b9 (15:29): You even number them, that makes it a list if you ask me",
        "f139aba52f9fa1394b4034a7954b2220 (15:30): a924fb58d2c25874322f4e5126f608b9, simply proving line numbers doesn't make it a list",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:30): a924fb58d2c25874322f4e5126f608b9, I think you could hardly call lines of code in a block of code a list (although they do call it a listing ;p)",
        "083d9a270e6e16b2fbb08d35067aae5f (15:30): f139aba52f9fa1394b4034a7954b2220, I agree and it shows why we need test suites to combat such interop warts. &lt;li&gt; should work out of the box though,",
        "083d9a270e6e16b2fbb08d35067aae5f (15:30): s/&lt;li",
        "f139aba52f9fa1394b4034a7954b2220 (15:30): most good editors provide line numbers and it's useful if code samples are presented with them too",
        "083d9a270e6e16b2fbb08d35067aae5f (15:30): s/&lt;li&gt;/&lt;l&gt;/",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:31): I suppose you could deprecate &lt;br&gt;, and discourage people to mix &lt;l&gt; and &lt;br&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (15:31): 083d9a270e6e16b2fbb08d35067aae5f, I know we need test suites for helping achieve interop, I never said we didn't",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:32): in the end it is a question of browser support, if all browsers implement &lt;l&gt; then we can be happy and use it, if they don't then we can either add 1 line to our CSS and mutter about the unsupporting browser, or choose &lt;br&gt; over &lt;l&gt; after all in HTML6",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:33): given that it doesn't seem difficult to implement, I think it would be nice to have it",
        "f139aba52f9fa1394b4034a7954b2220 (15:33): I'll admit that &lt;l&gt; is a small possibility, but I'm not totally convinced",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:34): it would help if there were more use cases :)",
        "f139aba52f9fa1394b4034a7954b2220 (15:34): I am, however, totally unconvinced of &lt;h&gt; and &lt;separator&gt;",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:34): I can imagine that",
        "a924fb58d2c25874322f4e5126f608b9 (15:35): For &lt;h&gt;, we could get the basic document hierarchy by counting all &lt;hx&gt; as headings, ignoring the x. And people could get the default styling they wanted without having to compromise the structure.",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:35): that is what Web Applications 1.0 says currently, yes",
        "a924fb58d2c25874322f4e5126f608b9 (15:36): So what is the proposed benefit of &lt;h&gt; then?",
        "f139aba52f9fa1394b4034a7954b2220 (15:36): HTML5 almost does that.  The numbers are still taken into account in some cases",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:36): I already mentioned this earlier, dashiva",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:36): as for &lt;h&gt; and &lt;separator&gt;, I'll see if I can make a well-prepared case for them later on, or just let it rest",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:36): they are??",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:36): only without &lt;section&gt;, I hope?",
        "f139aba52f9fa1394b4034a7954b2220 (15:37): a924fb58d2c25874322f4e5126f608b9, there are no use cases for &lt;h&gt; and &lt;separator&gt; that aren't already covered in HTML5",
        "a924fb58d2c25874322f4e5126f608b9 (15:37): 98e5b851bd2fd05b0d06825182bc9a9a: This? &lt 98e5b851bd2fd05b0d06825182bc9a9a&gt; the benefit of h is that you don't have to match against h1|h2|h3|h4|h5|h6 anymore, plus that it doesn$Bc`QU(B have a rank-indicator in it which doesn$Bc`QU(B apply",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:37): yes",
        "a924fb58d2c25874322f4e5126f608b9 (15:37): But matching against hx is a -benefit-, it gives people useful default styling",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:37): a924fb58d2c25874322f4e5126f608b9, you can have that with &lt;h&gt; too, easily",
        "f139aba52f9fa1394b4034a7954b2220 (15:38): a924fb58d2c25874322f4e5126f608b9, theoretically, so would &lt;h&gt; based upon the nesting of sections.",
        "a924fb58d2c25874322f4e5126f608b9 (15:38): But sometimes you want a small heading without going through the intermediates",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:38): well then your document isn't structured well :)",
        "a924fb58d2c25874322f4e5126f608b9 (15:38): Sure it is",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:38): small heading implies styling :)",
        "a924fb58d2c25874322f4e5126f608b9 (15:39): The pure presentation of a single heading does not impact on the structure",
        "98e5b851bd2fd05b0d06825182bc9a9a (15:39): anyway, I don't think anybody disagrees on the usefulness of &lt;section&gt;",
        "a924fb58d2c25874322f4e5126f608b9 (15:40): Doesn't look like it"
    ],
    "person_ids": [
        "98e5b851bd2fd05b0d06825182bc9a9a",
        "f139aba52f9fa1394b4034a7954b2220",
        "a924fb58d2c25874322f4e5126f608b9",
        "083d9a270e6e16b2fbb08d35067aae5f"
    ]
}