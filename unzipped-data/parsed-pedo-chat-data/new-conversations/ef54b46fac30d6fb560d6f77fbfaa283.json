{
    "id": "ef54b46fac30d6fb560d6f77fbfaa283",
    "messages": [
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:09): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: who would be the relevant interested people at Mozilla to talk about HTML5 issues?  they don't seem to contribute much to HTML...",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:09): I guess b8810fee2f4a71f849f3f7409546d1d9 works for Moz in some capacity, right?",
        "1adba86c435b5fe0f7ea043370b1636b (22:09): what kind of &quot;HTML5 issues&quot;?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:10): specifically, the extensibility discussion",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:11): I'd imagine mrbkap, sicking, bz, dbaron, et all, but I'm not entirely sure as I'm not really involved in the Mozilla project anymore :)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:12): and how about Opera people?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:13): We're on the list. We haven't really decided on a position or impact of the potential solutions.",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:14): (Not that that would stop individuals from contributing.)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:15): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: similarly, who is someone at Opera who could discuss DOM3 Events during that telcon?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:16): I think that would be me. I fell asleep yesterday on my couch due to jetlag issues",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:16): lol",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:17): no offense, but we'd like to also have someone who has implemented keyboard and events stuff",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:17): obviously, you know a lot of the issues well, so you're welcome as well",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:19): We've asked the team reasponsible before. They were not very interested in participating.",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:20): so? :D",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:20): well, the answer would be no :)",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:20): ah",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:23): hmm. Looks like Julian left. But indeed Genx seems to be about the only serializer that doesn't suck as such, but e.g. PyGenx sucks a bit in itself and has a lousy Debian/Ubuntu package situation, so using PyGenx makes scripts dramatically less installable",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:25): The Xalan folks don't seem too responsive to bug tracker items. I guess I should write my own XML serializer without trying to cover all the ground that Xalan tries to cover but fails",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:29): 227a9a17d1db3f8e5c71a150345fb2a6: I have a consulting relationship with the Mozilla Corporation. I'm not working on Firefox but I do have HTML5 opinions. :-) In addition to the people e3fb62ebfa4f36acf5cbff6a6ed0f2e0 mentioned, I'd add roc.",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:30): yeah, he was already on my list, thanks",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:32): in my personal non-Mozilla-vetted opinion, the Gecko HTML parser really needs to replaced with a clean implementation of the HTML5 parsing algorithm",
        "a11aabeeceeae6b8cb5d12ea06b56554 (22:32): people in organisations have their own opinions!?",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:32): well, that's the point of HTML5, no?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:33): 227a9a17d1db3f8e5c71a150345fb2a6: yes, but that wasn't always the module owner opinion",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:33): huh",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:33): 227a9a17d1db3f8e5c71a150345fb2a6: It has been a *long* time since I last checked the module owner opinion, though",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:33): that surprises me",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:34): 227a9a17d1db3f8e5c71a150345fb2a6: I mean, in theory you could try to hack the old code to do new tricks",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:34): who's the owner?",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:34): 227a9a17d1db3f8e5c71a150345fb2a6: but *I* think it would be significantly more painful than writing a new parser",
        "1adba86c435b5fe0f7ea043370b1636b (22:35): mrbkap (Blake Kaplan) is the owner of the HTML parser",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:35): I would expect so, assuming that it can be proven to work",
        "1adba86c435b5fe0f7ea043370b1636b (22:35): and afaik he was never opposed to it becoming an HTML5 parser",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:36): anyone have mrbkap's email?  I don't know him",
        "1adba86c435b5fe0f7ea043370b1636b (22:37): mrbkap at gmail",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:37): thanks",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:38): 1adba86c435b5fe0f7ea043370b1636b: as I understood it, he didn't favor a rewrite almost three years ago",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:39): 1adba86c435b5fe0f7ea043370b1636b: but the HTML5 prospects in general were different back then",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:39): blake and i are in touch",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:39): right now mozilla is swamped with ff3",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:39): I know I have changed my opinion about the sensibility of a new parser for HTML",
        "1adba86c435b5fe0f7ea043370b1636b (22:40): b8810fee2f4a71f849f3f7409546d1d9: ah, I see",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:42): as an aside: the Gecko interfaces around the parsing area already don't match the expat setup which is in there despite the interface mismatch",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:43): a pure implementation of the HTML5 parsing algorithm wouldn't fit the old interfaces either, and would probably integrate the same way as expat+sink",
        "1adba86c435b5fe0f7ea043370b1636b (22:44): it would certainly be a large endeavor",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:46): porting the Validator.nu parser from Java to C would go a long way, except",
        "1adba86c435b5fe0f7ea043370b1636b (22:46): it would also be a pretty risky web compat change, I think - despite the large amounts of work that have gone into making HTML5's parser compatible with the web",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:46): 1) the tree builder would have to know to do the Geckoish incremental rendering, script and style things",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:47): 2) the main loop ownership would need to move out of the parser so that new buffers would be pushed to the parser instead of the parser pulling",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:48): that would probably lead to keeping tokenizer state in explicit variables instead of the runtime stack",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:48): 1adba86c435b5fe0f7ea043370b1636b, it would toaly be a huge risk",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:48): has to be done early on, basically",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:48): e3fb62ebfa4f36acf5cbff6a6ed0f2e0: early in a release cycle?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:48): y",
        "227a9a17d1db3f8e5c71a150345fb2a6 (22:50): possibly the only thing in that release cycle",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:51): the risk isn't quite as huge in compat terms, since WebKit is already so close to the HTML5 algorithm and WebKit works with real content",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:53): WebKit does tiny things different that can have a lot of impact",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:53): such as &lt;/form&gt; parsing",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:53): (different from HTML5)",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:53): true",
        "1adba86c435b5fe0f7ea043370b1636b (22:54): &quot;works with real content&quot; is a not a binary state",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:55): it's an impression :)",
        "1adba86c435b5fe0f7ea043370b1636b (22:55): it's hard to compare webkit's &quot;web compat&quot; to mozilla's",
        "1adba86c435b5fe0f7ea043370b1636b (22:56): (and in general between any two browser engines)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:57): yeah, changing the parser is a big risk/reward thing",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:57): and as with IE, it might not be the *Web* compat but that behind the firewall no one can hear you scream...",
        "3f2e2531201cfbf853f16f668132eaf2 (22:57): What's the reward?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:57): documented code :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:57): tests, etc.",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:58): 3f2e2531201cfbf853f16f668132eaf2: getting more value of the SVG and MathML renderers",
        "3f2e2531201cfbf853f16f668132eaf2 (22:58): Working code sounds much more important than documented code :-)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (22:58): not if you need to maintain it",
        "3f2e2531201cfbf853f16f668132eaf2 (22:58): When there's one maintainer and a hundred million users, nobody cares what the maintainer thinks",
        "b8810fee2f4a71f849f3f7409546d1d9 (22:58): It's really sad that Gecko's SVG and MathML are locked behind XML parsing or JavaScript",
        "3f2e2531201cfbf853f16f668132eaf2 (22:59): We just need a JS script to enable HTML5-compatible parsing in old browsers",
        "1adba86c435b5fe0f7ea043370b1636b (22:59): locked bhind XML parsing I understand - locked behind JAvaScript?",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:00): 1adba86c435b5fe0f7ea043370b1636b: that in text/html you need something like dojo.gfx (or something like that) to use SVG and you can't just put the markup in the file",
        "1adba86c435b5fe0f7ea043370b1636b (23:01): oh, I'm not really familiar with dojo.gfx",
        "1adba86c435b5fe0f7ea043370b1636b (23:01): it creates elements dynamically, presumably?",
        "1adba86c435b5fe0f7ea043370b1636b (23:01): I see",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:02): 1adba86c435b5fe0f7ea043370b1636b: as I understand it, it creates SVG dynamically in Gecko/Opera/WebKit and VML in IE",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:03): 3f2e2531201cfbf853f16f668132eaf2: the reward is interop with other browsers once they switch too",
        "227a9a17d1db3f8e5c71a150345fb2a6 (23:03): b8810fee2f4a71f849f3f7409546d1d9: correct",
        "3f2e2531201cfbf853f16f668132eaf2 (23:07): 69b0d3dfe919a6b860a9fac82de52a7e: Sounds like the first switcher gets no reward at all",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:07): 3f2e2531201cfbf853f16f668132eaf2: don't underestimate the benefits of maintainability",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:08): 3f2e2531201cfbf853f16f668132eaf2: the current mozilla code is incomprehensible to most",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:08): it needs a rewrite irrespective of html5",
        "69b0d3dfe919a6b860a9fac82de52a7e (23:08): if we are to keep adding elements",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:09): 3f2e2531201cfbf853f16f668132eaf2: I agree with 69b0d3dfe919a6b860a9fac82de52a7e's assessment of the comprehensibility of the Gecko HTML parser code",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:09): Fortunately, I've never had to deal with the tokenizer",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:09): I have had to comprehend the tree builder",
        "b8810fee2f4a71f849f3f7409546d1d9 (23:11): and I must admit that I wrote the incremental XML patch without ever *fully* comprehending what I was imitating",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:31): Would this be the place to ask a question related to HTML / Javascript?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (23:33): depends on the question :)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (23:33): (this is the channel of the HTML WG, one of the groups responsible for making HTML5)",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:33): oh ok, should I just ask then?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (23:34): sure",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:34): Well, I have a link on my website with a query string of link=http://amazon.com/productcodeandstuff.. and when i click on it, I want it to open the link url in a frame def file",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:35): so that the top frame would be a back button to get back to my site, and the bottom frame would have the amazon page that i linked to.",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:35): Also, I have javascript code that I used on another page to do a similar task, except it fills in a plid number instead of a full link, and that code doesnt seem to be working on this instance",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (23:36): yeah, you want another channel for those questions :)",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:36): Ok, can you direct me to a better place to ask?",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (23:36): maybe irc://irc.freenode.org/html",
        "1d5e3ed64d65773fe430fea5dfd73117 (23:37): ok, thank you :)"
    ],
    "person_ids": [
        "227a9a17d1db3f8e5c71a150345fb2a6",
        "1adba86c435b5fe0f7ea043370b1636b",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "3f2e2531201cfbf853f16f668132eaf2",
        "1d5e3ed64d65773fe430fea5dfd73117"
    ]
}