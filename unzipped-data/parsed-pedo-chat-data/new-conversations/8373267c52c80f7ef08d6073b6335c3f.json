{
    "id": "8373267c52c80f7ef08d6073b6335c3f",
    "messages": [
        "27a00904c55e1a3947176eabe2c0f262 (20:28): e553d3594bce34a6dc442a8038a14690: minCompatibleAppVersion / minCompatiblePlatformVersion apply to compatibility rages regardless of where they comes from (instal.rdf or AMO), pretty sure you're hitting an AMO bug :\\ (bug 714698)",
        "e553d3594bce34a6dc442a8038a14690 (20:29): 27a00904c55e1a3947176eabe2c0f262: yeah, Mossop already duped my bug onto that one",
        "e553d3594bce34a6dc442a8038a14690 (20:29): thanks",
        "27a00904c55e1a3947176eabe2c0f262 (20:29): :)",
        "03cd618659ad3063c1d53077657a801c (20:38): 54d718f6cca21e66ee5a5e3bfd001912: is it ok to push few patches?",
        "54d718f6cca21e66ee5a5e3bfd001912 (20:38): smaug: yup :-)",
        "03cd618659ad3063c1d53077657a801c (20:39): k, thanks",
        "eb215559f21ce08fc2c0af415cb66253 (20:40): Check-in: http://hg.mozilla.org/mozilla-central/rev/0674f2bdd78b - Olli Pettay - Bug 716006 - Don't traverse NodeInfoManager so much, r=jst, mccr8",
        "eb215559f21ce08fc2c0af415cb66253 (20:40): http://hg.mozilla.org/mozilla-central/rev/4052f4936e1c - Olli Pettay - Bug 714633 - Release message manager related data structures more aggressively, part2, r=jst",
        "8b3687499080633e1898fa1dd209ef81 (20:40): / *\\(\\&amp;([^&amp;])\\)(:)?$/",
        "eb215559f21ce08fc2c0af415cb66253 (20:40): http://hg.mozilla.org/mozilla-central/rev/39a83f2080dc - Olli Pettay - Bug 714633 - Release message manager related data structures more aggressively, r=jst",
        "03cd618659ad3063c1d53077657a801c (20:41): 8b3687499080633e1898fa1dd209ef81: ?",
        "8b3687499080633e1898fa1dd209ef81 (20:41): An awful regexp I just stumbled upon",
        "1245ed06dabfdded11c0d30c62c54cce (20:42): what's it for?",
        "51c1edab440268cdb0754ff0c4584a9f (20:44): 1245ed06dabfdded11c0d30c62c54cce: making your brain spin",
        "1245ed06dabfdded11c0d30c62c54cce (20:44): not really",
        "1245ed06dabfdded11c0d30c62c54cce (20:44): regexes are easy",
        "21ad4e5dad346dc1b4a108dc3cb609a0 (20:44): if you're a state machine!",
        "1245ed06dabfdded11c0d30c62c54cce (20:44): I am",
        "51c1edab440268cdb0754ff0c4584a9f (20:44): (&amp;foo): at EOL",
        "1245ed06dabfdded11c0d30c62c54cce (20:44): and almost all of that regex is potentially justifiable (with the exception of \\&amp;)",
        "1245ed06dabfdded11c0d30c62c54cce (20:45): missing a + then",
        "51c1edab440268cdb0754ff0c4584a9f (20:45): preceded by 0 or more whitespace",
        "51c1edab440268cdb0754ff0c4584a9f (20:45): well : is ()? so its optional",
        "1245ed06dabfdded11c0d30c62c54cce (20:45): I know what it matches",
        "51c1edab440268cdb0754ff0c4584a9f (20:46): 1245ed06dabfdded11c0d30c62c54cce: ooo I don't know what it matches, since I don't know where its run, if you do tell me :-0",
        "1245ed06dabfdded11c0d30c62c54cce (20:46): what?",
        "f220ec2826047dc2f88de18ac4db4f42 (20:55): taras: Is the about:startup extension a good one to use for startup time testing? Also should I be rebooting in between startups?",
        "6fda27264f8154abdb6ed31bd701a8e5 (21:01): that's cold start vs warm start",
        "6fda27264f8154abdb6ed31bd701a8e5 (21:01): if you reboot it's a cold start",
        "f220ec2826047dc2f88de18ac4db4f42 (21:02): k so I guess warm starts aren't as useful",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:03): 6fda27264f8154abdb6ed31bd701a8e5: well that is not exactly true a you just downloaded a new version and installed it and never ran it before without doing a reboot.  that is still a coldstart on first fun is it not?",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:05): It is certainly a coldstart if you never had any version of Firefox ever installed before so coldstart/warmstart is unrelated to OS reboots.",
        "d925ebd3482996513a28057bab1206d7 (21:05): not necessarily, because the install is probably in the OS's file cache?",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:06): It could be related but is really an entirely separate concept.",
        "d925ebd3482996513a28057bab1206d7 (21:06): I meant that start after install is not necessarily a coldstart",
        "f220ec2826047dc2f88de18ac4db4f42 (21:07): would be useful to know if you install do a diff path",
        "f220ec2826047dc2f88de18ac4db4f42 (21:07): if it is just as good as reboot",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:07): Yes all I meant was a reboot was not the only way to get a coldstart.",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:07): So like I sadi the reboot issue is really not the point.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:08): could I install 6 of the same builds to 6 diff locations and avoid 6 restarts?",
        "b60a738d7a8e8f059f7d64ceb848a5ee (21:11): 27a00904c55e1a3947176eabe2c0f262: Hello :-) . I submitted a small patch for the addon manager search bug just to see if I am moving in the right direction.",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:11): Oh so trying to do 6 test of something by installign the same version side-by-side 6 time?  Well, depending on what you are trying to isolate, to completely isolate them you would need ot have them use 6 different profiles.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:13): just want to measure cold startup time 6 times in a row",
        "f220ec2826047dc2f88de18ac4db4f42 (21:13): with diff builds",
        "f220ec2826047dc2f88de18ac4db4f42 (21:13): I think reboot is safest",
        "f220ec2826047dc2f88de18ac4db4f42 (21:14): and will give the most consistent results",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:17): f220ec2826047dc2f88de18ac4db4f42: yes measuring the same way is generally better to get consistent results that would then have statistical significance.",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:18): I did not understand the original basis for the question.",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:18): I came in late here I guess",
        "51c1edab440268cdb0754ff0c4584a9f (21:20): f220ec2826047dc2f88de18ac4db4f42: yea, imo I would restart each time, safe that way as your test :-)",
        "51c1edab440268cdb0754ff0c4584a9f (21:20): f220ec2826047dc2f88de18ac4db4f42: of course if you're making automated tests for it, might want to investigate if the &quot;put the build elsewhere&quot; is enough :-)",
        "f220ec2826047dc2f88de18ac4db4f42 (21:21): no automated tests, just investigating bug 692255",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:24): f220ec2826047dc2f88de18ac4db4f42: OIC that is the whole as far as i can see, no one has EVER manged to prove to me that any applications starts faster because fo the Windows prefetch data.  Everything including just getting your system to actually be responsive at all can be improved by nuking the windows prefetch folder.",
        "51c1edab440268cdb0754ff0c4584a9f (21:24): f220ec2826047dc2f88de18ac4db4f42: two comments: #1 https://bugzilla.mozilla.org/attachment.cgi?id=586721&amp;action=diff#a/toolkit/components/maintenanceservice/workmonitor.cpp_sec2 you dropped the log, #2 does this have to be done by maintenance service, (remember SeaMonkey can't use it yet, since we can't sign our updates",
        "f220ec2826047dc2f88de18ac4db4f42 (21:24): 09ebf11319ab3ae9bc8147d99bd1c014: ya taras' suggestion was to nuke the prefetch files for faster FF startup on windows",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:24): This si really a Microsoft issue and not a Mozilla issue.  but then it does make us slower.",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:25): yes my feeling is nuke the prefetch files to jsut make windows faster in general.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:25): thx will fix the log for unrecognized commands",
        "09ebf11319ab3ae9bc8147d99bd1c014 (21:26): This was just a very poor implemetation of a something by Microsoft to start with that I have not found anything that is not slower becasue of it.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:26): 51c1edab440268cdb0754ff0c4584a9f: Perhaps on some OS we can bypass the service (XP?) but for sure on VIsta and possibly win7 you need to be elevated",
        "51c1edab440268cdb0754ff0c4584a9f (21:27): f220ec2826047dc2f88de18ac4db4f42: ahh, is there a way for SeaMonkey then to be able to use the service WITHOUT using it for updates?",
        "f220ec2826047dc2f88de18ac4db4f42 (21:27): 51c1edab440268cdb0754ff0c4584a9f: Also the service can start to be used for other things even if it's not yet used for update.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:27): ;)",
        "51c1edab440268cdb0754ff0c4584a9f (21:28): f220ec2826047dc2f88de18ac4db4f42: basically if we use it for things other than update at all, I want a way to install it/use it for SeaMonkey without using it for updates ;-)",
        "51c1edab440268cdb0754ff0c4584a9f (21:28): f220ec2826047dc2f88de18ac4db4f42: and the other caveat I just thought of, is that we need to keep the service named differently for SM and Firefox!",
        "51c1edab440268cdb0754ff0c4584a9f (21:28): (and thunderbird)",
        "51c1edab440268cdb0754ff0c4584a9f (21:28): I don't know if it works just fine that way :-)",
        "f220ec2826047dc2f88de18ac4db4f42 (21:28): 51c1edab440268cdb0754ff0c4584a9f: 51c1edab440268cdb0754ff0c4584a9f: the plan was to use the same service across products, but that is subject to change.",
        "6d8997fe86b7d237f623653149c9a213 (21:28): hey... why would directory service.get(&quot;ComsD&quot;) fail, but &quot;CurProcD&quot; works? this is seamonkey, self-compiled.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:28): 51c1edab440268cdb0754ff0c4584a9f: Also there is no harm in it being able to process updates, just don't add application code to use the service.",
        "51c1edab440268cdb0754ff0c4584a9f (21:29): f220ec2826047dc2f88de18ac4db4f42: my concern is if we have a Firefox 12 installed, but a SeaMonkey based on Gecko 15",
        "51c1edab440268cdb0754ff0c4584a9f (21:29): for example",
        "f220ec2826047dc2f88de18ac4db4f42 (21:29): understood, as is now you will be using the newest version.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:29): for all.",
        "51c1edab440268cdb0754ff0c4584a9f (21:29): f220ec2826047dc2f88de18ac4db4f42: is the service exe installed/stored outside of Program Files?",
        "f220ec2826047dc2f88de18ac4db4f42 (21:30): and it will always be backwards compatible",
        "f220ec2826047dc2f88de18ac4db4f42 (21:30): 51c1edab440268cdb0754ff0c4584a9f: always in program files, on x64 here: C:\\Program Files (x86)\\Mozilla Maintenance Service",
        "6d8997fe86b7d237f623653149c9a213 (21:30): f220ec2826047dc2f88de18ac4db4f42: we've tried to use common services for all mozilla apps in the past. see e.g. &quot;GRE&quot;. always ended up a disaster with lookup, versions, uninstall, so we stopped.",
        "51c1edab440268cdb0754ff0c4584a9f (21:30): ahh stored as Mozilla Maintenance Service&quot;",
        "51c1edab440268cdb0754ff0c4584a9f (21:31): f220ec2826047dc2f88de18ac4db4f42: ok, I'll have to help test/figure out that stuff then, but if its used for other things I'll want to get it used in SeaMonkey :)",
        "6d8997fe86b7d237f623653149c9a213 (21:31): f220ec2826047dc2f88de18ac4db4f42: are you sure there's no Windows service that we can ask to keep us uptodate?",
        "6d8997fe86b7d237f623653149c9a213 (21:31): MSI or anything like that?",
        "51c1edab440268cdb0754ff0c4584a9f (21:31): 6d8997fe86b7d237f623653149c9a213: well we also don't ship an msi yet",
        "6d8997fe86b7d237f623653149c9a213 (21:31): 51c1edab440268cdb0754ff0c4584a9f: I know. but it's highly requested.",
        "51c1edab440268cdb0754ff0c4584a9f (21:32): f220ec2826047dc2f88de18ac4db4f42: well if you Uninstall Firefox via windows applications display, does it uninstall the service?",
        "f220ec2826047dc2f88de18ac4db4f42 (21:32): 6d8997fe86b7d237f623653149c9a213: the service does not handle updates itself, it bypasses the uac prompt",
        "51c1edab440268cdb0754ff0c4584a9f (21:32): or does the service stay?",
        "6d8997fe86b7d237f623653149c9a213 (21:32): and instead of puring time into writing a system service, and all the issues you discuss, would be better spent with MSI",
        "f220ec2826047dc2f88de18ac4db4f42 (21:32): 51c1edab440268cdb0754ff0c4584a9f: no it is a diff product basically included in Firefox installs",
        "51c1edab440268cdb0754ff0c4584a9f (21:32): (as in, if Seamonkey was installed later, but is still present)",
        "51c1edab440268cdb0754ff0c4584a9f (21:32): f220ec2826047dc2f88de18ac4db4f42: ok, just &quot;making sure&quot;",
        "6d8997fe86b7d237f623653149c9a213 (21:32): f220ec2826047dc2f88de18ac4db4f42: yuck",
        "f220ec2826047dc2f88de18ac4db4f42 (21:32): 51c1edab440268cdb0754ff0c4584a9f: It's a separate product, and you can uninstall it via add/remove programs",
        "6d8997fe86b7d237f623653149c9a213 (21:34): f220ec2826047dc2f88de18ac4db4f42: this sounds like a big mess, all of that: separate service, versioning, uninstall, security problems.",
        "6d8997fe86b7d237f623653149c9a213 (21:34): f220ec2826047dc2f88de18ac4db4f42: users hate it when they have more than one uninstaller for a program in the Windows &quot;add/remove&quot; list",
        "f220ec2826047dc2f88de18ac4db4f42 (21:35): 6d8997fe86b7d237f623653149c9a213: Please read the feature page: https://wiki.mozilla.org/Silent_Update and implementation page: https://wiki.mozilla.org/Windows_Service_Silent_Update  I'm afraid you are making some snap judgments with a poor understanding of the history of the task.",
        "6d8997fe86b7d237f623653149c9a213 (21:35): f220ec2826047dc2f88de18ac4db4f42: yes, I only vaguely understand the task. but I think I do understand the implications of the road you venture, and I think they are worse than the feature you implement.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:37): I'm willing to discuss it more privately with you but only after you read all of that data.  Alternately if you'd like we can setup a call with the silent update team once you're up to speed.  I see no benefit in discussing this more here at this time.",
        "6d8997fe86b7d237f623653149c9a213 (21:39): f220ec2826047dc2f88de18ac4db4f42: I know where you are coming from, but please see where I am coming from: me, and many others like it very much that firefox does not leave trails on the machine. install is just dropping in a directory, and uninstall is deleting that directory. that is a highly appreciated feature byitself, and you're just making that go away. I'm just saying that there's a significant downside to that approach.",
        "6d8997fe86b7d237f623653149c9a213 (21:40): I'll leave it at that, and just hope that you will find another solution.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:40): 6d8997fe86b7d237f623653149c9a213: Please post a new bug in bugzilla and CC <email/> and <email/> and we can discuss it in the context of that bug.  Thanks.",
        "f220ec2826047dc2f88de18ac4db4f42 (21:58): 51c1edab440268cdb0754ff0c4584a9f: Regarding our previous conversation about using the service without updates, you'd be able to do this by not having &quot;app.update.service.enabled&quot;, true in your default settings and by having --enable-maintenance-service in your .mozconfig",
        "27a00904c55e1a3947176eabe2c0f262 (22:06): b60a738d7a8e8f059f7d64ceb848a5ee: ok, i'll look at it when i can. i'm just about to head out of town for the next 2 days, so there may be some lag",
        "b60a738d7a8e8f059f7d64ceb848a5ee (22:09): 27a00904c55e1a3947176eabe2c0f262: Ok, no problem. Just wanted to put you on alert."
    ],
    "person_ids": [
        "27a00904c55e1a3947176eabe2c0f262",
        "e553d3594bce34a6dc442a8038a14690",
        "03cd618659ad3063c1d53077657a801c",
        "54d718f6cca21e66ee5a5e3bfd001912",
        "eb215559f21ce08fc2c0af415cb66253",
        "8b3687499080633e1898fa1dd209ef81",
        "1245ed06dabfdded11c0d30c62c54cce",
        "51c1edab440268cdb0754ff0c4584a9f",
        "21ad4e5dad346dc1b4a108dc3cb609a0",
        "f220ec2826047dc2f88de18ac4db4f42",
        "6fda27264f8154abdb6ed31bd701a8e5",
        "09ebf11319ab3ae9bc8147d99bd1c014",
        "d925ebd3482996513a28057bab1206d7",
        "b60a738d7a8e8f059f7d64ceb848a5ee",
        "6d8997fe86b7d237f623653149c9a213"
    ]
}