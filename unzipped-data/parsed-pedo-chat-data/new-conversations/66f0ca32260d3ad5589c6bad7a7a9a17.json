{
    "id": "66f0ca32260d3ad5589c6bad7a7a9a17",
    "messages": [
        "6d05f0c2942adc25946a4b02b37ffa00 (12:32): &quot;If getContext() is subsequently called with any other string, the WebGLRenderingContext shall be detached from its Canvas object (the canvas attribute will be null). API calls may still be made on the WebGLRenderingContext object and readPixels() may be used to obtain the contents of the drawing buffer. But the contents shall no longer be shown on the page.&quot;",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:32): hmm",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:33): it doesn't say it if can become attached again afterwards",
        "ab7faae5d7b250ea8606486575f8f79c (12:33): Also doesn't say what happens if you have a reference to a 2D context then get a WebGL context then use the 2D context",
        "ab7faae5d7b250ea8606486575f8f79c (12:36): Maybe HTML5 ought to define a mechanism for new contexts to be defined that interact with other contexts in various ways (e.g. one context being a vendor-specific extension of another context, or one being exclusive to all other contexts, etc)",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:36): or it should say that exclusive contexts are verboten",
        "ab7faae5d7b250ea8606486575f8f79c (12:36): because otherwise it's quite possible that multiple specs will define contradictory behaviour",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:37): yuhhuh",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): How would it work with non-exclusive contents?",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): If you draw something with WebGL then draw something else with 2D on the same canvas, what happens?",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): and then when you call toDataURL, what happens?",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:39): it should just draw on top",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:39): i'd guess",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:39): and share the backing store",
        "ab7faae5d7b250ea8606486575f8f79c (12:39): HTML5 seems to assume there is a single bitmap that's part of the canvas state, but I think that's incompatible with efficient WebGL implementations",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:39): so everything draws on the same bitmap",
        "ab7faae5d7b250ea8606486575f8f79c (12:40): OpenGL doesn't draw onto bitmaps in system memory, unless you manually copy it back from the video card (which is pretty slow)",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:40): you could implement 2d in WebGL",
        "ab7faae5d7b250ea8606486575f8f79c (12:42): I think that's kind of what's happening with some Direct2D browser experiments, but that's Windows-only and it's apparently really hard if you just have the raw 3D APIs",
        "b25b6b77a0087ff8385941e5545d32ea (12:42): seems to recall we had this conversation before :)",
        "ab7faae5d7b250ea8606486575f8f79c (12:43): b25b6b77a0087ff8385941e5545d32ea: I don't recall coming to any conclusion before, sadly",
        "b25b6b77a0087ff8385941e5545d32ea (12:43): No, we didn't",
        "ab7faae5d7b250ea8606486575f8f79c (12:43): It would be nice to have one at some point",
        "ab7faae5d7b250ea8606486575f8f79c (12:43): before it gets shipped too much",
        "b25b6b77a0087ff8385941e5545d32ea (12:43): IIRC we decided it would be nice if everything could happen on the graphics card but probably impractical in the short term",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:44): 69b0d3dfe919a6b860a9fac82de52a7e is always big on cracks between the specs",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:44): he should take this on!",
        "69b0d3dfe919a6b860a9fac82de52a7e (12:44): file a bug",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:44): mkay",
        "69b0d3dfe919a6b860a9fac82de52a7e (12:44): i wonder how webgl implementations handle the canvas being animated with a 3d css transform",
        "69b0d3dfe919a6b860a9fac82de52a7e (12:45): while a &lt;video&gt; plays on top...",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:45): on a phone with hardware accelerated video",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:45): ...boom...",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:47): bugs",
        "6d05f0c2942adc25946a4b02b37ffa00 (12:47): http://www.w3.org/Bugs/Public/show_bug.cgi?id=8476",
        "b25b6b77a0087ff8385941e5545d32ea (12:48): In the future people will carry their phone in their pocket and a huge backpack containing a graphics card and a water cooling system",
        "ab7faae5d7b250ea8606486575f8f79c (12:49): wonders if b25b6b77a0087ff8385941e5545d32ea has missed the trend for electronic miniaturisation over the past half a century",
        "b25b6b77a0087ff8385941e5545d32ea (12:52): ab7faae5d7b250ea8606486575f8f79c: :) But presumably power consumption and heat generation are still rather large problems even with minature components",
        "ab7faae5d7b250ea8606486575f8f79c (13:00): b25b6b77a0087ff8385941e5545d32ea: Things like PSPs and iPhones seem to do decent 3D quite happily, with similar capabilities to full-size consoles from ten years ago",
        "ab7faae5d7b250ea8606486575f8f79c (13:01): and I assume they must cope with the power and heat requirements adequately",
        "ab7faae5d7b250ea8606486575f8f79c (13:01): and I don't see any reason for the trend to stop",
        "b5934067b4c7d9c30299478a245d4491 (13:02): most high-end phones have mobile versions of reasonable graphics chips nowadays",
        "b5934067b4c7d9c30299478a245d4491 (13:03): and I'd say the capabilities are closer to pc graphics from about 5 years ago, but with less available memory",
        "ab7faae5d7b250ea8606486575f8f79c (13:04): b5934067b4c7d9c30299478a245d4491: So they could run Half Life 2? :-)",
        "b5934067b4c7d9c30299478a245d4491 (13:05): ab7faae5d7b250ea8606486575f8f79c: potentially, if you reduced the graphics quality and map size considerably to fit within the memory available ;)",
        "b5934067b4c7d9c30299478a245d4491 (13:07): at least in 3d graphics capabilities... there's a lot more to HL2 than that though :)",
        "ab7faae5d7b250ea8606486575f8f79c (13:08): I probably shouldn't have said &quot;capabilities&quot; - it seems like they support much more modern features and APIs, but performance is further behind",
        "ab7faae5d7b250ea8606486575f8f79c (13:08): so you have to use the capabilities more sparingly",
        "b5934067b4c7d9c30299478a245d4491 (13:08): ab7faae5d7b250ea8606486575f8f79c: that's probably about right yeah :)",
        "ab7faae5d7b250ea8606486575f8f79c (13:09): (I know basically nothing about this area though, so mostly I'm just guessing :-) )",
        "b5934067b4c7d9c30299478a245d4491 (13:09): they don't run quite as fast, and have nowhere near as much memory, but the feature-set of the chips in use is pretty modern and allows for more sophisticated stuff than consoles from 10 years ago did",
        "ab7faae5d7b250ea8606486575f8f79c (13:09): At least they don't have to bother with HD resolution output",
        "b5934067b4c7d9c30299478a245d4491 (13:09): that said, you don't need to render in anywhere near as high resolution or store as much geometry :)",
        "b5934067b4c7d9c30299478a245d4491 (13:10): I think phone screens nowadays are 'QHD' (quarter HD) nowadays and clock in at 640x360 pixels :)",
        "b5934067b4c7d9c30299478a245d4491 (13:11): but raw graphics power isn't really the problem on phones... it's control and all the other stuff that's needed",
        "ab7faae5d7b250ea8606486575f8f79c (13:12): That sounds more like ninth HD, unless you cheat and consider lower-than-standard-cheap-laptop-display to be HD :-)",
        "ab7faae5d7b250ea8606486575f8f79c (13:13): They should call it &quot;middling definition&quot;, perhaps",
        "b5934067b4c7d9c30299478a245d4491 (13:13): ab7faae5d7b250ea8606486575f8f79c: a standard HD res is 1280 * 720",
        "b5934067b4c7d9c30299478a245d4491 (13:14): (I think that's the res of 1080p)",
        "ab7faae5d7b250ea8606486575f8f79c (13:14): 1080p is 1920x1080, hence the &quot;1080&quot; in the name, unless I'm horribly confused",
        "b5934067b4c7d9c30299478a245d4491 (13:14): so taking the HD resolutions as those supported by HD tvs, then it is a quarter of that :)",
        "ab7faae5d7b250ea8606486575f8f79c (13:15): (and 1280x720 is 720p)",
        "b5934067b4c7d9c30299478a245d4491 (13:15): hmm... I may be thinking of 720p then",
        "b5934067b4c7d9c30299478a245d4491 (13:15): still, it's classed as a HD resolution, so the phone manufacturers went with a quarter of it as 'QHD' :)",
        "3581e14ac398e3c367de87efa596a182 (13:16): actually qhd is 960x540, one quarter of 1920x1080 :)",
        "3581e14ac398e3c367de87efa596a182 (13:17): 640x360 is nHD apparantly, whatever that means",
        "ab7faae5d7b250ea8606486575f8f79c (13:18): guesses it must have been a marketing person who decided an acronym containing the word &quot;high&quot; was appropriate for sub-VGA resolutions :-p",
        "b25b6b77a0087ff8385941e5545d32ea (13:18): &quot;Not High Definition&quot;, perhaps",
        "b5934067b4c7d9c30299478a245d4491 (13:19): heh, I'm going by what the phones I worked on that had that resolution called it :)",
        "b5934067b4c7d9c30299478a245d4491 (13:21): still, AFAIK, the graphics chips available to phones are capable of the raw power required to do all the effects that modern consoles are capable of, the restricting points are things like the physics engines and other processing that's required to get the data ready for the screen in a game"
    ],
    "person_ids": [
        "6d05f0c2942adc25946a4b02b37ffa00",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b25b6b77a0087ff8385941e5545d32ea",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "b5934067b4c7d9c30299478a245d4491",
        "3581e14ac398e3c367de87efa596a182"
    ]
}