{
    "id": "cb7618eaaccbd6ed4953b984351f603f",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (01:37): well bummer",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:37): ends up speccing an event that fires on garbage collection",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:37): that's clearly not a good plan",
        "a924fb58d2c25874322f4e5126f608b9 (01:40): Very interoperable, no doubt :)",
        "ab7faae5d7b250ea8606486575f8f79c (01:42): Would it be non-conforming to just leak memory and not do GC?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:42): so here's the problem",
        "a924fb58d2c25874322f4e5126f608b9 (01:42): You'd still be firing it every time you did GC, so it should be conforming",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:43): this is for http://www.hixie.ch/specs/dom/messages/0.9",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:43): what should happen if i create an end point, set its message handler, and then forget about my end of it, having passed the other end to another browsing context?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:43): clearly it shouldn't be garbage collected",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): as it can still receive messages and respond usefully",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): but then what happens if my Window is closed?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:44): or navigated?",
        "a924fb58d2c25874322f4e5126f608b9 (01:45): Is the strong entangling really needed?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): should the other side get an unload event for the endpoint?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:45): how do you mean?",
        "a924fb58d2c25874322f4e5126f608b9 (01:45): Instead of just having each endpoint have an &quot;other end&quot; property referring to the other endpoint",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:46): i don't understand",
        "a924fb58d2c25874322f4e5126f608b9 (01:47): Um. Well, could you treat it the same way any old DOM reference in a different window?",
        "a924fb58d2c25874322f4e5126f608b9 (01:48): With window references you have .closed, could something similar work for endpoints?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:48): i can set .active to false",
        "a924fb58d2c25874322f4e5126f608b9 (01:52): The problematic event was something like &quot;other endpoint is gone&quot;?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:52): i think i've worked out how to spec it for now",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:52): we'll see if it handles Workers too in a second",
        "a924fb58d2c25874322f4e5126f608b9 (01:53): What's the reason for cloning endpoints sent via postMessage, by the way?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:53): cross-origin concerns",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:55): for example, it would be bad if you could do foreignEndPoint.prototype.prototype.toString = function () { my evil function }",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:55): or whatever",
        "a924fb58d2c25874322f4e5126f608b9 (01:56): So the create function is usually making one just to throw it away later",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:56): yep",
        "a924fb58d2c25874322f4e5126f608b9 (01:57): I feel like it should be possible to do it the other way around, creating just one endpoint and having the semantics of send be &quot;The endpoint received should be a new one entangled with this here local endpoint I have&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:57): what if you do it twice?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:58): also, you might want to pass the same end point down several pipes",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:58): which you couldn't do the way you describe it",
        "a924fb58d2c25874322f4e5126f608b9 (01:59): Aren't those two things mutually exclusive?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:59): hm?",
        "a924fb58d2c25874322f4e5126f608b9 (01:59): If you want to pass it down several pipes, you are doing it twice (or more)",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:00): say you have established pipes A1&lt;-&gt;A2 and B1&lt;-&gt;B2, and a newly created pipe C1&lt;-&gt;C2.",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:00): right now you can pass C2 down from A1 to A2, and then from there it can go from B1 to B2",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:00): but your proposal can't do that, as i understand it",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:01): however, your proposal would allow sending &quot;C1's other point&quot; down A1 to A2 creating C2, and then sending &quot;C1's other point&quot; again down A1 to A2, creating C2'?",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:01): so now you have two C2s",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:02): which is confusing",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:02): and causes all kinds of problems",
        "a924fb58d2c25874322f4e5126f608b9 (02:02): Let me work this out. So you pass C2 from A1 to A2, which gives A2 a C3 connected to C1. Then you pass C3 from B1 to B2, giving B2 a C4 which is connected to C1. In the process you've invalidated C2 and C3.",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:03): yah",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:03): (i'd prefer the notation C2, C2', C2'', C2''', but sure :-) )",
        "a924fb58d2c25874322f4e5126f608b9 (02:04): Yeah, I see my idea wouldn't support chaining",
        "a924fb58d2c25874322f4e5126f608b9 (02:05): (Unless the endpoint included a pointer to its twin)",
        "a924fb58d2c25874322f4e5126f608b9 (02:05): And that's what the cloning was supposed to stop",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:06): yeha",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:06): yeah, even",
        "a924fb58d2c25874322f4e5126f608b9 (02:07): So I suppose I'd be writing function setupLink(w) { p = new Pair(); w.postMessage(&quot;New pair&quot;,p.two); return p.one; } or somesuch then",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:27): hmmmmm",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:27): workers have to die if no browsing contexts refer to them",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:27): not just if nobody refers to them",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:27): otherwise you could have a worker refer to another and vice versa",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:27): and they'd keep each other alive",
        "f139aba52f9fa1394b4034a7954b2220 (02:41): I don't know how to address this comment for selectors api http://lists.w3.org/Archives/Public/public-webapi/2008Feb/0000.html",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:42): hm, i wrote that text",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:42): or suggested it originally",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:42): let's see",
        "f139aba52f9fa1394b4034a7954b2220 (02:42): I can't figure out how to rephrase it to make it clearer",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:42): yeah",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:42): User agents should ensure that they do not crash or behave erratically when facing...",
        "f139aba52f9fa1394b4034a7954b2220 (02:43): that might work",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:43): ... For example, a user agent could apply a timeout to the NSResolver callback.",
        "f139aba52f9fa1394b4034a7954b2220 (02:43): but then I'm not totally convinced of the value of having that in there at all, since the same applies to all scripts",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:44): well, the difference here is that the script is driving a UA algorithm",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:44): i could easily imagine implementations of the algorithm where returning inconsistent results would cause a crash",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:44): this is just saying, &quot;beware&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:44): which is all security sections ever say, really",
        "f139aba52f9fa1394b4034a7954b2220 (02:44): ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:45): but i can easily imagine someone not thinking about the fact that the resolver might hang, and accidentally not putting the usual scripting timeout constraints around that api",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:45): same with changing the dom",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:52): http://www.w3.org/2001/tag/doc/passwordsInTheClear-52",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:53): &quot;User agents SHOULD use password masking when passwords are displayed in an HTML form&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:53): i'm so glad the TAG is addressing critical unsolved problems",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:53): and not, say, problems from 1993",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:01): http://www.hixie.ch/specs/dom/workers/0.9 is finally ready for broader review"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "a924fb58d2c25874322f4e5126f608b9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "f139aba52f9fa1394b4034a7954b2220"
    ]
}