{
    "id": "eb0d2766e5ec53bc956fafbc863e0cd4",
    "messages": [
        "7780ad7003f15ffc3b31177513eac4f9 (01:17): loquitus_of_borg: like ahigerd said, you have a different signature",
        "7780ad7003f15ffc3b31177513eac4f9 (01:17): the 'const QChar' part is important",
        "44f76762d837de6adc8900ece7ab6b7b (01:18): nuge:         public slots:",
        "44f76762d837de6adc8900ece7ab6b7b (01:18): void receive_character(const QChar character);",
        "7780ad7003f15ffc3b31177513eac4f9 (01:18): ...",
        "7780ad7003f15ffc3b31177513eac4f9 (01:18): connect(sender, SIGNAL(someSignal(const QChar)), target, SLOT(someSlot(const QChar)))",
        "44f76762d837de6adc8900ece7ab6b7b (01:19): oh man....",
        "44f76762d837de6adc8900ece7ab6b7b (01:19): that's all?",
        "44f76762d837de6adc8900ece7ab6b7b (01:19): I thought I read someplace that the moc whatever thing figures this out automatically",
        "44f76762d837de6adc8900ece7ab6b7b (01:19): as in it matches slots and signals",
        "44f76762d837de6adc8900ece7ab6b7b (01:19): so I don't need to worry about types during the connection phase",
        "7780ad7003f15ffc3b31177513eac4f9 (01:20): you thought wrong",
        "44f76762d837de6adc8900ece7ab6b7b (01:20): that's why I seem like a bonehead here",
        "44f76762d837de6adc8900ece7ab6b7b (01:20): ugh",
        "44f76762d837de6adc8900ece7ab6b7b (01:20): ok",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:20): Actually, you're SORT OF right, but you misinterpreted.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:20): connect(sender, SIGNAL(someSignal(const QChar)), target, SLOT(someSlot())) is perfectly valid",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:20): You can always remove slots",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:20): er, remove parameters in the slot",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:20): But you can't add or change",
        "425dffd65427c15fafee92dda64120e8 (01:21): if you have parameters in your slot, they should be the right ones. Better is: don'tuse any parameters, if you don't need them",
        "660939dbcafa75fd43838626a9ec9897 (01:22): ahigerd: ah thx. is there also a way to outline all its cells too (without framing all cells for itself)?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:22): seezer: Not conveniently, no. It's not impossible, but it requires custom painting.",
        "44f76762d837de6adc8900ece7ab6b7b (01:23): ahigerd: ok... that makes sense. I figured it did the guesswork for the first part too.",
        "660939dbcafa75fd43838626a9ec9897 (01:23): ok. but that is good enough.",
        "44f76762d837de6adc8900ece7ab6b7b (01:23): ahigerd: and I just fixed it as you suggested. we are all good now folks.",
        "44f76762d837de6adc8900ece7ab6b7b (01:23): ahigerd: any performance benefit by telling it which slot to use?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:23): loquitus_of_borg: The signature still has to match the slot's signature.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:24): loquitus_of_borg: If someSlot() has parameters, it won't match.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:24): loquitus_of_borg: The only part that can vary is that the signal and slot aren't required to have the same number. The connect call has to be very precise on both.",
        "44f76762d837de6adc8900ece7ab6b7b (01:24): ahigerd: oh, so in my case, I DO need to put in someslot(const QChar)?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:24): If someSlot takes a QChar, yes.",
        "44f76762d837de6adc8900ece7ab6b7b (01:24): gotcha.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:25): But for instance I connect QLineEdit::textEdited(const QString&amp;) to a doSomething() slot in my app.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:27): bipolar: Anyway, what did you need?",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:27): ahigerd: hehe... I was just showing off my latest :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:27): Ah, okay. :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:27): Looks surprisingly similar to some reports I've done in my own app.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:27): Yay for sales &gt;.&gt;",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:27): ahigerd: do you see anything I could do better?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:28): bipolar: querystring = QString(&quot;SELECT CONCAT(First_Name, \\&quot; \\&quot;, Middle_Inital, \\&quot;. \\&quot;,Last_Name, \\&quot; \\&quot;,Suffix) FROM tbl_employees WHERE Employee_Number = \\'&quot; + myEmployeeNumber + &quot;\\'&quot;);",
        "44f76762d837de6adc8900ece7ab6b7b (01:28): this is good stuff guys",
        "44f76762d837de6adc8900ece7ab6b7b (01:28): thanks a whole heap",
        "44f76762d837de6adc8900ece7ab6b7b (01:28): :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:29): You can save yourself some grief by using ' instead of &quot; in there. :P",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:29): ahigerd: instead of?",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:29): in the sql?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:29): querystring = QString(&quot;SELECT CONCAT(First_Name, ' ', Middle_Inital, '. ',Last_Name, ' ',Suffix) FROM tbl_employees WHERE Employee_Number = '%1'&quot;).arg(myEmployeeNumber);",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:30): That's how I'd write it.",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:30): oh",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:31): 's don't need to be escaped out?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:31): Not in &quot;&quot;",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:31): Not in C++",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:31): ok :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:31): Also, if you use .arg() you can store myEmployeeNumber as an int if you want.",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:32): oh",
        "425dffd65427c15fafee92dda64120e8 (01:32): Good to know:I did it also the hard way \\&quot;",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:32): hehe",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:33): bipolar: But in addition to that...",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:33): ahigerd: did you see how the icons get enabled only if the user has permissions to them? :)",
        "df6e0b4adfd3455f26dfbefbdb145fd0 (01:33): does it mean there is a problem when you get a bunch of &quot;Unable to generate output for:&quot; messages during configure on win32?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:34): querystring = &quot;SELECT Employee_Number, CONCAT(First_name, ' ', Middle_Initial, '. ', Last_Name, ' ', Suffix) FROM tbl_employees WHERE User_Name = '%1'&quot;).arg(name);",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:34): query.exec(querystring);",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:34): You can lump those two queries together.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:34): query.first();",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:35): myEmployeeNumber = query.value(0).toString();",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:35): myFullName = query.value(1).toString();",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:35): bipolar: Yes.",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:35): ah! interesting",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:36): Er, I accidentally dumped the QString( from the beginning of the line",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:36): That should be there",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:36): And I spelled &quot;Initial&quot; correctly so if you misspelled it you might need to change that",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:36): lol",
        "425dffd65427c15fafee92dda64120e8 (01:36): That is one thing I love on C++ and Qt: One line of code for very cool stuff.--&gt;nobody understands what you thought when programming this.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:37): bipolar: Are your tb* objects QToolButtons?",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:38): yes",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:38): I tried to have them disabled by default in the ui file, but then they wouldn't enable no matter how I tried :\\",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:39): That's fine.",
        "386c4292c62749e6cfd277533e9384c0 (01:39): is there perhaps a more efficient way of comparing two QStrings case-insensitive besizes s1.toUpper()==s2.toUpper() ?",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:39): duvnell_: s1.caseInsensitiveCompare(s2) or something like that",
        "386c4292c62749e6cfd277533e9384c0 (01:39): didn't see a compare method that askes for Qt::CaseSensitivity",
        "386c4292c62749e6cfd277533e9384c0 (01:39): hm looking again",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:40): Er, never mind, that doesn't exist",
        "386c4292c62749e6cfd277533e9384c0 (01:40): yeah.. exactly I thought it should",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:40): I guess toUpper is the best way",
        "386c4292c62749e6cfd277533e9384c0 (01:40): all that other case stuff in substrings and searches but no compare",
        "386c4292c62749e6cfd277533e9384c0 (01:41): yeah creates a new string which I was trying to avoid.. but no worries I guess",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:41): duvnell_: Well, you could use startsWith",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:41): If their lengths are the same",
        "386c4292c62749e6cfd277533e9384c0 (01:41): I'm actually doing operator&lt;",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:41): Oh.",
        "386c4292c62749e6cfd277533e9384c0 (01:41): should have mentioned that :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:41): bipolar: There's no harm in calling setEnabled(true) on an enabled item, so you don't need to put conditionals around it. Just wastes time. :P",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:42): Same with setItemEnabled",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:42): ahigerd: I wasn't sure if it wasted more cycles to check or just do it:)",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:42): Just do it.",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:42): ok",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:43): I need to figure out how to do data binding properly.",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:43): I don't bother with automatic data binding; I just have a &quot;Save&quot; button that constructs and executes a query based on the form. :P",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:44): bipolar: Also, I'd factor out the variable in lines 110-111",
        "cdf4ad80dc66a41f951abab3fde0d774 (01:45): It's not necessary: addPage(query.value(0).toInt()); is perfectly valid.",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:45): ahigerd: ahh... i see",
        "7780ad7003f15ffc3b31177513eac4f9 (01:48): the compiler probably handles line 110-111 the same, no matter how you write it",
        "7780ad7003f15ffc3b31177513eac4f9 (01:49): i think it's easier to read the way he has it",
        "7780ad7003f15ffc3b31177513eac4f9 (01:50): compile it in 'release' config and see if the object files differ",
        "7780ad7003f15ffc3b31177513eac4f9 (01:50): :P",
        "7780ad7003f15ffc3b31177513eac4f9 (01:52): although, if you're trying to impress your peers with more function with less lines of code, sure, code like ahigerd",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:56): haha",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4 (01:56): thats what comments are for :P",
        "2639712f66c83dde933e27b2921a0d40 (08:47): and the setCentralWidget is still needed to set the main widget of the q(k)mainwindow... is that correct?",
        "ea3f8a0223777fdf8d12983027629f14 (08:59): 'Tanner' pasted &quot;-&quot;: <a href=\"http://qtnode.net/pastebin/482\">http://qtnode.net/pastebin/482</a>",
        "7c8fd3e81e6b000427aa2579afeffab8 (09:00): is there anything wrong with that setup?",
        "d29d567972e1e13b8bd390e5395b685d (09:01): xerroz: maybe #include &lt;QStringList&gt; or #include &lt;QtCore&gt;",
        "7c8fd3e81e6b000427aa2579afeffab8 (09:02): bleh forgot about that",
        "7c8fd3e81e6b000427aa2579afeffab8 (09:02): thanks"
    ],
    "person_ids": [
        "7780ad7003f15ffc3b31177513eac4f9",
        "44f76762d837de6adc8900ece7ab6b7b",
        "cdf4ad80dc66a41f951abab3fde0d774",
        "425dffd65427c15fafee92dda64120e8",
        "660939dbcafa75fd43838626a9ec9897",
        "bd6bd3edd6dfbea3a4bf8ddc8b6c04a4",
        "df6e0b4adfd3455f26dfbefbdb145fd0",
        "386c4292c62749e6cfd277533e9384c0",
        "2639712f66c83dde933e27b2921a0d40",
        "ea3f8a0223777fdf8d12983027629f14",
        "7c8fd3e81e6b000427aa2579afeffab8",
        "d29d567972e1e13b8bd390e5395b685d"
    ]
}