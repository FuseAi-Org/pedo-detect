{
    "id": "804cb5cc11371c6fab4218d9babd2df1",
    "messages": [
        "c480405f460f7a61964569640a6cd059 (08:35): 69b0d3dfe919a6b860a9fac82de52a7e: still there?",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:35): hey",
        "c480405f460f7a61964569640a6cd059 (08:36): so I think async should have meaning always",
        "c480405f460f7a61964569640a6cd059 (08:36): *but*",
        "c480405f460f7a61964569640a6cd059 (08:36): that always makes sense if I get my other suggestion, that i haven't sent to the list yet, goes through",
        "c480405f460f7a61964569640a6cd059 (08:36): so Gecko today always executs scripts in the order they were inserted into the DOM",
        "c480405f460f7a61964569640a6cd059 (08:37): in order to not have interdependency issues",
        "c480405f460f7a61964569640a6cd059 (08:37): i'm told webkit doesn't do that",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:37): nor does html5 now",
        "c480405f460f7a61964569640a6cd059 (08:37): i know",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:37): as you suggested :-)",
        "c480405f460f7a61964569640a6cd059 (08:37): well, i just suggested to change async, so far",
        "c480405f460f7a61964569640a6cd059 (08:38): i'm curious what IE does",
        "c480405f460f7a61964569640a6cd059 (08:38): i'm sort of worried about changing geckos behavior, that dynamically created scripts are essentially always async",
        "c480405f460f7a61964569640a6cd059 (08:39): s/that/so that/",
        "c480405f460f7a61964569640a6cd059 (08:40): i totally think that async should always execute as-soon-as-possible-order-doesn't-matter",
        "65325d50b2e25aca54bc871b89758c9c (08:41): we don't seem to have problems with programatically added scripts executing async, but it's entirely possible that it causes subtle compat issues that we just haven't diagnosed yet",
        "65325d50b2e25aca54bc871b89758c9c (08:41): though I tend to suspect not",
        "c480405f460f7a61964569640a6cd059 (08:41): yeah, i'm of split mind, which is why i want to test in IE",
        "65325d50b2e25aca54bc871b89758c9c (08:42): but obviously it's hard to tell how some of these edge case behavior differences impact the long tail of the Web",
        "c480405f460f7a61964569640a6cd059 (08:42): right",
        "65325d50b2e25aca54bc871b89758c9c (08:42): we did have some kind of bug reports on dynamically inserted scripts (can't remember if it didn't work at all or something...)",
        "65325d50b2e25aca54bc871b89758c9c (08:42): lemme search the ChangeLogs",
        "65325d50b2e25aca54bc871b89758c9c (08:44): we had a bug where a dynamically insered script that removed itself would cause a crash",
        "65325d50b2e25aca54bc871b89758c9c (08:45): (so we've seen at least some examples of people doing strange things)",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:46): on the web? people doing strange things? surely you jest",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:46): surely, sir",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:46): that seems highly unlikely",
        "65325d50b2e25aca54bc871b89758c9c (08:46): hmm, speaking of &lt;script&gt;, one thing we recently did is stop executing scripts with a &quot;for&quot; attribute",
        "65325d50b2e25aca54bc871b89758c9c (08:47): https://bugs.webkit.org/show_bug.cgi?id=21193",
        "c480405f460f7a61964569640a6cd059 (08:47): 65325d50b2e25aca54bc871b89758c9c: ouch",
        "c480405f460f7a61964569640a6cd059 (08:48): 65325d50b2e25aca54bc871b89758c9c: i know we ended up with some hacks for that",
        "c480405f460f7a61964569640a6cd059 (08:48): 65325d50b2e25aca54bc871b89758c9c: back in the day gecko actually supported the &quot;for&quot; and &quot;event&quot; attributes. But only in embedded environments i think",
        "65325d50b2e25aca54bc871b89758c9c (08:48): I'm not sure we want to actually implement &lt;script for&gt;, but since it doesn't seem viable to completely ignore it, it would be good to agree on some interoperable behavior",
        "c480405f460f7a61964569640a6cd059 (08:49): 65325d50b2e25aca54bc871b89758c9c: ugh, i should have removed that from gecko a long time ago",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:49): well i'm happy to just say &quot;if there's a for attribute, abort these steps&quot; somewhere",
        "c480405f460f7a61964569640a6cd059 (08:49): 65325d50b2e25aca54bc871b89758c9c: yeah, i definitely don't want to implement for fully",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:49): file a bug :-)",
        "c480405f460f7a61964569640a6cd059 (08:50): 65325d50b2e25aca54bc871b89758c9c: lemme check what gecko does",
        "65325d50b2e25aca54bc871b89758c9c (08:50): c480405f460f7a61964569640a6cd059: ok",
        "65325d50b2e25aca54bc871b89758c9c (08:50): 69b0d3dfe919a6b860a9fac82de52a7e: will do once we figure out what should happen",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:50): k thanks",
        "c480405f460f7a61964569640a6cd059 (08:51): this stuff is nasty",
        "c480405f460f7a61964569640a6cd059 (08:51): so",
        "c480405f460f7a61964569640a6cd059 (08:52): if &quot;for&quot; or &quot;event&quot; is missing, process as normal",
        "c480405f460f7a61964569640a6cd059 (08:52): if &quot;for&quot; is something other than &quot;window&quot;, don't process",
        "c480405f460f7a61964569640a6cd059 (08:54): if &quot;event&quot; starts with &quot;onload &quot; or &quot;onload(&quot; (case insensitive compare) then don't process",
        "c480405f460f7a61964569640a6cd059 (08:54): otherwise process as normal",
        "65325d50b2e25aca54bc871b89758c9c (08:54): wild",
        "c480405f460f7a61964569640a6cd059 (08:54): oh yeah",
        "65325d50b2e25aca54bc871b89758c9c (08:54): wait",
        "c480405f460f7a61964569640a6cd059 (08:54): so i think the situation was this",
        "65325d50b2e25aca54bc871b89758c9c (08:55): so if &quot;for&quot; is &quot;window&quot; and &quot;event&quot; does *not* start with &quot;onload&quot; you run the script?",
        "c480405f460f7a61964569640a6cd059 (08:55): at the dawn of time we ignored 'for' and 'event'",
        "65325d50b2e25aca54bc871b89758c9c (08:55): so &lt;script for=&quot;window&quot; event=&quot;onclick&quot;&gt; would run immediately?",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:56): that's pretty special",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:56): even for the web :-P",
        "c480405f460f7a61964569640a6cd059 (08:56): sorry",
        "c480405f460f7a61964569640a6cd059 (08:56): arg, so many negatives",
        "c480405f460f7a61964569640a6cd059 (08:57): so if it starts with &quot;onload &quot; or &quot;onload(&quot;, then run as normal",
        "c480405f460f7a61964569640a6cd059 (08:57): otherwise don't process",
        "65325d50b2e25aca54bc871b89758c9c (08:57): that makes more sense",
        "c480405f460f7a61964569640a6cd059 (08:57): but only by a smidgen",
        "65325d50b2e25aca54bc871b89758c9c (08:58): so let me try to restate it to make sure I understand",
        "c480405f460f7a61964569640a6cd059 (08:58): i'd really hate to put this in the spec though",
        "c480405f460f7a61964569640a6cd059 (08:58): i've been meaning to nuke all of this crap for ages, never got around to it",
        "c480405f460f7a61964569640a6cd059 (08:58): basically, if it has &quot;for&quot; *and* &quot;event&quot;, then don't process",
        "c480405f460f7a61964569640a6cd059 (08:59): *except*",
        "65325d50b2e25aca54bc871b89758c9c (08:59): well, maybe WebKit's recent behavior is good enough - I dunno",
        "65325d50b2e25aca54bc871b89758c9c (08:59): we just refuse to run anything with a &quot;for&quot; attribute",
        "c480405f460f7a61964569640a6cd059 (08:59): if it's for=&quot;window&quot; event=&quot;onload(...&quot;",
        "c480405f460f7a61964569640a6cd059 (08:59): or for=&quot;window&quot; event=&quot;onload ...&quot;",
        "65325d50b2e25aca54bc871b89758c9c (08:59): ok",
        "65325d50b2e25aca54bc871b89758c9c (09:00): what if it's just event=&quot;onload&quot; with no paren or space?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:00): event=&quot;&quot; in IE can have ()s? o_O",
        "65325d50b2e25aca54bc871b89758c9c (09:01): getting back to dynamically inserted scripts - here is where we added support: http://trac.webkit.org/changeset/9105",
        "65325d50b2e25aca54bc871b89758c9c (09:02): the bug is sadly internal bug we had numerous separate reports and developer requests",
        "65325d50b2e25aca54bc871b89758c9c (09:02): since 2005, we have not had a bug that we diagnosed as being due to lack of order guarantee",
        "65325d50b2e25aca54bc871b89758c9c (09:04): we later added load events for script elements: http://bugzilla.opendarwin.org/show_bug.cgi?id=5812",
        "65325d50b2e25aca54bc871b89758c9c (09:04): sorry, antique URL, you want https://bugs.webkit.org/show_bug.cgi?id=5812"
    ],
    "person_ids": [
        "c480405f460f7a61964569640a6cd059",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}