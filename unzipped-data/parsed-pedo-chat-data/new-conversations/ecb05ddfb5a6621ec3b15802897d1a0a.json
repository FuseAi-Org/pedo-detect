{
    "id": "ecb05ddfb5a6621ec3b15802897d1a0a",
    "messages": [
        "ff0a1b32b57b24924f2d5141321cb965 (19:21): Hello. Maybe not pure Qt.... I have to implement a controler's protocol, having a memory layout. I decided to take a map with mem_adress (the map key), the data itself, and some properties. But this layout looks kind of bad, I'm happy with it: <a href=\"http://rafb.net/paste/results/kkyXkf60.html\">http://rafb.net/paste/results/kkyXkf60.html</a>",
        "ff0a1b32b57b24924f2d5141321cb965 (19:22): sorry, I'm NOT happy with it:)",
        "87210df20b5a76dfaa75970aab41eeb1 (19:25): does a MAC also have Q_WS_X11 set or is that Q_WS_MAC or something?",
        "79594def442041f0ea0ff316b7b3bf86 (19:25): That's exactly what it is.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:25): Q_OS_MAC",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:25): and Q_WS_MAC",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:25): Both exist",
        "87210df20b5a76dfaa75970aab41eeb1 (19:26): what does WS stand for?",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:26): paoleela_work: What are you trying to do?",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:26): t00m: Window System",
        "87210df20b5a76dfaa75970aab41eeb1 (19:26): thx",
        "87210df20b5a76dfaa75970aab41eeb1 (19:26): probably doesn't matter which one I'm checking on a gui :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:26): You've got Q_WS_WIN, Q_WS_MAC, Q_WS_X11, and Q_WS_QWT (Qtopia)",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:27): And then Q_OS_MAC, Q_OS_WIN, Q_OS_UNIX, Q_OS_FREEBSD, and a whole lot of others",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:27): er, Q_WS_QWS, not QWT",
        "87210df20b5a76dfaa75970aab41eeb1 (19:28): does Qtopia run X11?",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:28): No, it runs QWS.",
        "87210df20b5a76dfaa75970aab41eeb1 (19:28): ic",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:28): X11 for embedded devices is... rather a bad idea.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:28): It's inefficient.",
        "87210df20b5a76dfaa75970aab41eeb1 (19:29): no idea what qtopia is",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:29): Qtopia is Qt-embedded",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:29): paoleela_work: Um... a QVariant will serve the purpose of Dset for everything except the read-only flag.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:30): ahigerd: I will take a look at QVariant.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:31): paoleela_work: I recommend QHash&lt;QString, QVariant&gt; for your purposes. If read-only is important, you could either maintain QHash&lt;QString, bool&gt; or use QHash&lt;QString, QPair&lt;QVariant, bool&gt; &gt;",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:31): (the space between the &gt; &gt; is important)",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:33): QHash, by the way, is semantically equivalent to std::map, except it's not ordered",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:33): (but not being ordered gives it faster lookups)",
        "ff0a1b32b57b24924f2d5141321cb965 (19:33): ahigerd: I set up a TCP communication with a controler, QSocket. I receive Strings containing 005:30;007:20;  ... that is memaddr:value, so I want to look up memaddr quickly and store value. Therefore a map with memaddr as key.  Later for sending I want to be able to look up the name quickly to get the memaddr, therefore maybe a stl multi indexed map or even a second map with pointer..",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:33): Aha.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:34): If that's the case...",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:34): Gimme a sec. :P",
        "ff0a1b32b57b24924f2d5141321cb965 (19:34): :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:35): paoleela_work: How important is the read-only flag to you?",
        "ff0a1b32b57b24924f2d5141321cb965 (19:35): Later I add also atrributes like min, max value.. I'm also not sure about handling memaddress (being hex) as QString or transforming into int maybe.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:35): I'd transform to int, it's faster",
        "ff0a1b32b57b24924f2d5141321cb965 (19:35): ahigerd: the sendToServer() will check if that's allowd.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:36): ahigerd: Ok, but I won't do calculation on it, and QString is also countable. It's just for receiveing, sending and storing.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:37): Fair enough; you can use QString if you like.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:39): ahigerd: ok, doesn't matter for now. I don't like that #define construct, and the 1000 lines.  I got the memory layout as layout.txt, and maybe could generate the code with something like awk..",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:39): Oh!",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:39): If you've got a text file this gets really easy. ;)",
        "ff0a1b32b57b24924f2d5141321cb965 (19:40): Yeah, using that layout in the pastebin, it's possible.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:40): But that will become a really large CTor for initialization.",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:41): What's the layout of the text file?",
        "ff0a1b32b57b24924f2d5141321cb965 (19:42): ahigerd, as for the data structure, you don't have a better idea? I just have seen boost multi_index map <a href=\"http://www.boost.org/libs/multi_index/doc/tutorial.html\">http://www.boost.org/libs/multi_index/doc/tutorial.html</a>  and that looks really complicated to me, a bit too much:)",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:43): QMultiHash/QMultiMap -- Qt has them too",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:43): But anyway",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:43): Hold on a bit",
        "ff0a1b32b57b24924f2d5141321cb965 (19:43): ahigerd: If I get into awk, the text file should be readable.  But then my own layout should be for sure.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:44): ahigerd: I will look into QMultiMap, if that's easier to set up. so you have time now ..",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:44): There's no need for awk; what does the text file look like?",
        "ff0a1b32b57b24924f2d5141321cb965 (19:47): ahigerd: The txt file looks like that: <a href=\"http://rafb.net/paste/results/FfFJdD79.html\">http://rafb.net/paste/results/FfFJdD79.html</a>",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:48): Hmm, I see.",
        "ff0a1b32b57b24924f2d5141321cb965 (19:51): ahigerd: On Qt 3.3 I found qmap.h which is just the implementation of the STL like. Can't find MultiMap",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:52): Oh, 3.3",
        "0397397c4e5cebfb687675430141ab87 (19:53): hehe, yeah",
        "0397397c4e5cebfb687675430141ab87 (19:53): there exists a thing called Qt 3, I header ;)",
        "0397397c4e5cebfb687675430141ab87 (19:53): I heard even",
        "ff0a1b32b57b24924f2d5141321cb965 (19:54): :)yes. MultiMap being one of the vers.4 changes/improvements?",
        "0397397c4e5cebfb687675430141ab87 (19:54): yes",
        "0397397c4e5cebfb687675430141ab87 (19:54): For new projects I'd chose Qt 4.1",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:55): <a href=\"http://rafb.net/paste/results/zNjOox73.html\">http://rafb.net/paste/results/zNjOox73.html</a>",
        "ff0a1b32b57b24924f2d5141321cb965 (19:55): mETz: But multimap isn't exactly what I need, I would need a double indexed map.",
        "0397397c4e5cebfb687675430141ab87 (19:56): i.e. log(n) lookup for both key and value?",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:56): No, two different keys indexing to the same value",
        "0397397c4e5cebfb687675430141ab87 (19:56): oh",
        "0397397c4e5cebfb687675430141ab87 (19:56): well, won't QMap be enough?",
        "0397397c4e5cebfb687675430141ab87 (19:57): just store references",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:57): You'd need two QMaps",
        "0397397c4e5cebfb687675430141ab87 (19:57): and make the values refcounted",
        "fd21acdc59ef0b1d4546229438c9bd6b (19:57): mETz: why not 4.2?",
        "cdf4ad80dc66a41f951abab3fde0d774 (19:57): But since there's a 1:1 mapping of key-value and they're constant mappings, I'd just keep a map of name:number",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:00): stability of qt4 is reasonable for me",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:00): memory usage has improved",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:00): as well as more responsive gui",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:00): And for what it's worth, I figure once 4.2 gets out of beta it'll be rapidly approaching Qt3's stability.",
        "0397397c4e5cebfb687675430141ab87 (20:00): feels way less responsive here",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:01): Which themes are you using, respectively?",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:01): tested with plastique",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:01): Plastique is slower than a lot of Qt3 styles",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:01): But if you're using Windows or Motif it's pretty snappy",
        "0397397c4e5cebfb687675430141ab87 (20:01): currently clearlooks",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:01): oh, I used a heavy qt3 style",
        "0397397c4e5cebfb687675430141ab87 (20:01): but I tried all of them",
        "0397397c4e5cebfb687675430141ab87 (20:01): and font rendering changed recently, but that also affects firefox for some reason",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:01): mETz: You sure you didn't update FreeType?",
        "0397397c4e5cebfb687675430141ab87 (20:01): kde/qt3 still looks the same",
        "0397397c4e5cebfb687675430141ab87 (20:02): ahigerd: yes, and that's what's confusing the hell out of me",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:02): I used a style called qtcurve",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:02): gtk2 and qt were indistinguishable",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:03): except the fact that gtk2 apps are crappy",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:03): :)",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:03): I use gtk-engines-qt and Polymer. :P",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:03): that's one unstable pos software",
        "0397397c4e5cebfb687675430141ab87 (20:03): gtk-engines-qt was crashing eclipse too often here",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:03): Works for me",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:03): and buggy tooo",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:03): The only thing I ever have problems with is scroll bars.",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:03): The bottom arrows sometimes don't draw.",
        "ff0a1b32b57b24924f2d5141321cb965 (20:03): ahigerd: That's really good.   QMap&lt;QString, int&gt; addresses;  will take the adress as first, but what about that int?",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:03): But they're still usable.",
        "0397397c4e5cebfb687675430141ab87 (20:03): I'm using clearlooks (qt4) and Klearlook (qt3) now",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:04): paoleela_work: No, it takes the name as first and the address as second; that's the name-&gt;key lookup",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:04): I'm happy with gtk-engines-qt, Polymer, and Plastique; again, barring the aforementioned bug with the scrollbars, I'm having zero problems.",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:04): I decided I want to experiment with some webdev stuff, and wanna write a small dynamic site that's based entirely on xml/xslt. Not sure how to generate the xml though ;(",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:05): could go the OO way and have everyone serialize themselves",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:05): not sure though",
        "fd21acdc59ef0b1d4546229438c9bd6b (20:05): and I'm not sure whether I want to use mod_php or mod_python",
        "ff0a1b32b57b24924f2d5141321cb965 (20:05): ahigerd: whitespaces are stripped, but not the &quot;.&quot; points?",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:06): paoleela_work: I said that was for a custom file format based on your INS() calls, not the text file you showed me.",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:07): paoleela_work: That's a proof-of-concept loader loop; you can modify it to suit your needs.",
        "ff0a1b32b57b24924f2d5141321cb965 (20:08): ahigerd: Oh I see, it doesn't use the text file, but finally it could be able to parse the textfile twice to build up 2 indipendent QMaps?",
        "87210df20b5a76dfaa75970aab41eeb1 (20:08): at least writing to the clipboard works ..",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:09): paoleela_work: No need to parse it twice. Just replace the parser I put in there -- currently its parsing is QString::replace followed by QStringList::split",
        "ff0a1b32b57b24924f2d5141321cb965 (20:10): ahigerd: Thanks, would have taken me longer time than you:)",
        "cdf4ad80dc66a41f951abab3fde0d774 (20:10): So I'll leave it up to you to write the other parser. :P"
    ],
    "person_ids": [
        "ff0a1b32b57b24924f2d5141321cb965",
        "87210df20b5a76dfaa75970aab41eeb1",
        "79594def442041f0ea0ff316b7b3bf86",
        "cdf4ad80dc66a41f951abab3fde0d774",
        "0397397c4e5cebfb687675430141ab87",
        "fd21acdc59ef0b1d4546229438c9bd6b"
    ]
}