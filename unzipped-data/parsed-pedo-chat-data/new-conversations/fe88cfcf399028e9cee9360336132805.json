{
    "id": "fe88cfcf399028e9cee9360336132805",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (20:26): edb259c0e0038f38bb200bc20c8cbf7e: pity someone edited the spec for you",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:37): holy crap",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:37): RDFa has gotten BIGGER since i last looked",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:37): talk about serious second-system effect",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:37): jesus",
        "b07211a0c7cb119232799d2119cea90f (20:41): I thought rdfa was meant to be small and compact",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:42): i still don't understand how RDFa is supposed to interact with, e.g., &lt;title&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:43): if an RDFa bit says the document title is X, and &lt;title&gt; says the document title is Y, then... what?",
        "b19bfcbd7b695025e49d546be54e168b (20:43): keeps 69b0d3dfe919a6b860a9fac82de52a7e away from ES4 :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:44): ES4 has one gigantic problem right now",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:44): and it's not clear to me anyone on the ES4 group is striving to fix it",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:44): but since the RI is the only spec, it's not clear to me how to proceed",
        "b19bfcbd7b695025e49d546be54e168b (20:44): do you mean the lack of spec, or the hyper second-system syndrome?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:44): neither",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:45): ES4 scripts have to explicitly opt-in to being processed as ES4 instead of ES3, but the opt-in can only be out-of-band (e.g. in &lt;script type=&quot;&quot;&gt; attributes) which doesn't work for a whole series of use cases",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:46): e.g. it doesn't work as a way to upgrade existing deployed &lt;script&gt; blocks doing third-party includes, it doesn't work for HTML event handler attributes, it doesn't work when you don't know what type your script will be, etc",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:46): it also means you need separate scripts for ES4 and ES3",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:47): this is unlike, e.g., HTML and CSS, both of which have backwards-compatible mechanisms",
        "b19bfcbd7b695025e49d546be54e168b (20:48): the language has a lot of complexity to be backwards compatible when ES3 is handled as ES4, though.",
        "b19bfcbd7b695025e49d546be54e168b (20:48): Partly for migration, of course",
        "b19bfcbd7b695025e49d546be54e168b (20:49): One can do this sort of thing in-band, though, but it'll be ugly.",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:50): ugly is better than fatally flawed :-)",
        "b19bfcbd7b695025e49d546be54e168b (20:51): things like cross-interpreter calls would be a total mess, though.",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:51): is there a reason for not going all the way so that a browser could run all ES3 scripts as ES4 scripts?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:51): so have one interpreter",
        "ab7faae5d7b250ea8606486575f8f79c (20:51): When JavaScript reserved all the Java keywords, was that intended for future extensibility, or was it just for compatibility between Java and JS (so you wouldn't accidentally make variables you couldn't talk about in the other language) or something else?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:52): ab7faae5d7b250ea8606486575f8f79c: everyone ignored that requirement, so it's moot, sadly",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:52): notes that v.nu doesn't ignore the reserved word list",
        "b19bfcbd7b695025e49d546be54e168b (20:53): it's actually not entirely ignored, but semi-weird",
        "b8810fee2f4a71f849f3f7409546d1d9 (20:53): (in callback name checking)",
        "ab7faae5d7b250ea8606486575f8f79c (20:55): On the subject of JS, what syntax feature allows &lt;a onclick=&quot;javascript: alert('hello')&quot;&gt; (and equivalently &lt;a onclick=&quot;vbscript: alert('hello')&quot;&gt; etc)?",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:59): 69b0d3dfe919a6b860a9fac82de52a7e, if you mean the HTML5 reference, it's still part of XMLHttpRequest Level 2... guess Bert removed it from the CSSOM View Module or something",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:59): man, i'd be pissed if someone did that to my spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:00): ab7faae5d7b250ea8606486575f8f79c: goto labels, no?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:00): I don't feel too strongly about references at this point",
        "b19bfcbd7b695025e49d546be54e168b (21:00): heh, good point 69b0d3dfe919a6b860a9fac82de52a7e",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): edb259c0e0038f38bb200bc20c8cbf7e: for me it's not about references, it's about someone changing something i'd have explicitly done",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:01): but anyway",
        "ab7faae5d7b250ea8606486575f8f79c (21:02): 69b0d3dfe919a6b860a9fac82de52a7e: JS doesn't have goto",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): oh",
        "ab7faae5d7b250ea8606486575f8f79c (21:02): so goto labels don't seem an entirely sensible thing to have",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): well",
        "69b0d3dfe919a6b860a9fac82de52a7e (21:02): i seem to recall there was some sort of label thing",
        "ab7faae5d7b250ea8606486575f8f79c (21:02): Then again, it does have the goto reserved word despite not having goto",
        "ab7faae5d7b250ea8606486575f8f79c (21:03): so it's not an entirely sensible language",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:03): 69b0d3dfe919a6b860a9fac82de52a7e, true",
        "b19bfcbd7b695025e49d546be54e168b (21:04): ab7faae5d7b250ea8606486575f8f79c: they're not goto labels, they're breka/continue labels.",
        "ab7faae5d7b250ea8606486575f8f79c (21:06): b19bfcbd7b695025e49d546be54e168b: Oh, I didn't know JS had that",
        "ab7faae5d7b250ea8606486575f8f79c (21:06): (but some testing indicates that it does)",
        "b19bfcbd7b695025e49d546be54e168b (21:07): you can actually break a non-loop, too.",
        "b19bfcbd7b695025e49d546be54e168b (21:07): (with a labeled break, that is)",
        "ab7faae5d7b250ea8606486575f8f79c (21:08): By &quot;non-loop&quot;, do you mean something like &quot;javascript: { break javascript; }&quot;?",
        "b19bfcbd7b695025e49d546be54e168b (21:08): yep.",
        "ab7faae5d7b250ea8606486575f8f79c (21:09): wonders why he had never noticed this feature",
        "ab7faae5d7b250ea8606486575f8f79c (21:09): (I knew Java did that, but not JS)",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:11): does java have non-loop break labels?",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:13): whoa! it indeed does.",
        "ab7faae5d7b250ea8606486575f8f79c (21:13): b8810fee2f4a71f849f3f7409546d1d9: Eclipse doesn't give squiggly lines when I try that, so I guess so",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:13): I learned something new",
        "b8810fee2f4a71f849f3f7409546d1d9 (21:13): thanks"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "b07211a0c7cb119232799d2119cea90f",
        "b19bfcbd7b695025e49d546be54e168b",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "edb259c0e0038f38bb200bc20c8cbf7e"
    ]
}