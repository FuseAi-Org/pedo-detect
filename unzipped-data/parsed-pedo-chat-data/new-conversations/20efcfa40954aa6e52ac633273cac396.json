{
    "id": "20efcfa40954aa6e52ac633273cac396",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (02:03): http://developers.slashdot.org/comments.pl?sid=533346&amp;cid=23190802",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:03): not sure how to reply to that in a way that doesn't insult the people working on that spec...",
        "ab7faae5d7b250ea8606486575f8f79c (02:03): Has that ever stopped you before?",
        "f139aba52f9fa1394b4034a7954b2220 (02:07): just explain that xhtml modularisation is a completely different concept from splitting up the HTML5 spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:10): i'll let y'all handle that one :-)",
        "a924fb58d2c25874322f4e5126f608b9 (02:10): It seems to me that MoinMoin can't generate &lt;th&gt; in tables",
        "a924fb58d2c25874322f4e5126f608b9 (02:10): How's that for accessibility...",
        "ab7faae5d7b250ea8606486575f8f79c (02:12): &lt;td colspan=&quot;3&quot; style=&quot;text-align: center&quot;&gt;&lt;p class=&quot;line891&quot;&gt;&lt;strong&gt;Heading&lt;/strong&gt;&lt;/td&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (02:12): (via http://moinmoin.wikiwikiweb.de/HelpOnTables )",
        "a924fb58d2c25874322f4e5126f608b9 (02:12): Ayup",
        "ab7faae5d7b250ea8606486575f8f79c (02:14): The wiki-code for tables looks fairly ugly - does anybody have a nice way of marking up tables?",
        "ab7faae5d7b250ea8606486575f8f79c (02:17): kind of likes the LaTeX syntax, since you normally only need a single line of setup code and then every row is like &quot;cell1 &amp; cell2 &amp; cell3 \\\\&quot; which is about as minimal as possible",
        "a924fb58d2c25874322f4e5126f608b9 (02:17): Mediawiki's way is bad because it clashes with template syntax, but just markup-wise it covers most of it",
        "ab7faae5d7b250ea8606486575f8f79c (02:17): (http://en.wikibooks.org/wiki/LaTeX/Tables etc)",
        "a924fb58d2c25874322f4e5126f608b9 (02:18): (You can't do the fancy stuff like col/colgroup/thead etc, but they allow plain html for the complex stuff)",
        "ab7faae5d7b250ea8606486575f8f79c (02:19): (Does that mean you can write a simple table with the wiki syntax, then add a few more complex features, but once you get to a certain point and want another feature you have to rewrite the entire thing into HTML?)",
        "a924fb58d2c25874322f4e5126f608b9 (02:20): No, you can just copypaste the output of the old code :)",
        "f139aba52f9fa1394b4034a7954b2220 (02:20): 69b0d3dfe919a6b860a9fac82de52a7e, you might be able to answer this more better than I can. http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx#8422881",
        "ab7faae5d7b250ea8606486575f8f79c (02:20): a924fb58d2c25874322f4e5126f608b9: What if you want to remove that final feature and convert it back to the wiki syntax? :-)",
        "a924fb58d2c25874322f4e5126f608b9 (02:20): Run a regexp on it :)",
        "f139aba52f9fa1394b4034a7954b2220 (02:20): s/more better/better/",
        "a924fb58d2c25874322f4e5126f608b9 (02:21): You could even write a wikicode serializer and link it to html5lib!",
        "69b0d3dfe919a6b860a9fac82de52a7e (02:23): f139aba52f9fa1394b4034a7954b2220: commented",
        "ab7faae5d7b250ea8606486575f8f79c (02:29): wonders if it's possible/sensible for a script to override document.write and intercept all the written strings",
        "ab7faae5d7b250ea8606486575f8f79c (02:30): (I'd like to let pages get proper HTML5 parsing by adding a line &lt;!doctype html&gt;&lt;script src=html5parser.js&gt;&lt;/script&gt; to the top, but that seems like it'd be a bit messier if the page tries doing fancy scripting stuff itself)",
        "f139aba52f9fa1394b4034a7954b2220 (02:32): 69b0d3dfe919a6b860a9fac82de52a7e, there's a few more exceptions you forgot to mention, like always appending link and meta elements to the head, even if it's not open.",
        "f139aba52f9fa1394b4034a7954b2220 (02:32): though, I suppose that doesn't insepct the DOM to do that, it just maintains a separate head pointer",
        "c4c52ee28b65ac033f57ce478087cfd1 (02:56): hello",
        "c4c52ee28b65ac033f57ce478087cfd1 (02:57): 65325d50b2e25aca54bc871b89758c9c, I'm curious what your proposal is for an http based protocol for TCPConnection?",
        "c4c52ee28b65ac033f57ce478087cfd1 (02:57): 65325d50b2e25aca54bc871b89758c9c, 69b0d3dfe919a6b860a9fac82de52a7e mentioned that the protocol was your main objection",
        "65325d50b2e25aca54bc871b89758c9c (02:57): c4c52ee28b65ac033f57ce478087cfd1: I don't have a full proposal for how to satisfy the TCPConnection use cases",
        "c4c52ee28b65ac033f57ce478087cfd1 (02:58): 65325d50b2e25aca54bc871b89758c9c, Ok, I'm at least interested in the reasons for it",
        "65325d50b2e25aca54bc871b89758c9c (02:58): my two problems with it are: (1) it uses port/host addressing instead of URI addressing, which is a poor fit for the Web model",
        "c4c52ee28b65ac033f57ce478087cfd1 (02:58): 65325d50b2e25aca54bc871b89758c9c, I'm putting together a document about the pros and cons of http for TCPConnection",
        "65325d50b2e25aca54bc871b89758c9c (02:58): (2) it's bad to send non-http over the assigned ports for http and https",
        "65325d50b2e25aca54bc871b89758c9c (02:59): (3) I am worried that connection to arbitrary ports could lead to security issues, although 69b0d3dfe919a6b860a9fac82de52a7e tried hard to avoid them",
        "65325d50b2e25aca54bc871b89758c9c (02:59): (basically the only security mechanism though is assuming that no other protocol will happen to emulate the TCPConnection handshake, which seems pretty weak)",
        "65325d50b2e25aca54bc871b89758c9c (03:00): (given that other protocols have been found to have multiple interpretation vulnerabilities)",
        "65325d50b2e25aca54bc871b89758c9c (03:00): I guess that is three problems",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:00): ok",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:00): i had a couple of other concerns",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:00): With SSL there is no way to do virtual hosting -- you have to route on ip address... HTTP/1.1 upgrade with TLS solves this problem",
        "65325d50b2e25aca54bc871b89758c9c (03:01): c4c52ee28b65ac033f57ce478087cfd1: I think a custom http method that begins a two-way session might be a promising solution, but I think that would require a proof of concept that it is viable on client and server side",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:01): Http provides the Host header to avoid dns rebinding attacks",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:01): 65325d50b2e25aca54bc871b89758c9c, it seems to me the way to do it is send an OPTIONS with an Upgrade: tcp/1.0 header as the client-&gt;server tcp handshake",
        "65325d50b2e25aca54bc871b89758c9c (03:01): c4c52ee28b65ac033f57ce478087cfd1: those are also good points",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:02): also, HTTP based connections include query parameters and cookies, allowing for normal auth mechanisms",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:03): 65325d50b2e25aca54bc871b89758c9c, i'll add your three points to my document",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:04): the big hurdle is keeping it simple enough for 69b0d3dfe919a6b860a9fac82de52a7e's requirements, particularly that it be possible to implement in just a few lines of perl",
        "ab7faae5d7b250ea8606486575f8f79c (03:04): use Net::HTML5::Connection;",
        "ab7faae5d7b250ea8606486575f8f79c (03:04): run_server();",
        "ab7faae5d7b250ea8606486575f8f79c (03:05): Should it be a few lines of Perl that a normal Perl programmer would write, or a few lines that a Perl golfer could write?",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:05): ab7faae5d7b250ea8606486575f8f79c, he wants it to be 3 lines with no support libraries",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:07): i dunno about 3",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:08): i think i said a few dozen",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:08): but the point is it has to be a fully compliant implementation",
        "ab7faae5d7b250ea8606486575f8f79c (03:08): Is there any problem that can't be solved in a few dozen lines of Perl?",
        "b07211a0c7cb119232799d2119cea90f (03:09): the travelling salesman problem?",
        "ab7faae5d7b250ea8606486575f8f79c (03:10): b07211a0c7cb119232799d2119cea90f: That's a trivial problem to solve - just enumerate all possibilities and pick the best",
        "b07211a0c7cb119232799d2119cea90f (03:11): quickly, then. :)",
        "ab7faae5d7b250ea8606486575f8f79c (03:11): It's trivial to do it quickly, at least for certain input sizes :-)",
        "b07211a0c7cb119232799d2119cea90f (03:13): OK, I'll stop defending my quick and ill-thought-out reponse now",
        "b07211a0c7cb119232799d2119cea90f (03:13): anyone else want a go? :)",
        "ab7faae5d7b250ea8606486575f8f79c (03:20): perl -lpe'@==sort@p=map$_.shift@=,@@for@@=/,|\\pL/g;$_=@p[$`]'",
        "ab7faae5d7b250ea8606486575f8f79c (03:20): Apparently that does the Burrows-Wheeler transform, but I don't quite see how :-/",
        "8c8837db54a2907cacd8633547977e33 (03:22): 69b0d3dfe919a6b860a9fac82de52a7e: in 6.4.1, you can't check the origin of the target document while postMessage is running -- what happens if the target window is navigated to another location before the event is dispatched?",
        "8c8837db54a2907cacd8633547977e33 (03:26): as far as I can tell, the only thing you can/must do at postMessage time is determine the origin of the caller; everything else must happen immediately before the event is dispatched",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:27): 69b0d3dfe919a6b860a9fac82de52a7e, oh, i think we could get it done in just a few lines of code even if it was http-based",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:29): 69b0d3dfe919a6b860a9fac82de52a7e, i don't think saying &quot;it should be implementable in 3-10 lines of perl&quot; is unreasonable whatsoever",
        "65325d50b2e25aca54bc871b89758c9c (03:34): c4c52ee28b65ac033f57ce478087cfd1: my vague idea was to repurpose the CONNECT method, since that is likely to already work through proxies",
        "65325d50b2e25aca54bc871b89758c9c (03:35): c4c52ee28b65ac033f57ce478087cfd1: but developing the proper server-side support would be tricky",
        "65325d50b2e25aca54bc871b89758c9c (03:35): so I feel like it is not worth suggesting without proof-of-concept client and server impls",
        "65325d50b2e25aca54bc871b89758c9c (03:35): I think the two-way persistent connection problem may just have to get solved after HTML5",
        "c4c52ee28b65ac033f57ce478087cfd1 (03:37): 65325d50b2e25aca54bc871b89758c9c, well, I'm working on a proof of concept so feel free to suggest to me any ideas you have",
        "3dcdcfc451f90dc7613a2cca0be35da9 (03:47): 65325d50b2e25aca54bc871b89758c9c, i lost connectivity there, but i had try to say that you should give me any ideas/suggestions you have for bi-directional communication protocols because I'm making a proof of concept client and server"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "ab7faae5d7b250ea8606486575f8f79c",
        "f139aba52f9fa1394b4034a7954b2220",
        "a924fb58d2c25874322f4e5126f608b9",
        "c4c52ee28b65ac033f57ce478087cfd1",
        "65325d50b2e25aca54bc871b89758c9c",
        "b07211a0c7cb119232799d2119cea90f",
        "8c8837db54a2907cacd8633547977e33",
        "3dcdcfc451f90dc7613a2cca0be35da9"
    ]
}