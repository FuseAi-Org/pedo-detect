{
    "id": "481c5ccb104c1564edbb3e63dc368f79",
    "messages": [
        "cdbe0e8aea85495cfcf22db2db988e7d (23:14): MikeSmith?",
        "cdbe0e8aea85495cfcf22db2db988e7d (23:14): #  The \u201a\u00c4\u00fascope\u201a\u00c4\u00f9 attribute on the \u201a\u00c4\u00fath\u201a\u00c4\u00f9 element is obsolete. Use the \u201a\u00c4\u00fascope\u201a\u00c4\u00f9 attribute on a \u201a\u00c4\u00fath\u201a\u00c4\u00f9 element instead.",
        "cdbe0e8aea85495cfcf22db2db988e7d (23:14): -- http://dev.w3.org/html5/markup/th.html#th",
        "cc097e0d7183ae8436e7df709553c8c0 (23:19): v.nu doesn't seem to have that bug",
        "cdbe0e8aea85495cfcf22db2db988e7d (23:43): http://css4design.com/html5-une-orientation-encore-trop-litteraire-et-pas-assez-web French article complaining about the choice of new elements in html5",
        "042dd99eb0ff8653814e445ca0093427 (23:43): &quot;If HTML could reliably do everything Flash does that would certainly save us a lot of effort&quot; ==&gt; &quot;If HTML could reliably do everything Flash does that would certainly nuke our business from orbit&quot;",
        "cdbe0e8aea85495cfcf22db2db988e7d (23:43): the person is argueing for example that there is a missing &quot;basket&quot; (ecommerce) or &quot;logo&quot; element",
        "b25b6b77a0087ff8385941e5545d32ea (00:00): What is upposed to happen if I delete an index property from a CanvasPixelArray?",
        "b25b6b77a0087ff8385941e5545d32ea (00:00): *supposed",
        "b25b6b77a0087ff8385941e5545d32ea (00:02): I can't see anything special in the spec which suggests it works like an ordinary js object i.e. the property gets removed",
        "b25b6b77a0087ff8385941e5545d32ea (00:04): But I wonder if that is detrimental to performance",
        "b25b6b77a0087ff8385941e5545d32ea (00:08): (Needless to say cross browser compatibility here is negligible, but Opera, Safari and Chrome seem to agree that properties should not be deleted by 'delete' even though Chrome and Safari return 'true' for the delete operation. Also Safari doesn't seem to support hasOwnProperty on the CanvasPixelArray)",
        "a924fb58d2c25874322f4e5126f608b9 (00:10): b25b6b77a0087ff8385941e5545d32ea: There's no deleter operator on the interface, so delete wouldn't do anything (unless there was a real JS property to delete)",
        "b25b6b77a0087ff8385941e5545d32ea (00:11): a924fb58d2c25874322f4e5126f608b9: Interesting. But why does an index property not count as a real property? It returns true for hasOwnProperty?",
        "b25b6b77a0087ff8385941e5545d32ea (00:11): s/?//",
        "132ea029b178e3c6d3a3aa4521ea24a5 (00:12): 042dd99eb0ff8653814e445ca0093427: not really; then they could keep selling their dev tools, but output HTML5 and stop maintaining their runtime (which they give away)",
        "042dd99eb0ff8653814e445ca0093427 (00:13): sure",
        "b25b6b77a0087ff8385941e5545d32ea (00:13): a924fb58d2c25874322f4e5126f608b9: Specifically in http://dev.w3.org/2006/webapi/WebIDL/#delete we must get to step 3 because otherwise properties with deleter set wouldn't be deleted",
        "042dd99eb0ff8653814e445ca0093427 (00:13): I think they'd face more competition in HTML5 tools",
        "b25b6b77a0087ff8385941e5545d32ea (00:13): a924fb58d2c25874322f4e5126f608b9: But step 3 doesn't apply so we end up in step 5",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:13): i wish they'd face competition in HTML5 tools",
        "a924fb58d2c25874322f4e5126f608b9 (00:15): b25b6b77a0087ff8385941e5545d32ea: The way the interface is specified, there is no JS property/ies respresenting the actual data",
        "a924fb58d2c25874322f4e5126f608b9 (00:15): It's like a java object with only getValue and setValue",
        "b25b6b77a0087ff8385941e5545d32ea (00:16): a924fb58d2c25874322f4e5126f608b9: I see your argument but it is wholely unclear to me that that is how it is intended to work",
        "a924fb58d2c25874322f4e5126f608b9 (00:16): Well, it has been a long time since I read WebIDL, let me check that it hasn't changed incompatibly underneath me",
        "b25b6b77a0087ff8385941e5545d32ea (00:17): It also leads to the strange behaviour where delete CanvasPixelArray[index] unconditionally does nothing yet always returns true",
        "a924fb58d2c25874322f4e5126f608b9 (00:18): Oh, here it is",
        "a924fb58d2c25874322f4e5126f608b9 (00:18): I was partially wrong. The properties for the indexes are indeed created. However, they are created with { DontDelete }",
        "b25b6b77a0087ff8385941e5545d32ea (00:18): Ah, that sounds promising",
        "b25b6b77a0087ff8385941e5545d32ea (00:19): finds that",
        "a924fb58d2c25874322f4e5126f608b9 (00:20): It should return false on delete, though",
        "b25b6b77a0087ff8385941e5545d32ea (00:20): a924fb58d2c25874322f4e5126f608b9: Thanks",
        "a924fb58d2c25874322f4e5126f608b9 (00:20): (Since they're DontDelete)",
        "b25b6b77a0087ff8385941e5545d32ea (00:20): a924fb58d2c25874322f4e5126f608b9: Sure. WebKit browsers are wrong",
        "b25b6b77a0087ff8385941e5545d32ea (00:20): (and Firefox is very wrong)",
        "b25b6b77a0087ff8385941e5545d32ea (00:21): is happy because this is how he assumed it would work in the first place :)",
        "a924fb58d2c25874322f4e5126f608b9 (00:22): (I suppose their code might be based on earlier webidl where the properties didn't exist at all)",
        "b25b6b77a0087ff8385941e5545d32ea (00:25): Yeah, that probably sounded criticl in a way that I din't intend",
        "b25b6b77a0087ff8385941e5545d32ea (00:25): *critical",
        "b25b6b77a0087ff8385941e5545d32ea (00:26): is looking forward to the new version of WebIDL based on ES5, hopefully with the same improvements to algorithm readability",
        "a924fb58d2c25874322f4e5126f608b9 (00:28): I don't envy anyone the task of making it compatible with both es3 and es5 :)"
    ],
    "person_ids": [
        "cdbe0e8aea85495cfcf22db2db988e7d",
        "cc097e0d7183ae8436e7df709553c8c0",
        "042dd99eb0ff8653814e445ca0093427",
        "b25b6b77a0087ff8385941e5545d32ea",
        "a924fb58d2c25874322f4e5126f608b9",
        "132ea029b178e3c6d3a3aa4521ea24a5",
        "69b0d3dfe919a6b860a9fac82de52a7e"
    ]
}