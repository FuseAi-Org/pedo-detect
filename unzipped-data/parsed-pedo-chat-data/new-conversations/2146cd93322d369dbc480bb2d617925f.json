{
    "id": "2146cd93322d369dbc480bb2d617925f",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (12:08): wonders how many sites actually use silverlight at all?",
        "f139aba52f9fa1394b4034a7954b2220 (12:09): I've only ever seen it used on microsoft.com, and I refused to install the plugin",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:20): writing unambiguous ABNF is hard.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:20): (and the damned signal is broken so I'm stuck nowhere on a train)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:20): (and we literally just started moving!)",
        "ab7faae5d7b250ea8606486575f8f79c (12:23): It ought to be possible to get tools that check ABNF for ambiguities",
        "ab7faae5d7b250ea8606486575f8f79c (12:23): No idea if such things exist, though",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:23): I don't think so, sadly",
        "ab7faae5d7b250ea8606486575f8f79c (12:24): You could write it in a real parser-generator language, and have that parser-generator check for ambiguity, then manually translate it into ABNF",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:25): I guess, but I'm lazy :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:26): (train stuck again, still not made it to Inverkeithing)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:26): (hopefully will make it to Cam. by 16:00 though)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:26): (certainly before I'm meant to meet you and jgraham_ though)",
        "65325d50b2e25aca54bc871b89758c9c (12:31): yacc or bison makes it pretty straightforward to write a checked grammar",
        "65325d50b2e25aca54bc871b89758c9c (12:31): (just make all the actions empty)",
        "ab7faae5d7b250ea8606486575f8f79c (12:32): http://ejohn.org/blog/processingjs/",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:32): I'm not sure if I can bothered to learn another language, though",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:32): yacc is similar to BNF, no?",
        "ab7faae5d7b250ea8606486575f8f79c (12:35): sees that olliej (I think) already complained about how it uses ImageData non-conformingly",
        "ab7faae5d7b250ea8606486575f8f79c (12:35): (and also in a way that won't work if there's !=1 device pixel per canvas pixel)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:37): wonders if anything actually uses the CRLF allowed in LWS in HTTP/1.1",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:38): has only ever seen it in test-cases",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:38): (i.e., do I actually have to allow LF there?)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:58): http://pastebin.ca/1012564 \u201a\u00c4\u00ee header-value is what was causing me issues at making sure it was unambiguous",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:59): anybody able to check that?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:01): (no, I don't trust myself)",
        "ab7faae5d7b250ea8606486575f8f79c (13:03): What does &quot;unambiguous&quot; mean?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:04): free of anything that is unclear",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:04): i.e., it is completely clear",
        "ab7faae5d7b250ea8606486575f8f79c (13:04): hopes it just means there's a single parse tree for any input, else he's confused",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:05): well, in the case of ABNF, there's no character which could match more than one production where it is in the string",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:06): ab7faae5d7b250ea8606486575f8f79c: I can give you an English lesson tonight, if you want :P",
        "65325d50b2e25aca54bc871b89758c9c (13:06): in the case of grammars, &quot;ambiguous&quot; means something more specific than clear/unclear",
        "65325d50b2e25aca54bc871b89758c9c (13:07): it means there's only one way to parse",
        "65325d50b2e25aca54bc871b89758c9c (13:07): if you use an ABNF-like LALR(1) parser generator, it will report shift-reduce or reduce-reduce conflicts in such cases",
        "65325d50b2e25aca54bc871b89758c9c (13:07): though it is possible the grammar isn't ambiguous but you have just hit a limitation of LALR(1)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:07): sucks at defining English",
        "65325d50b2e25aca54bc871b89758c9c (13:07): still, it is a pretty good approximation",
        "65325d50b2e25aca54bc871b89758c9c (13:08): I do think yacc/bison would make for a good way to test a grammar",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:08): 65325d50b2e25aca54bc871b89758c9c: I have enough to do without learning even more :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:08): (languages, that is)",
        "65325d50b2e25aca54bc871b89758c9c (13:08): this grammar might be simple enough for lex to do it",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:09): has an English exam next week, and a French one the week after",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:10): 65325d50b2e25aca54bc871b89758c9c: Where do you come from, with a name like Maciej, BTW?",
        "65325d50b2e25aca54bc871b89758c9c (13:10): a11aabeeceeae6b8cb5d12ea06b56554: straight outta hell",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:11): 65325d50b2e25aca54bc871b89758c9c: Ah. OK.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:11): (No, seriously?)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:12): Doing it in ABNF gives me a reason to write an ABNF checker, that checks for ambiguities, though",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:12): Not that I'll bother, probably :P",
        "65325d50b2e25aca54bc871b89758c9c (13:12): yacc is just a tool",
        "65325d50b2e25aca54bc871b89758c9c (13:13): learning its (trivial) syntax is almost certainly easier than writing a program to parse a different syntax and do the same checks",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:13): yacc is just another tool you have to learn how to use :)",
        "ab7faae5d7b250ea8606486575f8f79c (13:14): Learning how to use a tool is much easier than making your own, and often it's easier than doing your work without the tool",
        "ab7faae5d7b250ea8606486575f8f79c (13:14): Also it's a good opportunity for procrastination",
        "ab7faae5d7b250ea8606486575f8f79c (13:15): has spent a lot of time playing with LaTeX when he's meant to be writing reports",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:18): That's true. I just end up playing around with type-setting maths in LaTeX :P",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:21): wonders how to do this without being ambiguous",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:23): I need to properly parse headers, while still allowing garbage headers",
        "ab7faae5d7b250ea8606486575f8f79c (13:24): doesn't notice any obvious ambiguity in the 'header' thing",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:25): ab7faae5d7b250ea8606486575f8f79c: In what I linked? Good.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:25): Now to make it far more complex and more likely wrong.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:26): I want something like `invalid-header = *( header-content / lws ) [CR] LF`, but that is totally ambiguous",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:26): (combined with the valid header)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:30): (&quot;If a strict parser is in use, and anything is matched by the invalid-header rule, it is a fatal error.&quot;)",
        "ab7faae5d7b250ea8606486575f8f79c (13:30): ABNF is not a good way to do this :-p",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:30): It is mostly totally fine.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:31): There are very few quirks like that",
        "ab7faae5d7b250ea8606486575f8f79c (13:31): Mostly, except for all the error handling",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:31): There's very little error handling at a parser level :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:31): It's mostly a case of either it is totally invalid, which is always a fatal error, or has a garbage as a header, which is a fatal error only in strict parsers",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:32): Once you start doing header specific stuff, then you get real quirks. But I'm not using ABNF for that.",
        "ab7faae5d7b250ea8606486575f8f79c (13:32): Seems easiest to say something like &quot;If a prefix of the string matches 'header', then process it like a header. Otherwise, fatal error if strict, else skip to the next line&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (13:32): rather than trying to work out how to make a grammar rule that's a complement of another",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:33): It's actually really horrible to do using prose. I tried doing parts of it using prose, and it was far harder",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:33): I almost ended up using POSIX regex, as that not only has a format specification, but has negation, which ABNF does not",
        "ab7faae5d7b250ea8606486575f8f79c (13:34): Normal regexps only give you a boolean output, which isn't very useful when you want to get an HTTP header out of it",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:35): &quot;Taking all matches and submatches of the header rule\u201a\u00c4\u00b6&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:35): or the &quot;named header submatch&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:35): It's certainly possible to do",
        "ab7faae5d7b250ea8606486575f8f79c (13:35): Just invent your own string-parsing grammar formalism",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:36): It's nicer to use ABNF as then I can just say, &quot;This specification inherits all the rules from RFC3986, which as they are already given in ABNF they are not repeated here.&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (13:37): goes away for a while",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:37): See you at 7, then",
        "ab7faae5d7b250ea8606486575f8f79c (13:37): Or 7:05 if I'm late",
        "ab7faae5d7b250ea8606486575f8f79c (13:38): It should only take me 24 minutes to get there, but I'm never very good at departing on time",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:41): ab7faae5d7b250ea8606486575f8f79c: As long as you recognise me and James :P",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:42): ab7faae5d7b250ea8606486575f8f79c: And I don't have a clue how long it takes me to get there, as I don't know where I'm coming from, and I don't know how long it takes to get around Cambridge",
        "a11aabeeceeae6b8cb5d12ea06b56554 (13:52): ABNF is too vague. It doesn't specify what to do if multiple alternations match a given input"
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "ab7faae5d7b250ea8606486575f8f79c",
        "65325d50b2e25aca54bc871b89758c9c"
    ]
}