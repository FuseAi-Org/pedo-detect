{
    "id": "85d817728cc939bf1b617247b11d083b",
    "messages": [
        "73eaf221abca1b8244e34b0b9e76ac46 (11:21): edb259c0e0038f38bb200bc20c8cbf7e: why should getElementsByTagNameNS throw?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:22): edb259c0e0038f38bb200bc20c8cbf7e: i thought implementors didn't want to guarentee which element is returned because it allowed for optimization",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:24): edb259c0e0038f38bb200bc20c8cbf7e: is step 3 unclear in createElementNS? i guess i need to specify what it means similar to how html5 defines &quot;split on spaces&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:26): 73eaf221abca1b8244e34b0b9e76ac46, step 2 already talks about localName",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:27): 73eaf221abca1b8244e34b0b9e76ac46, it does not throw now if you use a tagName of &quot;&gt;&quot; or something?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:27): 73eaf221abca1b8244e34b0b9e76ac46, as for getElementById, I heard different arguments on that",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:27): edb259c0e0038f38bb200bc20c8cbf7e: oops, that should be qualifiedName",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:27): Hixie, it would be good to still split on spaces then, to allow for extensibility",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:28): edb259c0e0038f38bb200bc20c8cbf7e: getElementsByTagNameNS('&gt;') does not throw no",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:29): k",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:32): 73eaf221abca1b8244e34b0b9e76ac46, I think Opera and Safari at least always return the first",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:32): 73eaf221abca1b8244e34b0b9e76ac46, and Maciej said he'd like that to be specified",
        "65325d50b2e25aca54bc871b89758c9c (11:32): getElementById?",
        "65325d50b2e25aca54bc871b89758c9c (11:32): yeah I think that should be spec'd",
        "65325d50b2e25aca54bc871b89758c9c (11:33): I think you have to return first or at least something very close to it for web compat",
        "042dd99eb0ff8653814e445ca0093427 (11:35): you mean return the first element in the document with a given ID?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:35): http://lists.w3.org/Archives/Public/public-webapi/2007Jan/thread.html#msg118",
        "042dd99eb0ff8653814e445ca0093427 (11:35): Yeah, that's necessary for Web compat",
        "042dd99eb0ff8653814e445ca0093427 (11:35): if you don't always return the first in the document, Amazon breaks",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:35): I'm told Gecko sometimes does something differently when mutations are evolved",
        "042dd99eb0ff8653814e445ca0093427 (11:35): that's not true anymore",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:35): s/evolved/involved/",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:36): cool",
        "042dd99eb0ff8653814e445ca0093427 (11:36): I seem to recall having this discussion a few months ago",
        "65325d50b2e25aca54bc871b89758c9c (11:38): I recall this as well",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:38): me too, though I'm not sure the above URL is that discussion",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:39): anyways, 73eaf221abca1b8244e34b0b9e76ac46 didn't spec it as such, which is why we're having it again :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:40): hmm. the test results at http://www.paciellogroup.com/blog/misc/longdesc.html no longer match I8b2",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:40): IE8b2",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:42): ok, fixed getElementById",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): 73eaf221abca1b8244e34b0b9e76ac46, qualifiedName should not match NCName as then it can't contain a &quot;:&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:45): Hixie: is there any scenario where black box testing could distinguish between the tree builder managing text node coalescing in using an internal buffer and late-inserting text nodes and early-inserting text nodes and appending to them while in the tree?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:46): s/in using/using/",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:46): edb259c0e0038f38bb200bc20c8cbf7e: good point",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:46): fixed",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:47): b8810fee2f4a71f849f3f7409546d1d9: i guess you could have a setInterval that inspects the text node",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:48): 73eaf221abca1b8244e34b0b9e76ac46, might be better to use QName instead of Name ?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:49): edb259c0e0038f38bb200bc20c8cbf7e: QName is NCName | PrefixedName",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:49): 73eaf221abca1b8244e34b0b9e76ac46: ah. I hadn't thought of that",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:49): 73eaf221abca1b8244e34b0b9e76ac46: however, the spec doesn't specify when the parser has to yield to let timeouts and intervals run",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:49): 73eaf221abca1b8244e34b0b9e76ac46, yeah, so checking for that instead of Name and PrefixedName is a) less confusing and b) shorter",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:50): so one could just pretend that when the parser yields, it hasn't seen the text at all yet",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:50): edb259c0e0038f38bb200bc20c8cbf7e: but it should throw different exceptions (or well it does now)",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:50): edb259c0e0038f38bb200bc20c8cbf7e: i'm considering dropping error checking altogether",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:51): as far as I can tell, the parser only needs to yield when it sees a &lt;/script&gt; end tag",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:51): and otherwise, yielding is up to the implementation",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:51): which makes me wonder if Web compat requires some level of discretionary yielding",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:52): there are libraries that poll the dom every X ms for an element",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:52): 73eaf221abca1b8244e34b0b9e76ac46, I see, woefully over engineered",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:52): edb259c0e0038f38bb200bc20c8cbf7e: indeed",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:52): edb259c0e0038f38bb200bc20c8cbf7e: it's because namespaces are optional in dom3 core",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:53): right now i just want to spec how things work",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:53): ok, well, keep notes :)",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:54): i am :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:54): 73eaf221abca1b8244e34b0b9e76ac46: is the compat requirement that parser must yield every Y ms or is the compate requirement that whenever the parser yields for the CSS formatter, intervals must fire, too?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:54): b8810fee2f4a71f849f3f7409546d1d9: don't know",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:55): b8810fee2f4a71f849f3f7409546d1d9: for the library point of view it just wants to get the element as soon as it's available",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:55): ok. I guess I should check if Hixie has already specced this",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:55): 73eaf221abca1b8244e34b0b9e76ac46: yeah, but is it only to keep up with layout?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): is there any way to opt in to getting mutation events for parser-initiated insertions?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:56): b8810fee2f4a71f849f3f7409546d1d9: no i think it's mainly to have e.g. buttons do something before the page has finished loading",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:57): 73eaf221abca1b8244e34b0b9e76ac46: isn't that keeping up with layout?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:57): b8810fee2f4a71f849f3f7409546d1d9: i guess",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): in Gecko, the yielding from the parser depends on the user event queue",
        "0da07476c4bd14079ce4032a6f280e17 (12:14): b8810fee2f4a71f849f3f7409546d1d9: You're aware that you have a doppelganger here in Oslo",
        "0da07476c4bd14079ce4032a6f280e17 (12:15): I got a bit freaked out when he got of at the bus stop next to Opera",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:17): 0da07476c4bd14079ce4032a6f280e17: I wasn't aware",
        "0da07476c4bd14079ce4032a6f280e17 (12:18): He was so similar I tried to say hi to him",
        "0da07476c4bd14079ce4032a6f280e17 (12:18): at which point he looked at me as if I was a loonie",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:22): heh, https://bugzilla.mozilla.org/show_bug.cgi?id=243519 is fixed",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:22): I think this means I can simplify my CSS when Firefox 3.1 is reasonably deployed",
        "042dd99eb0ff8653814e445ca0093427 (12:25): don't speak too soon, it already bounced out of the tree once :-)"
    ],
    "person_ids": [
        "73eaf221abca1b8244e34b0b9e76ac46",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "65325d50b2e25aca54bc871b89758c9c",
        "042dd99eb0ff8653814e445ca0093427",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "0da07476c4bd14079ce4032a6f280e17"
    ]
}