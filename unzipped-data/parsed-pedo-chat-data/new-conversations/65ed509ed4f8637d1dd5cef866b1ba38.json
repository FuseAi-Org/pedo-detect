{
    "id": "65ed509ed4f8637d1dd5cef866b1ba38",
    "messages": [
        "23a386f009aaaf7fb0d93f2baeb68f7f (03:58): how do i get vim to *never* insert a tab?",
        "23a386f009aaaf7fb0d93f2baeb68f7f (03:58): its auto indenting with tabs",
        "23a386f009aaaf7fb0d93f2baeb68f7f (03:58): and the like",
        "4969e383a78d3407b54160eb0de4b90b (03:59): :set et",
        "23a386f009aaaf7fb0d93f2baeb68f7f (04:00): thx",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): why, when i'm doing :%s/\\s/\\n/g",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): i have",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): None",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): None",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): sorry",
        "8bece2647a39db763401c1e98abe5854 (04:17): Torin: vim regexp's predate a lot of stuff.",
        "8bece2647a39db763401c1e98abe5854 (04:17): Torin: one of them is the definition of '\\n'",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): hmm",
        "8bece2647a39db763401c1e98abe5854 (04:17): \\n in vim is \\0 in C, or NUL",
        "d228a545ced7d55480ff1c021e8b0c03 (04:17): i want a new line",
        "8bece2647a39db763401c1e98abe5854 (04:18): \\r is 'newline'",
        "d228a545ced7d55480ff1c021e8b0c03 (04:18): ohh",
        "8bece2647a39db763401c1e98abe5854 (04:18): Torin: it's confusing, I know.",
        "d228a545ced7d55480ff1c021e8b0c03 (04:18): ok now it is working, thx :)",
        "07789aa4ea52e5f058b0924547908baf (04:41): I just got javac compiling working in vim, but now it's not seeing the other files in directory (I'm using Node.class in my program and it's in the same directory)",
        "07789aa4ea52e5f058b0924547908baf (04:41): how can i fix this?",
        "6103130184a5cb2706eb422698d9c151 (04:43): is there a way for me to use filetype indenting if the file is recognized and otherwise automatically turn on smartindent and autoindent? and if those 2 are on, why is it in CSS files, when i do 4&gt;&gt; it only indents the properties and not thethe selectors (#id will not be moved)",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:47): root__: You're familiar with classpath options?",
        "07789aa4ea52e5f058b0924547908baf (04:47): sorda",
        "07789aa4ea52e5f058b0924547908baf (04:48): is there something i can put in my gvimrc to have it set to where the file i open is?",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:48): root__: Try --classpath .:&lt;your other include direcories&gt; and :echo cwd()",
        "07789aa4ea52e5f058b0924547908baf (04:49): where do i type that?",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:50): root__: exec 'lcd '.expand('%:&lt;have to look up these parameters (:r:h)?') might help you..",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:50): root__: Try :!javac\\ --classpath\\ .\\ yourjavafile",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:51): If this works you want to set it with :set makeprg=javac\\ --classpath\\ .  and then execute :make &lt;yourjavafile&gt;",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:53): bnovc: Use autocommands and check &amp;filetype == &quot;&quot; to see wether the file type has been recognized",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (04:53): root__: Does it?",
        "07789aa4ea52e5f058b0924547908baf (04:53): eh this is too complicated for me , thanks anway",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:02): root__: Did  the ! command work? Does it without from shell?",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:02): ^DeFi4nCe: Not sure what you mean. You  propably want to read :h map?",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:03): root__: without ! from shell",
        "91e22f237a418bdff2a7073e541db57c (05:11): helo",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:11): hi",
        "91e22f237a418bdff2a7073e541db57c (05:11): er, hello, rather, what is this, and smtp server?",
        "91e22f237a418bdff2a7073e541db57c (05:11): :)",
        "fdd2857f7e10657ff26e8adae48cfb9c (05:12): smtp?",
        "fdd2857f7e10657ff26e8adae48cfb9c (05:12): internet relay chat",
        "91e22f237a418bdff2a7073e541db57c (05:12): I'm trying to figure out if there is a simple way to cut off the ends of file names for determining filetypes",
        "91e22f237a418bdff2a7073e541db57c (05:13): heh, yeah, I know",
        "91e22f237a418bdff2a7073e541db57c (05:14): cause I've got some files on a multi version filesystem, named like something.c@@/SOMETHINGELSE",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:14): imperito: smtp is sent mail protocol. A server is a program which receives emails and forwards  them to  another program which should deliver them into personal mailboxes. I suggest asking at #mutt for a faq or tutorial link They should have further explanations",
        "91e22f237a418bdff2a7073e541db57c (05:14): OK, ok, maybe it wasn't that funny, never mind :)",
        "d711e4c8dbc8ccb10d953ab45ad18a36 (05:15): i got it",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:15): imperito: imperito try the fille command or open it with vim ;) Perhaps this gives you a hint?",
        "d711e4c8dbc8ccb10d953ab45ad18a36 (05:15): STOR joke",
        "91e22f237a418bdff2a7073e541db57c (05:17): I do open it with vim, but it doesn't recognize it as being a c file because of the stuff at the end, so I don't get the syntax and stuff unless I :set filetype",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:20): imperito: You might want to add a autocommand like this : autocmd BufRead,BufNewFile *.y,*.ly :set ft=happy",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:20): you can match directories, too. So something.c@@/* could work",
        "91e22f237a418bdff2a7073e541db57c (05:21): yeah, I was thinking of that, but then I'd have to add such a thing for *.c@@* and for every other filetype I wanted it to recognize on the filesystem",
        "91e22f237a418bdff2a7073e541db57c (05:22): I was wondering if there was a way to strip off the @@* and then let the existing rules have another shot at it, or anything",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:25): imperito: :e $VIMRUNTIME/**/filetype.vim and you can see that everythhing is done using autocommands there",
        "91e22f237a418bdff2a7073e541db57c (05:28): yeah, I know, I've got a few for some oddly named files we have, but I was wondering specifically if there was a way to have an autocommand, given the filename, change the filename in some way, and then rerun all the BufRead autocommands with the new filename, and see if any match",
        "91e22f237a418bdff2a7073e541db57c (05:29): cause there are a lot of autocommands in there :)",
        "91e22f237a418bdff2a7073e541db57c (05:30): (granted, only a few would apply, but I was wondering if there was a more general solution)",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea (05:35): imperito: Try the vim mailinglist then ;) This exceeds my knowledge."
    ],
    "person_ids": [
        "23a386f009aaaf7fb0d93f2baeb68f7f",
        "4969e383a78d3407b54160eb0de4b90b",
        "d228a545ced7d55480ff1c021e8b0c03",
        "8bece2647a39db763401c1e98abe5854",
        "07789aa4ea52e5f058b0924547908baf",
        "6103130184a5cb2706eb422698d9c151",
        "cae6af6dbbae6f8fd4ffe04a3fa82fea",
        "91e22f237a418bdff2a7073e541db57c",
        "fdd2857f7e10657ff26e8adae48cfb9c",
        "d711e4c8dbc8ccb10d953ab45ad18a36"
    ]
}