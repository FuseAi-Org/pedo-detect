{
    "id": "b082f6c6078b9a0cbf323a6e8d47e574",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (19:04): hello",
        "cc097e0d7183ae8436e7df709553c8c0 (19:15): hello edb259c0e0038f38bb200bc20c8cbf7e",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:16): though that HTMLImageElement.complete was some new feature but apparently browsers already support it in incompatible ways",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:17): I suppose &quot;in incompatible ways&quot; goes without saying...",
        "ab7faae5d7b250ea8606486575f8f79c (19:20): I've used that in Firefox and Opera with no problems (to poll for image loading, since I didn't want to use events), though my code was gratuitously incompatible with IE anyway so I have no idea how it handles complete",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:21): ab7faae5d7b250ea8606486575f8f79c, what did you use it for?",
        "ab7faae5d7b250ea8606486575f8f79c (19:21): But &quot;The DOM attribute complete must return true if the user agent has downloaded the image specified in the src attribute, and it is a valid image.&quot; doesn't seem to agree with what I found - I'm fairly sure I had complete==true once the image had failed to load (e.g. with a 404 error)",
        "ab7faae5d7b250ea8606486575f8f79c (19:21): (so I tested width!=0 to see if it had actually loaded successfully, and replaced it with an error image otherwise)",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:22): used &quot;javascript:alert((new Image()).complete)&quot; as testcase",
        "ab7faae5d7b250ea8606486575f8f79c (19:23): That was just in a canvas game, which loaded images while running and only wanted to check for updated status between frames",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:27): will make some testcases later to test interop a bit better",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:27): is going to fetch a Wii now!",
        "ab7faae5d7b250ea8606486575f8f79c (19:28): Hmm, I can't work out what I was doing that made it look like it worked, or whether I was just imagining the whole thing...",
        "ab7faae5d7b250ea8606486575f8f79c (19:30): Oh wait, that's because I'm trying .completed instead of .complete, hence it always returning undefined...",
        "ab7faae5d7b250ea8606486575f8f79c (19:32): data:text/html,&lt;script&gt;var i=new Image(); i.src=&quot;http://microsoft.com/404&quot;; alert(i.complete); setTimeout(function(){alert(i.complete)}, 1000);&lt;/script&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (19:32): That does what I expected - False at first, then True after it's got the error response",
        "ab7faae5d7b250ea8606486575f8f79c (19:32): but only in FF/Opera - IE returns False/False",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:53): IE makes more sense imo",
        "150ca666565bfcb850b2e2ee3c0f0c64 (19:56): quotes edb259c0e0038f38bb200bc20c8cbf7e out of context",
        "150ca666565bfcb850b2e2ee3c0f0c64 (19:56): I can see it on Digg now",
        "edb259c0e0038f38bb200bc20c8cbf7e (19:56): :p",
        "ab7faae5d7b250ea8606486575f8f79c (20:01): IE isn't as useful since it only allows the polling-equivalent of onload and you can't poll for the same conditions as onerror, whereas FF/O sort of let you tell the difference between complete-successful and complete-error",
        "ab7faae5d7b250ea8606486575f8f79c (20:01): but IE does make more sense for something called &quot;complete&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:02): afaict the attribute just reflects whether the load event has been dispatched on the element or not",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:03): i suppose what FF/O is let it reflect whether load or error has been dispatched",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:03): (but that may be what you just said, I'm a bit dense)",
        "ab7faae5d7b250ea8606486575f8f79c (20:05): That was what I was thinking (and what seems to happen when I test it), though I'm not sure if what I actually said made sense :-)",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:09): That doesn't seem to be true either",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:10): alerting complete in a load event handler returns false in IE",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:11): ab7faae5d7b250ea8606486575f8f79c, it's a security risk... consider an image from an intranet",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:13): .complete does return true after the load event of the window object is dispatched, but not before...",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:13): wonders if that can be considered a bug in IE",
        "ab7faae5d7b250ea8606486575f8f79c (20:14): For data URLs? I was thinking that if you are able to call canvas.toDataURL, you are the same person who was calling canvas.drawImage, so you had the Image, so you could read image.src and get the image data out. But I don't know how much cross-domain scripting is allowed, and whether one of those assumptions is wrong",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:17): ab7faae5d7b250ea8606486575f8f79c, the only way to get the image data is through &lt;canvas&gt;",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:17): ab7faae5d7b250ea8606486575f8f79c, hence the restriction",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:18): (the security model of the web is rather odd, but we have to deal with it :))",
        "ab7faae5d7b250ea8606486575f8f79c (20:19): But when the image is loaded from a data: URL (e.g. because it came from another call to canvas.toDataURL), you can read .src and get the image data without using the canvas at all",
        "ab7faae5d7b250ea8606486575f8f79c (20:20): like by writing a PNG decoder in JavaScript, which I guess is a little painful but theoretically possible",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:20): I'm not up to speed with data: URIs and security, sorry",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:22): One thing that is problematic with data: URIs if I remember correctly is when they are the result of a redirect",
        "ab7faae5d7b250ea8606486575f8f79c (20:25): Ah, sounds like that kind of thing makes it awkward",
        "edb259c0e0038f38bb200bc20c8cbf7e (20:32): http://tc.labs.opera.com/html/img/ has four tests which show that no browser implements the spec",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): And none misimplement it in the same way",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): Test: 1 2 3 4",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): Firefox: F P P F",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): Opera:   F P P DNR",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): IE:      P F F P",
        "ab7faae5d7b250ea8606486575f8f79c (20:37): Safari:  F F F DNR",
        "cc097e0d7183ae8436e7df709553c8c0 (20:42): another &lt;figure&gt; with &lt;credit&gt;: http://www.tellusgame.com/Tellusfilm/2.%20Finished/artikelsidan.html",
        "cc097e0d7183ae8436e7df709553c8c0 (20:44): i've noticed that whatever html5 feature i use (usually type=email &amp;c), as soon as i pass the code to someone else it disappears. probably their editors or tools remove them or complain about them",
        "cc097e0d7183ae8436e7df709553c8c0 (20:45): or they are dicks and want to pass validator.w3.org",
        "cc097e0d7183ae8436e7df709553c8c0 (20:53): http://www.tellusgame.com/Tellusfilm/2.%20Finished/kronikorsidan.html has only &lt;credit&gt; and no caption for the figures",
        "cc097e0d7183ae8436e7df709553c8c0 (20:58): firefox seems to be buggy about display:table-cell. sometimes they get rendered on their own line. on reload it renders correctly",
        "cc097e0d7183ae8436e7df709553c8c0 (20:58): will try to reproduce with a simpler test case",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:12): Microsoft just joined the HTML WG",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:12): With Chris Wilson as their sole participant",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:15): if Martin Atkins is around, my apologies...",
        "a924fb58d2c25874322f4e5126f608b9 (21:19): How so?",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:19): for asking he question he apparently already addressed",
        "edb259c0e0038f38bb200bc20c8cbf7e (21:20): s/he question/a question/"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "cc097e0d7183ae8436e7df709553c8c0",
        "ab7faae5d7b250ea8606486575f8f79c",
        "150ca666565bfcb850b2e2ee3c0f0c64",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}