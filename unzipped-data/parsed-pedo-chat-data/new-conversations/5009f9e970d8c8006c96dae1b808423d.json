{
    "id": "5009f9e970d8c8006c96dae1b808423d",
    "messages": [
        "3f80d62ed949f29a551f0f7d97ab8089 (14:51): RMeist, no diff",
        "443a9547033ec9d695ae9d29e8df98b1 (14:54): there is",
        "443a9547033ec9d695ae9d29e8df98b1 (14:54): looking at an execution plan it may differ",
        "443a9547033ec9d695ae9d29e8df98b1 (14:54): count(1) counts each row as a static 1",
        "27fa0f96dfc03bb1f2bebd6fee16f716 (14:55): well most rdbms have special count(*) optimizations",
        "443a9547033ec9d695ae9d29e8df98b1 (14:55): count(*) needs to check each row/value for nulls",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:55): hali, <a href=\"http://asktom.oracle.com/pls/ask/f?p=4950\">http://asktom.oracle.com/pls/ask/f?p=4950</a>:8:14630739965815528097::NO::F4950_P8_DISPLAYID,F4950_P8_CRITERIA:1156159920245",
        "27fa0f96dfc03bb1f2bebd6fee16f716 (14:55): hali: really? .. i thought this was only the case for count(fieldname)",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:56): and count(*) counts every row)",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:56): null or not null",
        "443a9547033ec9d695ae9d29e8df98b1 (14:57): for the simple reason that the row itself is never null... but i have seen differences in exeuction plans",
        "27fa0f96dfc03bb1f2bebd6fee16f716 (14:57): so count(*) should really not be different than count(1)",
        "27fa0f96dfc03bb1f2bebd6fee16f716 (14:57): ah yes",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:57): &quot;first, count(1) internally is rewritten as count(*).  That is a FACT.  &quot; (c) TKyte",
        "443a9547033ec9d695ae9d29e8df98b1 (14:58): the cost difference may be due to statistics and and the joy of CBO",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:58): it's a myth about count(1)",
        "443a9547033ec9d695ae9d29e8df98b1 (14:58): but as a FACT, i have seen differences in execution plans for the two",
        "3f80d62ed949f29a551f0f7d97ab8089 (14:59): hali, can you show it?",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:00): maybe, there was count(some field)?",
        "443a9547033ec9d695ae9d29e8df98b1 (15:00): specificly count(1) and count(*) .. im not saying either is faster than the other... im just saying the execution plan can show a different cost... probably due to statistics",
        "443a9547033ec9d695ae9d29e8df98b1 (15:01): and i don't have a good example at hand... i can't provoke the &quot;bug&quot;",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:01): hali, what plan, explain for, or traced plan?",
        "443a9547033ec9d695ae9d29e8df98b1 (15:01): explain",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:02): &quot;explain for&quot; - suxx.",
        "443a9547033ec9d695ae9d29e8df98b1 (15:02): i find it very usefull",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:02): but many many times real plan is defferent",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:02): different",
        "443a9547033ec9d695ae9d29e8df98b1 (15:05): and autotrace is easier to use",
        "443a9547033ec9d695ae9d29e8df98b1 (15:05): but explain is alright for checking simple changes in massive queries without having to run them",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:07): and i do first check with explain, yes)",
        "443a9547033ec9d695ae9d29e8df98b1 (15:09): i presume you say the burleson article about adding where 1=1 to get a faster query? :)",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:09): but trace + tool like OraSRP are more helpful, that autot, they show me all timing and binding and row count for every op in plan",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:10): hali, are you have a link?)",
        "443a9547033ec9d695ae9d29e8df98b1 (15:10): hm, not handy..",
        "443a9547033ec9d695ae9d29e8df98b1 (15:10): that scarry looking scuba guy wrote it",
        "443a9547033ec9d695ae9d29e8df98b1 (15:11): &quot;my cunt&quot;",
        "443a9547033ec9d695ae9d29e8df98b1 (15:11): or mike aunt as his real name is :)",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:11): )",
        "443a9547033ec9d695ae9d29e8df98b1 (15:11): ault*",
        "443a9547033ec9d695ae9d29e8df98b1 (15:14): <a href=\"http://mikerault.blogspot.com/2006_03_01_mikerault_archive.html\">http://mikerault.blogspot.com/2006_03_01_mikerault_archive.html</a>",
        "443a9547033ec9d695ae9d29e8df98b1 (15:14): he wrote another one... but i can't seem to find that now",
        "443a9547033ec9d695ae9d29e8df98b1 (15:15): the other one was more amusing",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:22): tnx",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:24): he compare costs numbers, lol",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:24): Again we see that while the cost figure is several times higher than with the index, the true cost in recursive calls, db block gets and physical reads is the same as with the index.",
        "3f80d62ed949f29a551f0f7d97ab8089 (15:24): ))"
    ],
    "person_ids": [
        "3f80d62ed949f29a551f0f7d97ab8089",
        "443a9547033ec9d695ae9d29e8df98b1",
        "27fa0f96dfc03bb1f2bebd6fee16f716"
    ]
}