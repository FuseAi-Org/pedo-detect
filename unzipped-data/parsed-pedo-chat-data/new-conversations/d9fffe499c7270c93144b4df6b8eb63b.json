{
    "id": "d9fffe499c7270c93144b4df6b8eb63b",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (10:59): https://bugzilla.mozilla.org/show_bug.cgi?id=253346 is INVALID per HTML5, right?",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:00): yes",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:01): 6d05f0c2942adc25946a4b02b37ffa00: ok. WONTFIXed. thanks",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:02): in theory it's INVALID",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:02): well, future-yet-to-be-a-real-standard-theory",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:02): I'm being generous and marking bugs that are valid per HTML4 as WONTFIX",
        "65325d50b2e25aca54bc871b89758c9c (11:03): hates bugzilla resolutions",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:03): heh",
        "65325d50b2e25aca54bc871b89758c9c (11:04): although I guess INCOMPLETE is new, and an improvement",
        "65325d50b2e25aca54bc871b89758c9c (11:04): does REMIND still exist in the latest bugzilla?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:05): 65325d50b2e25aca54bc871b89758c9c: IIRC, after a decade or so, it was finally buried",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:07): in a way, I'm glad that Netscape engineers didn't have the cycles to &quot;fix&quot; all the SGML stuff in the Netscape 6 cycle",
        "65325d50b2e25aca54bc871b89758c9c (11:07): Radar has resolutions including &quot;Software changed&quot;, &quot;Feature removed&quot;, &quot;Documentation changed&quot;, &quot;Duplicate&quot;, &quot;Cannot reproduce&quot;, &quot;Behaves correctly&quot;, &quot;Not to be fixed&quot; and &quot;Insufficient information&quot;",
        "65325d50b2e25aca54bc871b89758c9c (11:07): I always hated having to say &quot;INVALID&quot; for what might be either &quot;behaves correctly&quot; or &quot;insufficient information&quot;",
        "65325d50b2e25aca54bc871b89758c9c (11:08): it feels like something the Master Control Program from TRON would say, not a human mode of communication",
        "6d05f0c2942adc25946a4b02b37ffa00 (11:09): spec/docs changed would be a good resolution to have indeed",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:11): yesterday I realized that Radar should have a resolution &quot;Confusing UI&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): I finally understood what the keyboard identification dialog wanted me to do",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): I had always misread it.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): to the point of even borrowing another keyboard to bypass it",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:13): maybe I should follow up with the Radar bug I filed about it for the wrong reason the last time round",
        "65325d50b2e25aca54bc871b89758c9c (11:23): b8810fee2f4a71f849f3f7409546d1d9: &quot;confusing UI&quot; is more a category of bug than a resolution...",
        "65325d50b2e25aca54bc871b89758c9c (11:23): specifically the &quot;Usability&quot; classification",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:33): REMIND and LATER are two resolutions i argued long and hard to drop",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:34): i'm amused that i use them now in the w3c bugzilla",
        "cdd23ac03f92596256b5ebc603df251b (11:35): 69b0d3dfe919a6b860a9fac82de52a7e: if you're still confused about what microdata syntax I am proposing, I'm here.",
        "b25b6b77a0087ff8385941e5545d32ea (11:36): 69b0d3dfe919a6b860a9fac82de52a7e: Did you see the discussion about microdata formats from yesterday",
        "b25b6b77a0087ff8385941e5545d32ea (11:36): ?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:36): cdd23ac03f92596256b5ebc603df251b: your ideas about nested subitems don't seem to fit the use cases we have for them",
        "b25b6b77a0087ff8385941e5545d32ea (11:37): Specifically about using selectors to select on an item without fully qualified names",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:37): cdd23ac03f92596256b5ebc603df251b: microdata is modelling a nested tree",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:37): cdd23ac03f92596256b5ebc603df251b: lists of name-value pairs that can be nested",
        "b25b6b77a0087ff8385941e5545d32ea (11:37): s/about using/about not beiung able to use/",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:37): cdd23ac03f92596256b5ebc603df251b: so i don't see what an anonymous child would mean, and modelling it compared to the DOM makes no sense, imho",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:37): b25b6b77a0087ff8385941e5545d32ea: i did not",
        "cdd23ac03f92596256b5ebc603df251b (11:38): 69b0d3dfe919a6b860a9fac82de52a7e: anonymous as in you don't need to give it an itemprop value",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:38): right, that makes no sense to me",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:38): it's a name-value pair list",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:38): the &quot;name&quot; part is integral to what we're modelling",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:39): look at the vcard vocabulary",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:39): for instance",
        "b25b6b77a0087ff8385941e5545d32ea (11:40): 69b0d3dfe919a6b860a9fac82de52a7e: Right so the point was that if you have &lt;span item=&quot;com.example&quot;&gt;&lt;span itemprop=foo&gt;&lt;/span&gt;&lt;span item=&quot;org.example&quot;&gt;&lt;span itemprop=&quot;foo&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;",
        "cdd23ac03f92596256b5ebc603df251b (11:40): I have looked at it and don't see why named itemprops which are unnamed items is any clearer than just named items",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): the current model is &lt;div itemprop=&quot;name&quot; item=&quot;type&quot;&gt; &lt;span itemprop=&quot;subname&quot;&gt; subvalue &lt;/span&gt; &lt;/div&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): dropping the itemprop=&quot;name&quot; part is meaningless imho",
        "b25b6b77a0087ff8385941e5545d32ea (11:40): And you want to select org.example.foo but not com.example.foo you can't do it without knowing the structure in advance",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:40): cdd23ac03f92596256b5ebc603df251b: i don't understand what you mean",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:41): b25b6b77a0087ff8385941e5545d32ea: org.example.foo?",
        "b25b6b77a0087ff8385941e5545d32ea (11:41): the itemprop foo of type org.example",
        "b25b6b77a0087ff8385941e5545d32ea (11:41): doesn't remember the right terms",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:42): b25b6b77a0087ff8385941e5545d32ea: i can't see a use case where you would want a specific _type_'s subproperty directly like that",
        "cdd23ac03f92596256b5ebc603df251b (11:42): 69b0d3dfe919a6b860a9fac82de52a7e: I'm saying that nested name-value lists are more difficult to understand and use than a simple tree",
        "cdd23ac03f92596256b5ebc603df251b (11:43): it makes the DOM API more confusing",
        "b25b6b77a0087ff8385941e5545d32ea (11:43): 69b0d3dfe919a6b860a9fac82de52a7e: Well if you want to style all the foo properties of a specific item type, for example",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:43): cdd23ac03f92596256b5ebc603df251b: oh you're suggesting changing the actual underlying data model structure as well??",
        "b25b6b77a0087ff8385941e5545d32ea (11:43): It doesn't seem unreasonable",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:43): cdd23ac03f92596256b5ebc603df251b: i wasn't even considering that",
        "cdd23ac03f92596256b5ebc603df251b (11:44): 69b0d3dfe919a6b860a9fac82de52a7e: yes, but it seems a rather minor change",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:44): b25b6b77a0087ff8385941e5545d32ea: don't style microdata. it's not intended for use with styling. things will go badly if you start relying on microdata for styling.",
        "cdd23ac03f92596256b5ebc603df251b (11:44): the syntax is largely the same",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:44): cdd23ac03f92596256b5ebc603df251b: changing an underlying assumption is never a minor change.",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:44): cdd23ac03f92596256b5ebc603df251b: you have to revisit every design decision that was based on the previous assumption and reconsider the decisions to make sure the new design makes sense again.",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:44): cdd23ac03f92596256b5ebc603df251b: so what is the data structure you are suggesting?",
        "b25b6b77a0087ff8385941e5545d32ea (11:45): 69b0d3dfe919a6b860a9fac82de52a7e: I'm not sure authors will feel the same way",
        "cdd23ac03f92596256b5ebc603df251b (11:45): 69b0d3dfe919a6b860a9fac82de52a7e: simply a tree where each node has string properties and subnodes",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:45): cdd23ac03f92596256b5ebc603df251b: that doesn't seem to be a good fit for the use cases we have.",
        "b25b6b77a0087ff8385941e5545d32ea (11:45): Also many JS libraries are heavily selector based and people are likely to try using selectors to access microdata items through js",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:46): cdd23ac03f92596256b5ebc603df251b: and we already have that data model anyway -- the DOM itself",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:46): cdd23ac03f92596256b5ebc603df251b: for example, imagine the microdata for a book, which has four vcards associated with it, two for authors, and two for editors.",
        "cdd23ac03f92596256b5ebc603df251b (11:46): 69b0d3dfe919a6b860a9fac82de52a7e: there are no examples where both the itemprop and item would have a type",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): cdd23ac03f92596256b5ebc603df251b: how would you express that in your model?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): itemprop doesn't ever have a type",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:47): it has a name",
        "cdd23ac03f92596256b5ebc603df251b (11:49): 69b0d3dfe919a6b860a9fac82de52a7e: I would make author/editor part of the subitem or I would add intermediary &quot;authors&quot; and &quot;editors&quot; items",
        "cdd23ac03f92596256b5ebc603df251b (11:50): if someone is both an author and an editor I would do the former",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:50): could you show the syntax for this?",
        "cdd23ac03f92596256b5ebc603df251b (11:52): if you'll allow me to use the DOM-isomorphism for brevity: &lt;book&gt;&lt;person type=&quot;author&quot;/&gt;&lt;person type=&quot;editor&quot;/&gt;&lt;/book&gt; or &lt;book&gt;&lt;authors&gt;&lt;person/&gt;&lt;/authors&gt;&lt;editors&gt;...&lt;/editors&gt;&lt;/book&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:52): i can see how to do it in the DOM",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:52): but how would you do it in your microdata syntax?",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:53): i think your sample markup shows a misunderstanding, btw. &quot;author&quot; is a type of &quot;person&quot;, but &quot;person&quot; is the type of that object.",
        "cdd23ac03f92596256b5ebc603df251b (11:54): the first case: &lt;span item=&quot;book&quot;&gt;&lt;span item=&quot;person&quot;&gt;&lt;span itemprop=&quot;type&quot;&gt;author&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:54): (i don't understand how in your syntax you would say that one &quot;list-of-vcards&quot; is named &quot;authors&quot; and another is named &quot;editors&quot; given that you don't have names for subitems)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:54): wait, you're saying that you'd add fields to the vcard vocabulary just to be able to integrate vcard into other vocabularies?",
        "cdd23ac03f92596256b5ebc603df251b (11:55): you'll have to be more specific, this isn't a vcard example",
        "cdd23ac03f92596256b5ebc603df251b (11:55): well, we should use &lt;span item=&quot;vcard&quot;&gt; instead of person above",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:55): you'd add fields to the &quot;person&quot; vocabulary just to be able to integrate it into other vocabularies",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): 69b0d3dfe919a6b860a9fac82de52a7e: regarding the Google usability study: are you going to test hCalendar vs. vCal-RDF-in-RDFa vs. vCal-in-microdata?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): 69b0d3dfe919a6b860a9fac82de52a7e: for expressing an event",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:56): b8810fee2f4a71f849f3f7409546d1d9: no, we don't really have the resources to do any more than just a straight forward comparison of maybe three microdata variants at most",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): 69b0d3dfe919a6b860a9fac82de52a7e: ok.",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:58): anyway i really should go to bed",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:58): cdd23ac03f92596256b5ebc603df251b: i don't think your proposals are sound, to be honest",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:58): cdd23ac03f92596256b5ebc603df251b: i think they confuse &quot;type&quot; and &quot;name&quot; in a way that would seriously compromise the mechanism",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:59): cdd23ac03f92596256b5ebc603df251b: maybe we should drop &quot;type&quot; for subitems, though",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:59): cdd23ac03f92596256b5ebc603df251b: i'll think about it",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:59): nn",
        "cdd23ac03f92596256b5ebc603df251b (11:59): 69b0d3dfe919a6b860a9fac82de52a7e: if you're unwilling to test the syntax I can't force you, of course, I'm saying that the DOM API etc are very confusing now and this seems to help",
        "cdd23ac03f92596256b5ebc603df251b (11:59): let's see what others say"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "6d05f0c2942adc25946a4b02b37ffa00",
        "65325d50b2e25aca54bc871b89758c9c",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "cdd23ac03f92596256b5ebc603df251b",
        "b25b6b77a0087ff8385941e5545d32ea"
    ]
}