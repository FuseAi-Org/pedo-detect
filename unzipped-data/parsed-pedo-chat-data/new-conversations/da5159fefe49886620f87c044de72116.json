{
    "id": "da5159fefe49886620f87c044de72116",
    "messages": [
        "1e10d84b3917ae58049be95b0071cf7f (03:49): is there a phrase for someone who\u201a\u00c4\u00f4s all like \u201a\u00c4\u00fayour site doesn\u201a\u00c4\u00f4t validate so you\u201a\u00c4\u00f4re obviously an idiot\u201a\u00c4\u00f9?",
        "1cd13479e5609d79971c69051158a27f (03:51): depends on the severity of the errors",
        "1e10d84b3917ae58049be95b0071cf7f (03:51): I think this was what I was getting at: http://meiert.com/en/blog/20081120/pseudo-standardistas/",
        "1cd13479e5609d79971c69051158a27f (03:52): e.g. if it's something that will most likely cause different DOM trees in different browsers, then he's right :&gt;",
        "1e10d84b3917ae58049be95b0071cf7f (03:52): 1cd13479e5609d79971c69051158a27f: 6, of which 2 are legit (1 in a comment, 3 from plugins)",
        "1cd13479e5609d79971c69051158a27f (03:52): if it's an unescaped &amp; in some url... well... :&gt;",
        "1e10d84b3917ae58049be95b0071cf7f (03:52): and none of the errors cause different DOM trees",
        "1cd13479e5609d79971c69051158a27f (03:53): in a... comment? how does that work?",
        "1e10d84b3917ae58049be95b0071cf7f (03:54): apparently allowed HTML subset rules don\u201a\u00c4\u00f4t apply to authors  9.9",
        "1e10d84b3917ae58049be95b0071cf7f (03:54): (fixed :)",
        "b1b5726c973cb9e906ce1b5bb246147f (03:54): 1cd13479e5609d79971c69051158a27f: unescaped ampersands do cause real problems",
        "1cd13479e5609d79971c69051158a27f (03:55): like?",
        "1cd13479e5609d79971c69051158a27f (03:56): &amp;s inside urls aren't escaped on most sites (or at least many sites)",
        "b1b5726c973cb9e906ce1b5bb246147f (03:56): I know of one popular forum package that turns &amp;curr into \u00ac\u00a7, which breaks urls containing &quot;foo=123123&amp;current=3234&quot;",
        "1cd13479e5609d79971c69051158a27f (03:56): heh",
        "b1b5726c973cb9e906ce1b5bb246147f (03:56): which is a pattern used by one of the larger photo hosting sites",
        "1cd13479e5609d79971c69051158a27f (03:58): well, it's still less severe than a garbled layout",
        "1cd13479e5609d79971c69051158a27f (03:58): well, sort of",
        "b1b5726c973cb9e906ce1b5bb246147f (03:59): it's caused thousands of broken links on one site alone",
        "1cd13479e5609d79971c69051158a27f (03:59): ok here is another exampe... bullcrap attributes",
        "b1b5726c973cb9e906ce1b5bb246147f (03:59): likewise &amp;lang can be turned into a left angle bracket",
        "b1b5726c973cb9e906ce1b5bb246147f (04:00): in comments though, it doesn't matter; only -- matters there",
        "1cd13479e5609d79971c69051158a27f (04:01): e.g. at work i can't really use a regular validator because that .net webforms stuff together with those f-ing retarded 3rd party controls generates pure junk markup",
        "1cd13479e5609d79971c69051158a27f (04:01): i can only check if it's at least sorta well formed",
        "1cd13479e5609d79971c69051158a27f (04:02): (my &quot;validator&quot; uses very sloppy rules)",
        "b1b5726c973cb9e906ce1b5bb246147f (04:02): the questions that really matter are &quot;Have I made a mistake?&quot; and &quot;Will browsers understand this?&quot;",
        "1cd13479e5609d79971c69051158a27f (04:03): yes, hence the sloppy validator it can only catch things which will most likely break things in horrible ways",
        "b1b5726c973cb9e906ce1b5bb246147f (04:03): an SGML validator such as the one at validator.w3.org is poor at answering either question",
        "b1b5726c973cb9e906ce1b5bb246147f (04:03): validator.nu is better",
        "1cd13479e5609d79971c69051158a27f (04:04): e.g. it will complain about &lt;a&gt;&lt;b&gt;&lt;/a&gt;&lt;/b&gt; or if a tag isn't closed... but it uses sloppy rules for &lt;br/&gt;, &lt;img/&gt; or &lt;p&gt;&lt;/p&gt; for example",
        "1cd13479e5609d79971c69051158a27f (04:05): well, in theory one could run automated tests... where the generated dom is sent back to the server",
        "1cd13479e5609d79971c69051158a27f (04:06): but that would be quite a lot of work",
        "b1b5726c973cb9e906ce1b5bb246147f (04:06): you could set that up with Selenium",
        "1cd13479e5609d79971c69051158a27f (04:07): sill... you'd need a bunch of machines for that crap",
        "1cd13479e5609d79971c69051158a27f (04:08): oh well... nn",
        "1cd13479e5609d79971c69051158a27f (04:08): &lt;;",
        "88d4d34a8064a4ff39fd5e144eea7762 (04:10): I haven't played NetHack in months, and only beat it like three times, but once in a while I still see something like &quot;nn&quot; and my first reaction is &quot;two nymphs standing next to each other, watch out!&quot;",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:28): Can anyone tell me if the spellcheck attribute i supported in any browser and how i can test it?",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:29): i supported = is supported",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:34): 232cfb8f6e3d3fc35eab68ea25c1777d: It should be supported in Chrome and FF for sure.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:35): other than the spec, i am not finding any documentation",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:35): 232cfb8f6e3d3fc35eab68ea25c1777d: The only way to check it is test it out. Or unless someone already did that and did a report on a blog that can be found via Google.",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:36): 232cfb8f6e3d3fc35eab68ea25c1777d: http://en.wikipedia.org/wiki/Comparison_of_layout_engines_%28HTML5%29#Global",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:36): 232cfb8f6e3d3fc35eab68ea25c1777d: Learn to Google.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:36): I do google",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:36): learn to be less arrogant",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:37): 232cfb8f6e3d3fc35eab68ea25c1777d: You said all you could find is the spec.",
        "faaeafa3e4dd09e52d2f5f413cb28f9e (04:38): 232cfb8f6e3d3fc35eab68ea25c1777d: As I hypothesised. FF supports it and Chrome supports it but not to the spec standards.",
        "232cfb8f6e3d3fc35eab68ea25c1777d (04:38): right."
    ],
    "person_ids": [
        "1e10d84b3917ae58049be95b0071cf7f",
        "1cd13479e5609d79971c69051158a27f",
        "b1b5726c973cb9e906ce1b5bb246147f",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "232cfb8f6e3d3fc35eab68ea25c1777d",
        "faaeafa3e4dd09e52d2f5f413cb28f9e"
    ]
}