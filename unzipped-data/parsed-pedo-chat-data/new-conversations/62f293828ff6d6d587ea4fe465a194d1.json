{
    "id": "62f293828ff6d6d587ea4fe465a194d1",
    "messages": [
        "e9fe2a8ed6a64844a5c024b6f688d024 (20:42): 1f8387eb43f131d7c309a90a4e36b5cb: btw, we don't have a fork of WebKit. All development for Chromium features happens on WebKit ToT. No pushing is involved :)",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:45): Ah, I am mistaken then.",
        "1e10d84b3917ae58049be95b0071cf7f (20:50): regarding the accessibility design principle, would you say that \u201a\u00c4\u00faDesign features to be accessible to users with disabilities\u201a\u00c4\u00f9 could be accurately summarised in \u201a\u00c4\u00faaccessibility by default\u201a\u00c4\u00f9?",
        "a924fb58d2c25874322f4e5126f608b9 (20:51): I would say so, but it's not entirely uncontroversial",
        "1e10d84b3917ae58049be95b0071cf7f (20:52): a924fb58d2c25874322f4e5126f608b9: nothing in a11y ever is :)",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:52): 1e10d84b3917ae58049be95b0071cf7f: Subtly different.",
        "a924fb58d2c25874322f4e5126f608b9 (20:52): There's the &quot;bolt-on accessibility is a sign of design failure&quot; and &quot;bolt-on accessibility is the way to great accessibility&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:53): The former could mean doing something that *can* be accessible if authors take some effort.  The latter would avoid doing that in favor of something that is, well, accessible by default.",
        "1e10d84b3917ae58049be95b0071cf7f (20:53): 1f8387eb43f131d7c309a90a4e36b5cb: oh? uhoh",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:54): Ideally we want to avoid requiring any author interaction whatsoever to acheive good accessibility.",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:54): That isn't quite possible, so instead we just minimize the amount of author interaction necessary.",
        "1e10d84b3917ae58049be95b0071cf7f (20:54): well I sense a trend towards things being more accessible by default, eg moving attribute-based meta info into main content. but I don\u201a\u00c4\u00f4t see anything so nebulous in the design principles :)",
        "1e10d84b3917ae58049be95b0071cf7f (20:54): aah",
        "a924fb58d2c25874322f4e5126f608b9 (20:55): Where possible, trick authors into writing accessible content without realizing it",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:55): Got it, a924fb58d2c25874322f4e5126f608b9.  ^_^",
        "1e10d84b3917ae58049be95b0071cf7f (20:55): :/",
        "1e10d84b3917ae58049be95b0071cf7f (20:56): actually\u201a\u00c4\u00b6 a924fb58d2c25874322f4e5126f608b9, can I quote you on that?",
        "1e10d84b3917ae58049be95b0071cf7f (20:56): ;)",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:56): Simple, widely-attested truth - the amount of accessible content decreases exponentially with the amount of effort required.",
        "1f8387eb43f131d7c309a90a4e36b5cb (20:56): (Well, maybe not exponentially - I don't have any numbers to attest that.  But super-linear at least.)",
        "1e10d84b3917ae58049be95b0071cf7f (20:57): no doubt",
        "a924fb58d2c25874322f4e5126f608b9 (20:57): Re: moving attribute-based meta info into main content, that's not primarily for accessibility, that's because hidden metadata has problems in itself",
        "a924fb58d2c25874322f4e5126f608b9 (20:58): But accessibility-targeted hidden metadata is has even more problems",
        "a924fb58d2c25874322f4e5126f608b9 (20:58): -is",
        "1e10d84b3917ae58049be95b0071cf7f (20:58): I was referring to previously a11y-focussed metadata like whatever-it-is on table",
        "a924fb58d2c25874322f4e5126f608b9 (20:58): Since it's not only hidden, but it's basically non-existent to users who don't need the extra accessibility",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:00): Also: people don't know how to write good @summary text.  And auto-generated @summary is useless - if it can be autogenerated by the producer, it can be auto-generated by the consumer equally well.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:00): And then the consumer *knows* that it's auto-generated and can treat it differently than custom-crafted text.",
        "1e10d84b3917ae58049be95b0071cf7f (21:01): yeah, I completely agree with the idea",
        "1e10d84b3917ae58049be95b0071cf7f (21:01): did the issue about that get resolved? I should check\u201a\u00c4\u00b6",
        "1e10d84b3917ae58049be95b0071cf7f (21:04): review huh",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:06): http://beta.html5test.com/ actually looks pretty good.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:07): Blech, it tests &lt;device&gt;, is that even specced yet?",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:07): It *exists* in a spec.",
        "1e10d84b3917ae58049be95b0071cf7f (21:07): I hope someone starts graphing score over time in one of these sometime",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:07): It's not &quot;specced&quot; though.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:24): http://damowmow.com/playground/htmlwg/chart.html &quot;Last updated NaN days ago.&quot;",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:29): var updateStr = ' Last updated ' + (age &lt; 1 ? 'today' : age.toFixed(0) + ' day' + (age.toFixed(0) == 1 ? '' : 's') + ' ago') + '.';",
        "a924fb58d2c25874322f4e5126f608b9 (21:31): Good-ole' NaN",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:37): The problem is the toFixed(0) call.  It appears to give &quot;NaN&quot; as the result for any number.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:38): At least, here in Chrome.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:39): Firefox does it right.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:39): So, looks like a bug on our end.",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:43): The display doesn't work for me either.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:44): Yeah, me neither.",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:44): What do you want to bet it's toFixed again?",
        "a924fb58d2c25874322f4e5126f608b9 (21:44): It errors in Opera on a lineTo call",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:45): Is this test completely broken, or is it just me?  http://samples.msdn.microsoft.com/ietestcenter/html5/selection/select.htm",
        "a924fb58d2c25874322f4e5126f608b9 (21:46): There's a NaN object in there",
        "a924fb58d2c25874322f4e5126f608b9 (21:46): Hum",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:47): Looking at the source code, it looks as though it selects the contents of the input, then checks whether the contents are *not* selected, or something similarly crazy.",
        "1e10d84b3917ae58049be95b0071cf7f (21:49): I\u201a\u00c4\u00f4m wondering what the big a11y changes in HTML5 are. I know alt text, longdesc, table summary, plus the current video/canvas and interactive element (progress, details etc) issues. anything else I\u201a\u00c4\u00f4m missing?",
        "a924fb58d2c25874322f4e5126f608b9 (21:49): It looks fine to me, where in the code is the problem?",
        "88d4d34a8064a4ff39fd5e144eea7762 (21:50): a924fb58d2c25874322f4e5126f608b9, it does input1.select(), then checkDefaultSelectionAttributes().  The latter checks things like null != selection.anchorNode.  Why should selection.anchorNode be null if you just selected the input?",
        "1f8387eb43f131d7c309a90a4e36b5cb (21:53): 1e10d84b3917ae58049be95b0071cf7f: Not an expert, but I think that's it.",
        "1e10d84b3917ae58049be95b0071cf7f (21:53): 1f8387eb43f131d7c309a90a4e36b5cb: thanks. more sanity-checking than anything :)",
        "a924fb58d2c25874322f4e5126f608b9 (21:55): 88d4d34a8064a4ff39fd5e144eea7762: Those don't apply to selection in input fields"
    ],
    "person_ids": [
        "e9fe2a8ed6a64844a5c024b6f688d024",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "1e10d84b3917ae58049be95b0071cf7f",
        "a924fb58d2c25874322f4e5126f608b9",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}