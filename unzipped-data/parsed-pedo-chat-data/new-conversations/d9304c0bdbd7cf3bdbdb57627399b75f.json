{
    "id": "d9304c0bdbd7cf3bdbdb57627399b75f",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (09:03): Hixie, which issue are you referring to, and who's arguing with them?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:04): appformats list",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:04): or maybe webapi",
        "f139aba52f9fa1394b4034a7954b2220 (09:07): haven't read appformats in a while, not too sure what's going on there",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:09): wow, another ala on version targeting",
        "f139aba52f9fa1394b4034a7954b2220 (09:09): I uploaded my disposistion of comments last night http://dev.w3.org/2006/webapi/selectors-api/disposition-of-comments",
        "5b67d980ae4c3c82251106e26913ce67 (09:09): Yeah :/",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:11): oh well, ala hasn't been interesting for a long time now",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:11): c6abb49e663030403f65db047e2cb714: I'm known to have http:/ b8810fee2f4a71f849f3f7409546d1d9.iki.fi/doctype/ but not test cases for parsing broken doctypes",
        "c6abb49e663030403f65db047e2cb714 (09:11): b8810fee2f4a71f849f3f7409546d1d9: ah, thanks",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:12): I think html5lib might have some",
        "f139aba52f9fa1394b4034a7954b2220 (09:12): hmm. I still never wrote anything about the version thingy this time round. maybe I should, if this ALA article says nothing but misinformation about it (again)",
        "c6abb49e663030403f65db047e2cb714 (09:13): edb259c0e0038f38bb200bc20c8cbf7e: will look",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:13): c6abb49e663030403f65db047e2cb714, http://html5lib.googlecode.com/svn/trunk/testdata/tokenizer/test3.test",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:13): http://html5lib.googlecode.com/svn/trunk/testdata/tokenizer/test2.test",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:14): http://html5lib.googlecode.com/svn/trunk/testdata/tokenizer/test4.test",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:14): http://html5lib.googlecode.com/svn/trunk/testdata/tokenizer/test1.test",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:14): unfortunately not grouped",
        "c6abb49e663030403f65db047e2cb714 (09:14): edb259c0e0038f38bb200bc20c8cbf7e: still very helpful",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:18): edb259c0e0038f38bb200bc20c8cbf7e: are the html5lib tests up to date with the recent change regarding '&gt;'?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:18): no :(",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:23): at least, not as far as I know",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:25): actually, yes, the tests are up to date thanks to ab7faae5d7b250ea8606486575f8f79c it seems",
        "5b67d980ae4c3c82251106e26913ce67 (09:36): edb259c0e0038f38bb200bc20c8cbf7e: no new stuff in the new ALA",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:37): boring",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:38): can someone tell me the result of http://tc.labs.opera.com/css/namespaces/ 002 and 003 in Safari?",
        "c6abb49e663030403f65db047e2cb714 (09:39): edb259c0e0038f38bb200bc20c8cbf7e: in a recent nightly both of them have a green background",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:40): thanks",
        "5b67d980ae4c3c82251106e26913ce67 (09:40): In 3.0.4 as well",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:40): does Safari pass 001?",
        "5b67d980ae4c3c82251106e26913ce67 (09:40): Yes",
        "f139aba52f9fa1394b4034a7954b2220 (10:00): I don't really understand Boris' last comment: &quot;but it wouldn't address the issue of what implementations are allowed to actually do to stop misbehaving NSResolvers&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:01): yeah, what's a misbehaving nsresolver?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:01): i mean, you could of course do all kinds of quirky things in script, but that's not restricted to NSResolver",
        "f139aba52f9fa1394b4034a7954b2220 (10:01): how does resolving all namespaces prior to traversing the DOM, thus letting the NSResolver do anything it likes beforehand, get in the way of actually finding matches afterwards?",
        "f139aba52f9fa1394b4034a7954b2220 (10:02): will respond",
        "5b67d980ae4c3c82251106e26913ce67 (10:08): &quot;Invited Expert will participate in the W3C Group in a decent way.&quot;",
        "5b67d980ae4c3c82251106e26913ce67 (10:12): A year by already",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:16): oh",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:16): thought the HTML WG started in March",
        "5b67d980ae4c3c82251106e26913ce67 (10:17): A year minus 1 month then :)",
        "5b67d980ae4c3c82251106e26913ce67 (10:17): Have to reinvite myself as an expert..",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:19): i wonder how many people won't do that",
        "5b67d980ae4c3c82251106e26913ce67 (10:21): I think you get bugged with a mail each week, until you say yes or no",
        "5b67d980ae4c3c82251106e26913ce67 (10:22): Pretty irritating, so saying &quot;yes, I'm still teh expert you need!11&quot; does the trick :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:23): 5b67d980ae4c3c82251106e26913ce67: do (public) Invited Experts have to renew their participation annually or what is this about?",
        "5b67d980ae4c3c82251106e26913ce67 (10:23): Yeah, I guess so",
        "5b67d980ae4c3c82251106e26913ce67 (10:23): And there's a new EULA or something",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:24): 5b67d980ae4c3c82251106e26913ce67: what's the diff in the &quot;EULA&quot;?",
        "5b67d980ae4c3c82251106e26913ce67 (10:24): http://www.w3.org/Consortium/Legal/2007/06-invited-expert.html",
        "5b67d980ae4c3c82251106e26913ce67 (10:24): No idea, I'm not an invited expert on EULAs :p",
        "5b67d980ae4c3c82251106e26913ce67 (10:25): Prolly just a clarification for the 2002 version",
        "5b67d980ae4c3c82251106e26913ce67 (10:25): With new elements and a new API",
        "5b67d980ae4c3c82251106e26913ce67 (10:26): Can't they just create a new group for this? Invited Wannabe Experts or something..",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:26): hmm. I don't like it that the W3C wants to use copyright to prevent spec branching",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:28): me neither",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:28): or for test suite branching for that matter",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:28): it's silly",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:28): the freedom to fork a Free Software project is an important deterrent against the main project going crazy",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:28): should be likewise for specs",
        "f139aba52f9fa1394b4034a7954b2220 (10:29): I'm glad that's the case for the WHATWG's HTML5 spec",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:29): maybe they realize they're going crazy in some twisted way",
        "f139aba52f9fa1394b4034a7954b2220 (10:51): Hixie, how do you suggest resolving the hostile-NSResovler issue, if Anne's suggestion is no good?",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:57): f139aba52f9fa1394b4034a7954b2220: I'm not Hixie, but it seems to me that the way to deal with NSResolver side effects in an interoperable way is to spec when exactly NSResolver is called into",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:58): no, we don't want to go there",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:59): that would not allow optimizations",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:59): hmm. how about requiring the script to push a mapping hash table to the browser ahead of time so that no NSResolver is needed?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:59): *[foo|x]:not([foo|x]) for instance",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:00): edb259c0e0038f38bb200bc20c8cbf7e: you could put the optimization into the spec itself",
        "f139aba52f9fa1394b4034a7954b2220 (11:00): that's difficult",
        "f139aba52f9fa1394b4034a7954b2220 (11:00): what if someone finds an even better optimisation later, and the spec would then prevent them from implementing it",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:01): it would constrain implementations and makes it harder to introduce new selectors",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:01): is there a reason why prefix resolution needs to be dynamic instead of a static mapping that is given the the browser at the time of the API call?",
        "f139aba52f9fa1394b4034a7954b2220 (11:02): b8810fee2f4a71f849f3f7409546d1d9, I think it was because the resolver was based upon the design of the XPathNSResolver",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): edb259c0e0038f38bb200bc20c8cbf7e: would implementation be constrained too much if implementation were required to",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): 1) parse the selector",
        "f139aba52f9fa1394b4034a7954b2220 (11:03): crap. meeting time :-(",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): 2) resolve each prefix from left to right exactly once",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): 3) run the selector",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): ?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:04): for the case I gave above you don't need to resolve the prefix in theory",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:04): edb259c0e0038f38bb200bc20c8cbf7e: ah right. but are such pathological edge cases worth optimizing",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:05): edb259c0e0038f38bb200bc20c8cbf7e: they don't serve a useful purpose for authors",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:05): people say yes",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:05): i'm not sure",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:05): (people being bjoern and hixie, so maybe...)",
        "ab7faae5d7b250ea8606486575f8f79c (11:05): :somenewfeature(foo|x) /* CSS4 browsers need to resolve this prefix, but CSS3 browsers can't know they're meant to */",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:05): that would not parse ab7faae5d7b250ea8606486575f8f79c",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:06): and throw a SYNTAX_ERR",
        "ab7faae5d7b250ea8606486575f8f79c (11:06): Ah",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:10): as far as I can tell, this problem is mostly the same problem that was pointed out when Dave Raggett's XForms Transitional was discussed.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:11): and really the way to make sure that the side effects are the same in all browsers is to clamp down what the calls to the code with the potential side effects are",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:11): no",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): no?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:12): the issues is not about all browsers doing the same",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:12): it doesn't have to be fully deterministic",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): oh. what is it then?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:12): the issue is more what to do in the case that the authors makes a NSResolver that halts the browser in some way",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:13): how has that issue been solved for treewalker node filters?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:13): i don't think it has been",
        "a924fb58d2c25874322f4e5126f608b9 (11:14): Well, how would halting the browser in a NSResolver be any different from halting the browser otherwise?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:14): Gecko running scripts in the UI thread is an issue",
        "f139aba52f9fa1394b4034a7954b2220 (11:14): for the case of a hanging NSResolver, I assumed that would be dealt with the same way all hanging scripts in the browser, by eventually timing out and halting execution completely",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:15): bad scripts would be less harmful if each browsing context ran its layout and scripts on a private thread",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:16): you don't need threading for that",
        "ab7faae5d7b250ea8606486575f8f79c (11:17): wonders what happens if you use &quot;yield&quot; in an NSResolver",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:17): edb259c0e0038f38bb200bc20c8cbf7e: without threading you need code to reach a timeout checkpoint often enough",
        "f139aba52f9fa1394b4034a7954b2220 (11:17): what does yield do?",
        "ab7faae5d7b250ea8606486575f8f79c (11:18): Oh, actually, I suppose it wouldn't do anything very interesting at all",
        "a924fb58d2c25874322f4e5126f608b9 (11:18): It returns, but preserves internal state for the next call",
        "ab7faae5d7b250ea8606486575f8f79c (11:18): f139aba52f9fa1394b4034a7954b2220: http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7#Generators_and_iterators",
        "ab7faae5d7b250ea8606486575f8f79c (11:21): I was thinking of something that preserves more than one stack frame, but that doesn't exist in JS so that's okay",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:21): b8810fee2f4a71f849f3f7409546d1d9, code gets icky, yeah",
        "ab7faae5d7b250ea8606486575f8f79c (11:25): Even if you run code in separate threads, you need a way to cleanly terminate a thread when the user's bored with it sitting at 100% CPU, which makes code a bit icky too",
        "ab7faae5d7b250ea8606486575f8f79c (11:26): Except actually that's maybe only a tiny bit and you wouldn't even notice it",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:32): ab7faae5d7b250ea8606486575f8f79c: well, yeah, you'd need a mechanism that makes sure that the killed thread isn't holding any monitors/semaphores/etc. that would be left in an inconsistent state",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:32): grmbl, my &quot;we can't&quot; argument is a real argument why we can't do &lt;/br&gt; magic, but the overall reason is of course that it's silly and would be quite difficult, performance hit, etc.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:33): ab7faae5d7b250ea8606486575f8f79c: which isn't exactly trivial unless there are only a couple well-defined places where locking can happen",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:34): (BTW, this is the reason I haven't implemented Hixie's suggestion to limit the time a validation transaction is allowed to take instead of limiting the number of bytes Validator.nu is willing to ingest)",
        "f139aba52f9fa1394b4034a7954b2220 (11:54): Hmm. Jonas' suggestion to mention the hanging nsresolver case in the security section is a good idea... Oh, wait. It already is!"
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "5b67d980ae4c3c82251106e26913ce67",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "c6abb49e663030403f65db047e2cb714",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}