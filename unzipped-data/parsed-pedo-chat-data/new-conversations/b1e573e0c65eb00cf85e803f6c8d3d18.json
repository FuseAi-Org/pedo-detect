{
    "id": "b1e573e0c65eb00cf85e803f6c8d3d18",
    "messages": [
        "d7304e43ecdabb4efa0636d51408ca80 (16:34): hey, I have an image on canvas, and i want to save it to the server, any way of doing that?",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:35): xhr.send(canvas.toDataURL())",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:35): or you could serialize an ImageData object somehow and transmit that",
        "d7304e43ecdabb4efa0636d51408ca80 (16:35): ok",
        "d7304e43ecdabb4efa0636d51408ca80 (16:35): ill take a look at that",
        "d7304e43ecdabb4efa0636d51408ca80 (16:36): thanks",
        "d7304e43ecdabb4efa0636d51408ca80 (16:36): errrm",
        "d7304e43ecdabb4efa0636d51408ca80 (16:36): yea thanks :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:45): &quot;Facebook uses Decentralized Extensibility to centralize the Web around Facebook.&quot; heh, brilliant quote",
        "b25b6b77a0087ff8385941e5545d32ea (16:56): I want that on my wall",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:05): edb259c0e0038f38bb200bc20c8cbf7e: it seems it's my most retweeted tweet so far",
        "f139aba52f9fa1394b4034a7954b2220 (17:06): ab7faae5d7b250ea8606486575f8f79c, yt?",
        "ab7faae5d7b250ea8606486575f8f79c (17:08): f139aba52f9fa1394b4034a7954b2220: Sort of",
        "f139aba52f9fa1394b4034a7954b2220 (17:09): ab7faae5d7b250ea8606486575f8f79c, just wanted to check with you about whether or not this test is correct, since you know more about canvas than I do. http://tc.labs.opera.com/html/canvas/getContext/2d/drawImage/003.htm",
        "f139aba52f9fa1394b4034a7954b2220 (17:09): I don't get why it's expecting an exception to be thrown for that one",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:11): b25b6b77a0087ff8385941e5545d32ea: speaking of walls: did the idea of asking Randall Munroe to draw the HTML5 tokenizer state transition graph go anywhere?",
        "ab7faae5d7b250ea8606486575f8f79c (17:11): f139aba52f9fa1394b4034a7954b2220: Looks like the image's 'complete' attribute would be false, which used to make drawImage throw an error but should now cause it to be silently ignored",
        "ab7faae5d7b250ea8606486575f8f79c (17:11): (so the test is currently incorrect)",
        "f139aba52f9fa1394b4034a7954b2220 (17:12): (new Image()).complete returns true in every browser though",
        "f139aba52f9fa1394b4034a7954b2220 (17:12): so I guess all browsers are wrong about that",
        "ab7faae5d7b250ea8606486575f8f79c (17:12): http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#dom-img-complete indicates it should be false, I believe",
        "ab7faae5d7b250ea8606486575f8f79c (17:13): (I don't know if the spec is correct)",
        "f139aba52f9fa1394b4034a7954b2220 (17:13): ok. So that's a bug in opera for image.complete and an invalid test.",
        "f139aba52f9fa1394b4034a7954b2220 (17:13): the spec doesn't agree with implementations, but it makes more sense than saying an image is complete, even though it has no src",
        "ab7faae5d7b250ea8606486575f8f79c (17:14): You could interpret it instead as saying the image downloading/decoding is complete",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): and an image with no src isn't still in the middle of the downloading/decoding process, so that process is not incomplete",
        "f139aba52f9fa1394b4034a7954b2220 (17:15): but it hasn't actually completed anything",
        "f139aba52f9fa1394b4034a7954b2220 (17:15): and that means setting a src attribute should make set it to false",
        "f139aba52f9fa1394b4034a7954b2220 (17:16): until it loaded the image again",
        "ab7faae5d7b250ea8606486575f8f79c (17:16): It's completed the &quot;complete = false; if (there is a src) { ... do a long slow download and decode ... }; complete = true&quot; process",
        "ab7faae5d7b250ea8606486575f8f79c (17:17): but then you have to deal with images that are complete but still don't have any image data",
        "ab7faae5d7b250ea8606486575f8f79c (17:17): I don't think it's particularly illogical either way, but the spec's current definition seems more helpful",
        "f139aba52f9fa1394b4034a7954b2220 (17:20): I guess that makes the spec ambiguous if it can be interpreted either way.",
        "f139aba52f9fa1394b4034a7954b2220 (17:20): I'll send mail about that later.",
        "ab7faae5d7b250ea8606486575f8f79c (17:27): Oh, I don't think the spec is ambiguous",
        "ab7faae5d7b250ea8606486575f8f79c (17:28): I just think the attribute name &quot;complete&quot; is ambiguous so it could defined in different ways that wouldn't seem particularly wrong",
        "ab7faae5d7b250ea8606486575f8f79c (17:28): s/could/could be/",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): and the current spec has chosen one definition which seems reasonably clear (though maybe people could argue it should make a different choice to better match current implementations)",
        "70bfd0ae2cfbf2da192bddd569cf6132 (17:37): mornin'",
        "b25b6b77a0087ff8385941e5545d32ea (17:45): b8810fee2f4a71f849f3f7409546d1d9: No"
    ],
    "person_ids": [
        "d7304e43ecdabb4efa0636d51408ca80",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "b25b6b77a0087ff8385941e5545d32ea",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "f139aba52f9fa1394b4034a7954b2220",
        "ab7faae5d7b250ea8606486575f8f79c",
        "70bfd0ae2cfbf2da192bddd569cf6132"
    ]
}