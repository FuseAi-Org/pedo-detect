{
    "id": "08e00ac36d47e959ef8efb3a2499626b",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (06:53): edb259c0e0038f38bb200bc20c8cbf7e: you kinda brought that one onto yourself :-P",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:54): though it's unclear what he's talking about",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:54): since as far as i can tell all that you've talked about is CORS",
        "edb259c0e0038f38bb200bc20c8cbf7e (06:59): oh there's more: http://lists.w3.org/Archives/Public/public-webfonts-wg/2010May/0013.html",
        "edb259c0e0038f38bb200bc20c8cbf7e (07:00): it seems he missed the part where I said &quot;my bad&quot; about bullshit and explained why...",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:15): oh crap, i forgot to handle pause-on-exit",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:18): Lachy, AryehGregor: wiki is still down",
        "c4c52ee28b65ac033f57ce478087cfd1 (07:25): 69b0d3dfe919a6b860a9fac82de52a7e, are you the author of the peer-to-peer-connection section?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:25): insofar as anyone has authored anything there, yeah",
        "edb259c0e0038f38bb200bc20c8cbf7e (07:27): how are embedded timed tracks handled by the way?",
        "edb259c0e0038f38bb200bc20c8cbf7e (07:27): I missed that",
        "c4c52ee28b65ac033f57ce478087cfd1 (07:28): 69b0d3dfe919a6b860a9fac82de52a7e, I assume sendText, sendBitmap, and sendFile are reliable (i.e, you won't be missing parts of the image, and the data will be in order.) Do you have any thoughts on the protocol that should be used here?",
        "040342c014ffc1c11592948bd92e3721 (07:37): edb259c0e0038f38bb200bc20c8cbf7e: through the same JavaScript API",
        "edb259c0e0038f38bb200bc20c8cbf7e (07:38): ah, just an API, okay",
        "edb259c0e0038f38bb200bc20c8cbf7e (07:38): didn't look at the API yet and since the wiki is down...",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:39): c4c52ee28b65ac033f57ce478087cfd1: my main thought is that i hope someone else will write it :-)",
        "c4c52ee28b65ac033f57ce478087cfd1 (07:50): 69b0d3dfe919a6b860a9fac82de52a7e, how set on this level of abstraction are you? For instance, would you be opposed to an api that combined Text, Bitmap, and File sending into a sendBuffer method, and a set of functions to convert between buffers and files, bitmaps, and text?",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:01): c4c52ee28b65ac033f57ce478087cfd1, it's very experimental",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:01): c4c52ee28b65ac033f57ce478087cfd1, much like the TCPConnection API you fixed ;)",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:01): c4c52ee28b65ac033f57ce478087cfd1, planning on doing it again? :)",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:02): edb259c0e0038f38bb200bc20c8cbf7e, heh, I would love to have a peer to peer connection in the browser",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:03): me too",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:03): I like the idea of pointing at outside specifications for the bulk of the protocol, but I'm a bit nervous because most external protocol specifications are HUGE",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:03): would be nice if we had something simple",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:04): IETF might cry though",
        "65325d50b2e25aca54bc871b89758c9c (08:05): the hard part of p2p is finding the relevant peer",
        "65325d50b2e25aca54bc871b89758c9c (08:05): the second hardest part is connecting to said peer even if you are both behind NAT or firewalls or other unpleasant artifacts of network topology",
        "65325d50b2e25aca54bc871b89758c9c (08:06): the protocol to talk to your peer once you have connected is the easy part",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:06): 65325d50b2e25aca54bc871b89758c9c, ideally we could just use something like STUN for the connection setup",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:06): 65325d50b2e25aca54bc871b89758c9c, as far as finding a relevant peer, I think we can just not specify that for now. Developers can easily write web applications to do that",
        "65325d50b2e25aca54bc871b89758c9c (08:07): c4c52ee28b65ac033f57ce478087cfd1: any time I hear an implementation proposal involving the word &quot;just&quot;, I assume the person making it has vastly underestimated the complexity",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:08): 65325d50b2e25aca54bc871b89758c9c, touch\u00c8",
        "e2633ed61085592add6e058692dfff2f (08:09): I think the same about 'easily'",
        "65325d50b2e25aca54bc871b89758c9c (08:09): (the people I most often hear &quot;can't you just...&quot; from are security people, though fortunately that happens less often these days)",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:09): 65325d50b2e25aca54bc871b89758c9c, Yes, STUN is big and complicated, and relatively hard to implement, but I really meant &quot;just&quot; as pointing out that we at least don't necessarily have to re-specify that part of a p2p protocol",
        "65325d50b2e25aca54bc871b89758c9c (08:10): another hard part of this problem: security",
        "65325d50b2e25aca54bc871b89758c9c (08:11): 1) how do you know the person connecting to your socket is your intended peer?",
        "65325d50b2e25aca54bc871b89758c9c (08:11): 2) how do you make the socket listening code robust against attackers throwing garbage at it? now they have a way to push untrusted data into the browser without you even browsing...",
        "65325d50b2e25aca54bc871b89758c9c (08:11): 3) how do you avoid this being used to build botnets?",
        "65325d50b2e25aca54bc871b89758c9c (08:12): not to say it's impossible, but I don't think the end result will be something simple",
        "65325d50b2e25aca54bc871b89758c9c (08:12): gotta run, later folks",
        "c4c52ee28b65ac033f57ce478087cfd1 (08:12): 65325d50b2e25aca54bc871b89758c9c, take care",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:21): I wonder if I am the only one who uses cite=&quot;&quot; as a replacement for &lt;a&gt;",
        "2d039717f89d95c099d4d07556c54371 (08:22): you are",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:25): I suspect Joe Clark and Karl Dubost might be guilty of it as well",
        "1f58faf0d058f303f30239a369808167 (08:28): not exactly I use cite to associate the content of the blockquote with a *uri*, not as a replacement for a. Sometimes in the text, you will find the same uri for linking to the page sometimes not. For example, with cite=&quot;urn:isbn:978-2-07-034951-7&quot;",
        "040342c014ffc1c11592948bd92e3721 (08:30): what does &lt;cite&gt; give you over &lt;a&gt;?",
        "1f58faf0d058f303f30239a369808167 (08:33): 040342c014ffc1c11592948bd92e3721: do you have a content model on how you use a with a blockquote which associates a and the blockquote (and sometimes to a reference which is not an hyperlink)?",
        "040342c014ffc1c11592948bd92e3721 (08:33): sure, for that use case",
        "1f58faf0d058f303f30239a369808167 (08:34): interested to see which solutions you would recommend.",
        "040342c014ffc1c11592948bd92e3721 (08:34): what I meant was: when edb259c0e0038f38bb200bc20c8cbf7e said he would use &lt;cite&gt; instead of &lt;a&gt;, I wondered why - for the simple case where you're linking to a Web page",
        "1f58faf0d058f303f30239a369808167 (08:35): the &quot;a&quot; is inside the &quot;blockquote&quot; or outside?",
        "040342c014ffc1c11592948bd92e3721 (08:35): either",
        "1f58faf0d058f303f30239a369808167 (08:36): how do we associate the content of the &quot;blockquote&quot; with the &quot;a&quot;",
        "040342c014ffc1c11592948bd92e3721 (08:36): (btw: I'm not suggesting anything - I'm trying to learn)",
        "1f58faf0d058f303f30239a369808167 (08:36): 040342c014ffc1c11592948bd92e3721: yes, understood.",
        "040342c014ffc1c11592948bd92e3721 (08:37): if I'm not after associating a blockquote with a hyperlink, then &lt;a&gt; would be sufficient, right?",
        "1f58faf0d058f303f30239a369808167 (08:37): I use cite because I never found a way which was not ambiguous on how associating text of blockquote with a specific uris (knowing in addition that the text can contain sometimes hyperlinks itself.)",
        "040342c014ffc1c11592948bd92e3721 (08:38): ah I see",
        "040342c014ffc1c11592948bd92e3721 (08:38): we're talking about the cite attribute and not the cite element?",
        "1f58faf0d058f303f30239a369808167 (08:39): yes cite attribute",
        "040342c014ffc1c11592948bd92e3721 (08:39): fair enough",
        "1f58faf0d058f303f30239a369808167 (08:39): cite element is another issue ;) but once at a time :)",
        "1f58faf0d058f303f30239a369808167 (08:42): Some use cases I had given when I made a review of xhtml2 in the past, http://lists.w3.org/Archives/Public/www-html/2004Feb/0070",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:43): 040342c014ffc1c11592948bd92e3721, cite=&quot;&quot; over &lt;a&gt;, not &lt;cite&gt;",
        "040342c014ffc1c11592948bd92e3721 (08:43): yup, got it :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:43): example: http://annevankesteren.nl/2010/05/h264-licensing",
        "040342c014ffc1c11592948bd92e3721 (08:45): damned, I can't click through on the quotes :(",
        "040342c014ffc1c11592948bd92e3721 (08:45): maybe safari doesn't support the cite attribute?",
        "040342c014ffc1c11592948bd92e3721 (08:46): ah, it's underneath, sorry - that is really irritating",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:47): ooh, it's not meant to be good :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:47): and that's implemented via JavaScript",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:47): UAs don't really seem to expose it at all :/",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:48): at some point I want to implement it via XBL2",
        "040342c014ffc1c11592948bd92e3721 (08:48): oh - no wonder I don't find it useful ;)",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:48): create a little popup when you hover the quote",
        "040342c014ffc1c11592948bd92e3721 (08:48): anyway - I'm now lost reading the articles - thanks!",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:48): oops, maybe shouldn't have used a post on video as example :)",
        "040342c014ffc1c11592948bd92e3721 (08:49): lol",
        "040342c014ffc1c11592948bd92e3721 (08:50): I read the earlier blog post of MS, but wasn't yet aware of this new one",
        "040342c014ffc1c11592948bd92e3721 (08:50): too much client work in the last week...",
        "042dd99eb0ff8653814e445ca0093427 (08:58): edb259c0e0038f38bb200bc20c8cbf7e: I think what Dean is saying is that third-party apps that use Windows codecs are &quot;covered&quot; by Microsoft's license ... but they still have to abide by the limits of that license",
        "042dd99eb0ff8653814e445ca0093427 (08:58): or something like that",
        "edb259c0e0038f38bb200bc20c8cbf7e (08:59): yeah, I figured",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:00): he just didn't say anything about developers and paying",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:00): which was the key point",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:09): oh, hey dddbb966009bf3f66ba0270cc9762806 joined the WebFonts WG",
        "dddbb966009bf3f66ba0270cc9762806 (09:09): Yus.",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:09): gonna help me out?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:09): just pointed out you guys don't do CORS: http://lists.w3.org/Archives/Public/www-font/2010AprJun/0015.html",
        "dddbb966009bf3f66ba0270cc9762806 (09:09): I had meant to join it when it formed, but it got lost in the move and affiliations change.",
        "dddbb966009bf3f66ba0270cc9762806 (09:11): We don't?  Interesting.  I'll see if I can talk to the guys that did fonts this week.",
        "66b0d785bfa15d051888c24dabba7342 (09:19): 69b0d3dfe919a6b860a9fac82de52a7e: here now"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "c4c52ee28b65ac033f57ce478087cfd1",
        "040342c014ffc1c11592948bd92e3721",
        "65325d50b2e25aca54bc871b89758c9c",
        "e2633ed61085592add6e058692dfff2f",
        "2d039717f89d95c099d4d07556c54371",
        "1f58faf0d058f303f30239a369808167",
        "042dd99eb0ff8653814e445ca0093427",
        "dddbb966009bf3f66ba0270cc9762806",
        "66b0d785bfa15d051888c24dabba7342"
    ]
}