{
    "id": "ee7e11ded2c0b31d8027016af481190c",
    "messages": [
        "8269fc4aca67c69ef320ddd69881d4cc (16:46): Hixie: the EcmaScript committee is currently discussing the possible addition of a new script-related tag to handle backward-compatible breaks in the language.",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): Hixie: something like &lt;script-if type=&quot;application/ecmascript;version=6&quot;&gt;",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): // new.js inline-exanded here",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): &lt;/script-if else&gt;",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): &lt;script ...&gt;",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): &lt;/script&gt;",
        "8269fc4aca67c69ef320ddd69881d4cc (16:48): &lt;/script-if end&gt;",
        "8269fc4aca67c69ef320ddd69881d4cc (16:49): I believe it needs discussing with them.",
        "ab7faae5d7b250ea8606486575f8f79c (16:53): Is that a serious proposal?",
        "a924fb58d2c25874322f4e5126f608b9 (16:54): I thought everyone was trying to move _away_ from inline script",
        "40f8fba47f4f263981acedf335d3f269 (16:55): looks ugly",
        "7f9405da4034bf43083e64b57302a8e6 (16:55): also, they already have stuff like use strict",
        "a924fb58d2c25874322f4e5126f608b9 (16:56): Could simply add another &quot;use if-less-than 6&quot; to old.js",
        "ab7faae5d7b250ea8606486575f8f79c (16:57): If people have to write both new.js and old.js, why don't they just write old.js and always use that and be done with it?",
        "a924fb58d2c25874322f4e5126f608b9 (16:59): Maybe new.js is faster",
        "ab7faae5d7b250ea8606486575f8f79c (17:01): wonders if the plan is to break compatibility in order to replicate the massive success of Python 3.0",
        "8269fc4aca67c69ef320ddd69881d4cc (17:02): https://mail.mozilla.org/pipermail/es-discuss/2011-May/014810.html",
        "ab7faae5d7b250ea8606486575f8f79c (17:04): I think I kind of prefer syntax that is possible to represent with the DOM",
        "a924fb58d2c25874322f4e5126f608b9 (17:05): &quot;We discussed generating script tags via document.write conditioned by object detection and the like&quot;",
        "a924fb58d2c25874322f4e5126f608b9 (17:05): In the follow-up email",
        "ab7faae5d7b250ea8606486575f8f79c (17:06): Oh, that'd surely be a much better solution",
        "7f9405da4034bf43083e64b57302a8e6 (17:06): this is weird shit",
        "8b3687499080633e1898fa1dd209ef81 (17:07): Presumably, you would need &lt;script-if type=&quot;application/ecmascript;version=6&quot;&gt;&lt;!-- code --&gt;...",
        "8b3687499080633e1898fa1dd209ef81 (17:07): That's what I missed most from the nineties",
        "a924fb58d2c25874322f4e5126f608b9 (17:07): Are we going to need CDATA guards as well then?",
        "ab7faae5d7b250ea8606486575f8f79c (17:08): I suggest putting it all inside a &lt;style&gt; element, because that'll hide the text content from obsolete browsers and it'll indicate that you're selecting different styles of scripting language",
        "ab7faae5d7b250ea8606486575f8f79c (17:09): a924fb58d2c25874322f4e5126f608b9: No, we're just going to drop XHTML support entirely, either via document.write or non-DOM structures",
        "8269fc4aca67c69ef320ddd69881d4cc (17:09): Mostly, ES.next includes new ways to monkey-patch with &quot;proxies&quot;, and new keywords like &quot;let&quot; and &quot;const&quot;",
        "8269fc4aca67c69ef320ddd69881d4cc (17:09): http://wiki.ecmascript.org/doku.php?id=harmony:proposals",
        "a924fb58d2c25874322f4e5126f608b9 (17:10): ab7faae5d7b250ea8606486575f8f79c: Nothing that can't be solved with sufficient nesting",
        "a924fb58d2c25874322f4e5126f608b9 (17:11): &lt;script-cond&gt;&lt;script-if v6&gt;...&lt;/script-if&gt;&lt;script-elif v5&gt;...&lt;/script-elif&gt;&lt;script-else&gt;...&lt;/script-else&gt;&lt;/script-cond&gt;",
        "a924fb58d2c25874322f4e5126f608b9 (17:11): (Quiz: What happens if script-elif is before script-if in DOM order)",
        "8b3687499080633e1898fa1dd209ef81 (17:12): a924fb58d2c25874322f4e5126f608b9, easy, implementation-defined",
        "8b3687499080633e1898fa1dd209ef81 (17:13): I would suggest &lt;!--[if es 6]&gt;&lt;script&gt;&lt;/script&gt;&lt;![endif]--&gt;",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:13): sees &lt;http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null&gt;, yay for back-compat?",
        "a924fb58d2c25874322f4e5126f608b9 (17:14): &lt;IE&gt; Vindication at last!",
        "8b3687499080633e1898fa1dd209ef81 (17:14): 88d4d34a8064a4ff39fd5e144eea7762, no, this is like XHTML2, we don't need back-compat anymore",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:15): 8b3687499080633e1898fa1dd209ef81, ah, good to know.",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:16): The person who wrote that page seems to be Brendan Eich, though.  Wasn't XHTML2 the product of non-browser-affiliated people?",
        "a924fb58d2c25874322f4e5126f608b9 (17:17): I was hoping the non-compat efforts could be redirected to Dash",
        "a924fb58d2c25874322f4e5126f608b9 (17:17): 88d4d34a8064a4ff39fd5e144eea7762: Brandan isn't necessarily what you would consider a &quot;browser guy&quot;",
        "8b3687499080633e1898fa1dd209ef81 (17:17): Well, that's the bigger problem, this might actually get implemented",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:18): With a mode switch?",
        "88d4d34a8064a4ff39fd5e144eea7762 (17:18): Sigh.",
        "8269fc4aca67c69ef320ddd69881d4cc (17:18): Brendan Eich already did implement some of ES.next in Firefox"
    ],
    "person_ids": [
        "8269fc4aca67c69ef320ddd69881d4cc",
        "ab7faae5d7b250ea8606486575f8f79c",
        "a924fb58d2c25874322f4e5126f608b9",
        "40f8fba47f4f263981acedf335d3f269",
        "7f9405da4034bf43083e64b57302a8e6",
        "8b3687499080633e1898fa1dd209ef81",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}