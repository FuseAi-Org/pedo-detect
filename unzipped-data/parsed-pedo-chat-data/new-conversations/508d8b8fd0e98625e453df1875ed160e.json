{
    "id": "508d8b8fd0e98625e453df1875ed160e",
    "messages": [
        "3b14b636129945831fcfcc7294686653 (17:30): using the canvas API, is there any way to make an arbitrary shape via a bunch of transformations, but then have the stroke transform/scale be relative to pixels?",
        "3b14b636129945831fcfcc7294686653 (17:31): e.g. if I want to stroke an oval with a 5px wide outline, it'd be nice if the line could have uniform thickness",
        "3b14b636129945831fcfcc7294686653 (17:32): instead of the stroke getting distorted along with the shape",
        "3034eba67524e531235cc43f04d4f88c (17:33): not afaik. you'd have to scale the line width yourself to compensate. 1/transformScale, I guess",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): You could set up the transform, draw the shape, apply the inverse transform, then stroke it, I think",
        "06cb330920ae58e1614c9145d983b3d6 (17:34): 3034eba67524e531235cc43f04d4f88c: doesn't help if you have a non-1:1 scale on the object you're drawing and then that scale applies to the stroke as well, i think",
        "3034eba67524e531235cc43f04d4f88c (17:34): 06cb330920ae58e1614c9145d983b3d6: yep",
        "06cb330920ae58e1614c9145d983b3d6 (17:43): just resetting the transform to identity seems to work: http:/ 06cb330920ae58e1614c9145d983b3d6.org/~glenn/stroke.html",
        "06cb330920ae58e1614c9145d983b3d6 (17:43): simpler version of what philip said, i think",
        "3b14b636129945831fcfcc7294686653 (17:49): ab7faae5d7b250ea8606486575f8f79c: I tried doing setTransform(1, 0, 0, 0, 1, 0) and that seemed to make the whole thing stop working",
        "3b14b636129945831fcfcc7294686653 (17:49): 06cb330920ae58e1614c9145d983b3d6: oh, hmm",
        "3b14b636129945831fcfcc7294686653 (17:49): maybe I just put a typo in someplace or something",
        "06cb330920ae58e1614c9145d983b3d6 (17:49): 1,0,0,1,0,0, not 1,0,0,0,1,0",
        "06cb330920ae58e1614c9145d983b3d6 (17:50): the argument order for that function is odd",
        "06cb330920ae58e1614c9145d983b3d6 (17:50): (column-major, rather unintuitive)",
        "3b14b636129945831fcfcc7294686653 (17:51): oh, I see",
        "3b14b636129945831fcfcc7294686653 (17:51): that is weird",
        "06cb330920ae58e1614c9145d983b3d6 (17:51): i take it stroke is really just transforming the line width by the transform to figure out the resulting width and then doing the actual operation in screen coordinates",
        "3b14b636129945831fcfcc7294686653 (17:51): I'm somewhat annoyed that these don't let people use a 3x3 matrix, but that ship has sailed I guess :)",
        "06cb330920ae58e1614c9145d983b3d6 (17:52): it wouldn't have, if it was row-major :)",
        "3b14b636129945831fcfcc7294686653 (17:53): heh",
        "06cb330920ae58e1614c9145d983b3d6 (17:53): two ships that sailed together",
        "3b14b636129945831fcfcc7294686653 (17:53): maybe they could just order it M00, M10, M20, M21, M11, M01, M02, M12, M22, for maximal confusion",
        "3b14b636129945831fcfcc7294686653 (17:54): &quot;snake order&quot;",
        "3b14b636129945831fcfcc7294686653 (17:55): great, that seems to work",
        "3b14b636129945831fcfcc7294686653 (17:55): 06cb330920ae58e1614c9145d983b3d6: thanks",
        "3b14b636129945831fcfcc7294686653 (17:55): ab7faae5d7b250ea8606486575f8f79c, 3034eba67524e531235cc43f04d4f88c: thanks to you too :)",
        "3b14b636129945831fcfcc7294686653 (17:57): so now I have something like http://pastie.textmate.org/private/wgeqzabrzkghnsphwydsa",
        "ab7faae5d7b250ea8606486575f8f79c (17:58): 06cb330920ae58e1614c9145d983b3d6: It's not just multiplying the line width - you can have non-uniform scales or skews that affect the stroke",
        "06cb330920ae58e1614c9145d983b3d6 (17:58): i don't even know what language this is, heh",
        "3b14b636129945831fcfcc7294686653 (17:58): 06cb330920ae58e1614c9145d983b3d6: coffeescript",
        "3b14b636129945831fcfcc7294686653 (17:58): :)",
        "06cb330920ae58e1614c9145d983b3d6 (17:58): &quot;obscure fadscript&quot; :)",
        "3b14b636129945831fcfcc7294686653 (17:59): 06cb330920ae58e1614c9145d983b3d6: output, http://pastie.textmate.org/private/g09sud4d8ewurqptyialuq",
        "3b14b636129945831fcfcc7294686653 (17:59): 06cb330920ae58e1614c9145d983b3d6: less and less obscure all the time, and in my (few weeks) experience, a joy to work with",
        "3b14b636129945831fcfcc7294686653 (18:10): that the path shape is set according to the original transformation but the stroke distorted by the stroke-time transformation allows some interesting stuff",
        "3b14b636129945831fcfcc7294686653 (18:11): for example, in conjunction with round joins and line ends, can be used to have the stroke shape be an arbitrary ellipse",
        "3b14b636129945831fcfcc7294686653 (18:11): &quot;caligraphic&quot; style",
        "3b14b636129945831fcfcc7294686653 (18:12): er, *calligraphic",
        "3b14b636129945831fcfcc7294686653 (18:15): is all the &quot;focus management' stuff in the canvas 2d context spec implemented widely?",
        "8b3687499080633e1898fa1dd209ef81 (18:15): Not at all",
        "3b14b636129945831fcfcc7294686653 (18:15): one of those &quot;someday&quot; things?",
        "8b3687499080633e1898fa1dd209ef81 (18:16): I hear there's an HTMLWG decision upcoming about it",
        "6b57ea7f33069df5914663ba9e59afdf (18:19): focus management in canvas?",
        "6b57ea7f33069df5914663ba9e59afdf (18:19): or a11y?",
        "3b14b636129945831fcfcc7294686653 (18:19): 6b57ea7f33069df5914663ba9e59afdf: http://dev.w3.org/html5/2dcontext/#focus-management",
        "3b14b636129945831fcfcc7294686653 (18:19): oh",
        "6b57ea7f33069df5914663ba9e59afdf (18:19): oh, huh. yet more to review",
        "3b14b636129945831fcfcc7294686653 (18:20): trying to draw focus rings in canvas seems like somewhat silly idea to me",
        "06cb330920ae58e1614c9145d983b3d6 (18:21): yeah, it's not like native focus styles apply to curves, and many of them aren't simply dotted lines around objects like links",
        "06cb330920ae58e1614c9145d983b3d6 (18:22): giving UA some control over it isn't a bad idea, but i doubt there's much it could actually do other than pick a stroke style",
        "6b57ea7f33069df5914663ba9e59afdf (18:23): drawFocusRing looks pretty useless to me",
        "06cb330920ae58e1614c9145d983b3d6 (18:23): heard something about that being simplified, but i havn't been following canvas stuff",
        "3b14b636129945831fcfcc7294686653 (18:24): Hixie: by the way, CIECAM02 implementation https://github.com/jrus/chromatist"
    ],
    "person_ids": [
        "3b14b636129945831fcfcc7294686653",
        "3034eba67524e531235cc43f04d4f88c",
        "ab7faae5d7b250ea8606486575f8f79c",
        "06cb330920ae58e1614c9145d983b3d6",
        "8b3687499080633e1898fa1dd209ef81",
        "6b57ea7f33069df5914663ba9e59afdf"
    ]
}