{
    "id": "4ec6bee9433547f9dd0683dc843b3b8b",
    "messages": [
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:27): OTW, I'd be in favour of e4x too, but pretty much including an entire XML tokenizer into the JS parser is somewhat ugly",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:29): So yeah, the question is whether we can distinguish between arrays and objects...",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:31): edb259c0e0038f38bb200bc20c8cbf7e: at what level?",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:32): IDL",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:32): method(string, object, object, array)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:32): but you want these overloaded versions:",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:32): method(string, object, array)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:32): method(string, array)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:33): furthermore, array can also be DOMString",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:33): and ideally also a Node",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:34): object is always a JavaScript object",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:34): { ... }",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:34): I guess you can technically do it, but maybe not without upsetting the JavaScript gods",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:34): At a JS level, you could just check whether Array.prototype is in the prototype chain, or whether it was created through the array constructor (through [[HasInstance]] or whatever)\u201a\u00c4\u00b6",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:35): I guess you can do the same for checking about it being a Node?",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:35): versus a {...} object?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:35): But doing anything apart from treating arrays as if they were objects (which they are, they just have a different [[DefineOwnProperty]] which magically changes length) is evil.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:35): edb259c0e0038f38bb200bc20c8cbf7e: Yeah.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:35): Special-casing host objects is a lot less evil, too.",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:35): less evil?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:37): Special-casing arrays v. other objects is evil.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:38): {0: &quot;a&quot;, 1: &quot;b&quot;, 2: &quot;c&quot;, length: 3} and [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] should be identical everywhere.",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:40): I guess it depends on how you view it",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:40): As an ES guy. :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:40): I don't care about your silly host objects. :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:40): I mean you can treat them identical and still make this work",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:41): you just say it's method(string, optional object, optional object, optional object) and deal with the specifics in the definition",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:42): ewwwww.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:44): Just\u201a\u00c4\u00b6 just\u201a\u00c4\u00b6 forking based upon prototype chain or [[Class]] or [[HasInstance]] is evil, and only to be done when it's absolutely impossible to use generic objects.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:44): (And that should be basically never, except when a host object deals with another host object)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:47): can just look at the keys of the object my man :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:47): wants his convenient API damnit",
        "69b0d3dfe919a6b860a9fac82de52a7e (00:47): edb259c0e0038f38bb200bc20c8cbf7e: for the overloading, i think to do it you'd have to have a whole bunch of overloads, but you could do it",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:48): the magic properties could also work, but they are somewhat less appealing",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:50): edb259c0e0038f38bb200bc20c8cbf7e: And stop pretending I actually write ES, I just write testcases! :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (00:51): Hey you go around as the &quot;ES guy&quot; :p",
        "a11aabeeceeae6b8cb5d12ea06b56554 (00:52): No, that's farre :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:03): asks public-script-coord",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:18): a11aabeeceeae6b8cb5d12ea06b56554, well boo you",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:18): Mark Miller says we can!",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:21): edb259c0e0038f38bb200bc20c8cbf7e: i said we could already :-P",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:21): edb259c0e0038f38bb200bc20c8cbf7e: also, the last argument isn't just Node or string, it's Node or string followed by &quot;...&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:23): what does that mean?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:24): as in varargs",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:25): oh why is that useful?",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:31): so you don't have to put the square brackets in",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): Element.create('a', {href:'home.html'}, 'Go ', Element.create('em', 'Home!'));",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): ...e.g.",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:32): interesting",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:32): it's pretty easy to do it in webidl i think",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): you just need to a lot of them",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): to cover all the various combinations",
        "69b0d3dfe919a6b860a9fac82de52a7e (01:33): probably easier to just do it in prose",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:33): I'll think about it some more",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:33): there's no particular rush and http://www.reddit.com/r/IAmA/comments/kitcy/i_am_a_7_year_old_ama/ is really great",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:34): also, I need sleep",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:34): &quot;What's the best advice you can give to my 2.5 year old son?&quot; &quot;A smacking and a beating.&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (01:35): the one under &quot;What's your favorite joke?&quot; too",
        "a11aabeeceeae6b8cb5d12ea06b56554 (01:43): edb259c0e0038f38bb200bc20c8cbf7e: That is brilliant.",
        "ab7faae5d7b250ea8606486575f8f79c (01:54): About type-based overloading: Can't you just use a different method name in each case? That seems more natural for a dynamically-typed language"
    ],
    "person_ids": [
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}