{
    "id": "6290188732b108c027d23d0a643190c5",
    "messages": [
        "448bbe0e79b443ecd1560569147148e8 (23:53): where does azureus decide what seed/peer to connect next to ?",
        "8fa2d0067f92fbec7c550e8068f91809 (23:54): may i ask what you're coding?",
        "448bbe0e79b443ecd1560569147148e8 (23:55): i want to put some ip priorisations in",
        "8fa2d0067f92fbec7c550e8068f91809 (23:55): that's already possible with the lan peer finder",
        "8fa2d0067f92fbec7c550e8068f91809 (23:56): you can specify IP ranges manually and those peers will fall under the lan speed category",
        "8fa2d0067f92fbec7c550e8068f91809 (23:56): although... they're force-unchoked... which might be a problem",
        "448bbe0e79b443ecd1560569147148e8 (23:57): yeah, well i want to make it a bit more complex actually",
        "448bbe0e79b443ecd1560569147148e8 (23:58): theres a piecepicker class, but i can't find a connection picker",
        "8fa2d0067f92fbec7c550e8068f91809 (23:58): well, peer i think peer selection happens in the PEPeerControlImpl",
        "8fa2d0067f92fbec7c550e8068f91809 (23:58): package org.gudy.azureus2.core3.peer.impl.control",
        "448bbe0e79b443ecd1560569147148e8 (00:09): azureus is way too big",
        "8fa2d0067f92fbec7c550e8068f91809 (00:10): not really... i can find nearly every chunk of code in a matter of minutes",
        "448bbe0e79b443ecd1560569147148e8 (00:10): lol &quot;in a matter of minutes&quot;",
        "8fa2d0067f92fbec7c550e8068f91809 (00:11): even less if i'm familiar with the code",
        "448bbe0e79b443ecd1560569147148e8 (00:12): well, i am reading through the file you mentionned and i just can't find the actuall connect",
        "8fa2d0067f92fbec7c550e8068f91809 (00:13): doConnectionChecks() -&gt; final PeerItem item = peer_database.getNextOptimisticConnectPeer();",
        "448bbe0e79b443ecd1560569147148e8 (00:14): *_*",
        "448bbe0e79b443ecd1560569147148e8 (00:15): damn, is that stuff obfuscated and scattered around thousand different places on purpose ?",
        "448bbe0e79b443ecd1560569147148e8 (00:15): and why would you call that thing every second ?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:16): no, it's scattered to avoid god-classes... the peercontrol is already big enough",
        "448bbe0e79b443ecd1560569147148e8 (00:16): god classes are good",
        "8fa2d0067f92fbec7c550e8068f91809 (00:16): god classes are bad programming style",
        "448bbe0e79b443ecd1560569147148e8 (00:16): but what you are doing is just too much",
        "8fa2d0067f92fbec7c550e8068f91809 (00:17): not really... have a look at PEPeerControl... it's already waaay overloaded",
        "8fa2d0067f92fbec7c550e8068f91809 (00:17): some time ago the piecepicker was included in that class too",
        "448bbe0e79b443ecd1560569147148e8 (00:18): i mean a program can contain like maybe 8 or something classes that actually do stuff and maintain program flow, and all others should be useful abstractions for data sets or interface functions",
        "448bbe0e79b443ecd1560569147148e8 (00:18): but you use classes like functions",
        "448bbe0e79b443ecd1560569147148e8 (00:19): its not like any of this code would be reusable anyway",
        "8fa2d0067f92fbec7c550e8068f91809 (00:19): not really... the classes contain the functions related to the data they maintain",
        "8fa2d0067f92fbec7c550e8068f91809 (00:19): e.g. the PEPeerImpl class maintains methods related to individual peer objects",
        "8fa2d0067f92fbec7c550e8068f91809 (00:19): err PEPeerTransportProtocol i meant",
        "8fa2d0067f92fbec7c550e8068f91809 (00:20): PEPeerControlImpl maintains the control for a specific set of peers (related to a single torrent)",
        "8fa2d0067f92fbec7c550e8068f91809 (00:20): TOTorrent contains all methods related to a decoded torrent file (i.e. reading and writing properties, serializing it and so on)",
        "8fa2d0067f92fbec7c550e8068f91809 (00:21): stuffing azureus into 8 classes would yield about 1000+ methods per class...",
        "8fa2d0067f92fbec7c550e8068f91809 (00:21): which would be a PITA to maintain",
        "448bbe0e79b443ecd1560569147148e8 (00:24): one class for peers/seeds, one class for file handling (maybe two splitting .torrent file handling into one and download state into another), one class for coordinating between avaiable peers seeds (connecting) and and what you need to get (downloading and uploading)",
        "8fa2d0067f92fbec7c550e8068f91809 (00:25): rofl... you have no idea...",
        "8fa2d0067f92fbec7c550e8068f91809 (00:25): Pieces, Tracker-Client-Communication, Peer-Peer network connections, individual message classes and so on... all that stuff has to be coded",
        "448bbe0e79b443ecd1560569147148e8 (00:25): message classes ?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:26): the protocol supports arbitrary messages",
        "8fa2d0067f92fbec7c550e8068f91809 (00:26): some plugins implement additional messages which have to be registered and handshaked",
        "448bbe0e79b443ecd1560569147148e8 (00:26): sounds hackish",
        "8fa2d0067f92fbec7c550e8068f91809 (00:26): then the DHT, the tons of UI classes (many classes extend TableColumn and stuff like that)",
        "8fa2d0067f92fbec7c550e8068f91809 (00:27): nah, a new message implements a message interface and can be registered against the core",
        "8fa2d0067f92fbec7c550e8068f91809 (00:27): which negotiates the supported messages with another peer",
        "8fa2d0067f92fbec7c550e8068f91809 (00:28): then there is a file cache which serves as an abstraction layer between java file classes and downloading files",
        "8fa2d0067f92fbec7c550e8068f91809 (00:29): even logging is a feature for itself since you can implement and register logger channels for different features",
        "8fa2d0067f92fbec7c550e8068f91809 (00:29): and you can't do that with god classes",
        "448bbe0e79b443ecd1560569147148e8 (00:29): oh, the logger",
        "448bbe0e79b443ecd1560569147148e8 (00:29): you didn't have that some time ago",
        "448bbe0e79b443ecd1560569147148e8 (00:29): looks like hell how its implemented with all those fluffy buttons",
        "8fa2d0067f92fbec7c550e8068f91809 (00:30): god classes are only &quot;good&quot; if you don't have a IDE which helps you with jumping through the declarations and references",
        "448bbe0e79b443ecd1560569147148e8 (00:30): *checkboxes",
        "8fa2d0067f92fbec7c550e8068f91809 (00:30): GUI design is a different topic ^^",
        "448bbe0e79b443ecd1560569147148e8 (00:30): still, even if you have an ide its bad",
        "448bbe0e79b443ecd1560569147148e8 (00:31): logging shouldn't be hard, just make some data set that defines what is beeing outputted (and where), declare some logging classes, priorities, and a log(&quot;msg&quot;, priority) function somewhere",
        "a718ec94b05d5a1ffccef799d6754f01 (00:32): hey people. I'd like to write a bit torrent tracker, supporting new features, udp, etc. Where do I find the most updated spesifications?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:32): sure, but that already results in 3-4 classes",
        "448bbe0e79b443ecd1560569147148e8 (00:32): wtf",
        "448bbe0e79b443ecd1560569147148e8 (00:32): thats max one !",
        "a74c07e77864c0915aebb3126b39f2c9 (00:32): Salz: 45100 is for magnet link handling i believe",
        "448bbe0e79b443ecd1560569147148e8 (00:32): seriously",
        "8fa2d0067f92fbec7c550e8068f91809 (00:32): XiXaQ, well.. the bests specs on wiki.theory.org",
        "448bbe0e79b443ecd1560569147148e8 (00:32): how can you put that into multiple classes ??!",
        "8fa2d0067f92fbec7c550e8068f91809 (00:33): ProN00b... one logger doing the stuff, one interface for logger-channels, one interface for listeners and serveral classes implementing different logger channels for the core",
        "8fa2d0067f92fbec7c550e8068f91809 (00:34): just an example (that's not the way azureus does it)",
        "448bbe0e79b443ecd1560569147148e8 (00:34): classes implementing different logger channels ? *_*",
        "448bbe0e79b443ecd1560569147148e8 (00:34): and interfaces to it aren't changes to the main interface class ?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:35): main interface class?",
        "a74c07e77864c0915aebb3126b39f2c9 (00:35): you cant fit all the stuff azureus does into just eight classes ;)",
        "8fa2d0067f92fbec7c550e8068f91809 (00:36): you can... but that would be like procedural coding... where methods in the god class manipulate fields in method-free classes...",
        "8fa2d0067f92fbec7c550e8068f91809 (00:37): like coding with C structs ^^",
        "448bbe0e79b443ecd1560569147148e8 (00:39): no, but the program flow shouldn't jump from one class to another",
        "448bbe0e79b443ecd1560569147148e8 (00:39): there should be a main class coordinating everything",
        "8fa2d0067f92fbec7c550e8068f91809 (00:41): the program flow HAS to jump if you invoke methods of other classes...",
        "46f350cce297a83ea5752a260979dae2 (00:41): Nolar: but no documentation? so any website can spam you with magnet links?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:41): otherwise it's not OOP but SOP",
        "a74c07e77864c0915aebb3126b39f2c9 (00:41): Salz: documentation is only source code",
        "8fa2d0067f92fbec7c550e8068f91809 (00:41): Salz, afaik it's listening on localhost only",
        "a74c07e77864c0915aebb3126b39f2c9 (00:42): com.aelitis.net.magneturi.impl.MagnetURIHandlerImpl",
        "46f350cce297a83ea5752a260979dae2 (00:43): The_8472: you can call <a href=\"http://localhost\">http://localhost</a>:45100/ from javascript",
        "8fa2d0067f92fbec7c550e8068f91809 (00:45): Salz, which is the idea afaik",
        "8fa2d0067f92fbec7c550e8068f91809 (00:46): but a site you called yourself opening a magnet link doesn't equal an open port which can be invoked by any remote machine...",
        "448bbe0e79b443ecd1560569147148e8 (00:47): hmmm, is doOptimisticDisconnect an euphemism ? ^_^",
        "46f350cce297a83ea5752a260979dae2 (00:47): but you should provide magnet: links, too, in case azureus runs on another host",
        "46f350cce297a83ea5752a260979dae2 (00:47): btw., magnet: does not work in open url, if azureus can't connect to localhost:45100",
        "8fa2d0067f92fbec7c550e8068f91809 (00:47): ProN00b, no... it performs the disconnect by invoking the appropriate methods for it...",
        "8fa2d0067f92fbec7c550e8068f91809 (00:49): Salz, yes... it's used for IPC communication too... since using IP sockets isn't platform-specific",
        "8fa2d0067f92fbec7c550e8068f91809 (00:49): although i thought it would use port 6880 for that *shrug*",
        "8fa2d0067f92fbec7c550e8068f91809 (00:50): &lt;ProN00b&gt; hmmm, is doOptimisticDisconnect an euphemism ? ^_^ &lt;- i assume that was a purely rhetoric question...",
        "46f350cce297a83ea5752a260979dae2 (00:50): The_8472: eek?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:51): ?",
        "8fa2d0067f92fbec7c550e8068f91809 (00:51): ProN00b, maybe you should read <a href=\"http://en.wikipedia.org/wiki/Object-oriented_programming\">http://en.wikipedia.org/wiki/Object-oriented_programming</a> #Fundamental_concepts and #OOP_as_a_new_paradigm.2C_point_of_view.2C_and_marketing_term",
        "8fa2d0067f92fbec7c550e8068f91809 (00:52): esp. the part on subject oriented programming",
        "448bbe0e79b443ecd1560569147148e8 (00:53): subject oriented programming... i think i might know what that means",
        "448bbe0e79b443ecd1560569147148e8 (00:53): and i don't agree with it",
        "8fa2d0067f92fbec7c550e8068f91809 (00:54): that's what you propose",
        "8fa2d0067f92fbec7c550e8068f91809 (00:55): just read the article... this way i don't have to reiterate its argumentation",
        "448bbe0e79b443ecd1560569147148e8 (00:55): oh, yeah",
        "448bbe0e79b443ecd1560569147148e8 (00:55): &quot;The Sales Application saves the Transaction&quot;",
        "448bbe0e79b443ecd1560569147148e8 (00:55): &quot;The Transaction saves itself upon receiving a message from the Sales Application&quot;",
        "448bbe0e79b443ecd1560569147148e8 (00:55): zomg ME NOT AGREES",
        "448bbe0e79b443ecd1560569147148e8 (00:56): sorry, but i just had to express that"
    ],
    "person_ids": [
        "448bbe0e79b443ecd1560569147148e8",
        "8fa2d0067f92fbec7c550e8068f91809",
        "a718ec94b05d5a1ffccef799d6754f01",
        "a74c07e77864c0915aebb3126b39f2c9",
        "46f350cce297a83ea5752a260979dae2"
    ]
}