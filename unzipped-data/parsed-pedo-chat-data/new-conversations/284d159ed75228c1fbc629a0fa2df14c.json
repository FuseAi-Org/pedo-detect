{
    "id": "284d159ed75228c1fbc629a0fa2df14c",
    "messages": [
        "ab7faae5d7b250ea8606486575f8f79c (18:04): Hooray, more text issues",
        "ab7faae5d7b250ea8606486575f8f79c (18:05): html5lib says &lt;!DOCTYPE HTML&gt;&lt;frameset&gt;test should only create one parse error for the text, but the spec unambiguously requires each character token to generate an individual parse error",
        "a131216c7af242e66537a58b4ca7c9f9 (18:09): conclusion: &quot;test&quot; is a single character",
        "b19bfcbd7b695025e49d546be54e168b (18:10): or a single &quot;character&quot; token? :-)",
        "ab7faae5d7b250ea8606486575f8f79c (18:10): Perhaps it's a single Multicode character",
        "ab7faae5d7b250ea8606486575f8f79c (18:11): b19bfcbd7b695025e49d546be54e168b: A single character token contains a single character",
        "ab7faae5d7b250ea8606486575f8f79c (18:11): (except in the reality of implementations)",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:11): ab7faae5d7b250ea8606486575f8f79c: IIRC, Hixie said that in principle you should be able to treat runs of characters as units",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:11): ab7faae5d7b250ea8606486575f8f79c: but the foster parenting stuff breaks that",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:11): what WebKit does is most sane IMO",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:11): what Gecko does seems unnecessarily complex",
        "ab7faae5d7b250ea8606486575f8f79c (18:12): Even without foster parenting, whitespace breaks that",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:12): ab7faae5d7b250ea8606486575f8f79c: where?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:13): (I'm assuming that the frameset case above isn't *really* mean to spew an error on each char separately)",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:13): hixie also mentioned that parse errors may be collapsed",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:13): no idea if that's reflected by the spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:14): ab7faae5d7b250ea8606486575f8f79c: fwiw, the cases where html5lib and V.nu disagree on the exact # of tree construction errors, either one is just collapsing errors that would be guaranteed to fire together",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:14): ab7faae5d7b250ea8606486575f8f79c: it didn't make sense to follow html5lib exactly, because IIRC, html5lib didn't follow the spec 100%, either",
        "ab7faae5d7b250ea8606486575f8f79c (18:14): With something like &quot;&lt;frameset&gt;    test&quot; the spec says the whitespace and non-whitespace characters are handled through different paths, so you have to handle characters individually or split the text run up into whitespace and non-whitespace runs or think cleverly about how to make it work regardless",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:15): oh, right.",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:15): you can only coalesce runs of whitespace and runs of non-whitespace",
        "ab7faae5d7b250ea8606486575f8f79c (18:16): It'd be inefficient to not coalesce combined whitespace-and-not characters in the common cases of big paragraphs of un-marked-up text",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:16): the trick case that shows WebKit vs. Gecko difference is when you have: &lt;table&gt;foo&lt;!-- --&gt; &lt;!-- --&gt; bar&lt;/table&gt;, IIRC",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:16): ab7faae5d7b250ea8606486575f8f79c: yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:17): from the impl point of view I like what WebKit does: coalesce a run first and then check if it is all whitespace",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:17): which is why the crafter comment case tricks WebKit",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:17): crafted",
        "ab7faae5d7b250ea8606486575f8f79c (18:17): What if you want to do incremental display, and add Text nodes to the document before you've finished tokenising a run of characters?",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:18): ab7faae5d7b250ea8606486575f8f79c: you'd assume that no single text run on normal pages is long enough without intervening markup to justify rendering a run of text incrementally",
        "b19bfcbd7b695025e49d546be54e168b (18:18): 1) how common is the case of a long run of characters w/o whitespace?  2) you can always update TextNodes, as long as you don't let JS run prematurely, anyway",
        "ab7faae5d7b250ea8606486575f8f79c (18:20): &quot;&lt;plaintext&gt;5MB of text from Gutenberg&quot;",
        "b19bfcbd7b695025e49d546be54e168b (18:21): that has whitespace, no?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:21): b19bfcbd7b695025e49d546be54e168b: that has no whitespace",
        "ab7faae5d7b250ea8606486575f8f79c (18:22): b19bfcbd7b695025e49d546be54e168b: 2) The difficult is that you'd have to move the Text node from inside the table to outside, once you've discovered a non-whitespace character at the end",
        "a924fb58d2c25874322f4e5126f608b9 (18:22): Maybe stating the definition would help the discussion :)",
        "ab7faae5d7b250ea8606486575f8f79c (18:23): b19bfcbd7b695025e49d546be54e168b: 1) I'm assuming whitespace in the middle of a run of characters is coalesced with non-whitespace, because it seems inefficient otherwise",
        "b19bfcbd7b695025e49d546be54e168b (18:23): ab7faae5d7b250ea8606486575f8f79c: ah, and you mean the rendering might &quot;jump&quot; due to the node movement?",
        "ab7faae5d7b250ea8606486575f8f79c (18:24): I mostly mean that the node movement is kind of complex and likely to include bugs :-)",
        "b19bfcbd7b695025e49d546be54e168b (18:24): what does the 5mb matter then? :-)",
        "cc097e0d7183ae8436e7df709553c8c0 (18:25): justify incremental rendering?",
        "b19bfcbd7b695025e49d546be54e168b (18:26): ah :-). Well, never mind me, I am dumb when 90% of my brain is dedicated to something else &lt;/lameexcuse&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (18:27): parse error: unmatched closing tag lameexcuse",
        "ab7faae5d7b250ea8606486575f8f79c (18:29): Grargh, I'm adopting children backwards"
    ],
    "person_ids": [
        "ab7faae5d7b250ea8606486575f8f79c",
        "a131216c7af242e66537a58b4ca7c9f9",
        "b19bfcbd7b695025e49d546be54e168b",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a924fb58d2c25874322f4e5126f608b9",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}