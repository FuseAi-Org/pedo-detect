{
    "id": "0c8282ac32ca50c74dd286b8bc7cfaad",
    "messages": [
        "cc097e0d7183ae8436e7df709553c8c0 (15:08): wtf... https://www.tdnam.com/trpItemListing.aspx?miid=10238899",
        "65325d50b2e25aca54bc871b89758c9c (15:10): did whatwg itself formerly have the .com?",
        "cc097e0d7183ae8436e7df709553c8c0 (15:11): don't think so",
        "cc097e0d7183ae8436e7df709553c8c0 (15:26): Hixie: please test svg in acid3... not necessarily the weird svg udom parts, but basic support and support for svg in &lt;img&gt; and 'background' would be nice",
        "cc097e0d7183ae8436e7df709553c8c0 (15:28): without svg in 'background', svg is basically unusable for layout purposes",
        "cc097e0d7183ae8436e7df709553c8c0 (15:29): this is way more requested by authors than e4x",
        "cc097e0d7183ae8436e7df709553c8c0 (15:29): (in fact, i think no-one even cares about e4x)",
        "cc097e0d7183ae8436e7df709553c8c0 (15:30): see e.g. http://www.sitepoint.com/forums/showthread.php?t=523315",
        "65325d50b2e25aca54bc871b89758c9c (15:33): cc097e0d7183ae8436e7df709553c8c0: using SVG in CSS backgrounds is pretty bleeding-edge and not clearly justified by any spec that has ever reached CR",
        "65325d50b2e25aca54bc871b89758c9c (15:33): cc097e0d7183ae8436e7df709553c8c0: that being said I do think it is a really good feature",
        "1e907c9f9c95cf39d33f2a743798d482 (15:34): I think internal builds of Opera 9.5 have an implementation of exactly that.",
        "65325d50b2e25aca54bc871b89758c9c (15:35): WebKit trunk has an implementation of it as well",
        "ab7faae5d7b250ea8606486575f8f79c (15:36): wondered why his page was using the incorrect font size inside &lt;table&gt;s, and then realised he had written &lt;DOCTYPE HTML&gt;",
        "65325d50b2e25aca54bc871b89758c9c (15:36): (ain't just internal)",
        "ab7faae5d7b250ea8606486575f8f79c (15:36): (so quirks mode is not much fun even when I'm specifically trying to avoid using it)",
        "ab7faae5d7b250ea8606486575f8f79c (15:37): 1e907c9f9c95cf39d33f2a743798d482: Non-internal Opera 9.5 alphas/betas have that too",
        "65325d50b2e25aca54bc871b89758c9c (15:39): WebKit even suports svg images in -webkit-border-image",
        "ab7faae5d7b250ea8606486575f8f79c (15:40): Does WebKit support SVG images in canvas drawImage?",
        "65325d50b2e25aca54bc871b89758c9c (15:40): if they are in an &lt;img&gt; tag I'm sure it does",
        "ab7faae5d7b250ea8606486575f8f79c (15:41): Including SVG with foreignContent?",
        "65325d50b2e25aca54bc871b89758c9c (15:41): I don't think it supports drawImage of an &lt;svg&gt; element",
        "65325d50b2e25aca54bc871b89758c9c (15:41): foreignObject you mean",
        "ab7faae5d7b250ea8606486575f8f79c (15:41): Oops, yes",
        "65325d50b2e25aca54bc871b89758c9c (15:41): I don't see why that wouldn't work, though I haven't tried it myself",
        "65325d50b2e25aca54bc871b89758c9c (15:42): it can certainly render svg in an img or as a CSS image if it embeds non-SVG markup",
        "65325d50b2e25aca54bc871b89758c9c (15:42): I guess you could use that as a very cheesy way to get text rendering in &lt;canvas&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (15:43): Does it attempt to avoid security issues, like by preventing toDataURL / getImageData after you've drawn an SVG image?",
        "ab7faae5d7b250ea8606486575f8f79c (15:43): If not, that may be a potential problem :-)",
        "65325d50b2e25aca54bc871b89758c9c (15:44): we don't have toDataURL or getImageData (yet)",
        "65325d50b2e25aca54bc871b89758c9c (15:44): so not an issue",
        "ab7faae5d7b250ea8606486575f8f79c (15:44): Oh, good point",
        "65325d50b2e25aca54bc871b89758c9c (15:44): I imagine SVG images would be subject to the same security restrictions for those purposes as regular type images",
        "ab7faae5d7b250ea8606486575f8f79c (15:48): 65325d50b2e25aca54bc871b89758c9c: That might be inadequate, because it'd still let you e.g. move an &lt;input type=file&gt; into a same-origin SVG image and then render it onto a canvas and read the pixels to extract the file path and circumvent the browser's attempts at privacy",
        "1e907c9f9c95cf39d33f2a743798d482 (15:48): Hmm... can svg be used to draw real 3d objects? or are they mere simulations in 2d? I can imagine a conflict.",
        "1e907c9f9c95cf39d33f2a743798d482 (15:49): A conflict with getContext()",
        "65325d50b2e25aca54bc871b89758c9c (15:49): ab7faae5d7b250ea8606486575f8f79c: you can read the value of &lt;input type=&quot;file&quot;&gt; through the DOM",
        "65325d50b2e25aca54bc871b89758c9c (15:50): noted however that there may be security ieeus",
        "65325d50b2e25aca54bc871b89758c9c (15:51): 1e907c9f9c95cf39d33f2a743798d482: it doesn't have real 3d, though you can sort of simulate it by moving polygons around in 2d",
        "1e907c9f9c95cf39d33f2a743798d482 (15:51): Good",
        "ab7faae5d7b250ea8606486575f8f79c (15:51): 65325d50b2e25aca54bc871b89758c9c: Oh, maybe I'm misremembering - Opera only returns the filename (not the displayed path) but FF and IE6 still seem to return the whole path",
        "65325d50b2e25aca54bc871b89758c9c (15:52): Safari doesn't even display the full path",
        "65325d50b2e25aca54bc871b89758c9c (15:52): (it doesn't have a type-in box for &lt;input type=&quot;file&quot;&gt;)",
        "ab7faae5d7b250ea8606486575f8f79c (15:53): (Hmm, Opera 9.2 draws a peculiar button for http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cbutton%3ETest%20test_test_test_test%3C%2Fbutton )",
        "ab7faae5d7b250ea8606486575f8f79c (15:53): 1e907c9f9c95cf39d33f2a743798d482: I'm not sure what you mean by &quot;a conflict&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (15:55): (http://apike.ca/prog_svg_threed.html says &quot;SVG has no 3D support. In fact, it is almost anti-3D.&quot;, which sounds possibly true - I don't remember seeing anything more advanced than a 3D cube in SVG)",
        "1e907c9f9c95cf39d33f2a743798d482 (15:55): Well, the mozilla tutorial I'm reading says only the 2d context is defined. The 3d context is theoretical at best. If SVG is used to display something in a canvas element, it will need to get a context. Following the tutorial, it will be a 2d context. However, if the SVG has 3d, it needs a 3d context. Hence the conflict. Since SVG does not do 3d, the conflict does not exist.",
        "ab7faae5d7b250ea8606486575f8f79c (15:57): 1e907c9f9c95cf39d33f2a743798d482: Even if SVG did 3D things, SVG would describe how it's converted into a flat rectangular 2D bitmap, and that bitmap can be drawn onto a 2D canvas, so there wouldn't be a problem",
        "1e907c9f9c95cf39d33f2a743798d482 (15:57): Exactly.",
        "ab7faae5d7b250ea8606486575f8f79c (15:58): (The 3D context isn't really theoretical, given that there's at least two attempted implementations :-) )",
        "1e907c9f9c95cf39d33f2a743798d482 (15:58): Really? Awesome.",
        "ab7faae5d7b250ea8606486575f8f79c (15:58): http://blog.vlad1.com/2007/11/26/canvas-3d-gl-power-web-style/",
        "65325d50b2e25aca54bc871b89758c9c (15:58): this has some neat pseduo-3d in svg: http://www.lutanho.net/svgvml3d/index.html",
        "ab7faae5d7b250ea8606486575f8f79c (15:58): http://my.opera.com/timjoh/blog/2007/11/13/taking-the-canvas-to-another-dimension",
        "1e907c9f9c95cf39d33f2a743798d482 (15:59): OpenGL did come to mind, yes. Especially for web games.",
        "65325d50b2e25aca54bc871b89758c9c (15:59): (the rubik's cube one is neat)",
        "ab7faae5d7b250ea8606486575f8f79c (16:01): 65325d50b2e25aca54bc871b89758c9c: Aha, that looks better than plain cubes :-)",
        "ab7faae5d7b250ea8606486575f8f79c (16:01): It flickers a bit nastily in Firefox while redrawing, though",
        "65325d50b2e25aca54bc871b89758c9c (16:01): http://www.kevlindev.com/geometry/3D/js3d/index.htm",
        "ab7faae5d7b250ea8606486575f8f79c (16:02): Bah, wireframe is cheating :-p",
        "cc097e0d7183ae8436e7df709553c8c0 (16:06): would appriciate feedback about http://simon.html5.org/specs/xml-stylesheet5 from webkit and mozilla people",
        "65325d50b2e25aca54bc871b89758c9c (16:09): is it substantively different from the current xml-stylesheet PI spec?",
        "cc097e0d7183ae8436e7df709553c8c0 (16:10): it is pretty much aligned with firefox/ie/safari, actually",
        "cc097e0d7183ae8436e7df709553c8c0 (16:11): the parsing part is aligned mostly with firefox, i think",
        "65325d50b2e25aca54bc871b89758c9c (16:11): I'm not sure what this means: &quot;When the UA is to stop parsing, it must return pseudo-attributes so that the appropriate semantics can be applied.&quot;",
        "65325d50b2e25aca54bc871b89758c9c (16:11): I think the syntax would be better expressed as a BNF grammar than a state machine",
        "cc097e0d7183ae8436e7df709553c8c0 (16:12): yeah, i don't know how to phrase that sentence",
        "cc097e0d7183ae8436e7df709553c8c0 (16:12): ok. but can BNF express how to handle error conditions?",
        "cc097e0d7183ae8436e7df709553c8c0 (16:13): for some errors you just drop the pseudo-attribute, for others you ignore the rest of the PI",
        "cc097e0d7183ae8436e7df709553c8c0 (16:15): stop parsing means basically... stop the state machine and return pseudo-attributes. is that clearer?",
        "65325d50b2e25aca54bc871b89758c9c (16:18): I'm not sure &quot;return&quot; is the right word",
        "65325d50b2e25aca54bc871b89758c9c (16:18): writing this in such an operational style makes it hard for me to follow",
        "65325d50b2e25aca54bc871b89758c9c (16:18): may review more later but not right now",
        "cc097e0d7183ae8436e7df709553c8c0 (16:18): ok",
        "cc097e0d7183ae8436e7df709553c8c0 (16:18): thanks",
        "65325d50b2e25aca54bc871b89758c9c (16:19): (gotta admit ?xml-styleshet? PI interop isn't that high on my personal priority list)",
        "cc097e0d7183ae8436e7df709553c8c0 (16:19): yeah, but the parsing part also applies to access-control and xbl",
        "65325d50b2e25aca54bc871b89758c9c (16:20): it would really be better if XML PIs applied XML-style draconian parsing to PI pseudo-attributes, just as if they were XML element attributes",
        "65325d50b2e25aca54bc871b89758c9c (16:21): that would be more consistent",
        "65325d50b2e25aca54bc871b89758c9c (16:21): I don't know if that creates compatibility issues for ?xml-stylesheet? specifically",
        "ab7faae5d7b250ea8606486575f8f79c (16:23): Does anyone know how current content relies on PI parsing?",
        "65325d50b2e25aca54bc871b89758c9c (16:24): I don't think there is that much CSS-styled XML on the web in general",
        "65325d50b2e25aca54bc871b89758c9c (16:24): (I guess the PI can also request XSLT processing, which may be more common; dunno)",
        "ab7faae5d7b250ea8606486575f8f79c (16:25): sees things like &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; /&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (16:25): (in text/html documents)",
        "65325d50b2e25aca54bc871b89758c9c (16:27): looks like that syntax might be part of an obsolete version of Namespaces in XML: http://www.w3.org/TR/1998/WD-xml-names-19980518",
        "65325d50b2e25aca54bc871b89758c9c (16:28): nowadays use of that syntax would not be namespace-well-formed",
        "1e907c9f9c95cf39d33f2a743798d482 (16:30): Knowing the vendor, that means our parsers and validators have to allow for their kinks.",
        "65325d50b2e25aca54bc871b89758c9c (16:30): if that's in text/html content I am not sure it has much bearing on what needs to be allowed in XML",
        "1e907c9f9c95cf39d33f2a743798d482 (16:31): Hopefully none",
        "ab7faae5d7b250ea8606486575f8f79c (16:34): &lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;UTF-8\\&quot;?&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (16:34): &lt;?xml-stylesheet type=\\&quot;text/css\\&quot; href=\\&quot;css/standard.css\\&quot;?&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (16:34): on http://www.kletterzentrum-badtoelz.de/ though that redirects immediately away from there anyway",
        "ab7faae5d7b250ea8606486575f8f79c (16:34): Does xml-stylesheet ever do anything in text/html?",
        "1e907c9f9c95cf39d33f2a743798d482 (16:35): Yes, it works perfectly in Internet Explorer",
        "1e907c9f9c95cf39d33f2a743798d482 (16:35): (Tried it)",
        "1e907c9f9c95cf39d33f2a743798d482 (16:36): Remember that Internet Explorer doesn't do application/xhtml+xml, so anything that resembles html or xhtml will have to be sent as text/html",
        "1e907c9f9c95cf39d33f2a743798d482 (16:36): Hopefully this will change with MSIE8, but I doubt it.",
        "1e907c9f9c95cf39d33f2a743798d482 (16:36): As a result, MSIE renders xhtml as tag soup.",
        "ab7faae5d7b250ea8606486575f8f79c (16:40): http://philip.html5.org/data/pis.html is everything starting with &quot;&lt;?&quot; in ~15K pages",
        "ab7faae5d7b250ea8606486575f8f79c (16:49): http://www.montere.it/ - &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1 Transitional//IT&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; - hmm, not quite the right idea there",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:00): hmm",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:07): this'll be either difficult, slow, or a pain",
        "ab7faae5d7b250ea8606486575f8f79c (17:08): That's not too bad, if it's 'either' rather than all",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:08): (drawing and animating a full-screen svg on canvas)",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:09): difficult: only redraw portions that have changed",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:09): slow: redraw everything",
        "041f18d4e2e27cd97f4404c2c67cb362 (17:10): pain: manually split document into layers, render them into images and hope that the html image renderer is faster than the canvas one",
        "ab7faae5d7b250ea8606486575f8f79c (17:11): Given the performance of background-position:fixed, I don't think I'd trust the browser to render layers fast",
        "ab7faae5d7b250ea8606486575f8f79c (17:12): (at least when the layers are moving relative to each other)",
        "f139aba52f9fa1394b4034a7954b2220 (17:12): wow, what a great example of why RDFa is a bad idea. http://www.w3.org/QA/2008/01/rdfa_and_html_imagemap.html - That's so complex and unnecessary. The SVG effect could be done entirely without the RDFa",
        "ab7faae5d7b250ea8606486575f8f79c (17:14): f139aba52f9fa1394b4034a7954b2220: The SVG effects *is* done entirely without the RDFa",
        "ab7faae5d7b250ea8606486575f8f79c (17:14): (or at least I can't see any RDFa bits in the XSLT code)",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:17): http://dubinko.info/blog/2008/01/07/yahoo-introduces-mobile-xforms/ is that a multi-UA thing or using a W3C spec as part of a single-UA system (like, e.g., Joost)?",
        "f139aba52f9fa1394b4034a7954b2220 (17:19): ab7faae5d7b250ea8606486575f8f79c, yes, I know. That's why I said the RDFa wasn't necessary. It's just there as useless metadata",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:24): if a metadatum falls in the forest and there's no one to interpret it, is it a metadatum?",
        "ab7faae5d7b250ea8606486575f8f79c (17:25): Yes by definition, sine you already said it was a metadatum :-)",
        "ab7faae5d7b250ea8606486575f8f79c (17:25): *since",
        "f139aba52f9fa1394b4034a7954b2220 (17:27): b8810fee2f4a71f849f3f7409546d1d9, I think that should be &quot;if a metadatum falls in the forest and there's no one to interpret it, is it [useful?]&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): I assume the problem comes from saying &quot;I'd like a way to say, &quot;this area of the image depicts the person who is the primaryTopic of http://danbri.org/&quot;.&quot;, rather than e.g. &quot;I'd like a way to say &quot;who is in this picture?&quot; so that I can stalk people by finding all the photos (on a certain subset of web sites) that are linked to their homepage&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (17:32): but maybe that's just a simple fundamental difference of perspective, about the value of providing data without prior knowledge of how the data will be used",
        "cc097e0d7183ae8436e7df709553c8c0 (17:39): 65325d50b2e25aca54bc871b89758c9c: opera does drocanian parsing for xml-stylesheet currently",
        "cc097e0d7183ae8436e7df709553c8c0 (17:39): but i don't think it makes sense",
        "cc097e0d7183ae8436e7df709553c8c0 (17:39): what do you do when you create or update the PI with script?",
        "cc097e0d7183ae8436e7df709553c8c0 (17:40): should the xml processor have to know about xml-stylesheet, access-control and xbl? and other future PIs that might use pseudo-attributes?",
        "cc097e0d7183ae8436e7df709553c8c0 (17:42): speaking of which... i think i'll move the requirement about the placement of the PI from the parsing rules to the processing rules... since future PIs with pseudo-attributes might want to allow them in other places than in the prolog",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:42): cc097e0d7183ae8436e7df709553c8c0: by definition, no, but the next layer should",
        "cc097e0d7183ae8436e7df709553c8c0 (17:44): b8810fee2f4a71f849f3f7409546d1d9: ok, wrongly phrased... why should the well-formedness of a given document depend on whether the UA supports xml-stylesheet, access-control or xbl?",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:46): cc097e0d7183ae8436e7df709553c8c0: well-formedness shouldn't. but rephrasing: why should YSoD depend on support for a particular PI",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:47): the Web is probably better off if there are as few YSoD reasons as possible",
        "cc097e0d7183ae8436e7df709553c8c0 (17:47): indeed",
        "cc097e0d7183ae8436e7df709553c8c0 (17:47): that's why my spec removes fatal errors for PIs",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:47): cc097e0d7183ae8436e7df709553c8c0: you could, though, be Draconian about what causes a PI to be rejected from further processing",
        "cc097e0d7183ae8436e7df709553c8c0 (17:48): yes",
        "cc097e0d7183ae8436e7df709553c8c0 (17:48): &lt;?xml-stylesheet ==&quot;&quot; href=&quot;a&quot;?&gt; is the same as &lt;?xml-stylesheet?&gt;"
    ],
    "person_ids": [
        "cc097e0d7183ae8436e7df709553c8c0",
        "65325d50b2e25aca54bc871b89758c9c",
        "1e907c9f9c95cf39d33f2a743798d482",
        "ab7faae5d7b250ea8606486575f8f79c",
        "041f18d4e2e27cd97f4404c2c67cb362",
        "f139aba52f9fa1394b4034a7954b2220",
        "b8810fee2f4a71f849f3f7409546d1d9"
    ]
}