{
    "id": "76aaffd0d1983b49a902bc2a5a6ef654",
    "messages": [
        "e8cb5d78731d0b117f529734f7c2d6a4 (02:01): +werneck: a callable object passes the test callable(obj)",
        "40b6c383711ac222fc6b8eb71daa500f (02:01): +anyone here have experience with pygtk",
        "3f8e9a337f410f5aa156700b80411957 (02:04): +redir, ok but is it possible with pythin ?",
        "61b00eeea1fcc80e100acbc933f4fbed (02:05): +ChrisLong: yes, but what I mean is, let's say you set a function f as metaclass, doing some stuff but using type to create the class C... type is the real C.__class__, f is C.__metaclass__, but if you subclass C, you won't have f as the subclass metaclass, even if it's the C.__metaclass__ attribute",
        "c79ecf43ed76c8c65f98bf77438bb699 (02:05): +raden, rsync.py is in python",
        "f02232bf8af1e26680ab87136998aa08 (02:05): +blanky: don't ask to ask just ask",
        "3f8e9a337f410f5aa156700b80411957 (02:05): +redir, kew kew :)",
        "3f8e9a337f410f5aa156700b80411957 (02:05): +redir, thanks bro : )",
        "c79ecf43ed76c8c65f98bf77438bb699 (02:05): +raden, it emulates much of the functionality of rsync",
        "40b6c383711ac222fc6b8eb71daa500f (02:06): +Well, I have a vertical box, the top box is taken up by a menu, and the second one's empty, how can I select the second one (empty one) so that I could add a button to it",
        "c79ecf43ed76c8c65f98bf77438bb699 (02:06): +raden, excellent script if you want to learn how to write a mirroring program",
        "61b00eeea1fcc80e100acbc933f4fbed (02:06): +ChrisLong: the class statement  use the superclass __class__ attribute as the metaclass, not __metaclass__",
        "f7551900b33180d964c315501279b946 (02:06): +blanky, give it a name",
        "e8cb5d78731d0b117f529734f7c2d6a4 (02:06): +werneck: incorrect:",
        "61b00eeea1fcc80e100acbc933f4fbed (02:07): +kbrooks: ?",
        "40b6c383711ac222fc6b8eb71daa500f (02:07): +hey polpak weren't you in one of the ubuntu channels yesterday",
        "40b6c383711ac222fc6b8eb71daa500f (02:07): +polpak, I can't give it a name",
        "40b6c383711ac222fc6b8eb71daa500f (02:07): +polpak, the vertical box is called mainVB",
        "40b6c383711ac222fc6b8eb71daa500f (02:07): +polpak, but how do I select each individual separation?",
        "61b00eeea1fcc80e100acbc933f4fbed (02:08): +kbrooks: &quot;if there is at least one base class, its metaclass is used (this looks for a __class__ attribute first and if that's not found, uses its type)&quot;",
        "e8cb5d78731d0b117f529734f7c2d6a4 (02:08): +werneck: link?",
        "f7551900b33180d964c315501279b946 (02:08): +blanky, yes I frequent #ubuntu, ##c and #python",
        "61b00eeea1fcc80e100acbc933f4fbed (02:08): +kbrooks: <a href=\"http://www.python.org/download/releases/2.2/descrintro/\">http://www.python.org/download/releases/2.2/descrintro/</a>",
        "f7551900b33180d964c315501279b946 (02:08): +blanky, oh I see. I misunderstood. I thought you were using glade",
        "40b6c383711ac222fc6b8eb71daa500f (02:08): +polpak, yeah I saw you yesterday haha, talked to you even I think, when we were telling that one guy that python was a good language and what not",
        "40b6c383711ac222fc6b8eb71daa500f (02:09): +polpak, yeah I'm using glade",
        "40b6c383711ac222fc6b8eb71daa500f (02:09): +polpak, but I'd like to access that one box through the code",
        "61b00eeea1fcc80e100acbc933f4fbed (02:09): +kbrooks: if you used an arbitrary object as metaclass, not the real class type, subclasses won't use it as metaclass... have to bet set explicitly",
        "2a655a0e14a4584229ba4aeef43b9039 (02:09): /dev/null&quot;)",
        "40b6c383711ac222fc6b8eb71daa500f (02:09): +so, I made a vbox with 2, so the top one's a menu and the bottoms one's empty, now, how can I access the bottom one? and I can't give it a name, the bottom box that is, the whole vertical box (both) are called mainVB though",
        "f7551900b33180d964c315501279b946 (02:11): +blanky, hrm. you should be able to name them",
        "40b6c383711ac222fc6b8eb71daa500f (02:12): +when I select the box, the properties window grays out, I think you're misunderstanding though, the whole vbox I CAN name (it's called mainVB), but the individual boxes, no go",
        "40b6c383711ac222fc6b8eb71daa500f (02:12): +polpak, does that make sense?",
        "398bb4752a2b9a362871cf89249ca133 (02:12): +Hello.  I'm wondering how in python, the appropriate way to call another method of the same class (from a method of the class is)",
        "398bb4752a2b9a362871cf89249ca133 (02:12): +would it be self.method()",
        "398bb4752a2b9a362871cf89249ca133 (02:12): +?",
        "40b6c383711ac222fc6b8eb71daa500f (02:12): +lws, you can also just do method() I believe",
        "398bb4752a2b9a362871cf89249ca133 (02:12): +blanky: Will it properly get the self variable?",
        "f7551900b33180d964c315501279b946 (02:13): +blanky, oh. that's because you can't name boxes apparently.",
        "40b6c383711ac222fc6b8eb71daa500f (02:13): +lws, implicit",
        "10120f397a0f4db70d1aeb2d81229e70 (02:13): +lws: self.method() is correct",
        "40b6c383711ac222fc6b8eb71daa500f (02:13): +polpak, of course, haha. So how can I access a certain box?",
        "f7551900b33180d964c315501279b946 (02:13): +blanky, I don't think you can, but lemme check",
        "398bb4752a2b9a362871cf89249ca133 (02:13): +thanks ChrisLong",
        "40b6c383711ac222fc6b8eb71daa500f (02:13): +vbox[index]? I tried that, but I couldn't find out",
        "40b6c383711ac222fc6b8eb71daa500f (02:13): +polpak, yeah I tried it",
        "10120f397a0f4db70d1aeb2d81229e70 (02:14): +blanky: for child in vbox should work, otherwise for child in vbox.children()",
        "40b6c383711ac222fc6b8eb71daa500f (02:15): +ChrisLong, ohhh, thanks sir! Hey, how can I access a specific one though, for example, if I just have two boxes (vertical), and I want to access the bottom one",
        "10120f397a0f4db70d1aeb2d81229e70 (02:15): +blanky: but how do you identify the right child? are sure, the second one you get is the one you want?",
        "40b6c383711ac222fc6b8eb71daa500f (02:15): +ChrisLong, yeah I'm sure, and I can test it out if not :)",
        "48cbffb0018e689e433a5e764efd23fa (02:17): +I've tried to google for a while now, but I can't seem to find the correct keywords.. I'm assuming it's possible to have one program in several .py files, correct?",
        "40b6c383711ac222fc6b8eb71daa500f (02:17): +ChrisLong, ?",
        "40b6c383711ac222fc6b8eb71daa500f (02:17): +vbox.children()[2] ? lol",
        "40b6c383711ac222fc6b8eb71daa500f (02:17): +or, vbox.children(2) seems right",
        "61b00eeea1fcc80e100acbc933f4fbed (02:17): +sensei: sure... what's the problem ?",
        "40b6c383711ac222fc6b8eb71daa500f (02:17): +i'll try it",
        "f7551900b33180d964c315501279b946 (02:17): +blanky, vbox.children()[1]",
        "40b6c383711ac222fc6b8eb71daa500f (02:18): +polpak, ah thanks!",
        "f7551900b33180d964c315501279b946 (02:18): +blanky, as children() will return a list, and lists are 0 indexted",
        "48cbffb0018e689e433a5e764efd23fa (02:18): +werneck: I can't find anywhere to read how to do it :)",
        "f7551900b33180d964c315501279b946 (02:18): +blanky, indexed",
        "10120f397a0f4db70d1aeb2d81229e70 (02:18): +blanky: i just found out children() is deprecated, one should use get_children()",
        "61b00eeea1fcc80e100acbc933f4fbed (02:18): +sensei: <a href=\"http://docs.python.org/tut/node8.html\">http://docs.python.org/tut/node8.html</a>",
        "48cbffb0018e689e433a5e764efd23fa (02:19): +Ah, modules.. thanks :)",
        "40b6c383711ac222fc6b8eb71daa500f (02:19): +ChrisLong, yeah cause I got 'list index out of range'",
        "40b6c383711ac222fc6b8eb71daa500f (02:19): +ChrisLong, get_children(1) ?",
        "40b6c383711ac222fc6b8eb71daa500f (02:19): +thanks ChrisLong !",
        "40b6c383711ac222fc6b8eb71daa500f (02:19): +and polpak !",
        "10120f397a0f4db70d1aeb2d81229e70 (02:20): +blanky: get_children()[1]",
        "40b6c383711ac222fc6b8eb71daa500f (02:20): +ChrisLong, yeah, keep getting index out of range or whatever :S",
        "9710dae1a8355233780ff0de868a1f5b (02:20): +hello",
        "9710dae1a8355233780ff0de868a1f5b (02:20): +how can I print a byte of data from a file read with .read(1) in base 2 binary form?",
        "10120f397a0f4db70d1aeb2d81229e70 (02:20): +blanky: then there is not second child. what is len(vbox)?",
        "40b6c383711ac222fc6b8eb71daa500f (02:20): +ChrisLong, will do",
        "74849c4162aaa1c652472d61bdbbf8f2 (02:21): +Does anybody know how to execute a python script interactively, so that it will execute it line by line like the python interactive interpreter?",
        "61b00eeea1fcc80e100acbc933f4fbed (02:21): +xDCDx: use ord(b) to get it to base 10, but you'll have to convert to base 2 by yourself",
        "10120f397a0f4db70d1aeb2d81229e70 (02:22): +ackackackadack: module pdb",
        "40b6c383711ac222fc6b8eb71daa500f (02:22): +ChrisLong, it returns 1, but I promise there's two boxes!",
        "40b6c383711ac222fc6b8eb71daa500f (02:22): +ChrisLong, unless...do the boxes delete themselves once they're used? becuase one of them is used (a menu)",
        "9710dae1a8355233780ff0de868a1f5b (02:22): +werneck thanks",
        "10120f397a0f4db70d1aeb2d81229e70 (02:23): +blanky: what did you put in the lower box in glade?",
        "40b6c383711ac222fc6b8eb71daa500f (02:23): +ChrisLong, nothing, it's empty, it's the one I'm trying to access to put something in it haha",
        "74849c4162aaa1c652472d61bdbbf8f2 (02:23): +ChrisLong, thanks I'll try that out",
        "40b6c383711ac222fc6b8eb71daa500f (02:23): +ChrisLong, I want to put gtkmozembed.MozEmbed() in it",
        "40b6c383711ac222fc6b8eb71daa500f (02:23): +ChrisLong, and since I don't know how to do that through glade, I want to do it through python",
        "10120f397a0f4db70d1aeb2d81229e70 (02:24): +blanky: simply use vbox.pack_end. glade only reserved space for the lower part, because you told it you want two children.",
        "10120f397a0f4db70d1aeb2d81229e70 (02:25): +blanky: but if you don't put anything in it, then the vbox only contains one child",
        "40b6c383711ac222fc6b8eb71daa500f (02:25): +ChrisLong, OH! okay, wait, what about vbox.pack_end?",
        "40b6c383711ac222fc6b8eb71daa500f (02:26): +ChrisLong, thanks man! spent an hour on this and nothing, hey, so how would I add(gtkmozembed.MozEmbed()) into it",
        "10120f397a0f4db70d1aeb2d81229e70 (02:27): +blanky: like i said, vbox.pack_end(gtkmozembed.MozEmbed()). but i don't know if the default arguments are correct, you should look them up",
        "40b6c383711ac222fc6b8eb71daa500f (02:27): +ChrisLong, will do, thanks sir",
        "06994f29342d35b03cb090b62b5201cb (02:31): +how can you change the CWD of the shell in which you execute a program, from the program?",
        "d2f89d55b47d39244f2568efc5defaf4 (02:35): +remote: os.chdir()",
        "06994f29342d35b03cb090b62b5201cb (02:35): +doesn't work",
        "10120f397a0f4db70d1aeb2d81229e70 (02:36): +remote: you can't",
        "06994f29342d35b03cb090b62b5201cb (02:36): +it changes the program's cwd",
        "06994f29342d35b03cb090b62b5201cb (02:36): +i'm sure you can",
        "06994f29342d35b03cb090b62b5201cb (02:36): +why is it so hard?",
        "10120f397a0f4db70d1aeb2d81229e70 (02:36): +remote: can you name a program that does it?",
        "06994f29342d35b03cb090b62b5201cb (02:37): +yes but now that i think about it, it's being used from an alias who probably just do `` cd `program` ''"
    ],
    "person_ids": [
        "e8cb5d78731d0b117f529734f7c2d6a4",
        "40b6c383711ac222fc6b8eb71daa500f",
        "3f8e9a337f410f5aa156700b80411957",
        "61b00eeea1fcc80e100acbc933f4fbed",
        "c79ecf43ed76c8c65f98bf77438bb699",
        "f02232bf8af1e26680ab87136998aa08",
        "f7551900b33180d964c315501279b946",
        "2a655a0e14a4584229ba4aeef43b9039",
        "398bb4752a2b9a362871cf89249ca133",
        "10120f397a0f4db70d1aeb2d81229e70",
        "48cbffb0018e689e433a5e764efd23fa",
        "9710dae1a8355233780ff0de868a1f5b",
        "74849c4162aaa1c652472d61bdbbf8f2",
        "06994f29342d35b03cb090b62b5201cb",
        "d2f89d55b47d39244f2568efc5defaf4"
    ]
}