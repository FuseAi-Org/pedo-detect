{
    "id": "dc7840c6ce15c8dac8a5879edcd9eb60",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (09:07): AryehGregor: I think you WONTFIX rationale for bug 13057 sucks.",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:07): AryehGregor: saying they don't serve a common need as a reason to *keep* them???",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:08): *your",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:09): that bug makes me long for TPAC",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:09): edb259c0e0038f38bb200bc20c8cbf7e: why?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:10): in a sarcastic way",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:11): lots of bitching about HTML by people who have not participated in years",
        "65325d50b2e25aca54bc871b89758c9c (09:15): b8810fee2f4a71f849f3f7409546d1d9: seems like a plausible reason not to replace them",
        "65325d50b2e25aca54bc871b89758c9c (09:15): otoh you could argue that the use case is still valid and the rarity of use just shows the bad design",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:17): 65325d50b2e25aca54bc871b89758c9c: it could be used as an argument for removing them and not providing a replacement",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:17): I don't understand why he can't have &quot;block&quot; and &quot;inline&quot; level delete and insertion in his editor",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:17): 65325d50b2e25aca54bc871b89758c9c: doesn't make sense as a reason to keep them",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:17): he seems to think UI and markup has to match 1:1",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:17): which strikes me as odd for a WYSIWYG editor",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:18): I'm inclined to think HTML shouldn't try to track deletions",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:22): so what if you want to publish how a document was redacted?",
        "65325d50b2e25aca54bc871b89758c9c (09:22): b8810fee2f4a71f849f3f7409546d1d9: what do you think is the correct resolution? drop entirely with no replacement?",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:23): 65325d50b2e25aca54bc871b89758c9c: I'd do the following:",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:23): 1) Define &lt;ins&gt; as inline-only and a synonym for &lt;u&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:23): 2) Define &lt;del&gt; as inline-only and a synonym of &lt;s&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:24): 3) Introduce an attribute that takes a list of edit entries that contain a time stamp and an optional user identifier",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:24): and indicates that the text was added by that user at that time",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:25): hmm. maybe it shouldn't take a list",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:26): anyway, dropping &lt;ins&gt; and &lt;del&gt; even as inline underline and strike markup would annoy a lot of people who use them manually on blogs as inline-only",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:26): and &lt;del&gt; across blocks sucks badly and is rarely used",
        "65325d50b2e25aca54bc871b89758c9c (09:26): removing their semantics would likely also annoy people",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:27): 65325d50b2e25aca54bc871b89758c9c: yeah, maybe",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:27): 65325d50b2e25aca54bc871b89758c9c: maybe the right thing is to make them inline-only and add attributes that you can put on any element",
        "65325d50b2e25aca54bc871b89758c9c (09:27): for the sort of people who bother to use them, anyway",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:27): 65325d50b2e25aca54bc871b89758c9c: anyway, &lt;del&gt; as block sucks big time",
        "65325d50b2e25aca54bc871b89758c9c (09:27): what is the difficulty with using them at block level?",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:27): and isn't really used by anyone, AFAICT",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:28): 65325d50b2e25aca54bc871b89758c9c: even without glazou's wysiwyg case, in the block case you'd want to style them based on the blockness of their content",
        "65325d50b2e25aca54bc871b89758c9c (09:29): I see, so they either need a special class or you need non-existing inside-out selectors",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:29): 65325d50b2e25aca54bc871b89758c9c: and if they are rarely used, it doesn't make sense to design and engineer a solution that'd make the block duality nature not suck",
        "65325d50b2e25aca54bc871b89758c9c (09:30): anyway if you disagree with Aryeh's rationale, you could reopen the bug and let Hixie sort it out",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:30): ok",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:31): how would you address the styling problem with attributes?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:32): note also that the Selector problem is being solved",
        "65325d50b2e25aca54bc871b89758c9c (09:32): your selector could look at the element and the attribute",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:32): edb259c0e0038f38bb200bc20c8cbf7e: the problem of being able to select on the computed style of children?",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:32): I mean what would be a good way to style it",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:32): default-style wise",
        "b8810fee2f4a71f849f3f7409546d1d9 (09:33): edb259c0e0038f38bb200bc20c8cbf7e: for stuff that's display:block; border-right or outline-right",
        "65325d50b2e25aca54bc871b89758c9c (09:34): you'd need different default rules for different elements depending on their default display type",
        "65325d50b2e25aca54bc871b89758c9c (09:34): but there'd be no way for that to update automatically if someone restyles an element to a different display type",
        "edb259c0e0038f38bb200bc20c8cbf7e (09:35): Is the mean reason for transferring ArrayBuffer rather than cloning preserving memory?",
        "65325d50b2e25aca54bc871b89758c9c (09:35): I presume the reason is performance",
        "65325d50b2e25aca54bc871b89758c9c (09:36): you don't want to incur the cost of a copy each time you transfer cross-thread",
        "65325d50b2e25aca54bc871b89758c9c (09:36): and you don't want to use copy-on-write since that adds cost to every write, even when not using threads",
        "06cb330920ae58e1614c9145d983b3d6 (10:00): 65325d50b2e25aca54bc871b89758c9c: copy-on-write makes reusing buffers efficiently hard, iirc",
        "06cb330920ae58e1614c9145d983b3d6 (10:01): eg. video double-buffering",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:05): thanks 65325d50b2e25aca54bc871b89758c9c",
        "65325d50b2e25aca54bc871b89758c9c (10:05): 06cb330920ae58e1614c9145d983b3d6: yeah, and there are probably also good cases for creating a buffer on the main thread, passing it to a Worker, modifying it in-place in the Worker, and passing it back",
        "cc097e0d7183ae8436e7df709553c8c0 (10:06): put Hixie's bookmarklets as in-page links with userjs",
        "cc097e0d7183ae8436e7df709553c8c0 (10:06): hmm, i should have a link for FIXED as well, for the differences doc",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:06): oh sweet, you'll continue editing that?",
        "cc097e0d7183ae8436e7df709553c8c0 (10:08): yeah",
        "cc097e0d7183ae8436e7df709553c8c0 (10:09): except in july",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:10): cool",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:11): guess I owe bratell a beer",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:11): well, and you",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:11): :)",
        "cc097e0d7183ae8436e7df709553c8c0 (10:14): i was thinking of switching to anolis for it",
        "cc097e0d7183ae8436e7df709553c8c0 (10:14): to get xspec xrefs",
        "cc097e0d7183ae8436e7df709553c8c0 (10:14): how do i do that?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:16): better to ask Ms2ger",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:16): I have not got that to work yet",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:16): I want to switch all my specs too",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:17): xsxr would be so great",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:17): Ms2ger has some instructions on https://bitbucket.org/ms2ger/dom-core (see bottom) but I did not get Anolis properly installed",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:18): I suspect jgraham can help you out if you are in the office",
        "cc097e0d7183ae8436e7df709553c8c0 (10:18): btw i love new Event('foo')",
        "cc097e0d7183ae8436e7df709553c8c0 (10:18): unsursprisingly :)",
        "cc097e0d7183ae8436e7df709553c8c0 (10:18): will be in an hour",
        "cc097e0d7183ae8436e7df709553c8c0 (10:22): can you transfer an object back and forth with postMessage?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:22): for WHATWG Weekly I have spec/whatwg mailing list summary + dom core + new approach exceptions",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:22): cc097e0d7183ae8436e7df709553c8c0, since http://html5.org/tools/web-apps-tracker?from=6272&amp;to=6273 you can do it for MessagePort",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:23): should I cover anything else in the weekly?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:23): nothing much happened last week but maybe I misremember?",
        "cc097e0d7183ae8436e7df709553c8c0 (10:24): yah i'm reading that. it says once you transfer an object you can't transer it again. wondered if it means that you can't transfer it *back* (or further) on the receiving side",
        "06cb330920ae58e1614c9145d983b3d6 (10:24): cc097e0d7183ae8436e7df709553c8c0: the transfer api could be used to transfer other complex objects, eventually",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:24): cc097e0d7183ae8436e7df709553c8c0, not being able to transfer it back would be weird",
        "cc097e0d7183ae8436e7df709553c8c0 (10:24): indeed",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:25): oh, maybe there is just data equality but not object equality?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:26): so you would have a new object when you transfer it back that holds the same data in memory?",
        "06cb330920ae58e1614c9145d983b3d6 (10:26): yeah, transferring back doesn't &quot;repopulate&quot; the old object or anything",
        "cc097e0d7183ae8436e7df709553c8c0 (10:27): makes sense",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:27): anyway, nothing?",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:27): should I mention the Editorial Assistents?",
        "06cb330920ae58e1614c9145d983b3d6 (10:27): havn't looked over the new spec language yet but the general idea is that transfer is indistinguishable from structured clone, from the perspective of the receiver",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:27): I guess I should mention the timeline 65325d50b2e25aca54bc871b89758c9c posted",
        "06cb330920ae58e1614c9145d983b3d6 (10:28): (eg. a postMessage might be received by more than one receiver, in which case it's forced to clone anyway)",
        "06cb330920ae58e1614c9145d983b3d6 (10:28): (iirc--still need to look over the spec language, too)",
        "cc097e0d7183ae8436e7df709553c8c0 (10:29): edb259c0e0038f38bb200bc20c8cbf7e: assistants seems mentionworthy",
        "cc097e0d7183ae8436e7df709553c8c0 (10:30): 06cb330920ae58e1614c9145d983b3d6: it'd throw if you try to transfer it twice",
        "cc097e0d7183ae8436e7df709553c8c0 (10:33): i think",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:54): I wish my German was better",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:54): http://muenz.wordpress.com/2011/02/25/der-lange-abschied-vom-\u201a\u00c4\u00fbtoten\u201a\u00c4\u00fa-standard/",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:54): Also, I posted http://blog.whatwg.org/weekly-event-constructors just now",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:55): Not that any of you ever give feedback, but I keep trying :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:02): edb259c0e0038f38bb200bc20c8cbf7e: based on Google translate, the German article doesn't seem positive",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:02): RDF, Semantic Web, Web 3.0, Linked Data",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:02): RDF/XML, N3, Turtle, RDFa",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:02): rebranding and resyntaxing forever and ever, to no avail",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:03): b8810fee2f4a71f849f3f7409546d1d9, my Google translate was fairly positive",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:03): :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:08): Microdata follows RDFa in that list I guess",
        "cc097e0d7183ae8436e7df709553c8c0 (11:09): what's after microdata?",
        "cc097e0d7183ae8436e7df709553c8c0 (11:10): RDFa 2.0?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:10): I'm sure we'll find out",
        "cc097e0d7183ae8436e7df709553c8c0 (11:13): maybe RDFb",
        "cc097e0d7183ae8436e7df709553c8c0 (11:13): &quot;RDF bastards&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:14): cc097e0d7183ae8436e7df709553c8c0: that's not nice"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "65325d50b2e25aca54bc871b89758c9c",
        "06cb330920ae58e1614c9145d983b3d6",
        "cc097e0d7183ae8436e7df709553c8c0"
    ]
}