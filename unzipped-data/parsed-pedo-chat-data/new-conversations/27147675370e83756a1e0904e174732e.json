{
    "id": "27147675370e83756a1e0904e174732e",
    "messages": [
        "27a00904c55e1a3947176eabe2c0f262 (12:13): 59e570bef8ead953686ff65207d2dfbc: afaict, it depends on the accessible type - some types are expected to be containers",
        "154e3b4bc4e059388f0465ea7a7f1112 (12:14): wonders if it was necessary to land incremental GC with all the patches folded into one giant patch",
        "59e570bef8ead953686ff65207d2dfbc (12:14): I tried poking around with the accessible classes, but at 5 minutes to link, I didn't try very hard",
        "27a00904c55e1a3947176eabe2c0f262 (12:15): heh",
        "27a00904c55e1a3947176eabe2c0f262 (12:16): i saw the code somewhere the other day.. lemme see if i can find it again",
        "59e570bef8ead953686ff65207d2dfbc (12:16): on a scale of 1 to &quot;no not ever&quot; how opposed are you to my original solution?",
        "27a00904c55e1a3947176eabe2c0f262 (12:17): it's pretty up there...",
        "59e570bef8ead953686ff65207d2dfbc (12:17): because the other way is going to require some a11y hacking to make it work",
        "59e570bef8ead953686ff65207d2dfbc (12:17): and I don't want to do that :(",
        "27a00904c55e1a3947176eabe2c0f262 (12:17): :\\ how come?",
        "59e570bef8ead953686ff65207d2dfbc (12:17): well it works fine with the checkbox and text types",
        "59e570bef8ead953686ff65207d2dfbc (12:18): the rest... not so well",
        "59e570bef8ead953686ff65207d2dfbc (12:19): http://i.imgur.com/6OnGl.png this is as good as I've got so far, and that includes a a11y hack",
        "59e570bef8ead953686ff65207d2dfbc (12:19): the highlighted ones are the ones that need to not be there",
        "59e570bef8ead953686ff65207d2dfbc (12:20): (also what happens when I decide to fix it so the checkbox can have a label on both sides of it?)",
        "03cd618659ad3063c1d53077657a801c (12:20): 54d718f6cca21e66ee5a5e3bfd001912: going to merge m-i to m-c soon?",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:20): smaug: yeah, was just eyeing it up :-)",
        "03cd618659ad3063c1d53077657a801c (12:21): wants to test incGC",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:21): I cut the merge last night before incremental, to at least make the m-c nightly builds a little more helpful for regression finding",
        "03cd618659ad3063c1d53077657a801c (12:22): makes sense",
        "54d718f6cca21e66ee5a5e3bfd001912 (12:24): (and the imminent Nightly already has 160 csets, whereas tomorrow's will be a lot quieter)",
        "59e570bef8ead953686ff65207d2dfbc (12:26): that is a good reason not to do automated merges",
        "27a00904c55e1a3947176eabe2c0f262 (12:28): 59e570bef8ead953686ff65207d2dfbc: i'm gonna need to look at this when i'm in less of a zombie state...",
        "59e570bef8ead953686ff65207d2dfbc (12:29): heh",
        "59e570bef8ead953686ff65207d2dfbc (12:29): fair enough",
        "27a00904c55e1a3947176eabe2c0f262 (12:31): can you put up your wip?",
        "27a00904c55e1a3947176eabe2c0f262 (12:32): may not get to it til monday though, my brain is fried after this week",
        "59e570bef8ead953686ff65207d2dfbc (12:32): uh, yeah",
        "59e570bef8ead953686ff65207d2dfbc (12:33): hacks ahoy",
        "27a00904c55e1a3947176eabe2c0f262 (12:33): that's why it's called a work in progress ;)",
        "59e570bef8ead953686ff65207d2dfbc (12:35): I've decided to get rid of the horrible description hack too, eventually",
        "eb215559f21ce08fc2c0af415cb66253 (12:36): Check-in: http://hg.mozilla.org/mozilla-central/rev/eb82a1f48671 - ffxbld - Automated blocklist update from host linux-ix-slave14",
        "b92af08a18aff623222629da14873ffd (12:39): 59e570bef8ead953686ff65207d2dfbc: cached xhtml today - it's been a good week for me :-)",
        "59e570bef8ead953686ff65207d2dfbc (12:40): I don't think I've seen one yet, but I don't look every time",
        "59e570bef8ead953686ff65207d2dfbc (12:41): oh look, there's one now (funny that)",
        "59e570bef8ead953686ff65207d2dfbc (12:41): and I think from a server that gave me text/html the other day",
        "b92af08a18aff623222629da14873ffd (12:43): 282bf0c99ea80e1e754fa7af6fc333cd: have you seen nsGlobalWindowCommands.cpp ?",
        "282bf0c99ea80e1e754fa7af6fc333cd (12:43): b92af08a18aff623222629da14873ffd: nice",
        "282bf0c99ea80e1e754fa7af6fc333cd (12:44): typical example of what not to do :)",
        "03cd618659ad3063c1d53077657a801c (12:45): I wonder if NS_LITERAL_STRING behaves ok",
        "282bf0c99ea80e1e754fa7af6fc333cd (12:48): smaug: iirc NS_LITERAL_STRING always has pointers, because it's an nsString",
        "96656ba1c1148e378ad4e5f67ea4e56c (12:51): 6ba643dd1744c0733e5befe047d6025f: ping",
        "b92af08a18aff623222629da14873ffd (12:57): 282bf0c99ea80e1e754fa7af6fc333cd: so, what's your recommendation in that particular case?",
        "282bf0c99ea80e1e754fa7af6fc333cd (12:58): b92af08a18aff623222629da14873ffd: static const char []",
        "6ba643dd1744c0733e5befe047d6025f (13:02): 5bf79c0a9b802d02015a5d0a917e43bc_: pong",
        "96656ba1c1148e378ad4e5f67ea4e56c (13:02): how can I call a method in nsHTMLInputElement from nsFileControlFrame?",
        "6ba643dd1744c0733e5befe047d6025f (13:04): 5bf79c0a9b802d02015a5d0a917e43bc: you can use mContent",
        "6ba643dd1744c0733e5befe047d6025f (13:05): 5bf79c0a9b802d02015a5d0a917e43bc:   nsHTMLInputElement* inputElement =",
        "6ba643dd1744c0733e5befe047d6025f (13:05): nsHTMLInputElement::FromContent(mContent);",
        "b92af08a18aff623222629da14873ffd (13:06): 282bf0c99ea80e1e754fa7af6fc333cd: and is there an easy way (either Windows or Linux) to tell how much the savings are, other than comparing files sizes of the object/library?",
        "5bf79c0a9b802d02015a5d0a917e43bc (13:07): 6ba643dd1744c0733e5befe047d6025f: ok, i tried mContent",
        "282bf0c99ea80e1e754fa7af6fc333cd (13:07): b92af08a18aff623222629da14873ffd: not that i know of.",
        "03cd618659ad3063c1d53077657a801c (13:09): I need to write a script which ensures that whenever I'm compiling, I don't use the slowcpu setting",
        "03cd618659ad3063c1d53077657a801c (13:10): building FF when CPU is running 800Mhz takes some time",
        "03cd618659ad3063c1d53077657a801c (13:12): um, javascript.options.mem.log is getting noisy",
        "b92af08a18aff623222629da14873ffd (13:16): 282bf0c99ea80e1e754fa7af6fc333cd: indeed, the new .o file is now 5644 bytes larger...",
        "03cd618659ad3063c1d53077657a801c (13:16): What does MMU mean with incremental GC",
        "282bf0c99ea80e1e754fa7af6fc333cd (13:18): b92af08a18aff623222629da14873ffd: larger?",
        "282bf0c99ea80e1e754fa7af6fc333cd (13:21): b92af08a18aff623222629da14873ffd: note that object files have different characteristics, may have many more relocations, etc. so the difference can be higher in a .o than in the final binary"
    ],
    "person_ids": [
        "27a00904c55e1a3947176eabe2c0f262",
        "154e3b4bc4e059388f0465ea7a7f1112",
        "59e570bef8ead953686ff65207d2dfbc",
        "03cd618659ad3063c1d53077657a801c",
        "54d718f6cca21e66ee5a5e3bfd001912",
        "eb215559f21ce08fc2c0af415cb66253",
        "b92af08a18aff623222629da14873ffd",
        "282bf0c99ea80e1e754fa7af6fc333cd",
        "96656ba1c1148e378ad4e5f67ea4e56c",
        "6ba643dd1744c0733e5befe047d6025f",
        "5bf79c0a9b802d02015a5d0a917e43bc"
    ]
}