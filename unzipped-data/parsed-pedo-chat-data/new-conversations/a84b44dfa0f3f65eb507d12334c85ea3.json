{
    "id": "a84b44dfa0f3f65eb507d12334c85ea3",
    "messages": [
        "f139aba52f9fa1394b4034a7954b2220 (13:27): Hixie, yt?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:28): cc097e0d7183ae8436e7df709553c8c0, sorry about the pony, but the rest is done",
        "f139aba52f9fa1394b4034a7954b2220 (13:32): Hixie, I have a functioning polyglot UTF-8/UTF-16LE JavaScript file, as you requested http://krijnhoetmer.nl/irc-logs/whatwg/20090123#l-239",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:37): that sounds cool, where?",
        "f139aba52f9fa1394b4034a7954b2220 (13:39): it's not published yet. I'm just working out how to demo it effectively",
        "f139aba52f9fa1394b4034a7954b2220 (13:39): hmm. Do scripts served without a charset inherit the encoding of the document?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): &lt;script charset=utf-8 src=...&gt;&lt;/script&gt; &lt;script charset=utf-16 src=...&gt;&lt;/script&gt;",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): yeah, that's the idea",
        "f139aba52f9fa1394b4034a7954b2220 (13:40): ok, I'll do that",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): but using the charset attribute is easier",
        "f139aba52f9fa1394b4034a7954b2220 (13:40): is the charset attribute supported?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): it should be, yes",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:40): though this might have been in part to try to find out to what extent it is",
        "cc097e0d7183ae8436e7df709553c8c0 (13:41): edb259c0e0038f38bb200bc20c8cbf7e: cool, will check",
        "f139aba52f9fa1394b4034a7954b2220 (13:44): ah, ok. In that case, I could serve the document as ISO-8859-1 and ensure that the script will only execute if the script is parsed as UTF-8 or UTF-16LE",
        "f139aba52f9fa1394b4034a7954b2220 (13:45): currently, it uses an ASCII function name for UTF-8 which will work in 8859-1. I'll make it non-ASCII",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:51): f139aba52f9fa1394b4034a7954b2220: I weant the charset, characterSet and defaultCharset properties of the HTMLDocument interface",
        "f139aba52f9fa1394b4034a7954b2220 (13:52): oh, dear. serving the doc as 8859-1 won't work cause the UTF-16LE interpretion of the script uses a function name that can't be represented in 8859-1.",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:53): Moving to an apartment building built in 2001 is an interesting experience after living in a building built in 1946. The new one has *manuals*.",
        "b8810fee2f4a71f849f3f7409546d1d9 (13:53): has never had manuals for an apartment before",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:55): f139aba52f9fa1394b4034a7954b2220, load another script that calls the function?",
        "f139aba52f9fa1394b4034a7954b2220 (13:56): edb259c0e0038f38bb200bc20c8cbf7e, yeah, that's what I thought too",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:56): f139aba52f9fa1394b4034a7954b2220, I suppose you can't use entities inside &lt;script&gt;? does JavaScript allow escapes everywhere like CSS?",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:56): thinks the answer to both is &quot;no&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (13:56): I don't remember the rules about JS excapes",
        "f139aba52f9fa1394b4034a7954b2220 (14:04): last thing I need to do is make apache override my normal charset settings so it doesn't send charset=UTF-8 for the JS",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:06): AddDefaultCharset None",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:06): iirc",
        "f139aba52f9fa1394b4034a7954b2220 (14:08): yeah, that and RemoveCharset",
        "f139aba52f9fa1394b4034a7954b2220 (14:08): except it's Off instead of None",
        "f139aba52f9fa1394b4034a7954b2220 (14:11): b8810fee2f4a71f849f3f7409546d1d9, about:blank and .characterSet returns UTF-8 and WebKit and Firefox, utf-16 and Opera and undefined in IE. .defaultCharset returns undefined in Firefox and Opera, ISO-8859-1 in Safari and windows-1252 in IE",
        "f139aba52f9fa1394b4034a7954b2220 (14:11): s/UTF-8 and/UTF-8 in/",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:13): seems like the closest thing to consensus is to say you parse a zero-length stream whose media type is text/html; charset=utf-8",
        "f139aba52f9fa1394b4034a7954b2220 (14:13): yeah, that was my assessment too",
        "f139aba52f9fa1394b4034a7954b2220 (14:14): edb259c0e0038f38bb200bc20c8cbf7e, http://lachy.id.au/dev/2009/polyglot/",
        "cc097e0d7183ae8436e7df709553c8c0 (14:15): b8810fee2f4a71f849f3f7409546d1d9: but that gives quirks mode which sucks :)",
        "f139aba52f9fa1394b4034a7954b2220 (14:15): oops, that's buggy still",
        "cc097e0d7183ae8436e7df709553c8c0 (14:16): iirc, i've found one opera bug that would be solved by changing about:blank to quirks mode, but it could also be solved by changing from &lt;p&gt; to &lt;div&gt; as default block in contenteditable",
        "ab7faae5d7b250ea8606486575f8f79c (14:16): has a script which can distinguish utf-8 and utf-16 and iso-8859-1",
        "cc097e0d7183ae8436e7df709553c8c0 (14:16): (the bug was that on enter you got a &quot;line break&quot; before the first line)",
        "ab7faae5d7b250ea8606486575f8f79c (14:19): http://philip.html5.org/demos/charset/polyglot-script.html",
        "f139aba52f9fa1394b4034a7954b2220 (14:25): I don't understand why no browser works with my version. They're all interpreting the polyglot script file as UTF-8",
        "ab7faae5d7b250ea8606486575f8f79c (14:26): Firefox 2 says &quot;UTF-16LE&quot; on http://lachy.id.au/dev/2009/polyglot/polyglot-utf-16le.html",
        "ab7faae5d7b250ea8606486575f8f79c (14:26): FF3 too",
        "cc097e0d7183ae8436e7df709553c8c0 (14:26): seems webkit ignores charset",
        "f139aba52f9fa1394b4034a7954b2220 (14:26): says UTF-8 for me",
        "1d78dc8ed51214e518b5114fe24490ae (14:27): Is there an easy way to hook in a URI resolver/normalizer into html5lib?",
        "1d78dc8ed51214e518b5114fe24490ae (14:28): For URI attribute values like href and src etc.",
        "ab7faae5d7b250ea8606486575f8f79c (14:28): f139aba52f9fa1394b4034a7954b2220: That's a bit odd",
        "f139aba52f9fa1394b4034a7954b2220 (14:28): woah, if I use a clean profile in Firefox, it works. But it doesn't work with my normal profile",
        "f139aba52f9fa1394b4034a7954b2220 (14:29): I'll try clearing the cache to see if that fixes it",
        "ab7faae5d7b250ea8606486575f8f79c (14:29): f139aba52f9fa1394b4034a7954b2220: Strange config settings?",
        "ab7faae5d7b250ea8606486575f8f79c (14:30): 1d78dc8ed51214e518b5114fe24490ae: As far as I'm aware, html5lib doesn't know anything about which attributes are URIs, so you'd most likely have to parse the document then write code to walk the document tree and update all the relevant attributes",
        "ab7faae5d7b250ea8606486575f8f79c (14:31): 1d78dc8ed51214e518b5114fe24490ae: (which gets a bit complex if you want to resolve URIs correctly when there's a &lt;base href&gt;)",
        "1d78dc8ed51214e518b5114fe24490ae (14:32): Thanks. I was thinking of something like parse.py --resolve-uris --normalize-uris &quot;--document-location=&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (14:37): 1d78dc8ed51214e518b5114fe24490ae: That sounds like it could be a useful feature to add as some kind of filter in html5lib, but I don't think anyone's tried implementing it yet",
        "1d78dc8ed51214e518b5114fe24490ae (14:39): Yeh, I personally want to use it to test normalization ideas (like when to leave %HH alone or when to normalize wide characters to UTF-8 %HH etc.).",
        "cc097e0d7183ae8436e7df709553c8c0 (14:39): edb259c0e0038f38bb200bc20c8cbf7e: [DOCTYPE] should say &quot;Activating Browser Modes with Doctype&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (14:40): 1d78dc8ed51214e518b5114fe24490ae: Why do you want to do it as part of html5lib, rather than as a feature in whatever application is using the parsed document?",
        "cc097e0d7183ae8436e7df709553c8c0 (14:43): edb259c0e0038f38bb200bc20c8cbf7e: i wonder if there's something that has been added that should be included in the Impact on Web Architecture list",
        "1d78dc8ed51214e518b5114fe24490ae (14:44): Phillip: I basically want to experiment with normalizing and resolving similar to how browsers do.  I can do that without a parser and just use test strings, but I wanted to compare with browsers and how they do it. Using html5lib could help with that.",
        "1d78dc8ed51214e518b5114fe24490ae (14:46): ab7faae5d7b250ea8606486575f8f79c: Part of the reason for this is I want to come up with a solution to solve *particular* normalizing/resolving bugs/differences between  browsers.",
        "f139aba52f9fa1394b4034a7954b2220 (14:46): ab7faae5d7b250ea8606486575f8f79c, clearing my cache fixed it",
        "f139aba52f9fa1394b4034a7954b2220 (14:47): It works in Safari, but only if you clear the cache before looking at the other one",
        "1d78dc8ed51214e518b5114fe24490ae (14:47): ab7faae5d7b250ea8606486575f8f79c: Hooking into htmlserializer.py seems like it might be the easiest way.",
        "1d78dc8ed51214e518b5114fe24490ae (14:48): But I don't know the code at all.",
        "ab7faae5d7b250ea8606486575f8f79c (14:48): f139aba52f9fa1394b4034a7954b2220: Ah, right",
        "ab7faae5d7b250ea8606486575f8f79c (14:49): f139aba52f9fa1394b4034a7954b2220: In IE6 in Wine I get &quot;Invalid character&quot; on the utf-16 page, and &quot;Object expected&quot; on the utf-8 page",
        "ab7faae5d7b250ea8606486575f8f79c (14:50): 1d78dc8ed51214e518b5114fe24490ae: Hmm, I'm only familiar with the parser code so I don't know what would be a good way to work with other parts of html5lib",
        "ab7faae5d7b250ea8606486575f8f79c (14:51): f139aba52f9fa1394b4034a7954b2220: (I get &quot;Invalid character&quot; on the utf-16 bit of http://philip.html5.org/demos/charset/polyglot-script.html too, but the other two say &quot;utf-8&quot; and &quot;iso-8859-1&quot; respectively)",
        "f139aba52f9fa1394b4034a7954b2220 (14:52): ab7faae5d7b250ea8606486575f8f79c, ok. I'll look at it later. i've got other stuff I need to do ow",
        "f139aba52f9fa1394b4034a7954b2220 (14:52): *now",
        "1d78dc8ed51214e518b5114fe24490ae (14:59): ab7faae5d7b250ea8606486575f8f79c: Thanks.  I'll investigate. And, I'll try to come up with some examples of what I'm trying to do to make things clearer.",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:00): cc097e0d7183ae8436e7df709553c8c0, URLs",
        "cc097e0d7183ae8436e7df709553c8c0 (15:01): edb259c0e0038f38bb200bc20c8cbf7e: ok",
        "ab7faae5d7b250ea8606486575f8f79c (15:05): Amazon emails me to say &quot;Amazon.co.uk's January Sale Must End Sunday 1st February&quot;, presumably just in time for the start of their February sale",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:13): I like &lt;!DOCTYPE html SYSTEM &quot;about:blank&quot;&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:13): I'm also amused by the implications of being strict about the content type when derefercing it.",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): yeah, about:blank could work",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): it's even more memorable than sgml-compat and already widely used",
        "ab7faae5d7b250ea8606486575f8f79c (15:15): I want &lt;!DOCTYPE html SYSTEM &quot;about:mozilla&quot;&gt;",
        "f139aba52f9fa1394b4034a7954b2220 (15:15): or about:robots :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): about:marca no longer works",
        "f139aba52f9fa1394b4034a7954b2220 (15:16): what was about:marca?",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): f139aba52f9fa1394b4034a7954b2220: IIRC, it redirected to Marc Andreessen's home page on people.netscape.com",
        "f139aba52f9fa1394b4034a7954b2220 (15:17): ok",
        "f139aba52f9fa1394b4034a7954b2220 (15:17): in NN4?",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:17): about:jwz",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:17): f139aba52f9fa1394b4034a7954b2220: and earlier",
        "ab7faae5d7b250ea8606486575f8f79c (15:17): http://www.jwz.org/gruntle/blowme.html",
        "f139aba52f9fa1394b4034a7954b2220 (15:17): edb259c0e0038f38bb200bc20c8cbf7e, which browser does that one work in?",
        "ab7faae5d7b250ea8606486575f8f79c (15:21): appreciates how Opera understands if you type &quot;/.&quot; into the address bar"
    ],
    "person_ids": [
        "f139aba52f9fa1394b4034a7954b2220",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "cc097e0d7183ae8436e7df709553c8c0",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "1d78dc8ed51214e518b5114fe24490ae"
    ]
}