{
    "id": "d795a828005b40d2ee747b8dc0b11be1",
    "messages": [
        "3e96424ecb2aa3aac0cac41d7d9277ee (12:11): hello ppl",
        "3e96424ecb2aa3aac0cac41d7d9277ee (12:12): i looked with fstat and found one httpd process that had fd open to all the vhosts on the server's log files, is this normal?",
        "3e96424ecb2aa3aac0cac41d7d9277ee (12:14): the httpd process opened all the log files of all the vhosts on the server according to fstat",
        "5d2b8c5990a6b644b88d2d3af22db8cf (12:19): frisbeboy: are you using threaded mpm e.g. worker?",
        "5d2b8c5990a6b644b88d2d3af22db8cf (12:19): niq: good morning,",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (12:19): no it isn't:-(",
        "5d2b8c5990a6b644b88d2d3af22db8cf (12:20): niq: well, morning then ;)",
        "a19bd3ed1d8807f7d2287f0263494cea (12:25): i remember reading someplace about a program or way to basically run an apache webserver with php off a cd rom? anyone heard or know of that?",
        "a19bd3ed1d8807f7d2287f0263494cea (12:32): anyone heard of running apache w/ php off cd?",
        "001eb4b1220636d2913a1418efcc3827 (12:32): i want to redirect a url &quot;/vfiles/55&quot; to &quot;getit.php?id=55&amp;view=t&quot;. i have: RedirectMatch permanent ^/vfiles/([0-9]+) [url]/getit.php?id=$1&amp;view=t",
        "001eb4b1220636d2913a1418efcc3827 (12:32): but the &amp; expands into the whole &quot;vfiles/[num]&quot;",
        "001eb4b1220636d2913a1418efcc3827 (12:33): how can i put amperands into the target url?",
        "0c467358086f221609d60347ae0a7734 (12:42): I just moved a site with chinese content to a new server. identical php and apache versions. but the chinese content on the new server is jibberish. one difference I see is in the headers put out: on the working server: Content-Type: text/html and on the non working server Content-Type: text/html; charset=UFT-8",
        "0c467358086f221609d60347ae0a7734 (12:42): but I'm not sure why the one adds the charset and the other does not",
        "3e96424ecb2aa3aac0cac41d7d9277ee (12:44): lamp: not sure dont think so",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (12:44): addcharset",
        "b0a90be919a9f920bb8ad2caca4e91f0 (12:44): addcharset is <a href=\"http://httpd.apache.org/docs-2.0/mod/mod_mime.html#addcharset\">http://httpd.apache.org/docs-2.0/mod/mod_mime.html#addcharset</a>",
        "001eb4b1220636d2913a1418efcc3827 (12:45): ffs, is the &amp; expansion in mod_alias a bug/feature",
        "001eb4b1220636d2913a1418efcc3827 (12:45): because i can't find any documentation on it",
        "0c467358086f221609d60347ae0a7734 (12:46): the AddCharset directives are identical on both servers",
        "001eb4b1220636d2913a1418efcc3827 (12:50): screw this, mod_rewrite stays the best",
        "0c467358086f221609d60347ae0a7734 (12:53): got it. AddDefaultCharset Off",
        "2400c8ba58351632e4a296f04f115305 (12:56): morning all :)",
        "2400c8ba58351632e4a296f04f115305 (12:57): is there a possibility to disable chunked transfer-encoding?",
        "2400c8ba58351632e4a296f04f115305 (12:58): i have some json-data, and i have to get rid of the 0xsdr in front and the 0 at the back .",
        "2400c8ba58351632e4a296f04f115305 (12:58): hope anyone can help :)",
        "001eb4b1220636d2913a1418efcc3827 (12:58): you can try",
        "001eb4b1220636d2913a1418efcc3827 (12:59): to not compile it into apache?",
        "2400c8ba58351632e4a296f04f115305 (12:59): i have never compiled an apache, ... is it complicated?",
        "001eb4b1220636d2913a1418efcc3827 (12:59): explain?",
        "2400c8ba58351632e4a296f04f115305 (12:59): please!",
        "001eb4b1220636d2913a1418efcc3827 (13:00): urm, no",
        "2400c8ba58351632e4a296f04f115305 (13:01): fifo_: just tell me what i have to do, which progz...",
        "5d2b8c5990a6b644b88d2d3af22db8cf (13:05): fajita: install?",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:05): lamp: install is Installing apache can be found at: <a href=\"http://httpd.apache.org/docs/2.2/install.html\">http://httpd.apache.org/docs/2.2/install.html</a> , 2.0 at <a href=\"http://httpd.apache.org/docs/2.0/install.html\">http://httpd.apache.org/docs/2.0/install.html</a> , 1.3 <a href=\"http://httpd.apache.org/docs/1.3/install.html\">http://httpd.apache.org/docs/1.3/install.html</a> or just apt-get install apache apache-common",
        "5d2b8c5990a6b644b88d2d3af22db8cf (13:05): wiesen_: there are documentation for compiling and installing apache httpd",
        "2400c8ba58351632e4a296f04f115305 (13:07): thank you! another way to avoid chunked transfer-encoding is not available?",
        "2400c8ba58351632e4a296f04f115305 (13:08): for example, when i don't have the opportunity to run my compiled apache on the server?",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:12): wiesen_: use HTTP/1.0",
        "2400c8ba58351632e4a296f04f115305 (13:13): niq: i heared about that, how do i have to do that?",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:13): why don't you want chunked encoding?",
        "2400c8ba58351632e4a296f04f115305 (13:14): i have an php script that returns json-data which must be in an specific format, but apache chunked encoding sets an 0x343 in front and an 0 in back",
        "2400c8ba58351632e4a296f04f115305 (13:15): with these front and end tags i can not use my data",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:15): your client is broken.  What is your client?",
        "2400c8ba58351632e4a296f04f115305 (13:15): FF and IE6",
        "2400c8ba58351632e4a296f04f115305 (13:16): why should be my client be broken?",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:16): lynx -dump the lot.  see what happens",
        "2400c8ba58351632e4a296f04f115305 (13:16): i'm sniffing all responses in fiddler",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:16): Any client that sends an HTTP/1.1 request MUST accept chunked data in response",
        "2400c8ba58351632e4a296f04f115305 (13:17): yes, thats okay, i'm sure my client would accept, but i have to receive absolutely clean json-data and the front and end tag is killing me",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:18): no.  You receive a stream of bytes.",
        "2400c8ba58351632e4a296f04f115305 (13:18): i'll paste, one second",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:18): paste?",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:18): No, nopaste",
        "2400c8ba58351632e4a296f04f115305 (13:18): i know",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:18): And knowing is half the battle!",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:19): wiesen_: Those tags are part of the protocol, not the data. They're not supposed to be seen by anything above the protocol layer. If you HTTP client delivers them to your application the HTTP client is not a proper HTTP client.",
        "2400c8ba58351632e4a296f04f115305 (13:20): 336c[[jsondata]] 0",
        "2400c8ba58351632e4a296f04f115305 (13:20): this is what it looks like",
        "2400c8ba58351632e4a296f04f115305 (13:20): and this is apache transfer mode tags, or?",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:21): look, if your client doesn't decode that, then use HTTP/1.0",
        "2400c8ba58351632e4a296f04f115305 (13:22): niq: and how can i do this on clientside?",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:22): GET / HTTP/1.0  ;)",
        "2400c8ba58351632e4a296f04f115305 (13:22): andersmo: how would you try to solve this? you mean client= browser?",
        "2400c8ba58351632e4a296f04f115305 (13:24): jink: where to implement such a statement? sorry that i'm that stupid ;)",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:25): wiesen_: what program gives you &quot;336c[[jsondata]] 0&quot;? A web browser? Or a custom HTTP client program?",
        "2400c8ba58351632e4a296f04f115305 (13:25): i have fiddler running",
        "2400c8ba58351632e4a296f04f115305 (13:25): debugging proxy",
        "2400c8ba58351632e4a296f04f115305 (13:26): andersmo: you know that?",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:26): Nope, I usually use snoop, tcpdump or ethereal when debugging protocol-layer problems. =)",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:27): that's fine.  But you're focussing on a non-problem",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:27): But anyway, why are the chunked encoding tags a problem? They're a part of the protocol, and are not part of the output from the protocol.",
        "2400c8ba58351632e4a296f04f115305 (13:27): but they do output in my data",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:28): If you actually see them from a client, the client is broken. The fact that they're there during HTTP transfer is perfectly normal =)",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:28): &quot;what can I blame for my php script being broken?&quot;",
        "2400c8ba58351632e4a296f04f115305 (13:28): andersmo: thats exactly my problem, as you can see above",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:28): And what client do you use?",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:28): telnet? =)",
        "2400c8ba58351632e4a296f04f115305 (13:28): telnet?!?",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:28): telnet is god or <a href=\"http://www.esqsoft.com/examples/troubleshooting-http-using-telnet.htm\">http://www.esqsoft.com/examples/troubleshooting-http-using-telnet.htm</a>",
        "2400c8ba58351632e4a296f04f115305 (13:30): andersmo: i use just browser and fiddler as proxy, nothing else",
        "2400c8ba58351632e4a296f04f115305 (13:30): i can try telnet, but i think it will be the same",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:31): Do you see chunked-encoding tags in the browser as well?",
        "2400c8ba58351632e4a296f04f115305 (13:32): andersmo: i'm surprised, in browser i don't see them, just the perfect json-data ... but how can that be?",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:33): wiesen_: See what I said at 10:17",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:35): wiesen_: The browser understands HTTP and decodes chunked encoding appropriately. The fiddler proxy just gives you the raw protocol data because that's usually what people busy with debygging do. =)",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:35): maybe the proxy fucks it up?",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:36): I wouldn't be surprised if it did. =)",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:36): ebkac",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:36): ebkac is Error between keyboard and chair",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:36): fajita: rfc?",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:36): andersmo: rfc is try <a href=\"http://www.faqs.org/rfcs/rfc\">http://www.faqs.org/rfcs/rfc</a> plus number.html",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:36): fajita: http?",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:36): andersmo: http is Hypertext Transfer Protocol; see &lt;URL:ftp://ftp.isi.edu/in-notes/rfc2616.txt&gt;. or rfc2616",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:37): wiesen_: RFC2616 ^ defines HTTP. It isn't a very difficult protocol to figure out, and you might save yourself a lot of time if you knew it. =)",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:39): servertokens jink.net",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:39): Apache",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:39): much better",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:39): better",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:39): No. Much worse.",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:39): ah, slow :)",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:40): modules book",
        "b0a90be919a9f920bb8ad2caca4e91f0 (13:40): modules book is <a href=\"http://people.apache.org/~niq/book\">http://people.apache.org/~niq/book</a>",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:40): (has the HTTP spec as an appendix)",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:40): the file &quot;book&quot; is an &quot;image/tiff&quot; ?",
        "7dcff74ec1c8812f6f9ca48fc780e3e2 (13:41): the flyer is ... that's what I have back from the publisher as of now",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:41): that link is a tiff, according to my seamonkey :)",
        "2400c8ba58351632e4a296f04f115305 (13:42): andersmo: thanks for the help, but i did not look at the raw data, the chunked encoding is in my payload too...",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:43): payload from what?",
        "2400c8ba58351632e4a296f04f115305 (13:44): i mean at the front and back of my [[json-objects]]",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:44): ...when output from what client?",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:45): is this public?",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:45): can we check it from here?",
        "9b8a04982a967b1914dfc58bd6c719d7 (13:45): can we help in troubleshooting?",
        "2400c8ba58351632e4a296f04f115305 (13:45): andersmo: i'm transferring the output directly to an ajax-widget. it works with correct data, but not with this.",
        "2400c8ba58351632e4a296f04f115305 (13:46): jink: sadly not public",
        "3f9e24f372de1c18c3993ee5f9f1adcd (13:47): wiesen_: The AJAX widget makes a HTTP request to the server, and gets data with chunked encoding back? How does that ajax widget make a HTTP request?",
        "2400c8ba58351632e4a296f04f115305 (13:48): good question, this is dojo-framework widget",
        "2400c8ba58351632e4a296f04f115305 (13:49): i bound it to an php file, quite similar to sql2json",
        "2400c8ba58351632e4a296f04f115305 (13:54): jink: you said something to force my client to http 1.0",
        "2400c8ba58351632e4a296f04f115305 (13:54): do you time to explain it to me how?",
        "9b8a04982a967b1914dfc58bd6c719d7 (14:05): wiesen_: i'm not sure Fx or IE can do it.  my Seamonkey can, however"
    ],
    "person_ids": [
        "3e96424ecb2aa3aac0cac41d7d9277ee",
        "5d2b8c5990a6b644b88d2d3af22db8cf",
        "7dcff74ec1c8812f6f9ca48fc780e3e2",
        "a19bd3ed1d8807f7d2287f0263494cea",
        "001eb4b1220636d2913a1418efcc3827",
        "0c467358086f221609d60347ae0a7734",
        "b0a90be919a9f920bb8ad2caca4e91f0",
        "2400c8ba58351632e4a296f04f115305",
        "9b8a04982a967b1914dfc58bd6c719d7",
        "3f9e24f372de1c18c3993ee5f9f1adcd"
    ]
}