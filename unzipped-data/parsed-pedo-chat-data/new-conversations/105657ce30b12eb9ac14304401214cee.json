{
    "id": "105657ce30b12eb9ac14304401214cee",
    "messages": [
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:33): how to use cvs diff to check what difference from my local file with cvs file?",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:33): I mean is the lastest cvs version file",
        "5546ae201c2cd6a170d61b18500b8b45 (13:33): Hipo, I have a function with variable argument list: like int sum(char n,...), if I declare a &quot;(void *) p = &amp;n&quot;, my first argument should be in *((int*)ps+1) ?",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:33): I tried to use 'cvs -q diff file' but nothing is shown",
        "007a84eb39595be220c41bda71bca738 (13:34): SonnyBurnett: NO!",
        "007a84eb39595be220c41bda71bca738 (13:34): SonnyBurnett: are you even listening?",
        "5546ae201c2cd6a170d61b18500b8b45 (13:34): lol",
        "13e8075f807472f21ec1d54333f4a1cb (13:34): fog_proxy: cvs diff -H will show you the syntax.",
        "5546ae201c2cd6a170d61b18500b8b45 (13:34): so youre are in both channels",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:35): infi: ah?it just show 'cvs server: Diffing .'",
        "5546ae201c2cd6a170d61b18500b8b45 (13:35): here's is C ... so is the correct channel",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:35): infi: I think you mean 'cvs diff --help'",
        "007a84eb39595be220c41bda71bca738 (13:35): &lt;mauke&gt; SonnyBurnett: (void *)p isn't a declaration",
        "007a84eb39595be220c41bda71bca738 (13:35): &lt;mauke&gt; and no",
        "19ea238c2355b6b8597ef311a8ab7fe0 (13:35): cvs diff local-file.c",
        "13e8075f807472f21ec1d54333f4a1cb (13:35): fog_proxy: (specify -H followed by a command name for command-specific help)",
        "13e8075f807472f21ec1d54333f4a1cb (13:36): fog_proxy: perhaps mine is out of date though, I use subversion.",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:36): infi: ok,thanks",
        "19ea238c2355b6b8597ef311a8ab7fe0 (13:36): if nothing is shown, there are no diffs",
        "13e8075f807472f21ec1d54333f4a1cb (13:36): oops, I misparsed anyway.  oh well.",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (13:36): SonnyBurnett: man stdarg",
        "19ea238c2355b6b8597ef311a8ab7fe0 (13:39): <a href=\"http://catb.org/~esr/jargon/html/I/indent-style.html\">http://catb.org/~esr/jargon/html/I/indent-style.html</a> &lt;&lt; hell, GNU style isn't even readable",
        "a72053d2f3ba466315e0ab97757bf7e5 (13:39): anyone have any suggestions for line markers for a c IDE ... breakpoint, bookmark, compile error, and compile warning are done",
        "a72053d2f3ba466315e0ab97757bf7e5 (13:41): perhaps a lock ... so a function cant be edited",
        "a72053d2f3ba466315e0ab97757bf7e5 (13:41): or line rather",
        "c6bf3cb3d8820b32300b1cb85399cc0d (13:43): infi: I have read the help, but seems no help :( . I just find -D can help me, if I use 'cvs diff -D '1 hour ago'', it works;but 'cvs diff' not work",
        "b1e58a99b1e3779a120f2e217d2aa23c (13:52): what is the command to see all the functions in a object file ?",
        "b1e58a99b1e3779a120f2e217d2aa23c (13:52): the two letter command ??",
        "007a84eb39595be220c41bda71bca738 (13:54): vi?",
        "22ede8b27951465656458530bf6751ee (13:54): nm?",
        "b1e58a99b1e3779a120f2e217d2aa23c (13:54): ya nm",
        "b1e58a99b1e3779a120f2e217d2aa23c (13:54): thanks iodine_",
        "4e2a324b3916aec61461cde993c0cff0 (14:07): i want to setup cvs. Can any one suggest some packages please",
        "16792d15bb74f08e6c86e54246cc65e3 (14:07): #devtools",
        "4e2a324b3916aec61461cde993c0cff0 (14:07): thank you but which tool you are using.",
        "16792d15bb74f08e6c86e54246cc65e3 (14:08): emacs, cp, tar, gzip.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:08): bk_ankur, you'd think this was a government server ;)",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:08): someone last night mentioned alternatives to cvs &amp; rcs",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:08): darcs was one i think",
        "66073e28cc75b8efe33a61ede80497a7 (14:08): darcs, svn, blah blah blah, theres a billion out there.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:09): snappy, he wants to be pointed to a couple good ones i think",
        "4e2a324b3916aec61461cde993c0cff0 (14:09): headmonkey , snappy   thankxs ..",
        "66073e28cc75b8efe33a61ede80497a7 (14:09): i sort of like rcs, it's very neat in a single use environment.",
        "66073e28cc75b8efe33a61ede80497a7 (14:09): user even",
        "13e8075f807472f21ec1d54333f4a1cb (14:11): Microsoft Visual SourceSafe!  bahaha no.",
        "b1e58a99b1e3779a120f2e217d2aa23c (14:12): 'ldd -u' show unused libraries.. what exactly does it mean by unused ?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:14): <a href=\"http://rafb.net/paste/results/CJgsC685.html\">http://rafb.net/paste/results/CJgsC685.html</a> it is a complex, derty, nearly obfuscated (but fully commented) snippet of source code. please no flaming. i cannot see more bugs, but I guess there are..please give a look, thanks.",
        "16792d15bb74f08e6c86e54246cc65e3 (14:16): legolas558: since when is y a vowel?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:16): jeffz: maybe i'm an &quot;ignorant lout&quot;, as somebody said before ;)",
        "16792d15bb74f08e6c86e54246cc65e3 (14:16): ;p",
        "8f76c07e5f2176150d2c1977607d12f2 (14:16): jeffz: isnt it?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:16): is it a consonant? wow..",
        "16792d15bb74f08e6c86e54246cc65e3 (14:17): aeiou are the vowels i learnt in my first year of school",
        "8f76c07e5f2176150d2c1977607d12f2 (14:18): jeffz: i didnt know if it was the same in English.",
        "8351f8765ec782ce42869889fca6ba49 (14:19): vimman: linked but not used?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:20): jeffz: do you see line 77/78? it is the last bug i've fixed, but i'm not so sure about the overall reliability..",
        "8f76c07e5f2176150d2c1977607d12f2 (14:21): for me, the rule is: when you have written it, be almost sure that it is crap.",
        "ab83e72bc5b788b2440732d3091d6a9d (14:21): well that was strange",
        "ab83e72bc5b788b2440732d3091d6a9d (14:22): getting integers passed as a double isn't good",
        "bc575f5080528bddfa725b400871812b (14:24): hey. Can unix sockets be used to send signals?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:24): jeffz: the problem is that i never get BOW",
        "bc575f5080528bddfa725b400871812b (14:25): or let's rephrase: Do they work well for such things?",
        "8f76c07e5f2176150d2c1977607d12f2 (14:25): vegai: why they shouldnt..but consider how insecure it could be.",
        "8351f8765ec782ce42869889fca6ba49 (14:26): vimman: \u00b4Displays any unreferenced, or unused dependencies. If an unreferenced dependency is not bound to by other objects loaded with filename, the dependency is also flagged as unused. Cyclic dependencies that are not bound to from objects outside of the cycle are also deemed unreferenced.\u00aa See <a href=\"http://docs.sun.com/app/docs/doc/816-5165/6mbb0m9k5?a=view\">http://docs.sun.com/app/docs/doc/816-5165/6mbb0m9k5?a=view</a>",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:32): i get command line argumentsin my C prog...now how do i check the size of each argument passed",
        "13e8075f807472f21ec1d54333f4a1cb (14:33): strlen",
        "bc575f5080528bddfa725b400871812b (14:33): legolas558: I was just looking at D-BUS's rather handy signal mechanisms and wondered whether there's a better, classical way of doing about the same",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:34): infi: okie..,..anything else other than that",
        "8f76c07e5f2176150d2c1977607d12f2 (14:34): vegai: sorry, i dont know about that..",
        "d10823b88ae531ba462ec0253fd5103e (14:34): tuxtoti: iterate until you reach 0 (that's what strlen does)",
        "bc575f5080528bddfa725b400871812b (14:34): of course, there's signal(2)",
        "bc575f5080528bddfa725b400871812b (14:34): for basic stuff, anyway.",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:35): loufoque: oh..yeah..thanks...",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:35): Hi. Does anyone know if a syscall will be made when calling send() with MSG_WAIT and there is space in the buffers?",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:36): On Linux, of course.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:37): intgr, the buffers are in the kernel, are they not ?",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:37): I don't know.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:38): i think they are....if you were doing a clib fputs() the stream buffers would be in userspace, but i think the i/o buffers are in the kernel",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:38): Right.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:39): if you want to send info without a syscall() , maybe you can mmap() some space and do it that way...i dunno...never used mmap() myself",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:39): Nah, just wondering.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:40): wondering if you can send() in a signal handler ? ;)",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:40): Since Windows NT keeps the overlapped socket buffers in userspace.",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:40): thats what mmap() would do on linux",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:40): No :)",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:40): Ok",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:41): mmap a socket?",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:41): i think you can",
        "5004ee9731f5dd9c7ab8ee1c02922c56 (14:41): Interesting",
        "8f76c07e5f2176150d2c1977607d12f2 (14:42): now i have better fixed it, but i use a goto. does anybody know how to remove it? <a href=\"http://rafb.net/paste/results/HYEY1t82.html\">http://rafb.net/paste/results/HYEY1t82.html</a>",
        "d10823b88ae531ba462ec0253fd5103e (14:46): legolas558: use the delete key",
        "8f76c07e5f2176150d2c1977607d12f2 (14:47): loufoque: ah. ah.",
        "d10823b88ae531ba462ec0253fd5103e (14:48): or you could just copy those 4 lines",
        "d10823b88ae531ba462ec0253fd5103e (14:48): hmm no, won't work",
        "8f76c07e5f2176150d2c1977607d12f2 (14:49): loufoque: i think i'll remake the whole routine :(",
        "8f76c07e5f2176150d2c1977607d12f2 (14:49): or use regex..",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:50): is ther a standard lib function to append a string to another string ....i know ther is strcpy...but then it'll jus do a copy..",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (14:51): legolas558: make a save_character function. call it.",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:51): i want something like the '.' operator whihc will concatenate in perl",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (14:51): tuxtoti: strcat, or sprintf.",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (14:51): tuxtoti: remember, you might have to reallocate memory",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (14:51): tuxtoti: the destination buffer needs to be big enough.",
        "d10823b88ae531ba462ec0253fd5103e (14:52): maybe you could add another variable",
        "d10823b88ae531ba462ec0253fd5103e (14:52): like this",
        "d10823b88ae531ba462ec0253fd5103e (14:52): <a href=\"http://rafb.net/paste/results/TXQNGO45.html\">http://rafb.net/paste/results/TXQNGO45.html</a>",
        "8f76c07e5f2176150d2c1977607d12f2 (14:52): noselasd: probably better.",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:52): noselasd: yeah will take care..its actually a pointer..",
        "8f76c07e5f2176150d2c1977607d12f2 (14:52): loufoque: mmh..i'll rework the code.",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (14:52): tuxtoti: the buffer still needs to be big enough :-)",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (14:53): tuxtoti: string are usually a pointer",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:53): noselasd: oh..okie..",
        "7cef9c1c9f357cd9fd14c58a62f0d51d (14:53): Owe: thanks..",
        "d10823b88ae531ba462ec0253fd5103e (14:54): tuxtoti: char buffer[12]; strcpy(buffer, &quot;hello &quot;); strcpy(buffer+6, &quot;world&quot;);",
        "d10823b88ae531ba462ec0253fd5103e (14:55): or you could write strcat(buffer, &quot;world&quot;), which would be slower",
        "b1e58a99b1e3779a120f2e217d2aa23c (14:55): tuxtoti:",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (14:58): and maybe make &quot;hello &quot; a #define, and replace 6 by sizeof(STRING_HELLO_)",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (14:58): oh no, thats 7 i guess",
        "a72053d2f3ba466315e0ab97757bf7e5 (14:58): or maybe just echo &quot;hello world&quot; from the shell and never call your c code ;)",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (14:59): strlen(STRING_HELLO_)==sizeof(STRING_HELLO_)-1 i guess",
        "d10823b88ae531ba462ec0253fd5103e (14:59): printf(&quot;%zd\\n&quot;, sizeof(&quot;hello &quot;)-1); &lt;-- 6",
        "d10823b88ae531ba462ec0253fd5103e (15:00): you don't need #defines",
        "8f76c07e5f2176150d2c1977607d12f2 (15:00): owe: for wide char strings things can be worse..",
        "b515e18aa3fbe7d264d7ca5a95ef73e1 (15:00): but char str_hello[]=&quot;hello &quot;; sizeof(str_hello)==7",
        "d10823b88ae531ba462ec0253fd5103e (15:01): what's the point of using a variables when it works with literals ?",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5 (15:01): Not to be confused with char *str_hello = &quot;hello &quot;;",
        "6fbd4bb3ecffe7f170a78362b3f37cc7 (15:17): work&quot;)"
    ],
    "person_ids": [
        "c6bf3cb3d8820b32300b1cb85399cc0d",
        "5546ae201c2cd6a170d61b18500b8b45",
        "007a84eb39595be220c41bda71bca738",
        "13e8075f807472f21ec1d54333f4a1cb",
        "19ea238c2355b6b8597ef311a8ab7fe0",
        "6d5a7a0b7c4fd4d86ed3eb6b675c88d5",
        "a72053d2f3ba466315e0ab97757bf7e5",
        "b1e58a99b1e3779a120f2e217d2aa23c",
        "22ede8b27951465656458530bf6751ee",
        "4e2a324b3916aec61461cde993c0cff0",
        "16792d15bb74f08e6c86e54246cc65e3",
        "66073e28cc75b8efe33a61ede80497a7",
        "8f76c07e5f2176150d2c1977607d12f2",
        "8351f8765ec782ce42869889fca6ba49",
        "ab83e72bc5b788b2440732d3091d6a9d",
        "bc575f5080528bddfa725b400871812b",
        "7cef9c1c9f357cd9fd14c58a62f0d51d",
        "d10823b88ae531ba462ec0253fd5103e",
        "5004ee9731f5dd9c7ab8ee1c02922c56",
        "b515e18aa3fbe7d264d7ca5a95ef73e1",
        "6fbd4bb3ecffe7f170a78362b3f37cc7"
    ]
}