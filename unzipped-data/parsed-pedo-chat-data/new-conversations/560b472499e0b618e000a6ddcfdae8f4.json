{
    "id": "560b472499e0b618e000a6ddcfdae8f4",
    "messages": [
        "ade2ba280c823b6462a992b994ecd802 (23:22): strpart()",
        "878b627b013f0c465ec2be26325ce80d (23:23): or foo[0:4]",
        "ade2ba280c823b6462a992b994ecd802 (23:27): my gvim just died from a SIGSEGV",
        "878b627b013f0c465ec2be26325ce80d (23:27): what were you doing?",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:27): jamessan or Zathrus, are you here?",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:28): hey, jamessan thanks for all the help",
        "878b627b013f0c465ec2be26325ce80d (23:28): yup :)",
        "fb2c4f3e688db2a676f292cd15961a59 (23:28): groken: yup",
        "fb2c4f3e688db2a676f292cd15961a59 (23:28): mgedmin: I had that happen last week.",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:28): i have one more question, problem",
        "ade2ba280c823b6462a992b994ecd802 (23:29): I switched back to the gvim window after an svn commit",
        "ade2ba280c823b6462a992b994ecd802 (23:29): usually this gets me a popup asking to reload the files because svn changes their mtime",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:29): this is the output from the expression:",
        "ade2ba280c823b6462a992b994ecd802 (23:29): this time it caused a sigsegv",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:29): &lt;DEEP ID#&gt;&lt;br&gt;",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:29): Greg: 1(a)-2(a): &lt;/DEEP ID#&gt;",
        "ade2ba280c823b6462a992b994ecd802 (23:29): sadly, no core file",
        "fb2c4f3e688db2a676f292cd15961a59 (23:29): jamessan: in my case, searching a 500+ MB file for something that vim claimed didn't exist (it did, but the first match was above the current location)",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:30): 2 lines, i need to make deep surround whatever is before the br and make greg a new (not nested) tag",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:30): er",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:30): hmmm, some are like that already...",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:31): &lt;DEEP ID#&gt;&amp;nbsp;2&lt;/DEEP ID#&gt;",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:31): &lt;Greg&gt;3(b): no t.p.&lt;/Greg&gt;",
        "e6e4d24d239dcaea384afc5f352950d1 (23:31): fastcgi configuration help :(",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:31): that is how i would like all of them, it appears that some are like that and some are like the prior post",
        "fb2c4f3e688db2a676f292cd15961a59 (23:31): groken: remember that bit about your input file being hosed? Yeah... =)",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:31): tell me about it Zathrus :)",
        "e6e4d24d239dcaea384afc5f352950d1 (23:31): it really isn't much work, I'm just as uncertain as a ... ?bunny?",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:32): i try not to ask too many questions to the clients Zathrus",
        "fb2c4f3e688db2a676f292cd15961a59 (23:32): I just curse at them when I hope they're not listening.",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:33): i was talking with my boss, i guess they were storing a db in word... (!?!)",
        "fb2c4f3e688db2a676f292cd15961a59 (23:34): is it always DEEP?",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:35): it appears that the first line of a new record always contains the string &quot;DEEP&quot;",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:36): that is going off the 10 or so lines of the 28714 that i have bothered to read of course...",
        "9f9bc97e867c5f136eec3cc23ddfa126 (23:36): mgedmin: you can reproduce it ?",
        "ade2ba280c823b6462a992b994ecd802 (23:36): not intentionally",
        "ade2ba280c823b6462a992b994ecd802 (23:36): I've encountered a few internal errors during normal usage, but none were reproducible",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:40): Zathrus, i actually just found an odd bug in the file output",
        "fb2c4f3e688db2a676f292cd15961a59 (23:42): groken: :%s/\\(&lt;DEEP ID#&gt;\\_.\\{-}&lt;br&gt;\\)\\_s*\\([^:]\\{-}\\):\\_s*\\([^:]\\{-}\\)\\_s*&lt;\\/DEEP ID#&gt;/\\1&lt;\\/DEEP ID#&gt;\\r&lt;\\2&gt;\\3&lt;\\/\\2&gt;/",
        "fb2c4f3e688db2a676f292cd15961a59 (23:42): I think.",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:42): look at this first though",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:42): &lt;p&gt;&lt;span style='color:red'&gt;To the Reader: ?\u00edTo the Ladies and",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:42): Gentlewoemen of England?\u00ec signed ?\u00edRobert Baron?\u00ec&lt;/span&gt;&lt;/p&gt;",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:43): that was the orig",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:43): it became this:",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:43): &lt;&lt;span style='color&gt;red'&gt;To the Reader: To the Ladies and",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:43): Gentlewoemen of England signed Robert Baron&lt;/span&gt;&lt;/&lt;span style='color&gt;",
        "fb2c4f3e688db2a676f292cd15961a59 (23:43): yah. Some things you may have to fix by hand.",
        "fb2c4f3e688db2a676f292cd15961a59 (23:43): or toss it all and do it in a much, much more difficult way",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:44): the accented chars are gone and there are odd tags",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:44): ok, i see why the odd tags are there...",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:44): however, why did the accent chars go away?",
        "fb2c4f3e688db2a676f292cd15961a59 (23:45): dunno",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:48): grrrrrrr",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:51): accent chars aren't accent chars, they were left and right quotes",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (23:51): grrrrrr",
        "c373aafc43a48d03305f817943e5c17e (00:09): how do i close a window without closing the buffer?",
        "56c5227a325400db491d9bbebfd8a409 (00:14): equuelus: just :q",
        "fb2c4f3e688db2a676f292cd15961a59 (00:17): equuelus: Ctrl-W c",
        "878b627b013f0c465ec2be26325ce80d (00:20): or :q",
        "878b627b013f0c465ec2be26325ce80d (00:20): unless equuelus has the terms mixed up and wants to close a buffer without closing the window",
        "972c96cafd2c72229303207d7629cac9 (00:21): Is there something like: &quot;What is new in Vim 7&quot;?",
        "878b627b013f0c465ec2be26325ce80d (00:21): zultan: :he new-7",
        "c373aafc43a48d03305f817943e5c17e (00:21): jamessan what about the latter?",
        "878b627b013f0c465ec2be26325ce80d (00:22): equuelus: :enew | bd #",
        "972c96cafd2c72229303207d7629cac9 (00:22): jamessan: Cool. Thanks.",
        "972c96cafd2c72229303207d7629cac9 (00:24): Tabs are cool. :-)",
        "b803723c1734149d4a6fbc7fcaf64ff9 (00:27): does anyone remember the keystrokes/shortcut for opening a header file whose path has been set?",
        "878b627b013f0c465ec2be26325ce80d (00:28): gf",
        "b803723c1734149d4a6fbc7fcaf64ff9 (00:28): that was quick. awesome, thanks, jamessan",
        "0792377b948579515cfdf726e83cbc23 (00:44): KimuSan^: :help fnamemodify()",
        "0792377b948579515cfdf726e83cbc23 (00:44): KimuSan^: and what you probably really need is :help expand()",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (00:53): how do i set the encoding to ucs-2?",
        "6b226aaac03cc8f24b42b4eae2dc7a2b (00:57): oh... you need to use set... got it now",
        "0792377b948579515cfdf726e83cbc23 (00:57): fnamemodify will",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:04): hey guys. is there a way to use a wildcard like * to open multiple files from Vim? I tried `e file*.txt` and `vi file*.txt` and got E77: Too many file names",
        "fc6cf5095c38a36eff77cf32d101a745 (01:07): axolx: try other wildcards. * returns too many file names (uh, this one is explicit).",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:09): jerome: just tried `e file[0-9].txt` and got the same error. what type of wild-card are you saying i should try?",
        "fc6cf5095c38a36eff77cf32d101a745 (01:16): axolx: i don't really how many buffers you can actually start with",
        "4c8b40018f893d4384fcfe60302cb46a (01:21): hi all, i know i can reveal whitespace chars using list and listchars, but how do i show *all* whitespace chars (not just the ones in my listchars)?",
        "4c8b40018f893d4384fcfe60302cb46a (01:23): (eg, i don't know what the name of the utf-8 whitespace sequence '0xc2 0xa0' is, but i'd like to see that it's there, hiding among my regular '0x20' spaces)",
        "fb2c4f3e688db2a676f292cd15961a59 (01:24): axolx: try use :args  -- although I'm sure there's other ways to do it without stomping on the arglist.",
        "fb2c4f3e688db2a676f292cd15961a59 (01:24): s/use/using/",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:26): Zathrus:  never used :args. i'll look into the docs. thanks",
        "fb2c4f3e688db2a676f292cd15961a59 (01:27): jerome: there is no real limit to the number of buffers you can have open; the issue is that :e, :o, etc. expect a single filename.",
        "fc6cf5095c38a36eff77cf32d101a745 (01:28): yep, but he said 'vim file*.txt' too",
        "fc6cf5095c38a36eff77cf32d101a745 (01:29): anyway, :he messages should enlight us",
        "4c8b40018f893d4384fcfe60302cb46a (01:29): actually, listchars has an nbsp for my particular problem",
        "4c8b40018f893d4384fcfe60302cb46a (01:30): so never mind i guess",
        "4c8b40018f893d4384fcfe60302cb46a (01:30): does anybody know how to make retab and == automatically convert nbsp's to regular spaces?",
        "4c8b40018f893d4384fcfe60302cb46a (01:31): or even how to do this manually?",
        "4c8b40018f893d4384fcfe60302cb46a (01:31): (using regex search/replace)",
        "499717841b34da985bbe45eee9a61a4b (01:37): how can I save all my :abbr ?",
        "61894b21be75260c4964065b1eecec4d (01:38): axolx, :n *.txt",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:41): lpc: is `n` the abbreviation for `new`? if so, doesnt this edit new (as in blank) files? i want to edit existing files",
        "499717841b34da985bbe45eee9a61a4b (01:41): any ideas?",
        "499717841b34da985bbe45eee9a61a4b (01:41): mkexrc doesnt save them apparently",
        "61894b21be75260c4964065b1eecec4d (01:42): on existing vim, you can say :n *.txt and it opens the first one",
        "61894b21be75260c4964065b1eecec4d (01:42): then you can do :n again to move on the list",
        "61894b21be75260c4964065b1eecec4d (01:43): you can even do :n `find / -name '*.txt' \\| xargs grep 'foothingy' \\| cat`",
        "61894b21be75260c4964065b1eecec4d (01:43): that cat at the end is to avoid the xargs errors freaking out vim",
        "61894b21be75260c4964065b1eecec4d (01:44): I mean grep, which exits with an error value if it doesn't find the pattern",
        "61894b21be75260c4964065b1eecec4d (01:45): if you're having trouble with 'vi *.txt'  then it's not vi, it's the shell",
        "61894b21be75260c4964065b1eecec4d (01:45): well, make that vim",
        "61894b21be75260c4964065b1eecec4d (01:45): johanisburg, what about :mks",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:47): lpc: im using zsh. you think that may be the problem? * expands well outside of Vim",
        "61894b21be75260c4964065b1eecec4d (01:48): depends on OS",
        "61894b21be75260c4964065b1eecec4d (01:48): some OSes have a limited arg length",
        "61894b21be75260c4964065b1eecec4d (01:49): try some other command with *.txt",
        "61894b21be75260c4964065b1eecec4d (01:49): eg, cat *.txt /tmp/foofile",
        "61894b21be75260c4964065b1eecec4d (01:49): it should fail the same if it's the shell",
        "7d84dff7cea4398eaf9cd4e8bf221f19 (01:57): im using debian sarge . like i said before * has never failed outside of Vim",
        "61894b21be75260c4964065b1eecec4d (01:58): so what's the problem?",
        "61894b21be75260c4964065b1eecec4d (01:58): :e only works with one filename",
        "61894b21be75260c4964065b1eecec4d (01:58): :n works with several",
        "61894b21be75260c4964065b1eecec4d (01:59): see :help next_f",
        "172acf7d320d310787a351a36dbae3f8 (05:04): thought so lol",
        "172acf7d320d310787a351a36dbae3f8 (05:04): but yeh, I really do love gvim now that it has built in ftp features",
        "172acf7d320d310787a351a36dbae3f8 (05:04): not even textmate has that!",
        "8bece2647a39db763401c1e98abe5854 (05:06): vim has had it since forever",
        "8bece2647a39db763401c1e98abe5854 (05:06): like 6.0 had it iirc.",
        "8bece2647a39db763401c1e98abe5854 (05:07): it's just a vimscript"
    ],
    "person_ids": [
        "ade2ba280c823b6462a992b994ecd802",
        "878b627b013f0c465ec2be26325ce80d",
        "6b226aaac03cc8f24b42b4eae2dc7a2b",
        "fb2c4f3e688db2a676f292cd15961a59",
        "e6e4d24d239dcaea384afc5f352950d1",
        "9f9bc97e867c5f136eec3cc23ddfa126",
        "c373aafc43a48d03305f817943e5c17e",
        "56c5227a325400db491d9bbebfd8a409",
        "972c96cafd2c72229303207d7629cac9",
        "b803723c1734149d4a6fbc7fcaf64ff9",
        "0792377b948579515cfdf726e83cbc23",
        "7d84dff7cea4398eaf9cd4e8bf221f19",
        "fc6cf5095c38a36eff77cf32d101a745",
        "4c8b40018f893d4384fcfe60302cb46a",
        "499717841b34da985bbe45eee9a61a4b",
        "61894b21be75260c4964065b1eecec4d",
        "172acf7d320d310787a351a36dbae3f8",
        "8bece2647a39db763401c1e98abe5854"
    ]
}