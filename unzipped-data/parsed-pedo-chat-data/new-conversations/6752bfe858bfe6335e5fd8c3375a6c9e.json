{
    "id": "6752bfe858bfe6335e5fd8c3375a6c9e",
    "messages": [
        "2c39bccd623947fa6224ea57d2a727de (17:17): in the GNOME Terminal, is there a &quot;clear&quot; that removes all text so that when I scroll up after an operation I hit the place where I invoked &quot;clear&quot; rather than going back in history",
        "b25b6b77a0087ff8385941e5545d32ea (17:18): 2c39bccd623947fa6224ea57d2a727de: What do you mean &quot;go back in history&quot;? Are you scrolling through your input history or just scrolling up the screen?",
        "b25b6b77a0087ff8385941e5545d32ea (17:18): s/screen/output/",
        "ab7faae5d7b250ea8606486575f8f79c (17:19): 2c39bccd623947fa6224ea57d2a727de: Do you mean something like the &quot;clear&quot; command?",
        "2c39bccd623947fa6224ea57d2a727de (17:20): ab7faae5d7b250ea8606486575f8f79c, yes",
        "2c39bccd623947fa6224ea57d2a727de (17:20): b25b6b77a0087ff8385941e5545d32ea, scrolling up the output",
        "ab7faae5d7b250ea8606486575f8f79c (17:21): 2c39bccd623947fa6224ea57d2a727de: I suggest using the &quot;clear&quot; command, then",
        "b25b6b77a0087ff8385941e5545d32ea (17:21): ab7faae5d7b250ea8606486575f8f79c: But clear (in gnome-terminal at least) just places the existing output further up in the scroll history, it doesn't remove it",
        "b25b6b77a0087ff8385941e5545d32ea (17:21): If that makes sense",
        "2c39bccd623947fa6224ea57d2a727de (17:21): ab7faae5d7b250ea8606486575f8f79c, I know about clear, it doesn't work as I want",
        "b25b6b77a0087ff8385941e5545d32ea (17:22): doesn't really know how to refer to the total amount of output that one can scroll over",
        "b25b6b77a0087ff8385941e5545d32ea (17:22): wonders if there is an easy way to make a suicidal subprocess in Python",
        "b07211a0c7cb119232799d2119cea90f (17:23): b25b6b77a0087ff8385941e5545d32ea: &quot;buffer&quot;, I believe",
        "b25b6b77a0087ff8385941e5545d32ea (17:23): Specifically I want something that will automatically kill itself after some timeout if it didn't already die but without having to do proc.wait()",
        "b25b6b77a0087ff8385941e5545d32ea (17:24): (which means that killableprocess.py isn't itself quite enough afaict)",
        "b25b6b77a0087ff8385941e5545d32ea (17:24): b07211a0c7cb119232799d2119cea90f: Ah, yes, that would be it",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:25): b25b6b77a0087ff8385941e5545d32ea: I cherry-picked a patch that was supposed to address one startup crash on intrepid",
        "b25b6b77a0087ff8385941e5545d32ea (17:26): 2c39bccd623947fa6224ea57d2a727de: You can do Terminal - Reset and Clear in the menu, if that helps",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:26): It runs for me on Windows 7",
        "b25b6b77a0087ff8385941e5545d32ea (17:26): b8810fee2f4a71f849f3f7409546d1d9: It worked after I didn't go through the profile manager",
        "b25b6b77a0087ff8385941e5545d32ea (17:26): the codepath startup -&gt; profile manager -&gt; running instance seems to be the broken one",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:27): apparently the crash at startup also happens with fresh profile on the Mozilla servers. I wonder why it works for me.",
        "2c39bccd623947fa6224ea57d2a727de (17:27): b25b6b77a0087ff8385941e5545d32ea, &quot;reset&quot; is a command",
        "2c39bccd623947fa6224ea57d2a727de (17:27): thanks",
        "2c39bccd623947fa6224ea57d2a727de (17:28): it keeps input history and resets output",
        "2c39bccd623947fa6224ea57d2a727de (17:28): neato",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:29): b25b6b77a0087ff8385941e5545d32ea, 2c39bccd623947fa6224ea57d2a727de: the foofoo case looks like the DOM and the CSS render tree get out of sync. I have no idea why. I'll investigate. thanks",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): 2c39bccd623947fa6224ea57d2a727de: &quot;reset&quot; doesn't seem to clear the scrollback history, at least in Konsole",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): so it's not really any different to &quot;clear&quot;",
        "2c39bccd623947fa6224ea57d2a727de (17:29): ab7faae5d7b250ea8606486575f8f79c, it's different in GNOME Terminal",
        "ab7faae5d7b250ea8606486575f8f79c (17:30): (except that reset is more helpful if e.g. you've catted a binary file and it's messed up all the terminal output state)",
        "2c39bccd623947fa6224ea57d2a727de (17:30): actually tested it",
        "ab7faae5d7b250ea8606486575f8f79c (17:31): 2c39bccd623947fa6224ea57d2a727de: I'm not doubting you, just wondering if it's a terminal-dependent thing, which apparently it is, so that's okay now :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:53): doesn't crash for me on Windows XP, either",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:58): Man, this really isn't fun :\\",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:59): &lt;http://www.w3.org/2002/01/tr-automation/tr.rdf&gt; is crazy",
        "b25b6b77a0087ff8385941e5545d32ea (18:00): a11aabeeceeae6b8cb5d12ea06b56554: Doesn't RDF make consuming arbitary data foolproof, even if you have no idea what the semantics of the data are?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:01): I looked at one RDF lib for Python, and pretty much concluded, &quot;WTF is this on about?&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:01): I don't want a fucking graph. I want the data in that file.",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:02): a11aabeeceeae6b8cb5d12ea06b56554: the data is a graph. there's no tree. these aren't the droids you are looking for.",
        "ab7faae5d7b250ea8606486575f8f79c (18:02): It looks like a very tree-shaped graph",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:02): Touch?\u00a9 ab7faae5d7b250ea8606486575f8f79c.",
        "b25b6b77a0087ff8385941e5545d32ea (18:02): a11aabeeceeae6b8cb5d12ea06b56554: Curiously I did exactly the same thing with exactly that file last time you were working on this :)",
        "a924fb58d2c25874322f4e5126f608b9 (18:03): They hide the non-tree links to fool you",
        "2c39bccd623947fa6224ea57d2a727de (18:03): it looks suitable for line by line processing :)",
        "ab7faae5d7b250ea8606486575f8f79c (18:03): a11aabeeceeae6b8cb5d12ea06b56554: Can't you just use regular expressions?",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:03): ab7faae5d7b250ea8606486575f8f79c: Hey, the XML parsing isn't the issue.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:03): What's in &lt;FirstEdition&gt; seems more or less random",
        "b25b6b77a0087ff8385941e5545d32ea (18:04): Although I think I didn't mind the graphiness so much.",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:04): a11aabeeceeae6b8cb5d12ea06b56554: XML-data is self-describing",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:05): What the\u201a\u00c4\u00b6 XML went from /REC-xml to /xml/",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:05): so doc:version-of doesn't even work",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:05): a11aabeeceeae6b8cb5d12ea06b56554: does it work if you reference URIs and follow redirects?",
        "b25b6b77a0087ff8385941e5545d32ea (18:06): I think I got hung up on the fact that rdflib seemed to want me to learn sparql just to access any data",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:06): b25b6b77a0087ff8385941e5545d32ea: Me too",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:07): b8810fee2f4a71f849f3f7409546d1d9: It doesn't actually redirect, it just treats them as identical",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:13): Also, if I just want to get what the current undated TR is, using doc:versionOf won't always work because of PERs",
        "2c39bccd623947fa6224ea57d2a727de (18:16): b8810fee2f4a71f849f3f7409546d1d9, seems you ended up in a wiki edit war :/",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:16): 2c39bccd623947fa6224ea57d2a727de: yeah"
    ],
    "person_ids": [
        "2c39bccd623947fa6224ea57d2a727de",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b07211a0c7cb119232799d2119cea90f",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}