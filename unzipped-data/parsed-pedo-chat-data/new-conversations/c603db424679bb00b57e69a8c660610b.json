{
    "id": "c603db424679bb00b57e69a8c660610b",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (06:58): 8c8837db54a2907cacd8633547977e33: thanks",
        "8c8837db54a2907cacd8633547977e33 (06:58): np",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:59): if you have any firefox or safari bugs, those are even more valuable... the test is already a mess in IE, we don't really need to add more IE bugs :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (06:59): but i'll try this one",
        "8c8837db54a2907cacd8633547977e33 (07:00): I know; I should skim through the list of bugs I'm CCed on and see if there are any that have been around awhile",
        "8c8837db54a2907cacd8633547977e33 (07:01): 69b0d3dfe919a6b860a9fac82de52a7e: btw, your use of text-shadow is nice, and I wish Gecko supported it, but (I'd hope!) you're not going to be able to get accurate rendering with it, unless you're just checking that it gets DOMified",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:09): why?",
        "8c8837db54a2907cacd8633547977e33 (07:15): 69b0d3dfe919a6b860a9fac82de52a7e: surely CSS wouldn't prescribe exact rendering for text-shadow, would it?",
        "69b0d3dfe919a6b860a9fac82de52a7e (07:39): 8c8837db54a2907cacd8633547977e33_: in the extreme case of there not being a blur radius, sure",
        "1adba86c435b5fe0f7ea043370b1636b (07:40): finds it rather odd that 8c8837db54a2907cacd8633547977e33_ and 69b0d3dfe919a6b860a9fac82de52a7e are having two separate conversations in two different channels on two different networks",
        "8c8837db54a2907cacd8633547977e33 (08:04): 69b0d3dfe919a6b860a9fac82de52a7e: https://bugzilla.mozilla.org/show_bug.cgi?id=98694 might be reasonable",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:05): can't test :hover from script",
        "8c8837db54a2907cacd8633547977e33 (08:13): ah, point",
        "65325d50b2e25aca54bc871b89758c9c (08:23): you could require the mouse to be in the window and ensure that the feature which should be in :hover covers the whole page and then use getComputedStyle",
        "65325d50b2e25aca54bc871b89758c9c (08:23): (:hover on a column, yuck)",
        "65325d50b2e25aca54bc871b89758c9c (08:25): that one's not clearly justified by standards I don't think",
        "65325d50b2e25aca54bc871b89758c9c (08:25): even if it were testable",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:25): i don't want to require much of reporters at all :-)",
        "8c8837db54a2907cacd8633547977e33 (08:29): 69b0d3dfe919a6b860a9fac82de52a7e: &lt;https://bugzilla.mozilla.org/show_bug.cgi?id=312354&gt; might fit a bill",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:40): 26 tests to go",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:40): 8c8837db54a2907cacd8633547977e33: looking",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:41): 8c8837db54a2907cacd8633547977e33: E4X isn't old enough",
        "8c8837db54a2907cacd8633547977e33 (08:42): 69b0d3dfe919a6b860a9fac82de52a7e: don't need E4X, just something that will do the conversion -- |var c = node.textContent = {toString: function() { return &quot;string&quot;; }};| would do the trick -- is c a string or an object?",
        "8c8837db54a2907cacd8633547977e33 (08:42): or at least that's how I understand it",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:42): oh",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:42): looks closer",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:45): typeof(window.name = 6) retrns number for me",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:45): as does typeof(document.documentElement.id = 6)",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:46): and typeof(document.documentElement.id = {toString: function() { return &quot;string&quot;; }}) returns object",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:46): i can't reproduce this bug",
        "8c8837db54a2907cacd8633547977e33 (08:46): hm",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:47): (without e4x)",
        "8c8837db54a2907cacd8633547977e33 (08:48): 69b0d3dfe919a6b860a9fac82de52a7e: see comment 3, or try javascript:var re = /x/g; var y; y = re.lastIndex = &quot;7&quot;; typeof y",
        "8c8837db54a2907cacd8633547977e33 (08:48): it's only a problem when it chains, I think",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:49): var x; typeof(x = document.documentElement.id = {toString: function() { return &quot;string&quot;; }}) still says object",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:49): but your example does fail",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:49): weird",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:59): thanks for that one",
        "69b0d3dfe919a6b860a9fac82de52a7e (08:59): added it",
        "8c8837db54a2907cacd8633547977e33 (09:01): 69b0d3dfe919a6b860a9fac82de52a7e: https://bugzilla.mozilla.org/show_bug.cgi?id=385166 is an HTTP compliance one",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): not clear that that's a bug",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): since HTTP doesn't define error handling",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): find bugs is hard :-/",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): finding bugs, even",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:02): or rather, finding usable bugs for an acid test",
        "8c8837db54a2907cacd8633547977e33 (09:03): except that treating something with the wrong content-type as text/css is clearly wrong, isn't it?",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:03): it's not clear that it has the wrong content-type",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:03): it may have no content-type",
        "69b0d3dfe919a6b860a9fac82de52a7e (09:04): according to http, behaviour is undefined",
        "8c8837db54a2907cacd8633547977e33 (09:25): &lt;https://bugzilla.mozilla.org/show_bug.cgi?id=398681&gt;, &lt;https://bugzilla.mozilla.org/show_bug.cgi?id=398682&gt;, &lt;https://bugzilla.mozilla.org/show_bug.cgi?id=398686&gt;, &lt;https://bugzilla.mozilla.org/show_bug.cgi?id=398820&gt; for more possibilities (didn't look beyond the summaries, tho)",
        "c1df4de4ca70fcb72755c09e7ac08394 (09:33): table layout is not very well specified",
        "8c8837db54a2907cacd8633547977e33 (09:33): and with that I've run through the list of open bugs I'm CCed on",
        "8c8837db54a2907cacd8633547977e33 (09:33): yeah",
        "65325d50b2e25aca54bc871b89758c9c (09:33): so not likely to be good fodder for an acid test",
        "8c8837db54a2907cacd8633547977e33 (09:34): I also was sorta trying to find bugs where the situation hit is one you might reasonably see in a web page, or where the tested functionality is generally useful",
        "8c8837db54a2907cacd8633547977e33 (09:34): so much of this is edge-case functionality that's not especially useful",
        "8c8837db54a2907cacd8633547977e33 (09:34): or has easy workarounds",
        "8c8837db54a2907cacd8633547977e33 (09:35): or similar"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "8c8837db54a2907cacd8633547977e33",
        "1adba86c435b5fe0f7ea043370b1636b",
        "65325d50b2e25aca54bc871b89758c9c",
        "c1df4de4ca70fcb72755c09e7ac08394"
    ]
}