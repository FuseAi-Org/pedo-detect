{
    "id": "d6a423d5001a822cf08b7a227ce62bd1",
    "messages": [
        "042dd99eb0ff8653814e445ca0093427 (23:14): &lt;video&gt; in an SVG image might currently work in Firefox, but it's about to stop working",
        "042dd99eb0ff8653814e445ca0093427 (23:14): we think everyone will need to disable loading of external resources from an SVG image",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:15): &lt;video src=data:video/ogg,...&gt; should still work, then? ^^;",
        "042dd99eb0ff8653814e445ca0093427 (23:15): yeah, we'll still support data:",
        "042dd99eb0ff8653814e445ca0093427 (23:15): good luck with that",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:15): Oh, wow, I was being facetious.  Interesting.",
        "042dd99eb0ff8653814e445ca0093427 (23:17): the problem is that if a site allows SVG image uploads, and has an open redirector, the images can &quot;phone home&quot; in unexpected ways",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:17): Yeah, I understand the issue.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:17): You want to have a defined and limited contract for what &quot;images&quot; can do.",
        "042dd99eb0ff8653814e445ca0093427 (23:17): we have an implicit one now",
        "042dd99eb0ff8653814e445ca0093427 (23:22): hmm, maybe we can fix this another way",
        "8b7a8196348038c107614af0b08f2d21 (23:30): can't we just remove SVG images?  they're so wrong",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:30): What?  No!  SVG images are great.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:30): I use 'em, and love 'em.",
        "8b7a8196348038c107614af0b08f2d21 (23:30): for what?  introducing security vulnerabilities?",
        "8b7a8196348038c107614af0b08f2d21 (23:30): :)",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:30): For scalable vector graphics!",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:30): I let you fix the security vulnerabilities.",
        "8b7a8196348038c107614af0b08f2d21 (23:30): why not just use SVG in HTML?",
        "8b7a8196348038c107614af0b08f2d21 (23:31): i've used svg images before too",
        "8b7a8196348038c107614af0b08f2d21 (23:31): bu",
        "8b7a8196348038c107614af0b08f2d21 (23:31): t",
        "8b7a8196348038c107614af0b08f2d21 (23:31): they having all these strange problems",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:31): Can I easily reuse a single image in multiple places on the page with SVG-in-HTML?",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:31): doesn't know enough.",
        "8b7a8196348038c107614af0b08f2d21 (23:31): 1f8387eb43f131d7c309a90a4e36b5cb: with XBL!",
        "8b7a8196348038c107614af0b08f2d21 (23:31): hides",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:31): &gt;_&lt;",
        "cc097e0d7183ae8436e7df709553c8c0 (23:32): &lt;use&gt;?",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:32): Anyway, if you can do that, then SVG-in-HTML is fine.  If not, then you still want SVG-in-&lt;img&gt;, or a similar solution.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:32): cc097e0d7183ae8436e7df709553c8c0: Does that work?",
        "8b7a8196348038c107614af0b08f2d21 (23:32): i'm not sure how use interacts with being in HTML",
        "cc097e0d7183ae8436e7df709553c8c0 (23:32): 1f8387eb43f131d7c309a90a4e36b5cb: i haven't tried to touch it with a stick, so dunno",
        "cc097e0d7183ae8436e7df709553c8c0 (23:33): has just heard other people curse over &lt;use&gt;",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:34): All these attributes on &lt;use&gt; confuse and enrage me.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:34): Oh, wait, I was looking at a decade-old WD.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:35): Dammit.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:36): It looks like you could maybe use &lt;svg&gt;&lt;symbol/&gt;&lt;/svg&gt; in the head, and then &lt;svg&gt;&lt;use/&gt;&lt;/svg&gt; in the document?  Theoretically, at least.",
        "cc097e0d7183ae8436e7df709553c8c0 (23:38): you can't put &lt;svg&gt; in head",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:38): Why not?",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:38): I guess you want it to break out implicitly.",
        "cc097e0d7183ae8436e7df709553c8c0 (23:38): it implies &lt;body&gt;",
        "88d4d34a8064a4ff39fd5e144eea7762 (23:38): In text/html, anyway.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:39): Okay, well, &lt;symbol&gt; isn't supposed to ever be rendered, so it should be fine in &lt;body&gt; too.",
        "1f8387eb43f131d7c309a90a4e36b5cb (23:42): Hmm.  Do document referenes in inline &lt;svg&gt; work across &lt;svg&gt; elements?",
        "cc097e0d7183ae8436e7df709553c8c0 (23:54): mpilgrim: btw, opera 11 has nicer error messages for form validation, in case you have nothing better to do and feel like updating images in http://diveintohtml5.org/forms.html#validation :)",
        "042dd99eb0ff8653814e445ca0093427 (00:10): SVG images are nice but some implementations are rather buggy .... cough cough",
        "cc097e0d7183ae8436e7df709553c8c0 (00:17): 1f8387eb43f131d7c309a90a4e36b5cb: the feed would be more useful if the entries contained the diffs",
        "cc097e0d7183ae8436e7df709553c8c0 (00:18): subscribes to the commits mailing list instead",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:20): cc097e0d7183ae8436e7df709553c8c0: They don't?  That's a pretty useless feed, then.  I'll complain.",
        "cc097e0d7183ae8436e7df709553c8c0 (00:22): &lt;description&gt;Message posted by Tab",
        "cc097e0d7183ae8436e7df709553c8c0 (00:22): Atkins Jr.. via cvs-syncmail&lt;/description&gt;",
        "cc097e0d7183ae8436e7df709553c8c0 (00:22): is all",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:22): Yeah, useless.",
        "042dd99eb0ff8653814e445ca0093427 (00:22): I see that 8b7a8196348038c107614af0b08f2d21 is discovering that it's hard to make arguments about complexity in the face of use-cases and an implementation",
        "8b7a8196348038c107614af0b08f2d21 (00:23): w.r.t. SVG images or CSP?",
        "042dd99eb0ff8653814e445ca0093427 (00:23): well, both",
        "cc097e0d7183ae8436e7df709553c8c0 (00:23): 1f8387eb43f131d7c309a90a4e36b5cb: ideal would be log message as title and full diff as description",
        "8b7a8196348038c107614af0b08f2d21 (00:23): i know we can't get rid of SVG images :)",
        "042dd99eb0ff8653814e445ca0093427 (00:23): I learned that lesson in other places too",
        "1f8387eb43f131d7c309a90a4e36b5cb (00:23): cc097e0d7183ae8436e7df709553c8c0: Agreed.",
        "042dd99eb0ff8653814e445ca0093427 (00:23): Audio WG for example",
        "8b7a8196348038c107614af0b08f2d21 (00:24): its just a funny artifact of how svg came to the world",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:24): 042dd99eb0ff8653814e445ca0093427, a feature can be too complex for *authors* even if you have use-cases and an implementation.",
        "88d4d34a8064a4ff39fd5e144eea7762 (00:24): Particularly security-related features.",
        "042dd99eb0ff8653814e445ca0093427 (00:24): I totally agree",
        "042dd99eb0ff8653814e445ca0093427 (00:24): it's just a hard argument to make when authors are saying &quot;no, I really want this&quot;",
        "cc097e0d7183ae8436e7df709553c8c0 (00:25): 1f8387eb43f131d7c309a90a4e36b5cb: well, and which spec being updated in title, too",
        "042dd99eb0ff8653814e445ca0093427 (00:25): not all authors, just some set of really smart authors --- the sort who tend to get involved in spec discussions, or work for Google",
        "042dd99eb0ff8653814e445ca0093427 (00:27): and who think that being able to implement a professional audio mixing desk on a mobile device as a Web app is a completely reasonable requirement for the first version of a spec, cough cough",
        "cdd23ac03f92596256b5ebc603df251b (00:49): 042dd99eb0ff8653814e445ca0093427, is there any point in joining that Audio WG?",
        "cdd23ac03f92596256b5ebc603df251b (00:49): I imagine I'd mostly be saying &quot;no&quot; :)",
        "042dd99eb0ff8653814e445ca0093427 (00:50): I dunno",
        "042dd99eb0ff8653814e445ca0093427 (00:50): your feedback would actually be useful",
        "cdd23ac03f92596256b5ebc603df251b (00:50): are you trying to reconcile your super-simple API with Google's filter graph?",
        "042dd99eb0ff8653814e445ca0093427 (00:50): no, I don't think anyone's trying to do that",
        "cdd23ac03f92596256b5ebc603df251b (00:50): phew",
        "cdd23ac03f92596256b5ebc603df251b (00:51): so inventing a 3rd API then I guess?",
        "042dd99eb0ff8653814e445ca0093427 (00:51): I don't know what to do",
        "cdd23ac03f92596256b5ebc603df251b (00:52): I think I'll join after my vacation and see if there's anything fun happening",
        "042dd99eb0ff8653814e445ca0093427 (00:52): we could add support for using Workers to generate audio. that would help with latency issues",
        "042dd99eb0ff8653814e445ca0093427 (00:53): but fundamentally, if you have a hard requirement for minimal latency plus maximum possible throughput using the GPU to process samples etc, then sure OK you need to bake every effect under the sun into the browser",
        "cdd23ac03f92596256b5ebc603df251b (00:53): is there any kind of idea about the model yet?",
        "cdd23ac03f92596256b5ebc603df251b (00:53): push from script using something like writeSamples, or pull from script via a callback?",
        "e2633ed61085592add6e058692dfff2f (00:54): Corban Brook was working on a JavaScript  bridge implementing the google api on top of the mozilla api:https://github.com/corbanbrook/audionode.js",
        "042dd99eb0ff8653814e445ca0093427 (00:54): I don't think the sample graph guys really care about JS that much",
        "042dd99eb0ff8653814e445ca0093427 (00:54): in their world, if you have to process samples with JS you've already lost",
        "cdd23ac03f92596256b5ebc603df251b (00:55): how low latency is low enough for them?",
        "cdd23ac03f92596256b5ebc603df251b (00:55): what's the use case?",
        "cdd23ac03f92596256b5ebc603df251b (00:55): I'm thinking the number 1 use case, all categories, is a NES emulator",
        "042dd99eb0ff8653814e445ca0093427 (00:55): audio mixing desk",
        "cdd23ac03f92596256b5ebc603df251b (00:55): if you can do that, nothing else matters :)",
        "042dd99eb0ff8653814e445ca0093427 (00:55): instrument synthesis",
        "042dd99eb0ff8653814e445ca0093427 (00:56): real-time spatial effects",
        "042dd99eb0ff8653814e445ca0093427 (00:56): for games etc",
        "042dd99eb0ff8653814e445ca0093427 (00:56): we can do the NES emulator, that's a non-issue :-)",
        "cdd23ac03f92596256b5ebc603df251b (00:57): is there no minimum latency caused by the number of samples you have to write at a time or some such?",
        "042dd99eb0ff8653814e445ca0093427 (00:57): I don't know",
        "042dd99eb0ff8653814e445ca0093427 (00:57): you kinda have to be a super audio guru to participate in that WG",
        "042dd99eb0ff8653814e445ca0093427 (00:58): and I don't have time to become one",
        "cdd23ac03f92596256b5ebc603df251b (00:58): of course, if you have a small enough buffer then having to wait for the JS engine is eventually going to fall apart",
        "cdd23ac03f92596256b5ebc603df251b (00:58): it's just a question of how small is small enough...",
        "042dd99eb0ff8653814e445ca0093427 (00:59): so will C",
        "042dd99eb0ff8653814e445ca0093427 (00:59): of course, JS will never be quite as efficient as C",
        "cdd23ac03f92596256b5ebc603df251b (00:59): don't you have audio cards that you can upload sounds to and program the filters and whatnot in advance?",
        "042dd99eb0ff8653814e445ca0093427 (00:59): which is why all features everywhere must be baked into the browser",
        "042dd99eb0ff8653814e445ca0093427 (01:00): that's another issue yeah",
        "cdd23ac03f92596256b5ebc603df251b (01:00): I really don't know, to me an audio card is just a D/A-converter",
        "042dd99eb0ff8653814e445ca0093427 (01:00): plus the use of the GPU or another specialized processor",
        "cdd23ac03f92596256b5ebc603df251b (01:00): processing audio isn't that expensive...",
        "042dd99eb0ff8653814e445ca0093427 (01:01): it is if you want to mix 300 channels with spatial effects and more",
        "042dd99eb0ff8653814e445ca0093427 (01:01): sure, not all Web developers want to do that",
        "042dd99eb0ff8653814e445ca0093427 (01:01): but the Audio WG people do :-)",
        "cdd23ac03f92596256b5ebc603df251b (01:01): what kind of system is that possible in?",
        "e2633ed61085592add6e058692dfff2f (01:01): and they want to do it on browsers embedded on mobile devices",
        "cdd23ac03f92596256b5ebc603df251b (01:01): don't you need really expensive hardware?",
        "cdd23ac03f92596256b5ebc603df251b (01:02): or can their filter graph thingy work on anything?",
        "042dd99eb0ff8653814e445ca0093427 (01:02): I don't know",
        "cdd23ac03f92596256b5ebc603df251b (01:03): ok, so I'll join the WG and ramble a bit in 2 weeks",
        "cdd23ac03f92596256b5ebc603df251b (01:03): please stop them from doing crazy stuff in the meantime :)",
        "042dd99eb0ff8653814e445ca0093427 (01:03): I'm not optimistic",
        "042dd99eb0ff8653814e445ca0093427 (01:04): the point I was making w.r.t. Adam was that if someone wants a feature, and someone else is providing it, it's really hard to get in the middle and tell them they shouldn't do that",
        "042dd99eb0ff8653814e445ca0093427 (01:04): on the grounds of complexity, at least",
        "cdd23ac03f92596256b5ebc603df251b (01:04): uh, so who's providing?",
        "cdd23ac03f92596256b5ebc603df251b (01:04): Chrome?",
        "042dd99eb0ff8653814e445ca0093427 (01:04): Chrome and Safari",
        "042dd99eb0ff8653814e445ca0093427 (01:04): the code is in Webkit",
        "cdd23ac03f92596256b5ebc603df251b (01:05): &quot;The ones that win are the ones that ship.&quot;",
        "cdd23ac03f92596256b5ebc603df251b (01:06): sucky but true",
        "e2633ed61085592add6e058692dfff2f (01:06): mozilla guys are providing too though - in that they've landed and documented an api",
        "cdd23ac03f92596256b5ebc603df251b (01:06): e2633ed61085592add6e058692dfff2f, they? is it not you?",
        "e2633ed61085592add6e058692dfff2f (01:06): cdd23ac03f92596256b5ebc603df251b: no, it wasn't the auckland office that worked on it",
        "cdd23ac03f92596256b5ebc603df251b (01:07): oh, ok",
        "e2633ed61085592add6e058692dfff2f (01:07): if it was I'd be pushing hard for it in the working group. As it is I'm not sure what the best approach is.",
        "cdd23ac03f92596256b5ebc603df251b (01:08): me neither, but the filter graph API *looks* way too complicated",
        "e2633ed61085592add6e058692dfff2f (01:08): yes",
        "cdd23ac03f92596256b5ebc603df251b (01:09): maybe the right solution is WebAL or something",
        "e2633ed61085592add6e058692dfff2f (01:09): there's also been discussion on MusicML and supporting other music bsaed things which could become a distraction",
        "cdd23ac03f92596256b5ebc603df251b (01:09): surely browsers shouldn't support MusicML natively?",
        "e2633ed61085592add6e058692dfff2f (01:09): I'm not opposed to a WebGL like approach where we wrap OpenSL/OpenAL or something like that",
        "e2633ed61085592add6e058692dfff2f (01:09): and let people build JS API's on top",
        "cdd23ac03f92596256b5ebc603df251b (01:10): e2633ed61085592add6e058692dfff2f, appart from the fact that I've never even looked at OpenSL or OpenAL, I'm inclined to agree",
        "cdd23ac03f92596256b5ebc603df251b (01:11): I should sleep :)"
    ],
    "person_ids": [
        "042dd99eb0ff8653814e445ca0093427",
        "1f8387eb43f131d7c309a90a4e36b5cb",
        "8b7a8196348038c107614af0b08f2d21",
        "cc097e0d7183ae8436e7df709553c8c0",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "cdd23ac03f92596256b5ebc603df251b",
        "e2633ed61085592add6e058692dfff2f"
    ]
}