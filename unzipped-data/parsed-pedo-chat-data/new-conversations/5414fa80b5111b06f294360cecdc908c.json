{
    "id": "5414fa80b5111b06f294360cecdc908c",
    "messages": [
        "0e287b9ab95fd54bd6de2fd5db27a500 (10:33): like if i wanted the default character to be 0x90D8000080 ?",
        "87919d6a5f11a6a833252caa350f556f (10:33): litage: i tried to activate it in my.cnf but it doesn't work ... how can i see if the configure command was --with or --without innoDB ??? is this possible ?",
        "d923d906582234f7da470514434fab8b (10:34): DavidMJ: Sure, but that won't give you 0.",
        "e4ff7fb2ca4ab89d51f13720d16ab234 (10:34): Cyball: type this at the mysql prompt:  show engines;",
        "d923d906582234f7da470514434fab8b (10:34): DavidMJ: Use 0 or 0000 or whatever width you need.",
        "0e287b9ab95fd54bd6de2fd5db27a500 (10:34): well, sure. i was just wondering if it would take my hex number and give me the proper binary character in return",
        "d923d906582234f7da470514434fab8b (10:35): DavidMJ: If you want a fixed width field, use BINARY(n).",
        "d923d906582234f7da470514434fab8b (10:35): DavidMJ: Not that I'm aware.",
        "9ca39698339c3a3028b76f8a1a24c28a (10:35): create table users ( name, handle, password ); &lt;--why wouldn't that work?",
        "87919d6a5f11a6a833252caa350f556f (10:35): litage: InnoDB DISABLED",
        "d923d906582234f7da470514434fab8b (10:36): phlux: No types?",
        "e4ff7fb2ca4ab89d51f13720d16ab234 (10:36): phlux: you haven't told mysql what type each field is",
        "e4ff7fb2ca4ab89d51f13720d16ab234 (10:36): Cyball: google for how to enable innodb",
        "87919d6a5f11a6a833252caa350f556f (10:37): litage: there os no skip-innoDB or something else in my config so I don't understand it :-)",
        "0e287b9ab95fd54bd6de2fd5db27a500 (10:38): Xgc: MySQL has the feature i hoped it did",
        "0e287b9ab95fd54bd6de2fd5db27a500 (10:38): thanks for your help",
        "d923d906582234f7da470514434fab8b (10:38): DavidMJ: You're welcome.",
        "77d969d952cdf6a332855ab1136e0e2f (10:46): I would like to rename a schema. Is there a command?",
        "77d969d952cdf6a332855ab1136e0e2f (10:49): Wow, dead rom.",
        "77d969d952cdf6a332855ab1136e0e2f (10:49): room*",
        "7cb05bf7475b7badc908c6d427396530 (10:49): Is there a way to SELECT * but only have it return the fields that aren't null?",
        "77d969d952cdf6a332855ab1136e0e2f (10:49): ?",
        "77d969d952cdf6a332855ab1136e0e2f (10:50): yes",
        "77d969d952cdf6a332855ab1136e0e2f (10:50): well",
        "77d969d952cdf6a332855ab1136e0e2f (10:50): maybe",
        "77d969d952cdf6a332855ab1136e0e2f (10:50): I don't know how",
        "77d969d952cdf6a332855ab1136e0e2f (10:50): it's not as simple as I thought",
        "d075f53f69051c6fe76713c628b06537 (10:50): can i use variables with INSERT ?",
        "7cb05bf7475b7badc908c6d427396530 (10:50): lol k thanks anyway",
        "77d969d952cdf6a332855ab1136e0e2f (10:51): I was going to say something like",
        "77d969d952cdf6a332855ab1136e0e2f (10:51): select * from whatever where * is not null;",
        "77d969d952cdf6a332855ab1136e0e2f (10:51): but that isn't quite easy",
        "77d969d952cdf6a332855ab1136e0e2f (10:51): I don't think you can reuse the * card to refer to the current instance",
        "77d969d952cdf6a332855ab1136e0e2f (10:52): but if there is a variable where the currently queried column is stored, you could say where (that) is not null",
        "7cb05bf7475b7badc908c6d427396530 (10:52): Yeah you can't that's what I tried originally",
        "7cb05bf7475b7badc908c6d427396530 (10:52): Seemed fair enough to try",
        "77d969d952cdf6a332855ab1136e0e2f (10:52): do you have the mysql referene?",
        "d923d906582234f7da470514434fab8b (10:53): vershun: You have a design problem if you really wanted to do what you asked.",
        "7cb05bf7475b7badc908c6d427396530 (10:54): It was a more of curiousity question, I certainly don't need it",
        "d923d906582234f7da470514434fab8b (10:54): vershun: It could be solved by a UNION of the SELECT of each column separately... with a final WHERE virtual_col IS NOT NULL",
        "77d969d952cdf6a332855ab1136e0e2f (10:54): is there any non-labor-intensive way to rename a schema?",
        "d923d906582234f7da470514434fab8b (10:54): vershun: But that suggests a fairly serious table design problem.",
        "77d969d952cdf6a332855ab1136e0e2f (10:54): it's called f_db and I want it to be called db_f",
        "7cb05bf7475b7badc908c6d427396530 (10:55): Well a lot of fields can be null in the row I suppose",
        "d923d906582234f7da470514434fab8b (10:55): piratehead: Oh. You mean database.  Yes.  You can probably rename the db directory.",
        "77d969d952cdf6a332855ab1136e0e2f (10:55): Xgc: it calls them schemas in the documentation",
        "77d969d952cdf6a332855ab1136e0e2f (10:55): Xgc: how do I rename the db directory?",
        "d923d906582234f7da470514434fab8b (10:55): vershun: That's the point. You would never want to treat all the columns in a row as though they were a single list.",
        "d923d906582234f7da470514434fab8b (10:56): vershun: Not in any sane design.",
        "7cb05bf7475b7badc908c6d427396530 (10:56): Hmm",
        "d923d906582234f7da470514434fab8b (10:56): piratehead: That's an OS/file system question.  rename or mv",
        "7cb05bf7475b7badc908c6d427396530 (10:57): Probably should take a design course sometime",
        "77d969d952cdf6a332855ab1136e0e2f (10:57): Xgc: where are the database directories?",
        "d923d906582234f7da470514434fab8b (10:57): piratehead: Under the datadir.",
        "d923d906582234f7da470514434fab8b (10:57): piratehead: You would normally have specified that during installation.",
        "77d969d952cdf6a332855ab1136e0e2f (10:58): there's a MySQL InnoDB Datafiles directory that I specified",
        "77d969d952cdf6a332855ab1136e0e2f (10:58): but that contains only one file, and it doesn't appear to be man-readable",
        "d075f53f69051c6fe76713c628b06537 (10:58): Xgc, can I use variables with INSERT ?",
        "9ca39698339c3a3028b76f8a1a24c28a (10:59): how would I show what values I have in for a specific table?",
        "d923d906582234f7da470514434fab8b (10:59): r0xoR: You might be looking for Prepared Statements.",
        "d075f53f69051c6fe76713c628b06537 (11:00): umm... no... I've got a chain of FK relationships... i want to create one table, then use the LAST_INSERT_ID for a couple tables as foreign keys for INSERT statements on other tables",
        "d075f53f69051c6fe76713c628b06537 (11:00): Xgc, from what I think prepared statements are I don't think i need them, but they might mean something else in mysql",
        "d075f53f69051c6fe76713c628b06537 (11:00): Xgc, got the docs?",
        "d923d906582234f7da470514434fab8b (11:01): r0xoR: To provide data to an INSERT via parameters, you could use a prepared statement.",
        "d075f53f69051c6fe76713c628b06537 (11:01): Xgc, well it's just a static script",
        "d075f53f69051c6fe76713c628b06537 (11:01): it's an install script actually, it installs the schema and now I'm installing example data",
        "d923d906582234f7da470514434fab8b (11:02): r0xoR: *nod* If you just want to transfer some information from some SELECT last_insert_id(); to the next INSERT, that depends on the language you are using.",
        "d075f53f69051c6fe76713c628b06537 (11:02): table insert A gives me an id that i need to use in the statement for table insert B",
        "d075f53f69051c6fe76713c628b06537 (11:02): ohhh, oh wait, what's this SELECT last_insert_id()",
        "d923d906582234f7da470514434fab8b (11:02): r0xoR: That could be a shell script or Java, or php.",
        "d075f53f69051c6fe76713c628b06537 (11:02): i'm not using SELECT lol",
        "d075f53f69051c6fe76713c628b06537 (11:03): SET @row_id = SELECT LAST_INSERT_ID();",
        "d075f53f69051c6fe76713c628b06537 (11:03): is that valid syntax?",
        "d923d906582234f7da470514434fab8b (11:03): r0xoR: Maybe I'm a going a little too fast.  Your reference to FK and INSERT suggests you want to INSERT some initial record in tableX and then INSERT into tableY with a FK value that refers to the last row inserted in tableX.",
        "d075f53f69051c6fe76713c628b06537 (11:04): Xgc, exactly",
        "d075f53f69051c6fe76713c628b06537 (11:04): Xgc, so how do I do that...",
        "d923d906582234f7da470514434fab8b (11:04): r0xoR: Yes. That takes us to SELECT last_insert_id();  or some other mechanism provided by the API you are using to obtain that last inserted id.",
        "d075f53f69051c6fe76713c628b06537 (11:05): Xgc, the only API i'm using that I know of is SQL... this is just a plain SQL file... i'm just running it with source filename.sql",
        "d923d906582234f7da470514434fab8b (11:05): r0xoR: The docs should have a description of how the last_insert_id() function behaves and can be used.",
        "d075f53f69051c6fe76713c628b06537 (11:05): k"
    ],
    "person_ids": [
        "0e287b9ab95fd54bd6de2fd5db27a500",
        "87919d6a5f11a6a833252caa350f556f",
        "d923d906582234f7da470514434fab8b",
        "e4ff7fb2ca4ab89d51f13720d16ab234",
        "9ca39698339c3a3028b76f8a1a24c28a",
        "77d969d952cdf6a332855ab1136e0e2f",
        "7cb05bf7475b7badc908c6d427396530",
        "d075f53f69051c6fe76713c628b06537"
    ]
}