{
    "id": "acd9584d66ba31750a48dcbacec6c708",
    "messages": [
        "8b3687499080633e1898fa1dd209ef81 (19:34): 69b0d3dfe919a6b860a9fac82de52a7e, so you're saying the test is correct?",
        "69b0d3dfe919a6b860a9fac82de52a7e (19:34): i didn't check the test itself",
        "69b0d3dfe919a6b860a9fac82de52a7e (19:35): hence not closing the bug",
        "69b0d3dfe919a6b860a9fac82de52a7e (19:35): well that was bad timing",
        "8b3687499080633e1898fa1dd209ef81 (19:35): ab7faae5d7b250ea8606486575f8f79c, you check https://www.w3.org/Bugs/Public/show_bug.cgi?id=14421 please",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:53): Does IE not support &lt;base href=&quot;&quot;&gt; with relative URLs?",
        "88d4d34a8064a4ff39fd5e144eea7762 (19:55): document.querySelector(&quot;base&quot;).href = document.querySelector(&quot;base&quot;).href; fixes it.",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:12): is there an appropriate wg for web api features relating to signing content before form submission?",
        "8b3687499080633e1898fa1dd209ef81 (20:15): The wg that's going to spec window.crypto?",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:17): yeah, that would do",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:17): which is that one? :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (20:18): <email/> will do",
        "8b3687499080633e1898fa1dd209ef81 (20:18): Sounds good",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:38): Oh . . . except in some browsers (but not others!), document.querySelector(&quot;base&quot;).href = document.querySelector(&quot;base&quot;).href; resolves document.querySelector(&quot;base&quot;).href according to itself.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:38): Which really it should.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:38): Per spec.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:38): But it seems IE and Gecko don't.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:39): I should catch that in my reflection tests, but I didn't test setting URLs with &lt;base&gt; active.",
        "8b3687499080633e1898fa1dd209ef81 (20:39): I think I remember some bug about that for Gecko...",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:39): works around some more",
        "8b3687499080633e1898fa1dd209ef81 (20:41): 88d4d34a8064a4ff39fd5e144eea7762, https://bugzilla.mozilla.org/show_bug.cgi?id=600809",
        "a1fbe72f47651e50181e743dc550aeee (20:41): When it comes to a datetime value, is there an explicit, complete list of valid characters somewhere?",
        "8b3687499080633e1898fa1dd209ef81 (20:42): a1fbe72f47651e50181e743dc550aeee, how so?",
        "a1fbe72f47651e50181e743dc550aeee (20:42): 8b3687499080633e1898fa1dd209ef81: What do you mean?",
        "8b3687499080633e1898fa1dd209ef81 (20:42): Well, what do *you* mean? :)",
        "a1fbe72f47651e50181e743dc550aeee (20:42): I'm looking for a complete list of valid characters in a datetime value",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:43): 8b3687499080633e1898fa1dd209ef81, that bug's fix is not per spec.",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:43): I think.",
        "8b3687499080633e1898fa1dd209ef81 (20:43): It might not be",
        "8b3687499080633e1898fa1dd209ef81 (20:43): The spec may or may not have said at the time what it says now",
        "8b3687499080633e1898fa1dd209ef81 (20:43): a1fbe72f47651e50181e743dc550aeee, http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#valid-date-string-with-optional-time",
        "88d4d34a8064a4ff39fd5e144eea7762 (20:44): 8b3687499080633e1898fa1dd209ef81, https://www.w3.org/Bugs/Public/show_bug.cgi?id=15752",
        "8b3687499080633e1898fa1dd209ef81 (20:45): Thanks",
        "a1fbe72f47651e50181e743dc550aeee (20:45): 8b3687499080633e1898fa1dd209ef81: I'm not looking for a parser definition, just a list of valid characters. Otherwise, I'd have to go through each of the ~15 algorithms to make sure I didn't miss something.",
        "8b3687499080633e1898fa1dd209ef81 (20:45): a1fbe72f47651e50181e743dc550aeee, click the links, they don't point to algorithms",
        "a1fbe72f47651e50181e743dc550aeee (20:46): they point to disparate descriptions of each type of datetime value",
        "8b3687499080633e1898fa1dd209ef81 (20:47): ... Yes?",
        "a1fbe72f47651e50181e743dc550aeee (20:47): That's not what I'm looking for",
        "a1fbe72f47651e50181e743dc550aeee (20:48): There is a finite set of characters that can appear in a valid datetime value.",
        "a1fbe72f47651e50181e743dc550aeee (20:48): I'm looking for a complete iteration of the characters in that set.",
        "8b3687499080633e1898fa1dd209ef81 (20:49): It's the union of the characters mentioned in those descriptions",
        "a1fbe72f47651e50181e743dc550aeee (20:49): but even those descriptions do not list their complete set at once; they only list them as they come up in the description/algorithm",
        "8b3687499080633e1898fa1dd209ef81 (20:50): Yes",
        "a1fbe72f47651e50181e743dc550aeee (20:51): nevermind",
        "a1fbe72f47651e50181e743dc550aeee (20:51): what about the maximum length of a datetime value?",
        "ab7faae5d7b250ea8606486575f8f79c (20:52): Unlimited",
        "ab7faae5d7b250ea8606486575f8f79c (20:53): since you can have dates like 999999-01-01",
        "a1fbe72f47651e50181e743dc550aeee (20:53): ok",
        "ab7faae5d7b250ea8606486575f8f79c (20:55): doesn't see any permitted characters other than [0-9-+TZ :.]",
        "ab7faae5d7b250ea8606486575f8f79c (20:55): provides no guarantee of correctness, though",
        "a1fbe72f47651e50181e743dc550aeee (20:57): ab7faae5d7b250ea8606486575f8f79c: Well, there are the duration characters, too. But thanks.",
        "ab7faae5d7b250ea8606486575f8f79c (20:58): Durations aren't datetimes, I think",
        "a1fbe72f47651e50181e743dc550aeee (21:01): they are according to the HTML definition of &quot;datetime value&quot;"
    ],
    "person_ids": [
        "8b3687499080633e1898fa1dd209ef81",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "a1fbe72f47651e50181e743dc550aeee",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}