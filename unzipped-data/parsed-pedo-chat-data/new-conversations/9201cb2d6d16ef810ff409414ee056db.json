{
    "id": "9201cb2d6d16ef810ff409414ee056db",
    "messages": [
        "3f2e2531201cfbf853f16f668132eaf2 (15:12): f139aba52f9fa1394b4034a7954b2220: Do you know what browsers need scripts hidden in comments?",
        "cc097e0d7183ae8436e7df709553c8c0 (15:12): isn't it Mosaic, NN1 and IE2?",
        "3f2e2531201cfbf853f16f668132eaf2 (15:13): Oh, 60659cfda992013e610f285c46692d28 already pointed out that it's a fairly archaic practice nowadays",
        "f4dfad803df83144a5be86d9bca87678 (15:13): y",
        "3f2e2531201cfbf853f16f668132eaf2 (15:14): cc097e0d7183ae8436e7df709553c8c0: I'm pretty sure it was NN1, but I have no idea about other browsers",
        "cc097e0d7183ae8436e7df709553c8c0 (15:15): for &lt;style&gt; it also includes NN2, IIRC",
        "3f2e2531201cfbf853f16f668132eaf2 (15:15): (That's what I remember from testing too)",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): hmm. I'm unable to elicit parse errors from Rhino script compilation",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): why is that? do errors fire only when an erroneous part is run?",
        "3f2e2531201cfbf853f16f668132eaf2 (15:17): SpiderMonkey has separate compile/execute functions and compile fails if there's syntax errors",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:17): 3f2e2531201cfbf853f16f668132eaf2: I'm running Rhino's compile only method",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:18): tried with the interpreter back end and the Java bytecode compiler back end",
        "3f2e2531201cfbf853f16f668132eaf2 (15:18): b8810fee2f4a71f849f3f7409546d1d9: I've no idea how much Rhino is like SpiderMonkey",
        "3f2e2531201cfbf853f16f668132eaf2 (15:18): but it would seem weird if syntax errors didn't cause errors during compilation",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:19): hmm. I is possible that my intermediate IO filters are broken",
        "f139aba52f9fa1394b4034a7954b2220 (15:21): 3f2e2531201cfbf853f16f668132eaf2, anything released prior to the introduction of the script element in HTML3 and also a really crappy mobile phone with a poor quality default browser on it.  (though the phone is irrelevant anyway, since it's very much desigend for walled-garden content and wouldn't have much success in the real web)",
        "3f2e2531201cfbf853f16f668132eaf2 (15:26): It's just another case of cargo cult programming now",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:27): I'm puzzled. If I use a simple StringReader to feed a Reader to Rhino, I get expected errors",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:27): if I use a more complex Reader setup I don't",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:27): clearly, the reader setup is b0rked, but stepping through it in a debugger looks right...",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:30): f139aba52f9fa1394b4034a7954b2220: I think you shouldn't show how to use comments to &quot;hide&quot; style and script",
        "3f2e2531201cfbf853f16f668132eaf2 (15:34): I think you shouldn't suggest to not use them either - it doesn't actually hurt anything when people do, and trying to explain it will be unproductive and just cause some people to get a bit more confused",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:35): I agree",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:44): locates one missing i++; in an IO loop...",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:47): f139aba52f9fa1394b4034a7954b2220: re: Authoring doc. The abstract contains a typo. It would, in my opinion, be best fixed by rewriting the abstract to position the document as a tutorial and reference for authors.",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:48): Something like: &quot;This document describes and annotates the HTML5 document conformance criteria and providing a tutorial and a reference for Web developers.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:49): Or better yet: &quot;This document annotates the HTML5 document conformance criteria and providing a tutorial and a reference for Web developers.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:49): doh",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:49): Or better yet: &quot;This document annotates the HTML5 document conformance criteria providing a tutorial and a reference for Web developers.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:52): I'm finally reaching data: URIs on my todo list",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:56): is percent escaping allowed in data URIs or should data URIs get special percentless treatment?",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:56): oops.",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:57): percents are allowed but have IRI-incompatible semantics",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:57): oh joy",
        "f139aba52f9fa1394b4034a7954b2220 (15:57): b8810fee2f4a71f849f3f7409546d1d9, can you mail me or the list with that suggestion",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:58): f139aba52f9fa1394b4034a7954b2220: sure",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (16:00): b8810fee2f4a71f849f3f7409546d1d9, someone is working on an IRI update of data: iirc",
        "60659cfda992013e610f285c46692d28 (16:02): what is that incompatibility?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:04): f139aba52f9fa1394b4034a7954b2220: hmm. I think the Abstact could be made even better and simpler: This document explains to Web developers how to write HTML5 documents.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:05): or illustrates",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:06): 60659cfda992013e610f285c46692d28: using percent encoding to communicate raw bytes that do not necessarily decode to UTF-8",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:07): 60659cfda992013e610f285c46692d28: so it is semantically a byte string instead of a Unicode string",
        "60659cfda992013e610f285c46692d28 (16:07): I'm still not sure what the issue is.",
        "60659cfda992013e610f285c46692d28 (16:08): You can have percent-encoded byte sequences that do not UTF-8 decode. This applies both to URIs and IRIs.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:08): 60659cfda992013e610f285c46692d28: oh. I thought that was bogus in an IRI",
        "60659cfda992013e610f285c46692d28 (16:10): no, any URI is a legal IRI",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:10): ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:11): 60659cfda992013e610f285c46692d28: so what should happen if a data IRI contains an non-ASCII character that is not percent-encoded?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:12): 60659cfda992013e610f285c46692d28: *that* should at least be an incompatibility",
        "60659cfda992013e610f285c46692d28 (16:12): that depends on the media type specified after data:, right?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:12): does it?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:13): where's the interoperable spec for it?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:13): one might argue that it does *not* depend on the media type but instead you should encode the characters as UTF-8 bytes",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:13): always",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:14): s/interoperable/interoperably implemented/",
        "60659cfda992013e610f285c46692d28 (16:14): ok, if the data IRI contains a non-URI character, the conversion needs to percent-escape it.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:14): 60659cfda992013e610f285c46692d28: using UTF-8?",
        "60659cfda992013e610f285c46692d28 (16:14): This may result in an invalid data URI. Is that what you're concerned with?",
        "60659cfda992013e610f285c46692d28 (16:15): I would think so, but AFAIR RFC3987 allows special cases.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:15): 60659cfda992013e610f285c46692d28: I'm concerned with not having a spec that covers this",
        "60659cfda992013e610f285c46692d28 (16:15): yes, that may indicate that data IRIs need additional spec",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:20): it would help a great deal if tools.ietf.org linked to drafts expected to update/obsolete a given RFC",
        "60659cfda992013e610f285c46692d28 (16:21): so I'm still not sure what the problem is :-)",
        "60659cfda992013e610f285c46692d28 (16:21): Can you give an example?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:22): 60659cfda992013e610f285c46692d28: is this an error: data:,?\u00a7",
        "f139aba52f9fa1394b4034a7954b2220 (16:22): what do you think of the name &quot;The Web Developer's Guide to HTML 5&quot;?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:22): 60659cfda992013e610f285c46692d28: regardless, when should the decoded byte stream be?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:22): f139aba52f9fa1394b4034a7954b2220: works for me",
        "60659cfda992013e610f285c46692d28 (16:24): this is an error if and only if &quot;data:,%xx%yy&quot; (with the right bytes) is an error",
        "cc097e0d7183ae8436e7df709553c8c0 (16:25): f139aba52f9fa1394b4034a7954b2220: don't tell people what they shouldn't do, that will be all they remember :). oops, i meant, only tell people what they should do.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:25): 60659cfda992013e610f285c46692d28: Jena IRI says to ASCII is data:,%C3%A4 without throwing",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:26): 60659cfda992013e610f285c46692d28: do you agree that the &quot;right&quot; bytes are always the character encoded as UTF-8?",
        "f139aba52f9fa1394b4034a7954b2220 (16:26): cc097e0d7183ae8436e7df709553c8c0, I think it would be useful to point out common errors that authors make and explain why they shouldn't do them",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:26): f139aba52f9fa1394b4034a7954b2220: only if they are conformance errors per spec proper",
        "f139aba52f9fa1394b4034a7954b2220 (16:27): b8810fee2f4a71f849f3f7409546d1d9, yes, of course",
        "cc097e0d7183ae8436e7df709553c8c0 (16:27): f139aba52f9fa1394b4034a7954b2220: yeah, perhaps for things that are very simple to understand (like misnested tags)",
        "60659cfda992013e610f285c46692d28 (16:28): b8810fee2f4a71f849f3f7409546d1d9: Why do you expect an exception for that case?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:28): yay. Firefox agrees with Jena IRI",
        "60659cfda992013e610f285c46692d28 (16:29): b8810fee2f4a71f849f3f7409546d1d9: I think that's correct-",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:29): 60659cfda992013e610f285c46692d28: I don't expect an exception, I just want to see spec text that covers it. Should I take the generic IRI spec covering it?",
        "60659cfda992013e610f285c46692d28 (16:29): b8810fee2f4a71f849f3f7409546d1d9: Let's phrase it this way: unless there's a specific IRI variant for a URI scheme, RFC3987's rules should apply.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:30): 60659cfda992013e610f285c46692d28: ok",
        "60659cfda992013e610f285c46692d28 (16:30): I think there was a possibility to overrule the default, but right now I can't remember exactly where I saw that.",
        "60659cfda992013e610f285c46692d28 (16:30): In general I would hope that IRI-&gt;URI mapping stays independant of the URI scheme, but maybe I'm missing something.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:31): 60659cfda992013e610f285c46692d28: you are missing scheme-specific rules that are IDN host name-aware",
        "60659cfda992013e610f285c46692d28 (16:31): right, that's one example.",
        "60659cfda992013e610f285c46692d28 (16:32): b8810fee2f4a71f849f3f7409546d1d9: so maybe rcf2616bis needs to update the &quot;http&quot; URI scheme definition with that information.",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:35): 60659cfda992013e610f285c46692d28: yeah, but RFC 3987 section 3.1. already discusses it"
    ],
    "person_ids": [
        "3f2e2531201cfbf853f16f668132eaf2",
        "cc097e0d7183ae8436e7df709553c8c0",
        "f4dfad803df83144a5be86d9bca87678",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "f139aba52f9fa1394b4034a7954b2220",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "60659cfda992013e610f285c46692d28"
    ]
}