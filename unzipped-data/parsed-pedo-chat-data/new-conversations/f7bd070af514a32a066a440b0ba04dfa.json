{
    "id": "f7bd070af514a32a066a440b0ba04dfa",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (11:51): are iframes supposed to delay the onload event of the parent?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:51): yes",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:51): ok",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:52): &quot;When there is an active parser in the iframe, and when anything in the iframe is delaying the load event of the iframe's browsing context's active document, the iframe must delay the load event of its document.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:52): so, on on both www.aol.com and www.cnn.com I see more things trying to unblock onload than blocking onload",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:52): and on www.aol.com I see attempts to unblock onload periodically",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:53): how do you unblock onload?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:53): 73eaf221abca1b8244e34b0b9e76ac46: I mean internal onload unblocking code",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:53): ah",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:54): goes set a breakpoint to catch the periodic thing",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:55): b8810fee2f4a71f849f3f7409546d1d9: i did some research on &lt;script&gt;&lt;!-- yesterday",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:55): ha! I have innerHTML setter accidentally unblocking onload",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:55): wonders how innerHTML itself and images inserted by innerHTML should interact with onload",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): 73eaf221abca1b8244e34b0b9e76ac46: did you manage to disqualify any proposals?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:56): b8810fee2f4a71f849f3f7409546d1d9: yes",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:56): cool",
        "ab7faae5d7b250ea8606486575f8f79c (11:56): All of them?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:57): so proposal 3 is the only one not marked as FAIL",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:57): ab7faae5d7b250ea8606486575f8f79c: i think proposal #3 breaks the least out of the lot",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:57): but it still breaks some pages",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:58): intuitively, proposal 3 scares me more than what's specced now",
        "b25b6b77a0087ff8385941e5545d32ea (11:58): b8810fee2f4a71f849f3f7409546d1d9: Why?",
        "b25b6b77a0087ff8385941e5545d32ea (11:58): doesn't really like any of the proposals",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:58): b25b6b77a0087ff8385941e5545d32ea: proposal 3 breaks random sites out there",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:58): what's specced now breaks more sites out there :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:59): b25b6b77a0087ff8385941e5545d32ea: what's currently been reported about the spec is that it breaks one developer-oriented tool and one attempt of writing test cases",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:59): 73eaf221abca1b8244e34b0b9e76ac46: ok. no one has bothered to note the other sites broken by the spec on bugzilla.mozilla.org",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:59): b8810fee2f4a71f849f3f7409546d1d9: what's specced now also breaks all of these http://philip.html5.org/data/script-close-in-escape-without-script-open-2.txt",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:00): ooh. scary.",
        "ab7faae5d7b250ea8606486575f8f79c (12:00): I propose getting rid of &lt;script&gt;",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:00): proposal #3 only breaks 3 sites in there or so",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:00): //--&gt;&lt;!--&lt;/script&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:00): that's pattern is so, so, sad",
        "ab7faae5d7b250ea8606486575f8f79c (12:01): wonders if reparsing is really so bad, given that everybody does it",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:02): what are people thinking when they finish their script not with //--&gt; but with //--&gt;&lt;!--",
        "b25b6b77a0087ff8385941e5545d32ea (12:02): wonders the same as ab7faae5d7b250ea8606486575f8f79c",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:02): they are clearly confused by all the comment tags &quot;//&quot;, &quot;&lt;!--&quot; and &quot;--&gt;&quot; so don't know when to use which",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:03): and it doesn't matter because it all works in browsers today",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:04): 73eaf221abca1b8244e34b0b9e76ac46, ab7faae5d7b250ea8606486575f8f79c: thanks for analyzing the proposals",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:05): maybe we also need to look at pages that do have &lt;script inside escaped text span, too",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:06): to find pages with the second kind of breakage of #3",
        "ab7faae5d7b250ea8606486575f8f79c (12:06): b8810fee2f4a71f849f3f7409546d1d9: I blame Hixie, for writing a document that suggests &lt;script&gt;&lt;!--//--&gt;&lt;![CDATA[//&gt;&lt;!-- ...",
        "ab7faae5d7b250ea8606486575f8f79c (12:07): thus causing people to completely give up all hope of understanding commenting, and to just randomly insert comment characters until it works",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:07): oh right, i forgot the other two comment tags &quot;&lt;![CDATA[&quot; and &quot;]]&gt;&quot;",
        "a11aabeeceeae6b8cb5d12ea06b56554 (12:08): calls theoretical on the whole security hole Hixie worries about here",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:08): ab7faae5d7b250ea8606486575f8f79c: we have a problem with debating complexity on the Web",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:09): ab7faae5d7b250ea8606486575f8f79c: if you say that something is impossible, you are wrong, but if you show that the possibility is ridiculously complex, there's always someone who copies and pastes it",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:10): it's like every complex piece of badness is an attractive nuisance",
        "b25b6b77a0087ff8385941e5545d32ea (12:10): suggests that the whoile situation would have been much simpler if &lt;!-- --&gt; just indicated a comment in an inline script block from the start",
        "ab7faae5d7b250ea8606486575f8f79c (12:11): b8810fee2f4a71f849f3f7409546d1d9: Maybe we should convert any demonstrations of ridiculous complexity into images rather than text, so people can't copy-and-paste and fewer will manually type it all out",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): ab7faae5d7b250ea8606486575f8f79c: that would be inaccessible",
        "73eaf221abca1b8244e34b0b9e76ac46 (12:12): ab7faae5d7b250ea8606486575f8f79c: just do ondragstart=&quot;return false&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): (since HTML-aware text editors tend to be insuffciently HTML-aware to make their comment function notice that it is working in a script block rather than in some random HTML",
        "b25b6b77a0087ff8385941e5545d32ea (12:12): b8810fee2f4a71f849f3f7409546d1d9: Not with alt text",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): ab7faae5d7b250ea8606486575f8f79c: also, consider all the typos people would make when typing it",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:13): assumed alt text got copied",
        "b25b6b77a0087ff8385941e5545d32ea (12:13): But people won't expect it to work when they can't select it",
        "b25b6b77a0087ff8385941e5545d32ea (12:14): (well I know you can select images but people generally wouldn't select an image of text expecting the alt text to be the text)",
        "ab7faae5d7b250ea8606486575f8f79c (12:16): b8810fee2f4a71f849f3f7409546d1d9: The inaccessibility has to be balanced against the humanity of not subjecting screen reader users to a spoken version of &lt;script&gt;&lt;!--//--&gt;&lt;![CDATA[//&gt;&lt;!--",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:20): now that I've seen what kind of browser bugs are possible with innerHTML during load, innerHTML during load scares me a bit even for cases that aren't browser bugs",
        "ab7faae5d7b250ea8606486575f8f79c (12:25): wonders why Laurens Holst picked, of all the legitimate examples of insane complexities in HTML5, one that is actually very simple in HTML and is only confusing because of promotion of XHTML-as-text/html",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:29): wonders if Julian programs with namespaces, writes namespace-wise correct code and likes the experience",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:33): Yay. I fixed the innerHTML setting during load issue",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:33): It worries me that even the fix was non-obvious",
        "ab7faae5d7b250ea8606486575f8f79c (12:37): b8810fee2f4a71f849f3f7409546d1d9: You don't necessarily have to like the experience of working with namespaces, you just have to not dislike it enough to counteract the benefits",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:37): ab7faae5d7b250ea8606486575f8f79c: good point.",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:37): I rank the benefits the be negative.",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): That sounds like a type error",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): Benefits are by definition positive :-p",
        "ab7faae5d7b250ea8606486575f8f79c (12:38): s/positive/non-negative/",
        "73cf54d5a46ca56882c4ee523cf6b057 (13:00): anyone got any recommendations on web based open source scrum tools (preferably LAMP stack)?",
        "ab7faae5d7b250ea8606486575f8f79c (13:01): doesn't know many open source rugby simulators"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b25b6b77a0087ff8385941e5545d32ea",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "73cf54d5a46ca56882c4ee523cf6b057"
    ]
}