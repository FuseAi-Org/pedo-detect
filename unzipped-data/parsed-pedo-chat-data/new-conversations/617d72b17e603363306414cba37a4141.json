{
    "id": "617d72b17e603363306414cba37a4141",
    "messages": [
        "81fa1e07c4ea96f215901d989f8bf37b (13:40): mfinkle: ping",
        "534bc1078827b76a4be1cce2a8f87dc1 (14:04): Repeating my question:  I am getting build error while trying to build m-c channel (by clang++) during linking .. anybody seen something like this? http://pastebin.mozilla.org/1415936",
        "81fa1e07c4ea96f215901d989f8bf37b (14:06): eb215559f21ce08fc2c0af415cb66253: bug 708870",
        "eb215559f21ce08fc2c0af415cb66253 (14:06): Bug https://bugzilla.mozilla.org/show_bug.cgi?id=708870 nor, --, ---, nobody, RESO WORKSFORME, Cannot compile Firefox with Clang: hidden symbol `_Unwind_Backtrace' isn't defined",
        "534bc1078827b76a4be1cce2a8f87dc1 (14:07): 81fa1e07c4ea96f215901d989f8bf37b, Thanks.. Let me try clean build by clang++ head",
        "534bc1078827b76a4be1cce2a8f87dc1 (14:10): ahh.. clang compilation failed :)",
        "81fa1e07c4ea96f215901d989f8bf37b (14:11): can't help you with that ;-)",
        "534bc1078827b76a4be1cce2a8f87dc1 (14:12): maybe I will switch to gcc for a while ..",
        "ac495561e6015364214b354ab23f7d2d (14:14): I'm not too fluent in C++ and not a bit of OOP..would like some clarification ..  by &quot;Move all subclasses of nsDOMEventTargetHelper to nsDOMEventTargetWrapperCache&quot; means that instead of nsDOMEventTargetHelper being the superclass of x, I change the x's superclass to nsDOMEventTargetWrapperCache, right?",
        "ac495561e6015364214b354ab23f7d2d (14:15): btw, this is wrt to bug #693172",
        "ac495561e6015364214b354ab23f7d2d (14:15): and by &quot;merge the classes&quot; it means merge &quot;nsDOMEventTargetHelper&quot; with &quot;nsDOMEventTargetWrapperCache&quot; right?",
        "81fa1e07c4ea96f215901d989f8bf37b (14:16): yes",
        "81fa1e07c4ea96f215901d989f8bf37b (14:16): move everything that inherits from nsDOMEventTargetHelper to inherit from nsDOMEventTargetWrapperCache",
        "81fa1e07c4ea96f215901d989f8bf37b (14:16): fix up the cycle collection macros",
        "81fa1e07c4ea96f215901d989f8bf37b (14:16): and then merge nsDOMEventTargetHelper with nsDOMEventTargetWrapperCache",
        "ac495561e6015364214b354ab23f7d2d (14:16): ok",
        "b92af08a18aff623222629da14873ffd (14:25): 81fa1e07c4ea96f215901d989f8bf37b: why not just merge the other way?",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:30): 81fa1e07c4ea96f215901d989f8bf37b: ping",
        "81fa1e07c4ea96f215901d989f8bf37b (14:31): b92af08a18aff623222629da14873ffd: I don't really care what it's called in the end",
        "81fa1e07c4ea96f215901d989f8bf37b (14:31): 3fe446bf43186a0a6ab70e26fba86a53: pong",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:31): on that pymake IDL issue I thought I owuld let you know that my build today worked fine with that patch applied.",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:32): ere you going to post that patch to bug 711549, or should I do that.",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:32): becuase if I do it I don;t have the patch authors info to give prper crdit.",
        "81fa1e07c4ea96f215901d989f8bf37b (14:32): I'm going to take care of it today",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:32): OK great!",
        "81fa1e07c4ea96f215901d989f8bf37b (14:33): thanks for verifying that it helps",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:33): becuase it would be nice to get this other person to test on windows since the problem there seemed opposite.",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:34): It is only one build after my other builds complete I might have it just do extra bulds to make sure",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:39): 81fa1e07c4ea96f215901d989f8bf37b: Interestingly it seems that you backed out bug 629668 on the 18th, which would mean I was seeing the issue even without that in the tree.",
        "3fe446bf43186a0a6ab70e26fba86a53 (14:40): My automated build failed yesterday morning.",
        "b92af08a18aff623222629da14873ffd (14:49): there's some test thingy to wait for focus, isn't there?",
        "b92af08a18aff623222629da14873ffd (14:53): bah, unfair",
        "b92af08a18aff623222629da14873ffd (14:53): there's a test for something that's not exposed",
        "b92af08a18aff623222629da14873ffd (14:55): did I mention that tests suck yet?",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:57): 870fa8ee962d90af50c7eaed792b075a: do you recall if the 3.6 branch is supposed to have pgo?",
        "870fa8ee962d90af50c7eaed792b075a (14:57): for windows, definitely",
        "870fa8ee962d90af50c7eaed792b075a (14:58): we've been shipping that since 3.0",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:58): hmmm",
        "870fa8ee962d90af50c7eaed792b075a (14:58): we might not have turned it on for linux till 4.0",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:58): ok, i can't find profileserver.py being run in the 3.6.25 build log :(",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:58): is there something else i sholud grep for to check if it was PGO-ed?",
        "870fa8ee962d90af50c7eaed792b075a (14:58): that seems unfortunate!",
        "870fa8ee962d90af50c7eaed792b075a (14:59): is it running make -f client.mk profiledbuild ?",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:59): nope",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:59): 'make' '-f' 'client.mk' 'build' u'MOZ_BUILD_DATE=20111212142243'",
        "870fa8ee962d90af50c7eaed792b075a (14:59): okay, then odds are it is not doing a PGO build",
        "870fa8ee962d90af50c7eaed792b075a (14:59): did the release logic get updated?",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:59): crappers",
        "870fa8ee962d90af50c7eaed792b075a (14:59): because i'm not sure 3.6 honors MOZ_PGO",
        "b3ae6a874d89f3820e5156ab31cd3e78 (14:59): i bet our factories got changed at some point for that",
        "870fa8ee962d90af50c7eaed792b075a (14:59): yeah :-/",
        "870fa8ee962d90af50c7eaed792b075a (14:59): we could probably backport that change",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:00): looks like nightlies are regressed too, based on build times",
        "870fa8ee962d90af50c7eaed792b075a (15:00): fun",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:00): if the backport is easy that seems like a good idea",
        "870fa8ee962d90af50c7eaed792b075a (15:00): good thing people watch our stable build tree like a hawk",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:00): if not, we can figure out a work around on our side",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:01): looks like 3.6.23 was our last release with PGO on",
        "1e0b712280576b3bdc2687ea68b28af6 (15:01): 56910c52ed70539e3ce0391edeb6d339: ?",
        "870fa8ee962d90af50c7eaed792b075a (15:01): it's https://bugzilla.mozilla.org/show_bug.cgi?id=643704",
        "56910c52ed70539e3ce0391edeb6d339 (15:01): 1e0b712280576b3bdc2687ea68b28af6: hello",
        "870fa8ee962d90af50c7eaed792b075a (15:01): b3ae6a874d89f3820e5156ab31cd3e78: ouch, we actually shipped a non-PGO release?",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:01): ahh, thanks",
        "870fa8ee962d90af50c7eaed792b075a (15:01): http://hg.mozilla.org/mozilla-central/rev/4599ba769a48",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:02): 870fa8ee962d90af50c7eaed792b075a: 2 of them at this point",
        "870fa8ee962d90af50c7eaed792b075a (15:02): not a particularly invasive change",
        "870fa8ee962d90af50c7eaed792b075a (15:02): b3ae6a874d89f3820e5156ab31cd3e78: ugh, horrible",
        "870fa8ee962d90af50c7eaed792b075a (15:02): i think we're getting too used to this rapid release thing",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:02): nobody ever looks at the 1.9.2 tree =\\",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:02): we have permaorange tests there",
        "1e0b712280576b3bdc2687ea68b28af6 (15:02): 56910c52ed70539e3ce0391edeb6d339: hey 8b3687499080633e1898fa1dd209ef81 said that you might have a question for me?",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:02): poor neglected 3.6",
        "56910c52ed70539e3ce0391edeb6d339 (15:03): 1e0b712280576b3bdc2687ea68b28af6: a few minutes before 8b3687499080633e1898fa1dd209ef81 said that, I asked this here: &quot;when in the shutdown leak statistics of a debug build I see that some instances of XPCWrappedNative, nsXPCWrappedJS and nsXPCWrappedJSClass remain, is there a way to know what's wrapped in them?&quot;",
        "56910c52ed70539e3ce0391edeb6d339 (15:04): I've found the cause of my leak since that, but I would still be interested in the answer to that question to save time in the future :).",
        "1e0b712280576b3bdc2687ea68b28af6 (15:04): 56910c52ed70539e3ce0391edeb6d339: hmm, not easily.",
        "1e0b712280576b3bdc2687ea68b28af6 (15:05): 56910c52ed70539e3ce0391edeb6d339: the guy you want to talk to is really peterv.",
        "1e0b712280576b3bdc2687ea68b28af6 (15:05): 56910c52ed70539e3ce0391edeb6d339: but he's been in and out recently.",
        "56910c52ed70539e3ce0391edeb6d339 (15:05): ok",
        "81fa1e07c4ea96f215901d989f8bf37b (15:05): we've pretty much given up on 1.9.2",
        "81fa1e07c4ea96f215901d989f8bf37b (15:05): we just pretend it's still supported",
        "81fa1e07c4ea96f215901d989f8bf37b (15:05): it's pretty funny actually",
        "1e0b712280576b3bdc2687ea68b28af6 (15:05): 56910c52ed70539e3ce0391edeb6d339: mccr8 is also a good guy to go to for leak questions... he's in California though.",
        "81fa1e07c4ea96f215901d989f8bf37b (15:06): when you consider how many millions of people are using stuff we don't pay any attention to",
        "56910c52ed70539e3ce0391edeb6d339 (15:06): if I understood correctly, the cause of my leak was 2 JS objects A and B, A referencing B, and B referencing a method of A.bind(A).",
        "56910c52ed70539e3ce0391edeb6d339 (15:06): if I remove the reference to A.bind(A), the leak disappear",
        "56910c52ed70539e3ce0391edeb6d339 (15:07): I'm not sure if that's expected or if it's a bug (if so I should probably try to reduce the testcase I had and file a bug).",
        "870fa8ee962d90af50c7eaed792b075a (15:07): 81fa1e07c4ea96f215901d989f8bf37b: it's pretty much always been this way",
        "870fa8ee962d90af50c7eaed792b075a (15:07): our stable releases get no love",
        "1e0b712280576b3bdc2687ea68b28af6 (15:07): hmm",
        "1e0b712280576b3bdc2687ea68b28af6 (15:07): 56910c52ed70539e3ce0391edeb6d339: these are xpcom objects?",
        "56910c52ed70539e3ce0391edeb6d339 (15:07): yes",
        "56910c52ed70539e3ce0391edeb6d339 (15:07): although I don't think they were wrapped before the bind call",
        "1e0b712280576b3bdc2687ea68b28af6 (15:09): 56910c52ed70539e3ce0391edeb6d339: hmm, I wouldn't expect that to leak.",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:10): 870fa8ee962d90af50c7eaed792b075a: it looks like https://bugzilla.mozilla.org/show_bug.cgi?id=658313 was actually the thing that regressed this",
        "1e0b712280576b3bdc2687ea68b28af6 (15:10): 56910c52ed70539e3ce0391edeb6d339: If you have some spare time, it would probably be instructive at the very least to reduce your testcase to see what happened.",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:10): indentation fail: http://hg.mozilla.org/build/buildbotcustom/annotate/67081bb6526e/process/factory.py#l1149",
        "56910c52ed70539e3ce0391edeb6d339 (15:10): 1e0b712280576b3bdc2687ea68b28af6: ok, I'll try to reduce it. Probably not today though.",
        "870fa8ee962d90af50c7eaed792b075a (15:11): b3ae6a874d89f3820e5156ab31cd3e78: i can't see why that's wrong, but i'll take your word for it",
        "1e0b712280576b3bdc2687ea68b28af6 (15:11): 56910c52ed70539e3ce0391edeb6d339: cool.",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:11): oh, actulaly, nm",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:11): that code is busted in some way or else we'd have PGO builds",
        "b3ae6a874d89f3820e5156ab31cd3e78 (15:12): looks like we never set profiledBuild",
        "8b3687499080633e1898fa1dd209ef81 (15:27): 56910c52ed70539e3ce0391edeb6d339, 1e0b712280576b3bdc2687ea68b28af6, I hear mccr8 is on holiday, fwiw",
        "1e0b712280576b3bdc2687ea68b28af6 (15:28): doesn't doubt it."
    ],
    "person_ids": [
        "81fa1e07c4ea96f215901d989f8bf37b",
        "534bc1078827b76a4be1cce2a8f87dc1",
        "eb215559f21ce08fc2c0af415cb66253",
        "ac495561e6015364214b354ab23f7d2d",
        "b92af08a18aff623222629da14873ffd",
        "3fe446bf43186a0a6ab70e26fba86a53",
        "b3ae6a874d89f3820e5156ab31cd3e78",
        "870fa8ee962d90af50c7eaed792b075a",
        "1e0b712280576b3bdc2687ea68b28af6",
        "56910c52ed70539e3ce0391edeb6d339",
        "8b3687499080633e1898fa1dd209ef81"
    ]
}