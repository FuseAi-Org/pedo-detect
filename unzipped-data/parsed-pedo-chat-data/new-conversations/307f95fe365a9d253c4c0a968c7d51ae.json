{
    "id": "307f95fe365a9d253c4c0a968c7d51ae",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (03:09): 88d4d34a8064a4ff39fd5e144eea7762: what would &lt;script&gt;alert('&amp;%dGVzdA==;')&lt;/script&gt; alert, if anything?",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:10): 69b0d3dfe919a6b860a9fac82de52a7e, I don't know, it's not my proposal.",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:10): (and how about &lt;script&gt;alert(&amp;%Jyk7YWxlcnQoZG9jdW1lbnQuY29va2llICsgJw;)&lt;/script&gt;)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:10): k",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:11): ah, anne answered my question",
        "ab7faae5d7b250ea8606486575f8f79c (03:18): notes that some pages write &lt;a href=&quot;foo%20&amp;%20;bar.html&quot;&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (03:19): so it's not entirely clear the proposed syntax is safe",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): well the character can be changed, certainly",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): doesn't have to be *%",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): &amp;% even",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:20): (i was wondering about that myself)",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:21): It could be a multicharacter string, like &quot;xn--&quot;.  :)",
        "57d876083caf517f49e8cf5e03307450 (03:21): just make it My",
        "57d876083caf517f49e8cf5e03307450 (03:22): who'd use that? ;-)",
        "ab7faae5d7b250ea8606486575f8f79c (03:23): Seems a bit strange to me to design something based on the assumption that people are too uninformed to follow a few simple rules (like always quote attributes and use some particular escape function based on current syntax), but will be able to use a new syntax and escaping function without getting horridly confused",
        "ab7faae5d7b250ea8606486575f8f79c (03:23): particularly since for the next five years people will write articles saying not to use this syntax yet, since it's not backward-compatible with IE6",
        "ab7faae5d7b250ea8606486575f8f79c (03:24): and after that people will continue reading those articles",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:25): The only possible utility I see is easy escaping in &lt;script&gt;, and I'm far from sure that that justifies it.",
        "ab7faae5d7b250ea8606486575f8f79c (03:25): (Also everybody will get the character encoding wrong, and it's terrible for 'view source')",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:25): &quot;View source&quot; can translate it, in principle.",
        "ab7faae5d7b250ea8606486575f8f79c (03:25): Then it wouldn't be 'view source'",
        "ab7faae5d7b250ea8606486575f8f79c (03:25): It'd be 'view something that's a bit like the source but not quite'",
        "ab7faae5d7b250ea8606486575f8f79c (03:25): and anyway my text editor won't translate it when opening an .html file",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:26): Isn't that what &quot;view source&quot; already is, at least in Firefox?",
        "ab7faae5d7b250ea8606486575f8f79c (03:27): No",
        "ab7faae5d7b250ea8606486575f8f79c (03:27): as far as I'm aware",
        "ab7faae5d7b250ea8606486575f8f79c (03:27): unless you mean 'view selection source'",
        "ab7faae5d7b250ea8606486575f8f79c (03:27): which seems fancier",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:27): I think it mangles the source.  Maybe I'm wrong.",
        "ab7faae5d7b250ea8606486575f8f79c (03:28): Wouldn't this new syntax break blacklist-based XSS filters because you could write &lt;span style=&quot;&amp;%XhwcmVzc2lvbjphbGVydCgnb2ggbm8nKQo=;&quot;&gt; etc and sneak in forbidden properties?",
        "88d4d34a8064a4ff39fd5e144eea7762 (03:29): Probably.",
        "ab7faae5d7b250ea8606486575f8f79c (03:29): (Uh, I got that syntax all wrong)",
        "69b0d3dfe919a6b860a9fac82de52a7e (03:35): blacklist-based XSS filters are already broken",
        "ab7faae5d7b250ea8606486575f8f79c (03:37): People seem to design them to be sufficiently complex and conservative to successfully work in practice",
        "ab7faae5d7b250ea8606486575f8f79c (03:38): thought MediaWiki had something like that",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:39): really?",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:40): every site i've ever tested has failed",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:40): ;)",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:41): especially when developers are taking user input and assigning it inside of &lt;script&gt; &lt;/script&gt; blocks",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:41): it's impossible to create a blacklist for that",
        "ab7faae5d7b250ea8606486575f8f79c (03:42): http://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/includes/Sanitizer.php?view=markup#l744 - that kind of thing",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:43): input validation/filtering is different than black listing",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:43): when i think of blacklisting i'm thinking like lookign for &lt;script&gt; tags",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:43): or whatever",
        "ab7faae5d7b250ea8606486575f8f79c (03:44): preg_match( '! expression | filter\\s*: | accelerator\\s*: | url\\s*\\( !ix', $value )",
        "ab7faae5d7b250ea8606486575f8f79c (03:44): That's the blacklisting",
        "ab7faae5d7b250ea8606486575f8f79c (03:44): and first it does some filtering to remove escaping and spaces and comments and other potentially dangerous things",
        "ab7faae5d7b250ea8606486575f8f79c (03:45): but it looks like it probably will accept &amp;%...; input unchanged",
        "ab7faae5d7b250ea8606486575f8f79c (03:45): which lets the input circumvent the blacklist",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:46): yeah",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:46): where is this new proposal anwyays",
        "ab7faae5d7b250ea8606486575f8f79c (03:46): WHATWG list",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:47): got it",
        "4626ff063cc727dfcf6d3044c7c17ee5 (03:58): hu, i mean i think it makes sense and protects elements in some cases",
        "61831986744b882b4371990cc1863b19 (04:04): 65325d50b2e25aca54bc871b89758c9c: yt?",
        "65325d50b2e25aca54bc871b89758c9c (04:04): 61831986744b882b4371990cc1863b19: good day sir",
        "61831986744b882b4371990cc1863b19 (04:04): i'm having reports that http://diveintohtml5.org/detect.html crashes the iPad browser",
        "61831986744b882b4371990cc1863b19 (04:05): do you have access to an iPad to verify that?",
        "65325d50b2e25aca54bc871b89758c9c (04:05): sure I can test",
        "65325d50b2e25aca54bc871b89758c9c (04:06): cannot reproduce",
        "65325d50b2e25aca54bc871b89758c9c (04:06): it loaded fine for me",
        "61831986744b882b4371990cc1863b19 (04:06): well shit",
        "61831986744b882b4371990cc1863b19 (04:07): source of the bug report claims it happens for others too: http://twitter.com/al3xandru/status/22220332275",
        "61831986744b882b4371990cc1863b19 (04:07): the only recent change i made was the font-face declaration, it now includes an SVG font (generated by fontsquirrel's awesome font-face generator)",
        "61831986744b882b4371990cc1863b19 (04:08): i'm waiting on reports about whether http://diveintohtml5.org/test.html (which is the same page, but without the SVG font-face declaration) also crashes",
        "4c681049601b3c374f1d2c0077c99049 (04:08): i can repro the crash on iPad",
        "61831986744b882b4371990cc1863b19 (04:08): aha",
        "61831986744b882b4371990cc1863b19 (04:09): when does it happen? on load?",
        "4c681049601b3c374f1d2c0077c99049 (04:09): test.html does not crash.",
        "61831986744b882b4371990cc1863b19 (04:09): hooray!",
        "61831986744b882b4371990cc1863b19 (04:09): er,",
        "61831986744b882b4371990cc1863b19 (04:09): you know what i mean",
        "4c681049601b3c374f1d2c0077c99049 (04:09): (yeah on load)",
        "61831986744b882b4371990cc1863b19 (04:09): ok",
        "61831986744b882b4371990cc1863b19 (04:09): it's definitely the SVG fonts then",
        "4c681049601b3c374f1d2c0077c99049 (04:09): the only difference is the url('f/essays1743-italic-webfont.svg#webfontmRs1TiYo') format('svg')  and such?",
        "61831986744b882b4371990cc1863b19 (04:09): yes",
        "61831986744b882b4371990cc1863b19 (04:10): 5 or 6 instances -- two fonts with different styles/variants",
        "4c681049601b3c374f1d2c0077c99049 (04:10): Yeah sounds like ripe territory for a bug.",
        "65325d50b2e25aca54bc871b89758c9c (04:11): I tried a few more times and still no crash",
        "61831986744b882b4371990cc1863b19 (04:11): well, crashing is definitely a bug -- dunno if it's exploitable, but still",
        "61831986744b882b4371990cc1863b19 (04:11): i'd hate to be responsible for the next major jailbreak exploit :-D",
        "65325d50b2e25aca54bc871b89758c9c (04:11): I'm running iOS 3.2.2",
        "65325d50b2e25aca54bc871b89758c9c (04:11): (7B500)",
        "4c681049601b3c374f1d2c0077c99049 (04:11): 3.2 (7B367)",
        "65325d50b2e25aca54bc871b89758c9c (04:12): would love to hear if it still happens for you after updating",
        "65325d50b2e25aca54bc871b89758c9c (04:12): I think odds are good that this is a fixed bug, as I recall hearing about a bug with svg fonts",
        "61831986744b882b4371990cc1863b19 (04:13): i wonder if google's font API team knows about this",
        "4c681049601b3c374f1d2c0077c99049 (04:13): i'll ping them about it.",
        "61831986744b882b4371990cc1863b19 (04:14): not sure how we would detect it",
        "61831986744b882b4371990cc1863b19 (04:14): UA sniffing, i guess :(",
        "61831986744b882b4371990cc1863b19 (04:14): hard to detect a browser crash ahead of time",
        "61831986744b882b4371990cc1863b19 (04:14): what with the halting problem and all that",
        "4c681049601b3c374f1d2c0077c99049 (04:14): yup. would have to.",
        "65325d50b2e25aca54bc871b89758c9c (04:15): people tend to update iOS pretty quickly, though maybe a bit less for for minor updates",
        "61831986744b882b4371990cc1863b19 (04:15): are you willing to upgrade your iPad for science?",
        "61831986744b882b4371990cc1863b19 (04:15): ( 4c681049601b3c374f1d2c0077c99049)",
        "4c681049601b3c374f1d2c0077c99049 (04:15): dont have a cable handy at the moment, but as soon as we do, certainly will.",
        "61831986744b882b4371990cc1863b19 (04:16): ok",
        "61831986744b882b4371990cc1863b19 (04:16): i'll leave those SVG fonts up at their current locations, but i'm going to update my HTML to stop referring to them",
        "61831986744b882b4371990cc1863b19 (04:17): in lieu of doing minor-version UA sniffing, which is the kind of extreme optimization that my employer might be willing to do, but I personally am not",
        "e04aa5104d082e4a51d241391941ba26 (04:29): 69b0d3dfe919a6b860a9fac82de52a7e, around ?"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "88d4d34a8064a4ff39fd5e144eea7762",
        "ab7faae5d7b250ea8606486575f8f79c",
        "57d876083caf517f49e8cf5e03307450",
        "4626ff063cc727dfcf6d3044c7c17ee5",
        "61831986744b882b4371990cc1863b19",
        "65325d50b2e25aca54bc871b89758c9c",
        "4c681049601b3c374f1d2c0077c99049",
        "e04aa5104d082e4a51d241391941ba26"
    ]
}