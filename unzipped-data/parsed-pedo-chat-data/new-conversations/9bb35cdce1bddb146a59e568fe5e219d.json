{
    "id": "9bb35cdce1bddb146a59e568fe5e219d",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (16:27): http://en.wikipedia.org/wiki/Acid3",
        "f139aba52f9fa1394b4034a7954b2220 (16:37): wow, webkit has improved a lot in acid3 over the last few weeks",
        "5b67d980ae4c3c82251106e26913ce67 (16:41): Are there IE8 previews somewhere already? :)",
        "786957b81c3db271a0b7b88ae2d5c982 (16:44): sigh, we still get data url parsing wrong :-(",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:45): 786957b81c3db271a0b7b88ae2d5c982: &quot;we&quot;?",
        "786957b81c3db271a0b7b88ae2d5c982 (16:45): WebKit, GTK+ port",
        "786957b81c3db271a0b7b88ae2d5c982 (16:47): is there a published algorithm? maybe that's going to work better than my interpretation of the RFC",
        "f139aba52f9fa1394b4034a7954b2220 (16:55): 5b67d980ae4c3c82251106e26913ce67, not yet",
        "5b67d980ae4c3c82251106e26913ce67 (16:55): Bummer",
        "f139aba52f9fa1394b4034a7954b2220 (16:55): 5b67d980ae4c3c82251106e26913ce67, the IE blog will most likely annonce it when there are",
        "5b67d980ae4c3c82251106e26913ce67 (16:56): Would be cool to see how it's doing now",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:57): hmm. Gecko and WebKit don't require http-equiv='content-type' to sniff charset",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:57): it seems that Opera 9.5 and IE7 do",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:57): http://browsershots.org/screenshots/63d26493fb4be33bb27db91ac31fd9a1/",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:57): yay for interop",
        "786957b81c3db271a0b7b88ae2d5c982 (17:08): a11aabeeceeae6b8cb5d12ea06b56554: it turned out i was using a base64 decoder special-cased for window.atob(). using a generalised base64 decoder fixed acid3 test 97",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:08): ah.",
        "786957b81c3db271a0b7b88ae2d5c982 (17:09): webkit's special-case b64 decoder needs a better name than base64Decode() clearly",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:21): wonders if anyone who knows XPath is around",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:26): Is there anyway to find any comment node in the document with the content, &quot;foobar&quot;?",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:27): http://www.w3.org/TR/xpath",
        "ab7faae5d7b250ea8606486575f8f79c (17:27): I'd use grep",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:28): edb259c0e0038f38bb200bc20c8cbf7e: Reading the spec (actually, 2.0, not 1.0) makes me think no",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:28): ab7faae5d7b250ea8606486575f8f79c: does that work on trees? :P",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:28): (i.e., I can't use grep)",
        "ab7faae5d7b250ea8606486575f8f79c (17:29): Serialise the tree then use grep",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:29): ab7faae5d7b250ea8606486575f8f79c: I really don't want to be playing around with HTML with grep. HTML is too mad :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:29): something like //comment() plus something else might work",
        "ab7faae5d7b250ea8606486575f8f79c (17:30): Serialise the tree to XML then use grep",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:30): ab7faae5d7b250ea8606486575f8f79c: too much serialising and parsing :)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:31): edb259c0e0038f38bb200bc20c8cbf7e: seems to work in Safari (though that only claims to support 1.0), so I guess the Python impl I'm using is broken",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:31): dives back into Python",
        "ab7faae5d7b250ea8606486575f8f79c (17:31): It sounds like you have determined the limit of &quot;too much&quot; totally arbitrarily just so you can reject my idea :'-(",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:33): ab7faae5d7b250ea8606486575f8f79c: 2MB documents + Python = Slow enough all ready",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:33): ab7faae5d7b250ea8606486575f8f79c: and seeming a stated aim of the spec-gen clone is to be quicker than the official one (which is written in Perl, sed, and C), parsing it too many times will make it too slow",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:34): (the real reason why the spec-gen is so slow is that it parses _loads_ of times)",
        "edb259c0e0038f38bb200bc20c8cbf7e (17:34): from skimming the XPath spec it should be possible",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:34): edb259c0e0038f38bb200bc20c8cbf7e: that's what I think, too",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:34): I think I've just hit a bug in my very new Python impl",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:34): (well, not my impl, but the one I'm using)"
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "f139aba52f9fa1394b4034a7954b2220",
        "5b67d980ae4c3c82251106e26913ce67",
        "786957b81c3db271a0b7b88ae2d5c982",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "ab7faae5d7b250ea8606486575f8f79c"
    ]
}