{
    "id": "2769070caaea4225fe644b15a919eb2f",
    "messages": [
        "ddd01b1de2f07d48d4953be350a7944c (17:43): f139aba52f9fa1394b4034a7954b2220: ok, I've got some interesting edge case here. Safari feels that :enabled does not include hidden input elements (Opera does). Also, no browser currently selects option[selected] when the selected is implied (e.g. selected by default) - even if you were to check .selected and see that it's true, it wouldn't match with this selector.",
        "f139aba52f9fa1394b4034a7954b2220 (17:55): option[selected] shouldn't match when the selection is implied, because it's an attribute selector.",
        "f139aba52f9fa1394b4034a7954b2220 (17:55): so the implementations are correct according to the spec",
        "ddd01b1de2f07d48d4953be350a7944c (17:56): f139aba52f9fa1394b4034a7954b2220: and :enabled?",
        "f139aba52f9fa1394b4034a7954b2220 (17:57): Selectors states: &quot;An element is enabled if the user can either activate it or transfer the focus to it. &quot;",
        "f139aba52f9fa1394b4034a7954b2220 (17:57): since a user can't do that to a hidden input, Safari's behaviour is correct",
        "f139aba52f9fa1394b4034a7954b2220 (17:58): if you've got a TC, I'll file a bug with Opear",
        "f139aba52f9fa1394b4034a7954b2220 (17:58): Opera*",
        "f139aba52f9fa1394b4034a7954b2220 (17:59): does option:checked work?",
        "ddd01b1de2f07d48d4953be350a7944c (17:59): f139aba52f9fa1394b4034a7954b2220: let me see",
        "f139aba52f9fa1394b4034a7954b2220 (17:59): hmm. probably not. I think it only applies to checkboxes and radio button",
        "ddd01b1de2f07d48d4953be350a7944c (17:59): err, yeah",
        "f139aba52f9fa1394b4034a7954b2220 (18:00): oh, wait, yeah, selectors says it should",
        "f139aba52f9fa1394b4034a7954b2220 (18:00): &quot;The :checked pseudo-class initially applies to such elements that have the HTML4 selected and checked attributes...&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (18:00): which includes option",
        "ddd01b1de2f07d48d4953be350a7944c (18:03): f139aba52f9fa1394b4034a7954b2220: heh, the test suite crashes gogi now",
        "f139aba52f9fa1394b4034a7954b2220 (18:03): cool",
        "ddd01b1de2f07d48d4953be350a7944c (18:03): f139aba52f9fa1394b4034a7954b2220: well, in Safari option:checked doesn't select anything",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:04): I'd suggest not to trust Selectors on this and instead check how Web Forms 2.0 defines the mapping",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:04): Web Forms 2.0 is quite detailed on the subject and arguably the more correct place than Selectors anyway",
        "f139aba52f9fa1394b4034a7954b2220 (18:05): edb259c0e0038f38bb200bc20c8cbf7e, ok.",
        "f139aba52f9fa1394b4034a7954b2220 (18:05): option:checked doesn't match for me in gogi either.",
        "ddd01b1de2f07d48d4953be350a7944c (18:05): ok - so we're up to about 1500 tests: http://ejohn.org/apps/selectortest/ - I've gotta move on to the namespace stuff now",
        "f139aba52f9fa1394b4034a7954b2220 (18:05): ok",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:06): ddd01b1de2f07d48d4953be350a7944c, hey man, that's awesome",
        "ddd01b1de2f07d48d4953be350a7944c (18:06): edb259c0e0038f38bb200bc20c8cbf7e: :)",
        "f139aba52f9fa1394b4034a7954b2220 (18:06): hmm, not working at all in gogi. I just get a blank white space where the results are supposed to be",
        "ddd01b1de2f07d48d4953be350a7944c (18:07): f139aba52f9fa1394b4034a7954b2220: that's more than I got :-/",
        "f139aba52f9fa1394b4034a7954b2220 (18:07): heh. Yeah, that acid 3 build probably still had a few crashers in it",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:09): lies, our acid3 build was perfect!",
        "f139aba52f9fa1394b4034a7954b2220 (18:10): edb259c0e0038f38bb200bc20c8cbf7e, of course. our developers write bug free code. :-)",
        "f139aba52f9fa1394b4034a7954b2220 (18:13): ddd01b1de2f07d48d4953be350a7944c, I'm dealing with the thread about adding a selector detection mechanism. http://lists.w3.org/Archives/Public/www-style/2008Apr/0113.html ...",
        "f139aba52f9fa1394b4034a7954b2220 (18:13): As a JS library author, would you have any need for any such mechanism that isn't covered by catching exceptions for syntax errors and unsupported selectors?",
        "f139aba52f9fa1394b4034a7954b2220 (18:14): the whole thread is lacking compelling use cases, so I'm likely to just respond and reject the proposal",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:14): we don't have supportsHTMLAnchorElementWithPingAttribute() either...",
        "ddd01b1de2f07d48d4953be350a7944c (18:15): f139aba52f9fa1394b4034a7954b2220: I asked for something a little more detailed back when I gave my comments - showing which portion of a selector was valid (or &quot;at which point a token wasn't recognized by the selector engine&quot;) - but I had trouble convincing boris that he could actually implement it",
        "f139aba52f9fa1394b4034a7954b2220 (18:16): oh, yeah, I remember that.",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:16): what is the use case for a library?",
        "f139aba52f9fa1394b4034a7954b2220 (18:16): http://lists.w3.org/Archives/Public/www-style/2008Apr/0160.html has an interesting solution that JS authors could use if there really is a need it.",
        "ddd01b1de2f07d48d4953be350a7944c (18:16): right now all we get is &quot;hey an error happened somewhere in this selector - good luck in figuring out what went wrong and where&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:17): but do you need an error console feature or a JS API",
        "ddd01b1de2f07d48d4953be350a7944c (18:17): edb259c0e0038f38bb200bc20c8cbf7e: JS API - well, more precisely, a better-detailed error message (which is what I brought up for discussion on the mailing list)",
        "f139aba52f9fa1394b4034a7954b2220 (18:18): what would you want to do with the information if you got it?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:19): f139aba52f9fa1394b4034a7954b2220, did you define whitespace when you added that note?",
        "ddd01b1de2f07d48d4953be350a7944c (18:20): we could determine that (for example) given the selector: &quot;#foo div span select &gt; option:selected&quot; that it was good up until &quot;:selected&quot; - we'd go back and pass through all the good parts and end up with a resulting string - then do our own filtering to implement the &quot;:selected&quot;",
        "f139aba52f9fa1394b4034a7954b2220 (18:20): edb259c0e0038f38bb200bc20c8cbf7e, the one about trimming leading and trailing whitespace?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:21): yes",
        "f139aba52f9fa1394b4034a7954b2220 (18:21): whitespace is defined in Selectors. Do you want me to add an explicit reference to its definition?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:21): f139aba52f9fa1394b4034a7954b2220, maybe just a note that indicates where it comes from",
        "f139aba52f9fa1394b4034a7954b2220 (18:22): I'll add a link to http://www.w3.org/TR/css3-selectors/#whitespace",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:23): ddd01b1de2f07d48d4953be350a7944c, right... that does seem tricky and quite a bit over engineered and optimized for libraries",
        "ddd01b1de2f07d48d4953be350a7944c (18:24): edb259c0e0038f38bb200bc20c8cbf7e: well - unless there's a drastic change in the flexibility of this spec - libraries are still going to be the primary consumer of this API",
        "cc097e0d7183ae8436e7df709553c8c0 (18:36): Philip`: in http://philip.html5.org/tests/canvas/suite/tests/2d.path.clip.winding.2.html is it intentional that the ctx.lineTo(0, 0); line (after the second beginPath()) is lineTo and not moveTo?",
        "cc097e0d7183ae8436e7df709553c8c0 (18:52): http://www.sitepoint.com/article/html-or-xhtml-does-it-matter hmm",
        "f139aba52f9fa1394b4034a7954b2220 (18:52): now I'm down to 100 more emails in my selectors-api folder to deal with. I'll try and finish those off tomorrow.",
        "f139aba52f9fa1394b4034a7954b2220 (18:52): (down from about 200 earlier today)",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:54): cc097e0d7183ae8436e7df709553c8c0, removal of alt=&quot;&quot;?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:55): headers=&quot;&quot;?",
        "edb259c0e0038f38bb200bc20c8cbf7e (18:55): when was this article written? before we introduced the &lt;img&gt; element?",
        "b07211a0c7cb119232799d2119cea90f (19:00): there so many uninformed opinions and bad arguments on the web, sometimes I get dizzy just thinking about it",
        "cc097e0d7183ae8436e7df709553c8c0 (19:11): edb259c0e0038f38bb200bc20c8cbf7e: today",
        "cc097e0d7183ae8436e7df709553c8c0 (19:12): brothercake wrote the article",
        "cc097e0d7183ae8436e7df709553c8c0 (19:12): gotta go"
    ],
    "person_ids": [
        "ddd01b1de2f07d48d4953be350a7944c",
        "f139aba52f9fa1394b4034a7954b2220",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "cc097e0d7183ae8436e7df709553c8c0",
        "b07211a0c7cb119232799d2119cea90f"
    ]
}