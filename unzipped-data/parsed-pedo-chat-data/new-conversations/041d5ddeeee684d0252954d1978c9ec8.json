{
    "id": "041d5ddeeee684d0252954d1978c9ec8",
    "messages": [
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): b8810fee2f4a71f849f3f7409546d1d9: http://bugzilla.validator.nu/attachment.cgi?id=72",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:29): when you got time",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:30): added the warning for the &lt;label&gt;s",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:30): but reporting the wrong location",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): it's reporting the location of each offending descendant",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): instead of the location of the &lt;label&gt;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:31): I'm trying to clue myself about what I'm doing wrong there",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:33): as far as I can see I'm putting the &lt;label&gt; node and locator objects into the map the right way",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:34): and the nodes I'm trying to report the location of are definitely those same &lt;label&gt; nodes",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:35): but getValue() and get(node) seem to be giving me the locator for the descendants instead",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:35): unless I'm misunderstanding something about how Locator works",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:35): or sax",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:47): a9b326df4e6da61c5b6f5e1058be83a2: looks good",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:47): b8810fee2f4a71f849f3f7409546d1d9: except the line/column numbers it's reporting are wrong",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:47): oops. that might be my bug",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:47): blush",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:48): instead of .put(child, getDocumentLocator()); it should put a copy of the locator in the map",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:48): aha",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:48): I have a class for that purpose around somewhere",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:49): OK, I'll poke around and look",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:49): unless you point me to it first",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:49): org.whattf.checker.LocatorImpl",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:49): ah yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:49): sorry about that",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:50): no problem",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:51): I didn't mess around with it too long, once I realized something weren't quite right",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:53): when running into insurmountable problems, it's so wonderful to always have a fat backlog of e-mail messages waiting to turn my attention to instead (waiting to be read and responded to)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (10:54): ensures I never have any idle time at all",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:16): whoa. I found a page where HTML5 charset sniffing works better than Gecko charset sniffing: http://digilander.libero.it/comunedifiume/",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (11:16): Title: Fiume italiana o Fiume d'Italia, Istria (at digilander.libero.it)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:16): (trying pages at random from Philip's list)",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:16): don't sound SO surprised",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:16): it's not like i made that algorithm up out of thin air",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:18): 69b0d3dfe919a6b860a9fac82de52a7e: I expected them to be so close to equivalent that one wouldn't find differences in the real world.",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): ah ok",
        "69b0d3dfe919a6b860a9fac82de52a7e (11:18): :-)",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (11:21): there's also a page where it works worse",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (11:22): it euc_kr which is not matched in Gecko and therefore it uses the encoding declared in the page",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0 (11:22): it has*",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:26): hmm. I guess my default setting was wrong in the old Gecko parser. that's all",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:30): b8810fee2f4a71f849f3f7409546d1d9: so I wrapped that getDocumentLocator() with your LocatorImpl and now it's working as expected",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:30): my bad, really",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:31): I looked at your existing code and saw where you used that, but didn't know what LocatorImpl was or understand I needed to use it, so I didn't",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:32): s/understand/understand why/",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:33): b8810fee2f4a71f849f3f7409546d1d9: anyway, any preference on whether I use &quot;for (StackNode node : openLabels.keySet())&quot; or Entry",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:33): it's not clear to me that advantage there might be to using Entry for this case",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:34): but I saw that you had used it elsewhere for similar cases",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:36): a9b326df4e6da61c5b6f5e1058be83a2: if there's a need to use a value in some case, Map.Entry makes sense",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:36): OK",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:36): a9b326df4e6da61c5b6f5e1058be83a2: whether it makes perf difference either way depends on the implementation of the Map",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:36): I see",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:37): I haven't inspected how the impl actually works in OpenJDK",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:38): b8810fee2f4a71f849f3f7409546d1d9: OK, I'll just keep it as Map.Entry",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:38): b8810fee2f4a71f849f3f7409546d1d9: btw, your Checker.warn outputs this in GNU format:",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:39): &quot;info warning: \u201a\u00c4\u00falabel\u201a\u00c4\u00f9 element with multiple labelable descendants.&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:39): that is, &quot;info warning&quot; instead of just &quot;info&quot; or &quot;warn&quot;",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:39): not sure if that's by design...",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:39): a9b326df4e6da61c5b6f5e1058be83a2: I can't remember.",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:39): I'll look and see if there's any comment",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:39): a9b326df4e6da61c5b6f5e1058be83a2: it could be by cunning forward-compatible but GCC incompatible design",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:40): looks up documentation",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:41): a9b326df4e6da61c5b6f5e1058be83a2: it's by design, but the design may suck",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:41): http://wiki.whatwg.org/wiki/Validator.nu_GNU_Output",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (11:41): Title: Validator.nu GNU Output - WHATWG Wiki (at wiki.whatwg.org)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:41): forward-compatible processing model, and stuff",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:42): b8810fee2f4a71f849f3f7409546d1d9: OK, I think it's fine if it's intentional. just wasn't sure til now if it was",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:42): b8810fee2f4a71f849f3f7409546d1d9: I'm reminded that we are waiting for RMS to make some decision about the quoting issue",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:43): I think it's been like a month or so again since I last e-mailed them about it",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:43): I'm ok with waiting for another month at this point",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:44): OK",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:45): hmm, I need to remember to (re)read http://wiki.whatwg.org/wiki/Validator.nu_GNU_Output next time before bugging you about something you probably already have documented there",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (11:45): Title: Validator.nu GNU Output - WHATWG Wiki (at wiki.whatwg.org)",
        "a9b326df4e6da61c5b6f5e1058be83a2 (11:53): @bugmail",
        "0a39f78bcb297ab0ebe8a29c28bfed89 (11:53): a9b326df4e6da61c5b6f5e1058be83a2: Error: '' is not a valid url.",
        "a9b326df4e6da61c5b6f5e1058be83a2 (12:03): b8810fee2f4a71f849f3f7409546d1d9: so, OK if I go ahead and commit that last &lt;label&gt; patch?",
        "a9b326df4e6da61c5b6f5e1058be83a2 (12:04): only substantive change I made after what you reviewed was to add LocatorImpl",
        "b844a0a98f81c321afe1d38ae37f3c28 (12:20): channel #html-wg",
        "25812bf456959aa5f28dc570f341a3ba (12:20): is 'HTML WG 12 Mar http://lists.w3.org/Archives/Public/public-html-wg-announce/2009JanMar/0041.html (This channel is logged: http://krijnhoetmer.nl/irc-logs/ )'",
        "5d5b78699e57104f2fa03bbdf7b9197b (12:20): by DanC on Thu Mar 12 17:00:49",
        "a9b326df4e6da61c5b6f5e1058be83a2 (12:21): b8810fee2f4a71f849f3f7409546d1d9: thanks for your guidance and patience with my boneheaded questions"
    ],
    "person_ids": [
        "a9b326df4e6da61c5b6f5e1058be83a2",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "0a39f78bcb297ab0ebe8a29c28bfed89",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "e3fb62ebfa4f36acf5cbff6a6ed0f2e0",
        "b844a0a98f81c321afe1d38ae37f3c28",
        "25812bf456959aa5f28dc570f341a3ba",
        "5d5b78699e57104f2fa03bbdf7b9197b"
    ]
}