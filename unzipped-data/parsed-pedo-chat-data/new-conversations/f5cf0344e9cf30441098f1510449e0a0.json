{
    "id": "f5cf0344e9cf30441098f1510449e0a0",
    "messages": [
        "b25b6b77a0087ff8385941e5545d32ea (16:48): I wonder if it is OK to make new years resolutions in June?",
        "fefe4c60d912e295e59fd874577ca7f9 (16:49): sure. just define a year as the period of time running from one June to the next",
        "ab7faae5d7b250ea8606486575f8f79c (16:49): The start of the year is entirely arbitrary, so it's just as good to pick any other time",
        "ab7faae5d7b250ea8606486575f8f79c (16:50): The length of the year isn't so arbitrary, given the planet we live on - you might be considered weird if you intend your resolution to last for a Martian year instead",
        "b25b6b77a0087ff8385941e5545d32ea (16:53): The length of the year seems irrelevant since new year's resolutions are defined to start at a time and theoretically last forever but in practice generaly last a few days",
        "ab7faae5d7b250ea8606486575f8f79c (16:56): Oh, okay",
        "ab7faae5d7b250ea8606486575f8f79c (16:56): But Wikipedia says &quot;While the traditional time to make New Year's resolutions is New Year's Day, it is perfectly acceptable to wait until late January, or even early February to make these goals.&quot; so presumably June is unacceptable",
        "b25b6b77a0087ff8385941e5545d32ea (16:58): Oh. well that's no use",
        "6af76983a3d7c4ffe0ae09148fa1983c (16:58): you could lump it in with general &quot;spring cleaning&quot; type jobs.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:00): hopes he has a working computer now",
        "ab7faae5d7b250ea8606486575f8f79c (17:01): a11aabeeceeae6b8cb5d12ea06b56554: Your presence here suggests that you do",
        "ab7faae5d7b250ea8606486575f8f79c (17:04): &quot;Thank you for your past interest in VMware. As part of our routine scheduled maintenance, we will be removing email addresses and associated subscription information from our marketing database for contacts who have not updated their profile and/or subscription preferences within the last 6 months.&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (17:04): That's probably the first time I've ever seen a company intentionally reduce the reach of their email marketing",
        "f139aba52f9fa1394b4034a7954b2220 (17:14): b25b6b77a0087ff8385941e5545d32ea, the financial year ends at the end of June in some countries, so you could do a New Financial Year's Resolution",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:26): What's a sane PDF reader for Ubuntu?",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:27): the bundled one",
        "ab7faae5d7b250ea8606486575f8f79c (17:28): cat and the PDF file format specification",
        "f139aba52f9fa1394b4034a7954b2220 (17:31): LOL",
        "b25b6b77a0087ff8385941e5545d32ea (17:33): It seems like the PDF specification is only avaliable as a PDF, which presents a bootstrapping problem",
        "ab7faae5d7b250ea8606486575f8f79c (17:33): That's not a problem - you can use Acrobat Reader to print the PDF specification",
        "ab7faae5d7b250ea8606486575f8f79c (17:34): then use the printed spec and cat as a more sane PDF reader",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:35): b25b6b77a0087ff8385941e5545d32ea: That's no different to HTML, but I think PDF claims to be logical.",
        "f139aba52f9fa1394b4034a7954b2220 (17:36): a11aabeeceeae6b8cb5d12ea06b56554, at least with HTML specifications, you can read HTML 2.0, implement that, which then allows you to read HTML 3.2 and 4.01, and after implementing those, you can implement HTML5, throw out your previous work on HTML 2.0, 3.2 and 4.01, and you're all done",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:37): f139aba52f9fa1394b4034a7954b2220: Or you could just download the PDF version of HTML 5 to start with",
        "f139aba52f9fa1394b4034a7954b2220 (17:38): but you first need to find the link to the PDF version, which is linked from the HTML version",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:38): f139aba52f9fa1394b4034a7954b2220: HTML can be read well enough as a text format though",
        "ab7faae5d7b250ea8606486575f8f79c (17:38): Someone should print out a copy of the HTML5 spec, then drop it in a trench on a building site, so that a future generation's equivalent of Time Team will dig it up even if there's been an intervening collapse of civilisation and loss of digital information",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:39): Under the rubble, preferably.",
        "f139aba52f9fa1394b4034a7954b2220 (17:39): you're assuming the person attempting to read the specification is familiar with some form of HTML, and won't be frightened away by all that markup",
        "a924fb58d2c25874322f4e5126f608b9 (17:42): Also, if they don't have a browser, they probably don't have internet access to the PDF version either",
        "f139aba52f9fa1394b4034a7954b2220 (17:44): a924fb58d2c25874322f4e5126f608b9, wget",
        "ab7faae5d7b250ea8606486575f8f79c (17:44): a924fb58d2c25874322f4e5126f608b9: gopher",
        "f139aba52f9fa1394b4034a7954b2220 (17:44): ab7faae5d7b250ea8606486575f8f79c, is the spec even available through the gopher protocol?",
        "a924fb58d2c25874322f4e5126f608b9 (17:45): f139aba52f9fa1394b4034a7954b2220: If they can wget the spec, they can wget a browser",
        "ab7faae5d7b250ea8606486575f8f79c (17:45): f139aba52f9fa1394b4034a7954b2220: Don't know; if not, someone should set up a server for it",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:46): wonders if Workers address the threading use cases of Google Native Client",
        "f139aba52f9fa1394b4034a7954b2220 (17:46): ab7faae5d7b250ea8606486575f8f79c, it depends if someone can create some market demand for such a service",
        "b8810fee2f4a71f849f3f7409546d1d9 (17:46): wonders...",
        "ab7faae5d7b250ea8606486575f8f79c (17:47): f139aba52f9fa1394b4034a7954b2220: It doesn't need any market demand, it just needs someone sufficiently bored and strange to set it up",
        "f139aba52f9fa1394b4034a7954b2220 (17:48): ab7faae5d7b250ea8606486575f8f79c, someone like you, perhaps?",
        "ab7faae5d7b250ea8606486575f8f79c (17:48): a924fb58d2c25874322f4e5126f608b9: Maybe they're using an IP-over-SMS protocol and will be bankrupt before they manage to download an entire browser, but would just about be able to download the HTML5 spec",
        "ab7faae5d7b250ea8606486575f8f79c (17:48): f139aba52f9fa1394b4034a7954b2220: I'm not sufficiently bored at the moment",
        "f139aba52f9fa1394b4034a7954b2220 (17:50): I wonder if anyone has implemented an IP-over-SMS service yet?",
        "f139aba52f9fa1394b4034a7954b2220 (17:52): I wonder if anyone would be bored enough to manually type in the bytes on their phone to construct an IP packet that is itself divided into 160 byte sequences?",
        "ab7faae5d7b250ea8606486575f8f79c (17:53): You could build a device out of Lego to press the buttons for you automatically",
        "a924fb58d2c25874322f4e5126f608b9 (17:53): Surely you'd want to use base64 instead :)",
        "ab7faae5d7b250ea8606486575f8f79c (17:55): Depends on whether you want to optimise bandwidth usage or data entry time",
        "f139aba52f9fa1394b4034a7954b2220 (17:56): ab7faae5d7b250ea8606486575f8f79c, given the limitations of character entry on common mobile devices, encoding the entire packet as base64 might be the only viable option",
        "ab7faae5d7b250ea8606486575f8f79c (17:56): e.g. it'd probably be much quicker to turn off predictive typing and use base10, but you'd have to send more messages",
        "f139aba52f9fa1394b4034a7954b2220 (17:57): well, not the only viable option, since you could conceivably create your own encoding scheme",
        "ab7faae5d7b250ea8606486575f8f79c (17:57): I don't think my phone's dictionary contains SGVsbG8gd29ybGQ= so it would complain a lot when I tried to type it in",
        "f139aba52f9fa1394b4034a7954b2220 (17:57): but that would be a silly waste of time (unlike the rest of this project)",
        "a924fb58d2c25874322f4e5126f608b9 (17:58): How about just sending one SMS per byte, having the message contain the byte value as a number 0-255?",
        "a924fb58d2c25874322f4e5126f608b9 (17:58): Then you could have jumbo SMSes where you type more than one number in each SMS, separated by non-digits",
        "ab7faae5d7b250ea8606486575f8f79c (17:59): SMSs are a bit unreliable so you'd probably have to add sequence numbers and ACKs",
        "ab7faae5d7b250ea8606486575f8f79c (17:59): else the higher layers aren't going to cope very well with all the packet corruption",
        "f139aba52f9fa1394b4034a7954b2220 (18:01): a924fb58d2c25874322f4e5126f608b9, once you have IP, you can then use TCP for that",
        "ab7faae5d7b250ea8606486575f8f79c (18:01): You need each SMS to contain the octet, the sequence number, and a SHA512 HMAC to ensure integrity, and then it'll be fine",
        "a924fb58d2c25874322f4e5126f608b9 (18:02): And the ACK?",
        "f139aba52f9fa1394b4034a7954b2220 (18:03): you could get away with just the sequence number. Adding all the rest would take up too much of each message's 160 byte sequence",
        "ab7faae5d7b250ea8606486575f8f79c (18:04): f139aba52f9fa1394b4034a7954b2220: SMS probably loses more than one message out of every ~1500, and TCP won't recover from 100% packet loss, so you need some layer 2 error-correction mechanism",
        "f139aba52f9fa1394b4034a7954b2220 (18:05): if you get a 100% packet loss, then the connection would simply timeout and you could assume transmission failure",
        "ab7faae5d7b250ea8606486575f8f79c (18:05): Also, TCP won't help at all with UDP applications like real-time games and Skype",
        "f139aba52f9fa1394b4034a7954b2220 (18:05): SMS-over-IP isn't designed for real time applications",
        "ab7faae5d7b250ea8606486575f8f79c (18:06): f139aba52f9fa1394b4034a7954b2220: If transmission failure is pretty much guaranteed, it's a bit of a rubbish protocol",
        "a924fb58d2c25874322f4e5126f608b9 (18:06): You could do a regular call and use voice software to read out the bytes",
        "f139aba52f9fa1394b4034a7954b2220 (18:06): oops, IP over SMS",
        "ab7faae5d7b250ea8606486575f8f79c (18:06): so we ought to design it to work around those problems",
        "ab7faae5d7b250ea8606486575f8f79c (18:07): a924fb58d2c25874322f4e5126f608b9: Good thinking - the voice channel should be much more reliable than SMS",
        "f139aba52f9fa1394b4034a7954b2220 (18:07): I'd love it if someone wrote an April Fools RFC for this protocol :-)",
        "b07211a0c7cb119232799d2119cea90f (18:08): mm, Skype-over-IP-over-SMS would be beautiful",
        "f139aba52f9fa1394b4034a7954b2220 (18:09): hey, you could use Twitter for multicasting",
        "150ca666565bfcb850b2e2ee3c0f0c64 (18:09): I imagine most SMS traffic ends up being sent over an IP network at some point",
        "f139aba52f9fa1394b4034a7954b2220 (18:09): but then you'd be restricted to 140 character sequences",
        "150ca666565bfcb850b2e2ee3c0f0c64 (18:09): so really it's IP-over-SMS-over-IP",
        "ab7faae5d7b250ea8606486575f8f79c (18:11): Mmm, IP-over-Twitter",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:12): b07211a0c7cb119232799d2119cea90f: You're upstairs, right?",
        "b07211a0c7cb119232799d2119cea90f (18:12): a11aabeeceeae6b8cb5d12ea06b56554: yeah",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:13): We should move TPAC to Sweden",
        "f139aba52f9fa1394b4034a7954b2220 (18:13): IP-over-twitter would be the same as IP-over-SMS, except that the IP-over-twitter protocol would need to specify a way to detect and strip the username from the beginning of each message",
        "ab7faae5d7b250ea8606486575f8f79c (18:14): Presumably IP-over-SMS and IP-over-Twitter would be able to interoperate, using Twitter's SMS features",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:14): notes that twitter applies the length limit by UTF-16 (or characters?) while SMS applies it by bytes",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:15): so twitter gives you 140 characters even if you use stuff that's not in the original GSM encoding and turns SMS into an 80-code unit UTF-16 message",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:15): wonders how twitter's gateway deals with that",
        "a924fb58d2c25874322f4e5126f608b9 (18:16): Splits into two messages? :)",
        "ab7faae5d7b250ea8606486575f8f79c (18:18): Truncates? Crashes?",
        "f139aba52f9fa1394b4034a7954b2220 (18:19): someone should test it. I don't have Twitter sending me SMSs, so i can't",
        "ab7faae5d7b250ea8606486575f8f79c (18:20): Apparently SMS does &quot;160 7-bit characters, 140 8-bit characters, or 70 16-bit characters&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (18:21): (since it's 140 octets)",
        "ab7faae5d7b250ea8606486575f8f79c (18:21): (according to http://en.wikipedia.org/wiki/SMS#Message_size)",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:22): b8810fee2f4a71f849f3f7409546d1d9: Twitter applies NFC, then limits by number of codepoints used.",
        "a11aabeeceeae6b8cb5d12ea06b56554 (18:22): (or at least did a few months ago when I got bored and tried to work it out)",
        "f139aba52f9fa1394b4034a7954b2220 (18:24): well, if we're encoding the message as Base64, then normalising to NFC won't actually affect the message anyway",
        "ab7faae5d7b250ea8606486575f8f79c (18:25): The SMS spec says it's &quot;UCS-2&quot; and references ISO/IEC 10646",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:26): ab7faae5d7b250ea8606486575f8f79c: what's the 8-bit encoding?",
        "b07211a0c7cb119232799d2119cea90f (18:26): can someone with IE8 go to http:/ b07211a0c7cb119232799d2119cea90f.org/tests/octet-stream/ and see if hitting 'Start' does anything?",
        "ab7faae5d7b250ea8606486575f8f79c (18:26): and doesn't give any details on e.g. how surrogates should be handled",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:26): the 160 char thing works with accented Western European chars",
        "ab7faae5d7b250ea8606486575f8f79c (18:26): b8810fee2f4a71f849f3f7409546d1d9: &quot;8 bit data is user defined&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:27): ah.",
        "ab7faae5d7b250ea8606486575f8f79c (18:27): b8810fee2f4a71f849f3f7409546d1d9: &quot;Character table: User Specific&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:27): Russian goes the 16 bit path",
        "b07211a0c7cb119232799d2119cea90f (18:27): yeah, it kinda relies on different phones using the same charsets",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:27): which is why it pays off to use ad hoc Romanizations of Russian",
        "f139aba52f9fa1394b4034a7954b2220 (18:27): I would assume the defacto standard would probably be Windows-1252",
        "f139aba52f9fa1394b4034a7954b2220 (18:27): at least in Western markets",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:27): f139aba52f9fa1394b4034a7954b2220: I wouldn't assume so",
        "ab7faae5d7b250ea8606486575f8f79c (18:28): The table in http://en.wikipedia.org/wiki/SMS#GSM shows the 7-bit characters",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:28): GSM had a crazy legacy of its own",
        "ab7faae5d7b250ea8606486575f8f79c (18:28): 8-bit sounds like it's for data (e.g. sending photos), not text",
        "ab7faae5d7b250ea8606486575f8f79c (18:29): They've got a whole two bits for identifying the character encoding, so they could expand it with an extra choice in the future",
        "f139aba52f9fa1394b4034a7954b2220 (18:29): wow, I always thought SMS just used ASCII",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:30): f139aba52f9fa1394b4034a7954b2220: it was invented by people who had accented use cases",
        "ab7faae5d7b250ea8606486575f8f79c (18:31): The 7-bit thing also has escape codes to shift into a different character set, with three currently defined (Turkish, Spanish, Portugese)",
        "ab7faae5d7b250ea8606486575f8f79c (18:35): If you use the single shift mechanism, then sending 0x1B 0x?? will look up the second byte in the character table for the message's language (defined in a header field)",
        "ab7faae5d7b250ea8606486575f8f79c (18:36): or there's another mode which uses a language-specific table by default, and I think uses 0x1B to escape to the standard 7-bit table",
        "ab7faae5d7b250ea8606486575f8f79c (18:37): This system does sound somewhat evolved, i.e. an accumulation of hacks",
        "ab7faae5d7b250ea8606486575f8f79c (18:42): was looking at http://www.3gpp.org/ftp/Specs/archive/23_series/23.038/23038-820.zip via ftp://ftp.3gpp.org/Specs/html-info/23038.htm via http://en.wikipedia.org/wiki/SMS#cite_note-3GPP_23.038-25",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:46): hmm. I guess if Google Native Client takes off, it'll further cement the position of x86 instructions as the universal byte code that future CPUs need to implement",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:47): wonders how GCC &amp; Native Client compares to javac &amp; HotSpot",
        "ab7faae5d7b250ea8606486575f8f79c (18:49): It's particularly bad if people use NaCl to do computation-intensive work (which is its main purpose) using SSE/SSE2/etc",
        "ab7faae5d7b250ea8606486575f8f79c (18:49): because they're probably not much fun to emulate efficiently on a different CPU architecture",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:51): are there autovectorizers for any non-vector languages and do they work?",
        "ab7faae5d7b250ea8606486575f8f79c (18:52): The Intel C++ Compiler can autovectorise loops",
        "ab7faae5d7b250ea8606486575f8f79c (18:52): and sometimes it works",
        "ab7faae5d7b250ea8606486575f8f79c (18:53): http://software.intel.com/en-us/articles/vectorization-with-the-intel-compilers-part-i/",
        "ab7faae5d7b250ea8606486575f8f79c (18:56): (As far as I'm aware, anyone who actually cares about vectorisation in C++ will use explicit SIMD intrinsics (or write assembly code) because compilers are rarely magic enough)",
        "b8810fee2f4a71f849f3f7409546d1d9 (18:58): ok",
        "ab7faae5d7b250ea8606486575f8f79c (19:00): Hmm, apparently GCC has -ftree-vectorize",
        "ab7faae5d7b250ea8606486575f8f79c (19:01): which apparently works for C and C++ and Fortran and Java etc",
        "ab7faae5d7b250ea8606486575f8f79c (19:03): (to a limited, buggy extent)",
        "b07211a0c7cb119232799d2119cea90f (19:06): a11aabeeceeae6b8cb5d12ea06b56554: I'm no longer upstairs"
    ],
    "person_ids": [
        "b25b6b77a0087ff8385941e5545d32ea",
        "fefe4c60d912e295e59fd874577ca7f9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "6af76983a3d7c4ffe0ae09148fa1983c",
        "a11aabeeceeae6b8cb5d12ea06b56554",
        "f139aba52f9fa1394b4034a7954b2220",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a924fb58d2c25874322f4e5126f608b9",
        "b07211a0c7cb119232799d2119cea90f",
        "150ca666565bfcb850b2e2ee3c0f0c64"
    ]
}