{
    "id": "f036c366536892265e6cb91d209b51e9",
    "messages": [
        "a924fb58d2c25874322f4e5126f608b9 (15:16): &gt;it should explicitly say alt=&quot;&quot; MUST NOT be blank unless it MAY be left blank",
        "a924fb58d2c25874322f4e5126f608b9 (15:17): Isn't that implied? Or am I misunderstanding how the terms work",
        "ab7faae5d7b250ea8606486575f8f79c (15:20): Implied requirements are dangerous",
        "ab7faae5d7b250ea8606486575f8f79c (15:21): It seems generally better to be explicit",
        "ab7faae5d7b250ea8606486575f8f79c (15:27): doesn't like &quot;x MAY y if z&quot; because he's never quite sure if the intention was &quot;x MUST NOT y if not z&quot;, or &quot;x MUST NOT (not y) if z&quot;, or something else",
        "ab7faae5d7b250ea8606486575f8f79c (15:28): although in the case of &lt;area&gt; it already says it must be text that's somehow equivalent to the image area, so I don't see why it'd need to be stated again",
        "a924fb58d2c25874322f4e5126f608b9 (15:41): For additional fun, write requirements on the form &quot;x MAY not y&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (15:42): And &quot;x MUST only y if z&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (15:43): and &quot;x MUST y only if z&quot;",
        "a924fb58d2c25874322f4e5126f608b9 (15:44): Maybe all normative criteria should be written using some kind of formal logic notation",
        "ab7faae5d7b250ea8606486575f8f79c (15:48): RFC2119 is fine as long as you use the words in simple sentences (&quot;if z, then y MUST x&quot;, &quot;if not z, then y MUST NOT x&quot;, etc)",
        "ab7faae5d7b250ea8606486575f8f79c (15:48): and I think HTML5 generally does that quite consistently now",
        "ab7faae5d7b250ea8606486575f8f79c (16:03): Oddly, Opera kerns text with strokeText on Linux but not with fillText",
        "ab7faae5d7b250ea8606486575f8f79c (16:03): and with neither on Windows",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:14): hmm, Ubuntu says my harddrive is getting sucky",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:15): and video playback/downloading does seem to fail way more often",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:15): grmbl",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:15): wonders if it's easy to replace a hard drive",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:15): In your ThinkPad?",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:18): yes",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:19): this sucks a bit, I was planning on seeing some of the new Damages episodes today",
        "a11aabeeceeae6b8cb5d12ea06b56554 (16:19): edb259c0e0038f38bb200bc20c8cbf7e: ThinkPads all make it fairly easy to change HD, AFAIK",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:21): hmm, guess I have to burn some Ubuntu installer disk as well",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:21): meh",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:23): would be nice if I could just put a SSD in",
        "edb259c0e0038f38bb200bc20c8cbf7e (16:33): hmm, those are not cheap",
        "ab7faae5d7b250ea8606486575f8f79c (16:37): Is there a reliable way to make sure a @font-face is loaded before trying to draw with it?",
        "ab7faae5d7b250ea8606486575f8f79c (16:37): Firefox and Opera seem to block onload as long as the font is used in a (non-display:none) element within the page itself, so that's okay",
        "ab7faae5d7b250ea8606486575f8f79c (16:38): Chromium doesn't, so it randomly works only half the time",
        "ab7faae5d7b250ea8606486575f8f79c (16:38): and if I do something like draw with the font, then wait a bit to make sure it's really loaded and draw again, Chromium crashes",
        "ab7faae5d7b250ea8606486575f8f79c (16:38): so that's not so good",
        "ab7faae5d7b250ea8606486575f8f79c (16:39): and I'm not sure how else to do it",
        "ab7faae5d7b250ea8606486575f8f79c (16:50): Oh, seems to work better if I actually use characters from the font in the page",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:05): ab7faae5d7b250ea8606486575f8f79c: Detect the character width?",
        "ab7faae5d7b250ea8606486575f8f79c (17:09): a11aabeeceeae6b8cb5d12ea06b56554: That would only help detect whether the font has been loaded, and wouldn't cause it to become loaded",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:10): ab7faae5d7b250ea8606486575f8f79c: position: absolute; visibility: hidden; top: 0; left: 0; I guess would cause it to load",
        "a11aabeeceeae6b8cb5d12ea06b56554 (17:10): ab7faae5d7b250ea8606486575f8f79c: Without interfering with anything",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): That seems to work",
        "ab7faae5d7b250ea8606486575f8f79c (17:15): (I was doing opacity:0 which also seems to work)",
        "ab7faae5d7b250ea8606486575f8f79c (17:16): with a 0.5s delay before drawing to make sure it's really loaded",
        "ab7faae5d7b250ea8606486575f8f79c (17:16): because WebKit doesn't delay onload, it seems",
        "ab7faae5d7b250ea8606486575f8f79c (17:28): Opera doesn't even get textAlign correct :-("
    ],
    "person_ids": [
        "a924fb58d2c25874322f4e5126f608b9",
        "ab7faae5d7b250ea8606486575f8f79c",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "a11aabeeceeae6b8cb5d12ea06b56554"
    ]
}