{
    "id": "191dc7bed0b4bd8bec7616204fdbb562",
    "messages": [
        "b8810fee2f4a71f849f3f7409546d1d9 (10:24): whew. Validator.nu now validates the old spec copy without choking: http://html5.validator.nu/?doc=http%3A%2F%2Fabout.validator.nu%2Fspec2.html",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:25): hmm. and looks like I need to fix about.validator.nu server config...",
        "73eaf221abca1b8244e34b0b9e76ac46 (10:35): http://files.myopera.com/MacDev_ed/svg/sign_danger_corrosive.svg",
        "73eaf221abca1b8244e34b0b9e76ac46 (10:35): thinks that's a suitable reference rendering for acid3 :)",
        "65325d50b2e25aca54bc871b89758c9c (10:53): haha",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:54): that SVG file is what's corroding my copy of safari",
        "73eaf221abca1b8244e34b0b9e76ac46 (10:56): well it warned you now didn't it? :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:56): :-)",
        "b8810fee2f4a71f849f3f7409546d1d9 (10:57): was it so that I need to set a timeout if I want to emulate hashChanged in current browsers?",
        "73eaf221abca1b8244e34b0b9e76ac46 (10:58): i think so, unless you're happy to assume that the hash will only change in response to click or keyboard events",
        "edb259c0e0038f38bb200bc20c8cbf7e (10:59): what is window.otherCrossDomain ?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:00): 73eaf221abca1b8244e34b0b9e76ac46: is that a good assumption with alternative input methods, spatnav, etc.?",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:01): are &lt;body onload='...&gt; and window.onload different handlers or is there some legacy sameness going on?",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:02): spatnav still emits keyboard events, but it's certainly not fool proof. e.g. the user might enter a hash in the address bar",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:02): b8810fee2f4a71f849f3f7409546d1d9: they should be the same, but i'm not sure if opera gets it right yet",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:03): I wonder if I should clean away the event handler attributes from the Validator.nu HTML output and install everything in script...",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:03): using window.onload instead of &lt;body onload&gt; certainly works cross-browser",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:03): using both doesn't :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:04): ok. I'll clean up my HTML",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:05): sounds good, i guess you get a better mobileOK score then :)",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:06): heh.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:06): the key parts of the scripted stuff work in Opera Mini even",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:06): that's nice",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:07): I hope mini doesn't care about attributes vs. script-installed handlers",
        "65325d50b2e25aca54bc871b89758c9c (11:11): edb259c0e0038f38bb200bc20c8cbf7e: just a piece of jwalden's tests - hapens to be the name of a frame",
        "65325d50b2e25aca54bc871b89758c9c (11:11): edb259c0e0038f38bb200bc20c8cbf7e: it does not have deep meaning",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:11): the group messages button works, which has script-installed handler, so i guess it should work",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): 73eaf221abca1b8244e34b0b9e76ac46: ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:12): last I checked the part that didn't work in Mini was the textarea/fileupload mode popup",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:13): but then, that doesn't need to work in Mini",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:13): wants media queries in MicroB, S60 Browser and Opera Mobile",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:16): 65325d50b2e25aca54bc871b89758c9c, good, I was hoping it was that :)",
        "1a11ef65e59a402769635562579a7df6 (11:18): Hixie: I agree with roc... SMIL could be hell to implement :)  But it also is moderately useful to the web",
        "1a11ef65e59a402769635562579a7df6 (11:18): it's more the SVG animation DOM which is a bitch",
        "1a11ef65e59a402769635562579a7df6 (11:19): the baseVal animVal problem",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:19): does Opera implement SMIL?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:19): we implement SVG Animation",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:20): which reuses part of SMIL",
        "65325d50b2e25aca54bc871b89758c9c (11:20): I think people are using &quot;SMIL&quot; as a slightly imprecise shorthand for &quot;SVG Animation&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:20): we do not implement the 111 and growing namespace monster that is SMIL 2.1",
        "73eaf221abca1b8244e34b0b9e76ac46 (11:20): edb259c0e0038f38bb200bc20c8cbf7e: they settled for a single namespace for smil3, though",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:21): fwiw, for HTML eyecandy, I think the Apple CSS animation proposal is way more elegant than the transition stuff from the SMIL group",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:21): that makes 112",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:21): alarm number of Europe",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:21): :-)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:22): i agree that the CSS animation stuff is nicer",
        "0c613432f4687d9dae0e13d1af514eb8 (11:23): SMIL isn't really intended for &quot;eye candy&quot;: it's a content language.",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:23): unfortunately the CSS group won't work on it right away",
        "0c613432f4687d9dae0e13d1af514eb8 (11:23): (AFAIK)",
        "1a11ef65e59a402769635562579a7df6 (11:23): now we just need a nice way to apply the CSS animation to SVG :)",
        "1a11ef65e59a402769635562579a7df6 (11:23): should submit a test or two to get SMIL kicked from the test",
        "1a11ef65e59a402769635562579a7df6 (11:23): it's just so low on actual browser feature lists",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:24): 65325d50b2e25aca54bc871b89758c9c, btw, any simplification of the DOM that is possible is good imo, if we can remove attribute nodes that would be a win",
        "1a11ef65e59a402769635562579a7df6 (11:24): since no one in their right mind is trying to use it on the web right now",
        "0c613432f4687d9dae0e13d1af514eb8 (11:24): No. It's like with video. Easier to use Flash for complex presentations.",
        "a131216c7af242e66537a58b4ca7c9f9 (11:24): implementing SMIL might hurt static svg perf",
        "0c613432f4687d9dae0e13d1af514eb8 (11:24): and there's Slidy for simple ones.",
        "a131216c7af242e66537a58b4ca7c9f9 (11:24): assuming it requires sprinkling &quot;if(animated)&quot; all over",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:25): 1a11ef65e59a402769635562579a7df6, might be chicken/egg problem",
        "65325d50b2e25aca54bc871b89758c9c (11:25): edb259c0e0038f38bb200bc20c8cbf7e: TreeWalker doesn't seem any more useful to me than attribute nodes...",
        "1a11ef65e59a402769635562579a7df6 (11:25): edb259c0e0038f38bb200bc20c8cbf7e: might",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:25): sure",
        "0c613432f4687d9dae0e13d1af514eb8 (11:25): So it's limited to people who want to make complex presentations in an open format.",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:25): (to both)",
        "1a11ef65e59a402769635562579a7df6 (11:25): a131216c7af242e66537a58b4ca7c9f9: I don't think it's a bunch of branching",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:25): 65325d50b2e25aca54bc871b89758c9c, but if we can remove one why not do it?",
        "0c613432f4687d9dae0e13d1af514eb8 (11:25): (And the pool of people who care about that is small.)",
        "1a11ef65e59a402769635562579a7df6 (11:26): a131216c7af242e66537a58b4ca7c9f9: it is a bunch of added complex code however",
        "65325d50b2e25aca54bc871b89758c9c (11:26): edb259c0e0038f38bb200bc20c8cbf7e: well, I'd put TreeWalker on the chopping block too",
        "65325d50b2e25aca54bc871b89758c9c (11:26): I'm not sure why attribute nodes are worse",
        "0c613432f4687d9dae0e13d1af514eb8 (11:26): (and I guess it has to compete with ODF)",
        "1a11ef65e59a402769635562579a7df6 (11:26): thinks that TreeWalker is on the list of &quot;simple to actually implement so we should just get it out of the way and be done with it&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:26): i'm fine with putting both on the chopping block, it just seems that dropping attribute nodes might be easier",
        "65325d50b2e25aca54bc871b89758c9c (11:27): just seems a little arbitrary",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:27): maybe it's because it's part of the Core DOM",
        "65325d50b2e25aca54bc871b89758c9c (11:27): Attr nodes are part of DOM 1 Core, TreeWalker is part of DOM2 Traversal, does any web content use it?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:27): i also think that namespace events should be dropped from dom3events",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:28): for treewalker there are some use cases",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:28): for attr nodes there are none given that no implementation does entity nodes",
        "65325d50b2e25aca54bc871b89758c9c (11:28): TreeWalker is a bad API for traversing a DOM tree",
        "65325d50b2e25aca54bc871b89758c9c (11:28): I agree there are use cases for a good API for doing so",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:29): xhr is a bad api for network requests...",
        "65325d50b2e25aca54bc871b89758c9c (11:29): what I hate most out of DOM Events is mutation events",
        "65325d50b2e25aca54bc871b89758c9c (11:29): it's not just useless, it is actively harmful to code complexity and performance all over the DOM",
        "a131216c7af242e66537a58b4ca7c9f9 (11:29): oh, yes, mutation events are evil",
        "65325d50b2e25aca54bc871b89758c9c (11:29): edb259c0e0038f38bb200bc20c8cbf7e: but XHR is used, unlike TreeWalker",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:29): is treewalker implemented everywhere?",
        "65325d50b2e25aca54bc871b89758c9c (11:30): surely not in IE",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:30): that's probably a good reason for not using it then :)",
        "65325d50b2e25aca54bc871b89758c9c (11:30): it is in WebKit and Mozilla",
        "65325d50b2e25aca54bc871b89758c9c (11:30): I'd assume Opera too",
        "a131216c7af242e66537a58b4ca7c9f9 (11:30): 65325d50b2e25aca54bc871b89758c9c: did you see that gecko decided to stop firing mutation events during page load?",
        "65325d50b2e25aca54bc871b89758c9c (11:30): a131216c7af242e66537a58b4ca7c9f9: even if they are caused by explicit mutation, not parsing?",
        "a131216c7af242e66537a58b4ca7c9f9 (11:30): i think so, but i'm not sure",
        "65325d50b2e25aca54bc871b89758c9c (11:30): (we never did fire them as side effects of initial parsing)",
        "65325d50b2e25aca54bc871b89758c9c (11:31): we actually don't fire them at all if no listener is registered",
        "a131216c7af242e66537a58b4ca7c9f9 (11:31): https://bugzilla.mozilla.org/show_bug.cgi?id=90983",
        "65325d50b2e25aca54bc871b89758c9c (11:31): that reduces perf cost",
        "65325d50b2e25aca54bc871b89758c9c (11:31): but there's still a lot of code complexity to make basic DOM operations robust in the face of mutation event listeners possibly modifying the DOM",
        "a131216c7af242e66537a58b4ca7c9f9 (11:31): we had that optimization too, and we were spending time looking to see if there were mutation listeners",
        "a131216c7af242e66537a58b4ca7c9f9 (11:31): yes",
        "65325d50b2e25aca54bc871b89758c9c (11:31): (which no one ever really wants to do in a way that invalidates the DOM operation)",
        "a131216c7af242e66537a58b4ca7c9f9 (11:31): we had a fair number of crashes due to bad assumptions in there",
        "65325d50b2e25aca54bc871b89758c9c (11:32): if DOM change notifications are actually useful, they should be batched",
        "65325d50b2e25aca54bc871b89758c9c (11:32): until the end of operations that ought to be atomic",
        "65325d50b2e25aca54bc871b89758c9c (11:32): our editing operations just skip mutation events entirely I think",
        "a131216c7af242e66537a58b4ca7c9f9 (11:32): as opposed to some being required to be sent before the mutation actually happens? :P",
        "65325d50b2e25aca54bc871b89758c9c (11:33): the worst are the ones that happen in the middle",
        "65325d50b2e25aca54bc871b89758c9c (11:33): over half the code in our Node.replaceChild core implementation is to account for mutation events possibly doing something crazy",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:37): heh, that bug is filed by an Opera developer",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:37): s/is/was/",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:39): is DOMContentLoaded going to be part of a spec?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:40): it's part of HTML 5",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:40): oh. :-)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:41): Opera 9.2x now passes less than 50% of the Acid3 tests",
        "b07211a0c7cb119232799d2119cea90f (11:42): that Charles fella on whatwg doesn't seem to grok the video element",
        "65325d50b2e25aca54bc871b89758c9c (11:43): in Safari 3 it just says &quot;JS ?&quot;",
        "65325d50b2e25aca54bc871b89758c9c (11:43): is that intended?",
        "65325d50b2e25aca54bc871b89758c9c (11:43): (65/100 in WebKit trunk)",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:45): i don't think so",
        "162922e135c0af768927f1a6c966d3a9 (11:45): he. khtml fell back to 65 after the recent changes, too.",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:57): does any browser support hashchanged yet?",
        "edb259c0e0038f38bb200bc20c8cbf7e (11:58): neh",
        "b8810fee2f4a71f849f3f7409546d1d9 (11:58): ok",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:09): Hmm. Validator.nu script initialization isn't good if show source is enabled and the doc is huge",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:10): I wonder if I should move the script element right after the form and make the form initialization code run immediately at that point...",
        "1a11ef65e59a402769635562579a7df6 (12:10): om_sleep: Safari 3 used to show like 46/100",
        "1a11ef65e59a402769635562579a7df6 (12:10): insetad of JS ?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:12): is there any harm, if I move the &lt;script&gt; element except it isn't as elegant? will it break XHTML loading in legacy browsers, for example?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:14): xhtml in gecko had issues with &lt;script&gt;",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:14): :-(",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:15): edb259c0e0038f38bb200bc20c8cbf7e: do you recall what kind of issues?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:16): vague memory tells me the script executed directly but the DOM wasn't build up so stuff failed",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:16): edb259c0e0038f38bb200bc20c8cbf7e: ok. that can be coded for",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:16): i wouldn't worry aout it though and simply assume incremental XML parsers",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:16): i'm sure content already relies on that (at leasts tests :))",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:18): now I need to learn to do cross-browser stylesheet manipulation...",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:19): it surprises me that 10% of the Web is in standards mode",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:20): hmm. alternatively, I could just do some dirty className toggling.",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:20): that might be easier and even force style resolution and layout reflow in legacy UAs",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:22): edb259c0e0038f38bb200bc20c8cbf7e: can you recommend a good CSSOM tutorial?",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:25): no :(",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:26): in terms of perf and compat, should I modify the main stylesheet in DOM or should I create a &lt;style&gt; element and do dynamic styles there?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:34): how do I create an object that implements CSSStyleSheet?",
        "b8810fee2f4a71f849f3f7409546d1d9 (12:45): hmm. looks like manipulating the textContent of a &lt;style&gt; element is much easier than dealing with the CSSOM...",
        "edb259c0e0038f38bb200bc20c8cbf7e (12:59): you can do document.styleSheets[0].insertRule(&quot;&quot;, -1) or something like that",
        "edb259c0e0038f38bb200bc20c8cbf7e (13:00): but manipulating textContent of &lt;style&gt; seems fine"
    ],
    "person_ids": [
        "b8810fee2f4a71f849f3f7409546d1d9",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "65325d50b2e25aca54bc871b89758c9c",
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "1a11ef65e59a402769635562579a7df6",
        "0c613432f4687d9dae0e13d1af514eb8",
        "a131216c7af242e66537a58b4ca7c9f9",
        "b07211a0c7cb119232799d2119cea90f",
        "162922e135c0af768927f1a6c966d3a9"
    ]
}