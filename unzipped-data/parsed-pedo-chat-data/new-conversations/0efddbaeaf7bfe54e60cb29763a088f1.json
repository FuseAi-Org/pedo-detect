{
    "id": "0efddbaeaf7bfe54e60cb29763a088f1",
    "messages": [
        "cc097e0d7183ae8436e7df709553c8c0 (22:04): 69b0d3dfe919a6b860a9fac82de52a7e: you have escape() on 2 more places... :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:07): but those are for data: URIs",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:07): aren't they ok?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:07): btw i updated the API docs for /issues/ to include the lower-level protocol",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:09): 69b0d3dfe919a6b860a9fac82de52a7e: are you actively involved in html5lib coding?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:09): no",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:10): who is?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:10): http://code.google.com/p/html5lib/",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:10): see &quot;project owners&quot;",
        "cc097e0d7183ae8436e7df709553c8c0 (22:14): 69b0d3dfe919a6b860a9fac82de52a7e: no, they're not ok. e.g. \u201a\u00f2? becomes data:text/html,%u263A instead of data:text/html,%E2%98%BA (you might even want to do data:text/html;charset=utf-8,... )",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:15): aah",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:15): wtf is %u1234",
        "cc097e0d7183ae8436e7df709553c8c0 (22:15): it's what escape() does",
        "cc097e0d7183ae8436e7df709553c8c0 (22:15): it replaces \\ with % i think",
        "6905646aa63b96d6bdfbd256603fa58e (22:15): 6579a25fc8e60d2ff7dfb590bb79042f: you have a question about html5lib?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): cc097e0d7183ae8436e7df709553c8c0: changed",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): man we need to kill escape()/unescape() then",
        "cc097e0d7183ae8436e7df709553c8c0 (22:16): is happy now :)",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): or at least escape()",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:16): i guess unescape() is fine",
        "cc097e0d7183ae8436e7df709553c8c0 (22:16): it's not",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): does it not do +s or something?",
        "cc097e0d7183ae8436e7df709553c8c0 (22:17): %E2%98%Ba becomes \\E2\\89\\BA",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): oh it interprets as latin1?",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:17): interesting",
        "cc097e0d7183ae8436e7df709553c8c0 (22:17): yeah, basically",
        "69b0d3dfe919a6b860a9fac82de52a7e (22:24): afk",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:29): 6905646aa63b96d6bdfbd256603fa58e: yeah, i was talking with sam ruby about adding some test cases",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:29): and enhancing its functionality as a validator",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:29): for example, teaching it which attributes are allowed/required in which elements",
        "6905646aa63b96d6bdfbd256603fa58e (22:29): sounds good to me",
        "6905646aa63b96d6bdfbd256603fa58e (22:30): if you add test cases I'll update the ruby version :)",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:30): and then later maybe some stuff around inline content vs. strictly inline content, etc.",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:31): to start with, i'd like to refactor the parserError logging",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:31): to use constants enumerated in constants.py",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:31): we did that in feedvalidator and later used the constant names to link to documentation pages",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:31): very useful",
        "6905646aa63b96d6bdfbd256603fa58e (22:32): nice",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:32): any objection?",
        "6905646aa63b96d6bdfbd256603fa58e (22:32): not from me",
        "6905646aa63b96d6bdfbd256603fa58e (22:32): I work solely with the ruby port, though",
        "6579a25fc8e60d2ff7dfb590bb79042f (22:32): i see"
    ],
    "person_ids": [
        "cc097e0d7183ae8436e7df709553c8c0",
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "6579a25fc8e60d2ff7dfb590bb79042f",
        "6905646aa63b96d6bdfbd256603fa58e"
    ]
}