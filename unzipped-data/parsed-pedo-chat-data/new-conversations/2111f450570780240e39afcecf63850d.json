{
    "id": "2111f450570780240e39afcecf63850d",
    "messages": [
        "7d8a20281bb41e05c504c371880f1d08 (03:16): c480405f460f7a61964569640a6cd059: it seems like your example with relative urls would actually work.",
        "7d8a20281bb41e05c504c371880f1d08 (03:16): maybe I am missing some subtle detail of how urls are resolved.",
        "c480405f460f7a61964569640a6cd059 (03:17): aboodman: the url would be resolved against google.com though, no?",
        "c480405f460f7a61964569640a6cd059 (03:17): 7d8a20281bb41e05c504c371880f1d08, rather than against example.html",
        "7d8a20281bb41e05c504c371880f1d08 (03:17): it seems like it would resolve to http://docs.google.com/documents/report.doc",
        "c480405f460f7a61964569640a6cd059 (03:17): right",
        "7d8a20281bb41e05c504c371880f1d08 (03:18): which is the same thing it would resolve to relative to index.html, assuming index.html was also hosted somewhere on http://docs.google.com/",
        "c480405f460f7a61964569640a6cd059 (03:18): index.html is hosted on myserver.com",
        "c480405f460f7a61964569640a6cd059 (03:18): sorry, should have said that",
        "7d8a20281bb41e05c504c371880f1d08 (03:18): cross-origin workers aren't allowed in html5",
        "7d8a20281bb41e05c504c371880f1d08 (03:18): i thought",
        "c480405f460f7a61964569640a6cd059 (03:18): cross-origin loading of js files are",
        "c480405f460f7a61964569640a6cd059 (03:18): i hope, no reason not to",
        "c480405f460f7a61964569640a6cd059 (03:19): they will execute in the security context of the loading page though",
        "c480405f460f7a61964569640a6cd059 (03:19): same as for &lt;script&gt;",
        "7d8a20281bb41e05c504c371880f1d08 (03:19): huh",
        "7d8a20281bb41e05c504c371880f1d08 (03:19): consults the spec",
        "c480405f460f7a61964569640a6cd059 (03:19): i know the original spec didn't allow it, but i thought that was a bug",
        "c480405f460f7a61964569640a6cd059 (03:20): i don't see why we would disallow cross-site loading of the script file since &lt;script&gt; already allows it",
        "7d8a20281bb41e05c504c371880f1d08 (03:20): &quot;If the origin of the resulting absolute URL is not the same as the origin of the script that invoked the constructor, then throw a security exception.&quot;",
        "c480405f460f7a61964569640a6cd059 (03:20): bah",
        "c480405f460f7a61964569640a6cd059 (03:20): that sucks",
        "7d8a20281bb41e05c504c371880f1d08 (03:20): workers aren't really the same thing as &lt;script&gt; tags",
        "7d8a20281bb41e05c504c371880f1d08 (03:20): i think that is part of where our mental models differ",
        "c480405f460f7a61964569640a6cd059 (03:21): i agree :)",
        "c480405f460f7a61964569640a6cd059 (03:21): for dedicated workers they are very similar",
        "7d8a20281bb41e05c504c371880f1d08 (03:21): workers are like pages",
        "c480405f460f7a61964569640a6cd059 (03:21): just out-of-process",
        "7d8a20281bb41e05c504c371880f1d08 (03:21): importScripts() is like &lt;script&gt; tags",
        "7d8a20281bb41e05c504c371880f1d08 (03:21): and you can't communicate with windows that you open that are in other origins",
        "c480405f460f7a61964569640a6cd059 (03:22): so i see dedicated workers as simply an out-of-process &lt;script&gt;",
        "c480405f460f7a61964569640a6cd059 (03:22): where you offload stuff you don't want to execute on the UI thread",
        "7d8a20281bb41e05c504c371880f1d08 (03:22): yes, you see them like threads.",
        "7d8a20281bb41e05c504c371880f1d08 (03:22): i am not sure how to resolve this difference in seeingness",
        "c480405f460f7a61964569640a6cd059 (03:22): i think it's a difference in use cases",
        "c480405f460f7a61964569640a6cd059 (03:23): bah, gotta take off for bus, i'll be back on in a few mins",
        "7d8a20281bb41e05c504c371880f1d08 (03:23): ok",
        "7d8a20281bb41e05c504c371880f1d08 (03:23): i will keep typing as i will probably have to go soon too",
        "c480405f460f7a61964569640a6cd059 (03:24): quicky first though: you had suggested that we support appCodeName way back when. Is that one really useful? everyone returns 'Mozilla'",
        "c480405f460f7a61964569640a6cd059 (03:24): heh",
        "7d8a20281bb41e05c504c371880f1d08 (03:24): you mean on the navigator object that is exposed to workers? I just figured that we should support the same API that windows support. no reason to make things incompatible just for the heck of it.",
        "7d8a20281bb41e05c504c371880f1d08 (03:24): there is already code that works with the navigator object.",
        "c480405f460f7a61964569640a6cd059 (03:24): windows support a loooong list",
        "c480405f460f7a61964569640a6cd059 (03:25): https://developer.mozilla.org/En/DOM/Window.navigator",
        "7d8a20281bb41e05c504c371880f1d08 (03:25): right, I guess I assumed that exposing things to workers was not a lot of extra work.",
        "c480405f460f7a61964569640a6cd059 (03:25): i was hoping to not do the whole thing",
        "7d8a20281bb41e05c504c371880f1d08 (03:25): it is hard to know what people are using today.",
        "7d8a20281bb41e05c504c371880f1d08 (03:25): if you take a look at the code that libraries use to figure out what browser is which, it is crazy.",
        "7d8a20281bb41e05c504c371880f1d08 (03:26): since everybody lies about who they are, it kind of has to be.",
        "c480405f460f7a61964569640a6cd059 (03:26): ah, i was hoping you had some data on that when you originally posted 5 of them :)",
        "c480405f460f7a61964569640a6cd059 (03:26): ok, rally taking off",
        "7d8a20281bb41e05c504c371880f1d08 (03:26): ok.",
        "c480405f460f7a61964569640a6cd059 (03:27): have a good weekend"
    ],
    "person_ids": [
        "7d8a20281bb41e05c504c371880f1d08",
        "c480405f460f7a61964569640a6cd059"
    ]
}