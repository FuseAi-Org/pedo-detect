{
    "id": "60ef36530cdbdf6b06be7028a36cc104",
    "messages": [
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:46): Hixie, b25b6b77a0087ff8385941e5545d32ea is right that I'm doing a comparison document",
        "b25b6b77a0087ff8385941e5545d32ea (14:46): 42e76c77af424a4350ab0e3e3f6f2ce9: I think I fixed the bugs that you found",
        "b25b6b77a0087ff8385941e5545d32ea (14:46): in the table inspector",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:47): b25b6b77a0087ff8385941e5545d32ea, cool",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:47): am I right in saying both algorithms need the whole table to be present before they can run? (i.e. they don't run incrementally while the table cells come in over the wire)",
        "b25b6b77a0087ff8385941e5545d32ea (14:50): 42e76c77af424a4350ab0e3e3f6f2ce9: In principle I believe either algorithm could be written to run incrementally",
        "b25b6b77a0087ff8385941e5545d32ea (14:51): Because IIRC given a cell, the headers that apply to that cell are always before it in document order",
        "b25b6b77a0087ff8385941e5545d32ea (14:52): This would change if ltr/rtl considerations ment that we sometimes had to look to the right of a cell in order to finds its headers",
        "b25b6b77a0087ff8385941e5545d32ea (14:53): I don't know if bidi issues have been given serious consideration yet (did you look at any rtl tables?)",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:53): b25b6b77a0087ff8385941e5545d32ea, so you'd apply the header as far as it can go given how much of the table you currently have...then some more of the table comes in so you continue applying those headers until they reach the end of their scope?",
        "b25b6b77a0087ff8385941e5545d32ea (14:54): Oh and I guess @headers breaks incremental assignment",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:54): b25b6b77a0087ff8385941e5545d32ea, I've not looked at RTL tables but I assume the source order follows the same principles as in LTR, it's just the rendering is reversed",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:55): b25b6b77a0087ff8385941e5545d32ea, I guess headers+id would try applying to the cells you currently have, if there are no matches then you keep receiving cells and trying again until you find a match or the table ends?",
        "b25b6b77a0087ff8385941e5545d32ea (14:56): 42e76c77af424a4350ab0e3e3f6f2ce9: Well if I were implementing this in a browser, I would invert the whole algorithm so that it would be &quot;given data cell D which of the other cells in the table form the set of headers for C?&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (14:56): See also the mail from Aaron Leventhal",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:56): yeah, Aaron Leventhal sent feedback about that",
        "ab7faae5d7b250ea8606486575f8f79c (14:56): Could you invert the whole algorithm without introducing a huge pile of bugs?",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:56): just replied to Aaron's email",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:57): (the thread is here: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-October/thread.html#16915)",
        "b25b6b77a0087ff8385941e5545d32ea (14:58): ab7faae5d7b250ea8606486575f8f79c: I /think/ the algorithm is not hard to invert. But I have not tried",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:58): I think it would make a lot of sense to invert the algorithm",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:59): HTML4 uses the opposite direction for it's auto algorithm",
        "b8810fee2f4a71f849f3f7409546d1d9 (14:59): (this is the third time, IIRC, that implementation feedback calls for the inversion of an algorithm in HTML5, AFAICT)",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (14:59): but authors write tables from the perspective of &quot;I want this header cell to apply in this direction&quot;",
        "b25b6b77a0087ff8385941e5545d32ea (15:00): I am vaugely considering implementing the next iteration of the HTML5 algorithm in js in such a way that it adds aria attributes to tables",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:01): Aaron is right that ATs query a cell for its related header cells, but that happens after those associations are made by the UA",
        "b25b6b77a0087ff8385941e5545d32ea (15:01): So I guess if I do that I can try inverting the algorithm",
        "b25b6b77a0087ff8385941e5545d32ea (15:01): 42e76c77af424a4350ab0e3e3f6f2ce9: I guess Aaron wants to avoid precomputing all the information when it may not be needed, which could be a serious performance hit for large tables",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:02): 42e76c77af424a4350ab0e3e3f6f2ce9: presumably the UA would compute the association on demand for one data cell instead or rerunning the algorithm and remembering the result every time the table is mutated",
        "b25b6b77a0087ff8385941e5545d32ea (15:02): Also I agree that an authoring guide would be better written from the same point of view as the current spec",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:03): b25b6b77a0087ff8385941e5545d32ea &amp; b8810fee2f4a71f849f3f7409546d1d9, my impression is UAs expose everything to the accessibilty APIs once the page has loaded, or while it is being loaded, so that's what I thought header association should do",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:03): but if the AT is expecting to trigger the UA to do the association lookup per-cell, then inverting the algorithm makes sense",
        "b25b6b77a0087ff8385941e5545d32ea (15:04): (this is probably another problem with having a normaive language reference that is different from the main spec because it would be tempting to have the normative text describing how associaions are made, and the text describing the required UA processing be from different points of view)",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:05): also, from the user videos I've seen, a typical user scenario is skim-reading through a data table at high speed",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:06): so I thought having all the associations ready and waiting was better for the user, as well as more consistent with how such mappings are done elsewhere in the document",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:07): 42e76c77af424a4350ab0e3e3f6f2ce9: do you have data on how common it is that authors copy and paste tables within a page without making ids unique within the page?",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:07): b8810fee2f4a71f849f3f7409546d1d9, I haven't seen that but Hixie has",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:08): ok",
        "b25b6b77a0087ff8385941e5545d32ea (15:09): b8810fee2f4a71f849f3f7409546d1d9: Aaron seems to disallow arcs beween tables in his proposed rewording",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:09): oops.",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:10): Aaron Leventhal's rewording is this, right? &quot;If there is an element in the document with a corresponding ID (via getElementById) equal to the value of /id/, and it is a header cell in the current table, then assign it to the data cell.&quot;",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:12): b8810fee2f4a71f849f3f7409546d1d9, should your reply be listed at the end of that thread or am I looking in the wrong place? http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-October/thread.html#16915",
        "b25b6b77a0087ff8385941e5545d32ea (15:15): 42e76c77af424a4350ab0e3e3f6f2ce9: I think that only considers replies from the same month",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:16): b25b6b77a0087ff8385941e5545d32ea, oh of course! lost track of the month I'm on :P",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:24): b25b6b77a0087ff8385941e5545d32ea, does your Smart Span implementation check whether a cell is empty? Do such cells change the way it works?",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:24): s/Smart Span/Smart Headers/",
        "ab7faae5d7b250ea8606486575f8f79c (15:24): likes the craziness of how a Perl database interface module relies on the Lingua::EN::Inflect module",
        "b25b6b77a0087ff8385941e5545d32ea (15:25): 42e76c77af424a4350ab0e3e3f6f2ce9: No.",
        "b25b6b77a0087ff8385941e5545d32ea (15:26): (the HTML5 algorithm does however. It is not hard to add)",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:26): wonders if the CPAN deps are tree-like or if there are circular deps",
        "ab7faae5d7b250ea8606486575f8f79c (15:29): b8810fee2f4a71f849f3f7409546d1d9: I don't think there's anything to stop circular dependencies, except convention and bug reports",
        "ab7faae5d7b250ea8606486575f8f79c (15:30): (You can always force a module to install, ignoring its dependencies and its failing tests, but it's usually a bug if you have to do so)",
        "b25b6b77a0087ff8385941e5545d32ea (15:30): Does CPAN no cope with circular deps?",
        "b25b6b77a0087ff8385941e5545d32ea (15:30): not",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:31): learns new things (to him) about C++ link errors",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:31): specifically, one can have two .o files that link together into an .a but not into a shared lib",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:31): b25b6b77a0087ff8385941e5545d32ea, HTML5 says &quot;User agents may remove empty data cells when analyzing data in a table.&quot;",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:32): I guess Steve Yegge is right that linker errors are a top thing of the C++ brand",
        "ab7faae5d7b250ea8606486575f8f79c (15:32): b25b6b77a0087ff8385941e5545d32ea: No - when you tell it to install a module, it recursively asks whether you want to install its missing dependencies, and then it compiles and then runs the tests (and the tests will fail if you've got missing dependencies) and then installs",
        "b25b6b77a0087ff8385941e5545d32ea (15:33): Oh. Well that seems like it could be avoided",
        "b25b6b77a0087ff8385941e5545d32ea (15:34): 42e76c77af424a4350ab0e3e3f6f2ce9: HTML 5 treats &lt;th&gt;Foo&lt;td&gt;&lt;td&gt; as equivalent to &lt;th colspan=3&gt;Foo",
        "b25b6b77a0087ff8385941e5545d32ea (15:35): but does not do the same vertically",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:35): b25b6b77a0087ff8385941e5545d32ea, in a table with 3 columns, yes",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:36): but the &quot;may remove empty data cells&quot; thin seems like a bad idea because users would easily become lost in tables with many empty cells",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:38): in contrast, ignoring empty header cells seems like a good thing (such as an empty &lt;th&gt; in the top left corner of a table with both column headers and row headers)",
        "b25b6b77a0087ff8385941e5545d32ea (15:41): 42e76c77af424a4350ab0e3e3f6f2ce9: I wasn't sure what the implications of &quot;removing empty data cells&quot; was supposed to be which I guess is a sign that it sould be clarified",
        "b25b6b77a0087ff8385941e5545d32ea (15:41): s/cells&quot;/cells when analysing data in a table&quot;/",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:43): b25b6b77a0087ff8385941e5545d32ea, my impression was it meant UAs don't have to associated header cells with empty data cells?",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:43): s/associated/associate/",
        "b25b6b77a0087ff8385941e5545d32ea (15:44): Also I am unsure why the wide cell thing only works if the cell extends to the edge of the table",
        "b25b6b77a0087ff8385941e5545d32ea (15:44): or raher if they empty cells extend to the edge of the table",
        "b25b6b77a0087ff8385941e5545d32ea (15:45): 42e76c77af424a4350ab0e3e3f6f2ce9: Maybe. If so, the &quot;may&quot; makes the algorithm non-deterministic and the scope should probably be limited to data cells that fom part of a wide cell",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:49): b25b6b77a0087ff8385941e5545d32ea, I think the wide cell thing is for &quot;section headers&quot; which should use &lt;th colspan=&quot;width_of_table&quot;&gt;Foo&lt;/th&gt; but instead used &lt;th&gt;Foo&lt;td&gt;&lt;td&gt;&lt;td&gt; to reach the edge of the table",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:49): it makes the gamble that a row header won't be given for a row where there was no data to report (which seems fairly safe)",
        "b25b6b77a0087ff8385941e5545d32ea (15:50): 42e76c77af424a4350ab0e3e3f6f2ce9: But that could just as easilly happen with a heading that extended across only part of the table, no?",
        "b25b6b77a0087ff8385941e5545d32ea (15:50): &lt;th&gt;Foo&lt;td&gt;&lt;td&gt;&lt;th&gt;Bar",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:50): b25b6b77a0087ff8385941e5545d32ea, indeed.",
        "b25b6b77a0087ff8385941e5545d32ea (15:51): I don't understand your row header comment",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:53): b25b6b77a0087ff8385941e5545d32ea, &lt;tr&gt;&lt;th&gt;2006&lt;td&gt;5.6&lt;td&gt;8.3&lt;tr&gt;&lt;th&gt;2007&lt;td&gt;&lt;td&gt;&lt;tr&gt;&lt;th&gt;2008&lt;td&gt;7.3&lt;td&gt;9.8",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:53): no data is present in the row for &quot;2007&quot;, but it's not a section header",
        "ab7faae5d7b250ea8606486575f8f79c (15:54): Hmm, Ubuntu (Gutsy) has .atom mapped to &quot;application/atom&quot; in mime.types, which breaks Opera and Firefox because it should have &quot;+xml&quot;",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (15:55): b25b6b77a0087ff8385941e5545d32ea, usually a row where no data is available has a character (http://www.avert.org/aofconsent.htm) or a note but they could just as logically be empty",
        "a924fb58d2c25874322f4e5126f608b9 (15:55): ab7faae5d7b250ea8606486575f8f79c: Good thing there's extensive testing to detect things like that",
        "b25b6b77a0087ff8385941e5545d32ea (15:56): 42e76c77af424a4350ab0e3e3f6f2ce9: Oh I see. Interesting",
        "b25b6b77a0087ff8385941e5545d32ea (15:57): decides to delay trying to formulate an email covering all of this until later",
        "ab7faae5d7b250ea8606486575f8f79c (16:02): I thought I was being cleverly lazily by using file extensions so I didn't have to look up the Apache documentation on how to override content-types, but sadly I was thwarted",
        "ab7faae5d7b250ea8606486575f8f79c (16:02): s/lazily/lazy/",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:02): b25b6b77a0087ff8385941e5545d32ea, it's worth noting that an AT can announce &quot;Empty&quot; or somesuch for truely empty cells but has to say &quot;Question&quot; or &quot;Dash&quot; if there's a random character, just in case that character is significant",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:03): ab7faae5d7b250ea8606486575f8f79c: is that an Apache bug, a Debian bug or an Ubuntu bug?",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:03): ab7faae5d7b250ea8606486575f8f79c: bad brokenness in any case",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:03): b25b6b77a0087ff8385941e5545d32ea, so it's actually better for users if empty rows are truely empty, which is incompatible with the &quot;wide header cell&quot; thing in HTML5 when such rows have a row header cell",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:03): me wonders how static array of ints can reference a static pointer",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:05): the linker is telling me that the pointer thingy is an undefined symbol referenced from what is a static array of ints",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:06): b25b6b77a0087ff8385941e5545d32ea, it's also worth noting that it would compatible with some real tables, such as Table 4.1 here, if they used &lt;th&gt; for their header cell: http://www.federalreserve.gov/generalinfo/basel2/docs2005/potentialimpact.htm",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:06): b25b6b77a0087ff8385941e5545d32ea, although if they retrofitted &lt;th&gt; to their header cells, they could retrofit appropriate colspan at the same time to make these proper section headers. :)",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:10): b25b6b77a0087ff8385941e5545d32ea, I think implying &lt;td&gt;&lt;b&gt; and &lt;td&gt;&lt;strong&gt; as aliases of &lt;th&gt; messes up reasonable tables, so we should drop that heuristic.",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:13): b25b6b77a0087ff8385941e5545d32ea, most frustrating case I've found is &lt;td&gt;&lt;b&gt; both for row headers and for important data, meaning the &lt;td&gt;&lt;b&gt; heuristic would get the row headers right but would erroneously apply &quot;5.8 mm&quot; as a column header as well: http://flickr.com/photos/adactio/1383011861/meta/in/photostream/",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:14): b25b6b77a0087ff8385941e5545d32ea, could the multi-table support only pick the innermost tables? the above page causes &quot;Table 3&quot; to have the layout table around the data table: http://james.html5.org/tables/table_inspector.py?input_type=type_uri&amp;uri=http%3A%2F%2Fflickr.com%2Fphotos%2Fadactio%2F1383011861%2Fmeta%2Fin%2Fphotostream%2F&amp;source=&amp;algorithm=smartheaders",
        "42e76c77af424a4350ab0e3e3f6f2ce9 (16:15): b25b6b77a0087ff8385941e5545d32ea, it's available further down at Table 4 and Table 5, so removing Table 3 due to it containing another table seems possible",
        "ab7faae5d7b250ea8606486575f8f79c (16:17): b8810fee2f4a71f849f3f7409546d1d9: The file says &quot;This file is part of the &quot;mime-support&quot; package.  Please send email (not a bug report) to <email/> if you would like new types and/or extensions to be added.&quot; which makes it sound like Debian",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:18): ab7faae5d7b250ea8606486575f8f79c: I suggest sending email to that address, then",
        "ab7faae5d7b250ea8606486575f8f79c (16:18): (Maybe it's fixed in newer versions, but I can't update this Ubuntu because apt-get gives errors while trying to download stuff)",
        "ab7faae5d7b250ea8606486575f8f79c (16:25): is surprised that code he wrote two years ago still actually runs, without any library incompatibilities or similar problems, having reinstalled it on a more modern system",
        "ab7faae5d7b250ea8606486575f8f79c (16:25): despite using the Catalyst framework and various crazy modules",
        "b8810fee2f4a71f849f3f7409546d1d9 (16:44): http://twitter.com/asmitter/statuses/1018146131"
    ],
    "person_ids": [
        "42e76c77af424a4350ab0e3e3f6f2ce9",
        "b25b6b77a0087ff8385941e5545d32ea",
        "ab7faae5d7b250ea8606486575f8f79c",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "a924fb58d2c25874322f4e5126f608b9"
    ]
}