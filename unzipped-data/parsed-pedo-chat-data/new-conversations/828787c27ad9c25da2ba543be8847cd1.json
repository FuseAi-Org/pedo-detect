{
    "id": "828787c27ad9c25da2ba543be8847cd1",
    "messages": [
        "edb259c0e0038f38bb200bc20c8cbf7e (14:50): 6b57ea7f33069df5914663ba9e59afdf: so timeout should throw on setting if the synchronous flag is set",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:50): 6b57ea7f33069df5914663ba9e59afdf: and open() should throw if timeout is set to something other than zero?",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:50): 6b57ea7f33069df5914663ba9e59afdf: see http://dev.w3.org/2006/webapi/XMLHttpRequest-2 for when withCredentials currently is supposed to throw",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:50): I will make that change now so I don't forget",
        "6b57ea7f33069df5914663ba9e59afdf (14:53): looking",
        "6b57ea7f33069df5914663ba9e59afdf (14:53): and yes, that timout handling sounds good",
        "8b3687499080633e1898fa1dd209ef81 (14:56): http://lists.w3.org/Archives/Public/www-style/2011Nov/0389.html",
        "8b3687499080633e1898fa1dd209ef81 (14:57): Bj??rn seems even more snarky than usual, lately",
        "edb259c0e0038f38bb200bc20c8cbf7e (14:59): I always wonder how he gets enough satisfaction about just being right and not having much of an effect on changing things around.",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:00): Assuming he's right most of the time, for now.",
        "8b3687499080633e1898fa1dd209ef81 (15:02): Hmm, I wonder if Mozilla hackers are going to be confused by ContentNode",
        "6b57ea7f33069df5914663ba9e59afdf (15:03): 8b3687499080633e1898fa1dd209ef81: I'm sure we'll add ChromeNode :)",
        "8b3687499080633e1898fa1dd209ef81 (15:03): nsIChrome? :)",
        "6b57ea7f33069df5914663ba9e59afdf (15:03): nsIDOMChromeNode",
        "6b57ea7f33069df5914663ba9e59afdf (15:03): nah, that would be visible to content",
        "6b57ea7f33069df5914663ba9e59afdf (15:03): nsIDOMContentNode",
        "6b57ea7f33069df5914663ba9e59afdf (15:04): oh, you meant nsIContent vs nsINode",
        "8b3687499080633e1898fa1dd209ef81 (15:04): Yeah",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:04): 8b3687499080633e1898fa1dd209ef81: it's not an actual interface type though",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:04): 8b3687499080633e1898fa1dd209ef81: it's just IDL syntax",
        "8b3687499080633e1898fa1dd209ef81 (15:04): Mm",
        "6b57ea7f33069df5914663ba9e59afdf (15:04): I wonder how many different meanings &quot;content&quot; has :)",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:04): at least, that's how I see it",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:05): so can name it FairyNode if that works better for everyone",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:05): because it won't make an iota of a difference",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:05): not sure I used &quot;iota&quot; right",
        "6b57ea7f33069df5914663ba9e59afdf (15:05): why *Node?",
        "6b57ea7f33069df5914663ba9e59afdf (15:05): DOMString isn't any kind of &quot;Node&quot;",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:06): in this context it becomes a Text node",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:06): but sure",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:06): we can call the thing FairyDust",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:06): as I said, does not matter",
        "6b57ea7f33069df5914663ba9e59afdf (15:06): DOMConstructionUnit or some such might describe it better",
        "6b57ea7f33069df5914663ba9e59afdf (15:07): well, not quite like that, something shorter and simpler",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:07): have fun bikeshedding",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:07): continues working on XHR",
        "6b57ea7f33069df5914663ba9e59afdf (15:07): thanks",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): edb259c0e0038f38bb200bc20c8cbf7e: I'm changing sync mode not to support HTML parsing",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:16): edb259c0e0038f38bb200bc20c8cbf7e: in order to avoid proliferating the sync evilness",
        "2466054b396284f05e6f6e4e7d3c806d (15:17): omg",
        "2466054b396284f05e6f6e4e7d3c806d (15:17): Opera 12 has decent MathML rendering :|",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:17): I'd sort of prefer to keep HTML/XML in feature parity",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:17): but okay",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:17): I mean technically it's a new feature, but making the bar to use HTML higher is very anti-platform",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:18): sync is also very anti-platform, but still",
        "b25b6b77a0087ff8385941e5545d32ea (15:18): 2466054b396284f05e6f6e4e7d3c806d: Hmm? Same as previous Operas afaik",
        "2466054b396284f05e6f6e4e7d3c806d (15:21): b25b6b77a0087ff8385941e5545d32ea: Really? because last time around when I check on 11 it was not looking so decent?",
        "2466054b396284f05e6f6e4e7d3c806d (15:21): Unless my memory is deteriorating faster than I think it does.",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:23): hmm. turning off HTML parsing in sync mode make charset handling differ between sync and async...",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:26): discussions about spec organization so that normative references always point to more mature specs makes me sad",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:26): s/makes/make/",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:30): hmm",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:30): smaug left",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:30): http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-timeout-attribute",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:30): http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-open-method",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:48): heh http://infrequently.org/2011/11/vendor-prefixes-are-a-rousing-success/",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): now if Google/Apple sort out deprecating features in WebKit",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): I could buy into that",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): (and deprecating in a way that leads to actual removal)",
        "edb259c0e0038f38bb200bc20c8cbf7e (15:49): if not, well...",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:01): heycam|away, JS doesn't throw at all for insufficient arguments, does it?  It just sets them to undefined?  You're right that it seems to use TypeError for everything under the sun, though.",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:04): It seems like it would be more desirable to throw distinct exceptions for too few arguments and wrong type, which is what Gecko currently seems to do.",
        "88d4d34a8064a4ff39fd5e144eea7762 (16:05): But I guess if browsers are willing to go with it, shrug."
    ],
    "person_ids": [
        "edb259c0e0038f38bb200bc20c8cbf7e",
        "6b57ea7f33069df5914663ba9e59afdf",
        "8b3687499080633e1898fa1dd209ef81",
        "b8810fee2f4a71f849f3f7409546d1d9",
        "2466054b396284f05e6f6e4e7d3c806d",
        "b25b6b77a0087ff8385941e5545d32ea",
        "88d4d34a8064a4ff39fd5e144eea7762"
    ]
}