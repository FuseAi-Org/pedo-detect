{
    "id": "d6137e7c86afac19e36d11b51aa20c9d",
    "messages": [
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): i'm having issues with the spec gen script not handling the size of the spec",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:02): sigh",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:05): 69b0d3dfe919a6b860a9fac82de52a7e: drop the mathml entities :P",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:05): heh",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:05): i'm not sure they're in the spec as the spec gen sees it",
        "f139aba52f9fa1394b4034a7954b2220 (14:05): 69b0d3dfe919a6b860a9fac82de52a7e, are the problems just performance issues, or is it breaking in other ways?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:06): it's sometimes dying half way",
        "ab7faae5d7b250ea8606486575f8f79c (14:07): Sounds like a compelling reason to split HTML5 into multiple specifications",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:08): sounds like a compelling reason to roll your own spec gen",
        "f139aba52f9fa1394b4034a7954b2220 (14:08): 69b0d3dfe919a6b860a9fac82de52a7e, just pull out the sections you're planning to drop, like data templates",
        "ab7faae5d7b250ea8606486575f8f79c (14:09): f139aba52f9fa1394b4034a7954b2220: They're not in the HTML5 spec",
        "f139aba52f9fa1394b4034a7954b2220 (14:09): were the already removed?",
        "ab7faae5d7b250ea8606486575f8f79c (14:09): Oh wait",
        "ab7faae5d7b250ea8606486575f8f79c (14:09): I'm confused and wrong",
        "ab7faae5d7b250ea8606486575f8f79c (14:10): and thinking of repetition templates instead",
        "ab7faae5d7b250ea8606486575f8f79c (14:10): so please choose to ignore me",
        "f139aba52f9fa1394b4034a7954b2220 (14:10): I already ignore you :-P",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:10): yeah i should drop the data templates stuff",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:10): was gonna wait until i dropped repetition, though",
        "ab7faae5d7b250ea8606486575f8f79c (14:12): 69b0d3dfe919a6b860a9fac82de52a7e: &quot;The owner is URI that redirected to the javascript: URI.&quot; - s//the /",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:13): fixed",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:14): woot",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:14): i have dealt with all the feedback i know of on origin",
        "f139aba52f9fa1394b4034a7954b2220 (14:15): awesome. what's next?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:16): dunno. any requests?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:16): i was thinking of adding text to canvas",
        "ab7faae5d7b250ea8606486575f8f79c (14:16): Fix &lt;font&gt; and style? :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:17): ab7faae5d7b250ea8606486575f8f79c: how good are canvas implementations at the moment? good enough to handle more new features, or are they still quite buggy?",
        "f139aba52f9fa1394b4034a7954b2220 (14:17): oh yeah, drop the font element already",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:17): yeah i could do font and style=&quot;&quot;",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:17): was probably gonna wait til i got to the rendering section though",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:17): which is like the last priority other than references",
        "ab7faae5d7b250ea8606486575f8f79c (14:17): &lt;font&gt; seems to cause a number of people to think badly of HTML5",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:18): they'll live",
        "ab7faae5d7b250ea8606486575f8f79c (14:18): so it seems kind of sensible to try fixing it now, rather than leaving people with an incorrect impression of how HTML5 is likely to end up",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:18): i guess",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:21): the problem with the style=&quot;&quot; attribute is that i don't have a solution",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:22): other than the concept of a less good conformance level, which as b8810fee2f4a71f849f3f7409546d1d9 points out, is a bad idea for oh so many reasons",
        "ab7faae5d7b250ea8606486575f8f79c (14:23): 69b0d3dfe919a6b860a9fac82de52a7e: Now that everyone's doing getImageData/putImageData, I think they've all got pretty much all the features implemented, and I'm not currently aware of any particular major bugs (except that ImageData probably varies quite a bit, and I don't know how large the compatible intersection is, since I haven't really looked at any of this since last year)",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:23): oh, really",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:23): interesting",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:24): so do you think we could add text without compromising existing bug fixing efforts?",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:24): 69b0d3dfe919a6b860a9fac82de52a7e: just allow style='' everywhere but say that the document must still be usable when all style=''s are ignored",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:24): 73eaf221abca1b8244e34b0b9e76ac46: i guess we could do that",
        "ab7faae5d7b250ea8606486575f8f79c (14:24): (There's loads of tiny bugs, like handling Infinity/NaN inconsistently, but I'm guessing they don't affect interoperability urgently)",
        "f139aba52f9fa1394b4034a7954b2220 (14:24): 69b0d3dfe919a6b860a9fac82de52a7e, what's the reasons for not making style=&quot;&quot; conforming?",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:25): f139aba52f9fa1394b4034a7954b2220: same reasons for not making &lt;Font&gt; conforming",
        "f139aba52f9fa1394b4034a7954b2220 (14:25): is it just because it's non-semantic?",
        "f139aba52f9fa1394b4034a7954b2220 (14:25): and presentational",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:25): it being non-semantic isn't the actual reason, but it's the proxy for the reason that people can rally behind, yes",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:26): it's the same reason &lt;font size=3 color=blue&gt; is bad",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:26): it can't be repurposed, it's not maintainable, it is media-specific, etc",
        "f139aba52f9fa1394b4034a7954b2220 (14:26): right",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:28): i think &lt;font color&gt; isn't technically bad as &lt;b&gt;/&lt;i&gt;-like annotations, although people hate &lt;font&gt; so i guess it makes sense to not allow it",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:28): as far as i can tell, i have no &lt;font&gt; element feedback",
        "ab7faae5d7b250ea8606486575f8f79c (14:28): 69b0d3dfe919a6b860a9fac82de52a7e: That probably depends on how much time implementors will have before their next releases - it seems like most will have around a year or so, which sounds like it wouldn't be rushing much, so I'd expect it wouldn't impact much on bug-fixing of old features",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:28): and only 4 e-mails on style=&quot;&quot;, one of which i just wrote (containing 73eaf221abca1b8244e34b0b9e76ac46's suggestion above)",
        "ab7faae5d7b250ea8606486575f8f79c (14:29): But I know very little about browser development cycles, so I could be totally wrong :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:29): ab7faae5d7b250ea8606486575f8f79c: k",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:30): i guess i should sleep now anyway",
        "ab7faae5d7b250ea8606486575f8f79c (14:31): thinks style=&quot;&quot; makes things easier to maintain rather than harder, because he can look at the element he wants to change and then change it and then it works, instead of having to follow invisible back-references into stylesheets and then hoping it won't have side-effects on anything else in the site",
        "ab7faae5d7b250ea8606486575f8f79c (14:32): (...assuming the alternative to style=&quot;&quot; is using selectors in stylesheets to associate styles and elements)",
        "ab7faae5d7b250ea8606486575f8f79c (14:36): 69b0d3dfe919a6b860a9fac82de52a7e: http://xhtml.com/en/future/x-html-5-versus-xhtml-2/#x5-uncool-font has &lt;font&gt; element feedback - it's just not cool",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:36): heh",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:36): the maintenance thing is fine if that's the only element with that style",
        "69b0d3dfe919a6b860a9fac82de52a7e (14:37): but that's only going to be the case on small pages that aren't part of big sites, etc",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:41): news-like announcements often have use-once style",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:41): that's where i've used style='' before",
        "ab7faae5d7b250ea8606486575f8f79c (14:43): &lt;input size&gt; is used when people want one-off presentational attributes",
        "ab7faae5d7b250ea8606486575f8f79c (14:44): (though HTML5 says they can't write that, so they'd have to do it pointlessly verbosely like &lt;input style=&quot;width:10em&quot;&gt;)",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:44): (css also doesn't have a proper alternative to size='')",
        "ab7faae5d7b250ea8606486575f8f79c (14:45): and it doesn't make sense to extract that into an external stylesheet since it's different for every form you make (depending on how much text you expect people to enter into the form)",
        "ab7faae5d7b250ea8606486575f8f79c (14:48): Big sites aren't all homogeneous, and they're still going to have lots of one-off bits of code",
        "ab7faae5d7b250ea8606486575f8f79c (14:48): so it's nice to have some way to handle that, and just put up with people who abuse it and cause maintenace pain to themselves :-)",
        "ab7faae5d7b250ea8606486575f8f79c (14:49): s//n/",
        "73eaf221abca1b8244e34b0b9e76ac46 (14:50): ab7faae5d7b250ea8606486575f8f79c: yeah",
        "f139aba52f9fa1394b4034a7954b2220 (14:55): I need to write an example script using .querySelector(). Does anyone have any suggestions for a trivial, yet somewhat practical example I could write?",
        "ab7faae5d7b250ea8606486575f8f79c (14:58): f139aba52f9fa1394b4034a7954b2220: document.querySelector('img[src$=&quot;.png&quot;]').forEach(function (img) { img.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src='+img.src+')' });",
        "ab7faae5d7b250ea8606486575f8f79c (14:58): Maybe not quite trivial enough...",
        "ab7faae5d7b250ea8606486575f8f79c (14:59): Do you want something that's not just getElementById or getElementsByClassName?",
        "f139aba52f9fa1394b4034a7954b2220 (14:59): yeah, and preferably something that would be relevant to Opera's implementation",
        "f139aba52f9fa1394b4034a7954b2220 (15:00): an IE hack unfortnately isn't",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:00): ab7faae5d7b250ea8606486575f8f79c: that would be pointless since only ie6 needs the filter and ie6 doesn't support querySelector",
        "ab7faae5d7b250ea8606486575f8f79c (15:00): 73eaf221abca1b8244e34b0b9e76ac46: Yeah, I guess that's a minor problem with that example",
        "ab7faae5d7b250ea8606486575f8f79c (15:02): I suppose document.querySelector('input[required][value=&quot;&quot;]) isn't that useful in Opera either :-(",
        "f139aba52f9fa1394b4034a7954b2220 (15:02): it would help if the editor of the selectors api spec hadn't filled it with such contrived examples!",
        "ab7faae5d7b250ea8606486575f8f79c (15:03): The spec must have been written for certain use cases, so why not just use those? :-)",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:03): i try to base the examples in html5 on what people mention as their use cases",
        "f139aba52f9fa1394b4034a7954b2220 (15:03): I have one using input elements for checkboxes: &quot;input:checked&quot;",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:03): perhaps querySelector can be used for aria stuff",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:05): although most authors don't know about aria so it would likely just be a distraction",
        "f139aba52f9fa1394b4034a7954b2220 (15:05): yeah, I guess I could take a look at previous mailing list discussions about it to see what came up.",
        "ab7faae5d7b250ea8606486575f8f79c (15:05): var tds = document.getElementById('graphdata').querySelector('td:last-of-type'); tds.forEach(function (td) { var value = td.textContent; td.innerHTML = '&lt;img src=&quot;bar.png&quot; style=&quot;width:'+value+'px&quot; alt=&quot;'+value+'&quot;&gt;' });",
        "ab7faae5d7b250ea8606486575f8f79c (15:06): (for converting a numerical table into a graphicalised version)",
        "f139aba52f9fa1394b4034a7954b2220 (15:06): or look at what people are using the equivalent JQuery APIs for, but it's kind of hard to ask google &quot;Show me all pages that use the JQuery API script&quot;",
        "ab7faae5d7b250ea8606486575f8f79c (15:06): (Maybe Opera is too rubbish to have forEach, though)",
        "ab7faae5d7b250ea8606486575f8f79c (15:07): f139aba52f9fa1394b4034a7954b2220: It would be convenient if you had a collection of loads of web pages that you could grep",
        "f139aba52f9fa1394b4034a7954b2220 (15:09): ab7faae5d7b250ea8606486575f8f79c, that wouldn't work anyway, since the .forEach method isn't implemented on NodeLists. It would need to be converted to an array first.",
        "ab7faae5d7b250ea8606486575f8f79c (15:10): f139aba52f9fa1394b4034a7954b2220: http://philip.html5.org/misc/jquery-pages.txt has some that match /&lt;script[^&gt;]*jquery/",
        "ab7faae5d7b250ea8606486575f8f79c (15:10): f139aba52f9fa1394b4034a7954b2220: Oh, maybe Array.forEach(tds, function ...) then",
        "f139aba52f9fa1394b4034a7954b2220 (15:14): ab7faae5d7b250ea8606486575f8f79c, thanks. That's a useful list.",
        "ab7faae5d7b250ea8606486575f8f79c (15:15): I have another four hundred if that list is too short :-)",
        "5b67d980ae4c3c82251106e26913ce67 (15:15): also has some jQuery examples, if needed :)",
        "ab7faae5d7b250ea8606486575f8f79c (15:16): jQuery: More popular than &lt;cite&gt;!",
        "ab7faae5d7b250ea8606486575f8f79c (15:17): That'd be a great marketing slogan",
        "ab7faae5d7b250ea8606486575f8f79c (15:17): Woah, it's even more popular than &lt;csobj&gt;",
        "ab7faae5d7b250ea8606486575f8f79c (15:17): waits for webgrep to finish making the list grow",
        "f139aba52f9fa1394b4034a7954b2220 (15:18): 5b67d980ae4c3c82251106e26913ce67, I'm sure they'll be useful for me in the future",
        "f139aba52f9fa1394b4034a7954b2220 (15:18): what's &lt;csobj&gt;?",
        "ab7faae5d7b250ea8606486575f8f79c (15:18): Some GoLive component thing",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:25): &lt;font&gt; is gone",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:25): style=&quot;&quot; is global",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:35): 69b0d3dfe919a6b860a9fac82de52a7e: there should be &lt;fond&gt; feedback from me asking for &lt;font color&gt; to become conforming",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:36): ah",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:36): might have gotten filed elsewhere",
        "ab7faae5d7b250ea8606486575f8f79c (15:39): Fond feedback?",
        "b8810fee2f4a71f849f3f7409546d1d9 (15:40): font",
        "ab7faae5d7b250ea8606486575f8f79c (15:42): Is the empty string a valid CSS declaration?",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:42): yes",
        "ab7faae5d7b250ea8606486575f8f79c (15:42): Ah, good",
        "ab7faae5d7b250ea8606486575f8f79c (15:43): f139aba52f9fa1394b4034a7954b2220: http://philip.html5.org/misc/jquery-pages.txt has a load more now",
        "f139aba52f9fa1394b4034a7954b2220 (15:44): ab7faae5d7b250ea8606486575f8f79c, thanks. But I've got a good example now",
        "69b0d3dfe919a6b860a9fac82de52a7e (15:46): nn",
        "ab7faae5d7b250ea8606486575f8f79c (15:46): jQuery: More popular than &lt;caption&gt;!",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:48): ab7faae5d7b250ea8606486575f8f79c: makes sense, &lt;caption&gt; is pretty boring",
        "ab7faae5d7b250ea8606486575f8f79c (15:49): More popular than &lt;blink&gt; too, and that isn't pretty boring",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:50): perhaps we should make &lt;blink&gt; animate so that it looks just as cool as jquery animations, to get some competition",
        "ab7faae5d7b250ea8606486575f8f79c (15:52): It'll have to go a long way to catch up with &lt;marquee&gt;",
        "73eaf221abca1b8244e34b0b9e76ac46 (15:58): &lt;marquee&gt;: More popular than jQuery!"
    ],
    "person_ids": [
        "69b0d3dfe919a6b860a9fac82de52a7e",
        "73eaf221abca1b8244e34b0b9e76ac46",
        "f139aba52f9fa1394b4034a7954b2220",
        "ab7faae5d7b250ea8606486575f8f79c",
        "5b67d980ae4c3c82251106e26913ce67",
        "b8810fee2f4a71f849f3f7409546d1d9"
    ]
}